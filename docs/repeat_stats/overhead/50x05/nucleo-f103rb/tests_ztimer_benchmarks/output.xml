<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201115 21:59:47.859" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.110" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 21:59:49.127" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 21:59:50.974" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 21:59:49.107" endtime="20201115 21:59:50.975"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.981" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 21:59:50.978" endtime="20201115 21:59:50.982"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.104" endtime="20201115 21:59:50.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:50.988" endtime="20201115 21:59:51.326"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.985" endtime="20201115 21:59:51.328"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.359" endtime="20201115 21:59:51.383"></status>
</kw>
<msg timestamp="20201115 21:59:51.385" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201115 21:59:51.355" endtime="20201115 21:59:51.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.391" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201115 21:59:51.387" endtime="20201115 21:59:51.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.399" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:51.394" endtime="20201115 21:59:51.399"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:51.349" endtime="20201115 21:59:51.402"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:51.343" endtime="20201115 21:59:51.404"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.341" endtime="20201115 21:59:51.404"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:51.413" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:51.411" endtime="20201115 21:59:51.414"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.406" endtime="20201115 21:59:51.414"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.339" endtime="20201115 21:59:51.415"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.337" endtime="20201115 21:59:51.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.417" endtime="20201115 21:59:51.420"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.333" endtime="20201115 21:59:51.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.424" endtime="20201115 21:59:51.428"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.330" endtime="20201115 21:59:51.430"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.100" endtime="20201115 21:59:51.430"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:51.448" endtime="20201115 21:59:51.470"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.444" endtime="20201115 21:59:51.472"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.515" endtime="20201115 21:59:51.534"></status>
</kw>
<msg timestamp="20201115 21:59:51.536" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.511" endtime="20201115 21:59:51.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.543" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.538" endtime="20201115 21:59:51.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.550" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:51.545" endtime="20201115 21:59:51.550"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:51.504" endtime="20201115 21:59:51.552"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:51.497" endtime="20201115 21:59:51.554"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.486" endtime="20201115 21:59:51.555"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:51.563" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:51.562" endtime="20201115 21:59:51.564"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.557" endtime="20201115 21:59:51.565"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.484" endtime="20201115 21:59:51.565"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.482" endtime="20201115 21:59:51.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.567" endtime="20201115 21:59:51.571"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.478" endtime="20201115 21:59:51.573"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.474" endtime="20201115 21:59:51.574"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.441" endtime="20201115 21:59:51.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.594" endtime="20201115 21:59:51.608"></status>
</kw>
<msg timestamp="20201115 21:59:51.610" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.590" endtime="20201115 21:59:51.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.616" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.612" endtime="20201115 21:59:51.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.619" endtime="20201115 21:59:51.625"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.583" endtime="20201115 21:59:51.627"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.577" endtime="20201115 21:59:51.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.640" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 21:59:51.638" endtime="20201115 21:59:51.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.645" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 21:59:51.643" endtime="20201115 21:59:51.646"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.631" endtime="20201115 21:59:51.648"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:51.432" endtime="20201115 21:59:51.650" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 21:59:48.124" endtime="20201115 21:59:51.658"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.797" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 21:59:51.814" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 21:59:53.497" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 21:59:51.794" endtime="20201115 21:59:53.498"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.500" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 21:59:53.499" endtime="20201115 21:59:53.501"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.791" endtime="20201115 21:59:53.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.504" endtime="20201115 21:59:53.836"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.502" endtime="20201115 21:59:53.837"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.868" endtime="20201115 21:59:53.891"></status>
</kw>
<msg timestamp="20201115 21:59:53.892" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.864" endtime="20201115 21:59:53.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.899" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.895" endtime="20201115 21:59:53.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.906" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:53.902" endtime="20201115 21:59:53.909"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:53.858" endtime="20201115 21:59:53.911"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:53.852" endtime="20201115 21:59:53.913"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.849" endtime="20201115 21:59:53.913"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:53.922" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:53.920" endtime="20201115 21:59:53.923"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.915" endtime="20201115 21:59:53.923"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.848" endtime="20201115 21:59:53.924"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.846" endtime="20201115 21:59:53.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.926" endtime="20201115 21:59:53.929"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.842" endtime="20201115 21:59:53.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.933" endtime="20201115 21:59:53.937"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.839" endtime="20201115 21:59:53.938"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.788" endtime="20201115 21:59:53.939"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.954" endtime="20201115 21:59:53.976"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.950" endtime="20201115 21:59:53.978"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.014" endtime="20201115 21:59:54.034"></status>
</kw>
<msg timestamp="20201115 21:59:54.035" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.010" endtime="20201115 21:59:54.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.042" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.038" endtime="20201115 21:59:54.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.049" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:54.045" endtime="20201115 21:59:54.050"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:54.003" endtime="20201115 21:59:54.052"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:53.995" endtime="20201115 21:59:54.053"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.993" endtime="20201115 21:59:54.054"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:54.063" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:54.061" endtime="20201115 21:59:54.063"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.056" endtime="20201115 21:59:54.064"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.991" endtime="20201115 21:59:54.129"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.989" endtime="20201115 21:59:54.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.131" endtime="20201115 21:59:54.135"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.984" endtime="20201115 21:59:54.137"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.980" endtime="20201115 21:59:54.138"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.947" endtime="20201115 21:59:54.139"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 21:59:54.145" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.166" endtime="20201115 21:59:54.179"></status>
</kw>
<msg timestamp="20201115 21:59:54.181" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.162" endtime="20201115 21:59:54.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.187" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.183" endtime="20201115 21:59:54.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.190" endtime="20201115 21:59:54.194"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.154" endtime="20201115 21:59:54.195"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.149" endtime="20201115 21:59:54.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.215" endtime="20201115 21:59:54.564"></status>
</kw>
<msg timestamp="20201115 21:59:54.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.202484444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.202496889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.211" endtime="20201115 21:59:54.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.202484444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.202496889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.571" endtime="20201115 21:59:54.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.585" endtime="20201115 21:59:54.589"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.203" endtime="20201115 21:59:54.590"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.198" endtime="20201115 21:59:54.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:54.601" level="INFO">${RESULT} = [{'time': 0.202496889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2444999999999817e-05, 'source_diff': 1.2444999999999817e-05}, {'time': 0.202512542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:54.594" endtime="20201115 21:59:54.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:54.622" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:54.604" endtime="20201115 21:59:54.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.633" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:54.631" endtime="20201115 21:59:54.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.639" level="INFO">VALUE: [1.2444999999999817e-05, 7.944999999981439e-06, 5.0279999999902625e-06, 1.1889000000014915e-05, 1.5207999999988786e-05, 1.1263999999983065e-05, 4.999999999977245e-06, 1.4597000000005078e-05, 3.124999999992717e-06, 1.4375000000010907e-05, 1.0417000000012555e-05, 1.1264000000010821e-05, 3.707999999991163e-06, 7.917000000023933e-06, 1.5415999999990326e-05, 3.958999999997825e-06, 2.6939999999975317e-06, 1.2305000000017996e-05, 6.30499999998424e-06, 4.596999999995077e-06, 7.499999999993623e-06, 1.0833999999987354e-05, 1.3569999999990534e-05, 7.291999999992083e-06, 8.763999999994443e-06]</msg>
<status status="PASS" starttime="20201115 21:59:54.636" endtime="20201115 21:59:54.639"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.624" endtime="20201115 21:59:54.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.648" endtime="20201115 21:59:54.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:54.657" endtime="20201115 21:59:54.679"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.652" endtime="20201115 21:59:54.681"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.643" endtime="20201115 21:59:54.682"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.146" endtime="20201115 21:59:54.683"></status>
</kw>
<msg timestamp="20201115 21:59:54.684" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.705" endtime="20201115 21:59:54.719"></status>
</kw>
<msg timestamp="20201115 21:59:54.721" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.701" endtime="20201115 21:59:54.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.728" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.723" endtime="20201115 21:59:54.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.730" endtime="20201115 21:59:54.735"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.693" endtime="20201115 21:59:54.737"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.688" endtime="20201115 21:59:54.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.756" endtime="20201115 21:59:55.101"></status>
</kw>
<msg timestamp="20201115 21:59:55.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039310764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039322681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.753" endtime="20201115 21:59:55.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039310764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039322681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.107" endtime="20201115 21:59:55.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.120" endtime="20201115 21:59:55.124"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.745" endtime="20201115 21:59:55.125"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.740" endtime="20201115 21:59:55.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:55.136" level="INFO">${RESULT} = [{'time': 0.039322681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1917000000000177e-05, 'source_diff': 1.1917000000000177e-05}, {'time': 0.039339069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:55.128" endtime="20201115 21:59:55.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:55.155" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:55.138" endtime="20201115 21:59:55.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.165" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:55.163" endtime="20201115 21:59:55.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.171" level="INFO">VALUE: [1.1917000000000177e-05, 2.7079999999971016e-06, 4.9860000000054305e-06, 7.916000000003642e-06, 6.722000000000672e-06, 4.666999999999866e-06, 1.2055999999996403e-05, 1.2721999999999734e-05, 1.1874999999994529e-05, 5.207999999999602e-06, 1.2499999999998623e-05, 1.3527999999998763e-05, 1.541699999999674e-05, 2.7089999999965753e-06, 1.5221999999995295e-05, 6.207999999993663e-06, 9.597000000000078e-06, 1.2721999999999734e-05, 1.1457999999998913e-05, 1.459699999999814e-05, 7.514000000000132e-06, 1.1263999999996943e-05, 1.2069000000003438e-05, 1.459699999999814e-05, 1.4360999999997459e-05]</msg>
<status status="PASS" starttime="20201115 21:59:55.167" endtime="20201115 21:59:55.172"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.157" endtime="20201115 21:59:55.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.180" endtime="20201115 21:59:55.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:55.188" endtime="20201115 21:59:55.210"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.184" endtime="20201115 21:59:55.212"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.176" endtime="20201115 21:59:55.213"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.685" endtime="20201115 21:59:55.214"></status>
</kw>
<msg timestamp="20201115 21:59:55.215" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.235" endtime="20201115 21:59:55.248"></status>
</kw>
<msg timestamp="20201115 21:59:55.249" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.231" endtime="20201115 21:59:55.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.255" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.251" endtime="20201115 21:59:55.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.258" endtime="20201115 21:59:55.261"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.224" endtime="20201115 21:59:55.263"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.219" endtime="20201115 21:59:55.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.281" endtime="20201115 21:59:55.617"></status>
</kw>
<msg timestamp="20201115 21:59:55.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036929431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036940667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.278" endtime="20201115 21:59:55.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036929431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036940667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.624" endtime="20201115 21:59:55.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.637" endtime="20201115 21:59:55.641"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.271" endtime="20201115 21:59:55.643"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.266" endtime="20201115 21:59:55.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:55.654" level="INFO">${RESULT} = [{'time': 0.036940667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1236000000004742e-05, 'source_diff': 1.1236000000004742e-05}, {'time': 0.036957347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:55.646" endtime="20201115 21:59:55.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:55.674" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:55.657" endtime="20201115 21:59:55.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.685" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:55.682" endtime="20201115 21:59:55.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.690" level="INFO">VALUE: [1.1236000000004742e-05, 8.764000000001382e-06, 1.2695000000000067e-05, 1.2500000000005562e-05, 1.5179999999996585e-05, 7.888999999997037e-06, 8.332999999999258e-06, 1.2500000000005562e-05, 1.1249999999997373e-05, 1.1485999999998053e-05, 1.0818999999995249e-05, 1.1875000000001468e-05, 1.455499999999943e-05, 1.4374999999997029e-05, 1.0195000000004506e-05, 1.4166000000002954e-05, 2.9309999999976855e-06, 6.054999999997868e-06, 1.5195000000002568e-05, 8.153000000003796e-06, 1.0388999999999537e-05, 1.3973000000000457e-05, 5.0000000000050004e-06, 3.333000000001196e-06, 7.916999999996177e-06]</msg>
<status status="PASS" starttime="20201115 21:59:55.687" endtime="20201115 21:59:55.691"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.676" endtime="20201115 21:59:55.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.699" endtime="20201115 21:59:55.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:55.708" endtime="20201115 21:59:55.730"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.704" endtime="20201115 21:59:55.732"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.694" endtime="20201115 21:59:55.734"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.216" endtime="20201115 21:59:55.735"></status>
</kw>
<msg timestamp="20201115 21:59:55.735" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.759" endtime="20201115 21:59:55.774"></status>
</kw>
<msg timestamp="20201115 21:59:55.775" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.755" endtime="20201115 21:59:55.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.782" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.777" endtime="20201115 21:59:55.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.784" endtime="20201115 21:59:55.788"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.745" endtime="20201115 21:59:55.790"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.740" endtime="20201115 21:59:55.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.809" endtime="20201115 21:59:56.157"></status>
</kw>
<msg timestamp="20201115 21:59:56.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042142444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042151417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.806" endtime="20201115 21:59:56.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042142444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042151417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.164" endtime="20201115 21:59:56.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.177" endtime="20201115 21:59:56.181"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.798" endtime="20201115 21:59:56.183"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.793" endtime="20201115 21:59:56.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:56.195" level="INFO">${RESULT} = [{'time': 0.042151417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.972999999995457e-06, 'source_diff': 8.972999999995457e-06}, {'time': 0.042171611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:56.186" endtime="20201115 21:59:56.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:56.214" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:56.197" endtime="20201115 21:59:56.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.225" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:56.222" endtime="20201115 21:59:56.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.230" level="INFO">VALUE: [8.972999999995457e-06, 1.5000000000001124e-05, 1.2985999999999553e-05, 8.750000000001812e-06, 5.237000000005154e-06, 3.7359999999972415e-06, 1.0208999999997137e-05, 1.1278000000003452e-05, 1.229099999999761e-05, 1.0638999999999788e-05, 1.4375000000003968e-05, 1.4152000000003384e-05, 8.319000000006627e-06, 2.7220000000036104e-06, 6.680000000001962e-06, 1.4791999999999583e-05, 2.5000000000025002e-06, 4.7910000000039865e-06, 1.4166000000002954e-05, 3.9859999999974915e-06, 1.0000000000003062e-05, 4.375000000000906e-06, 1.3124999999995779e-05, 1.2708000000000164e-05, 2.9309999999976855e-06]</msg>
<status status="PASS" starttime="20201115 21:59:56.227" endtime="20201115 21:59:56.231"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.216" endtime="20201115 21:59:56.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.239" endtime="20201115 21:59:56.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.248" endtime="20201115 21:59:56.271"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.244" endtime="20201115 21:59:56.272"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.235" endtime="20201115 21:59:56.274"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.736" endtime="20201115 21:59:56.275"></status>
</kw>
<msg timestamp="20201115 21:59:56.275" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.296" endtime="20201115 21:59:56.310"></status>
</kw>
<msg timestamp="20201115 21:59:56.311" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.293" endtime="20201115 21:59:56.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.318" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.314" endtime="20201115 21:59:56.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.321" endtime="20201115 21:59:56.325"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.285" endtime="20201115 21:59:56.326"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.280" endtime="20201115 21:59:56.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.347" endtime="20201115 21:59:56.657"></status>
</kw>
<msg timestamp="20201115 21:59:56.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038706083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038711708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.342" endtime="20201115 21:59:56.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038706083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038711708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.664" endtime="20201115 21:59:56.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.677" endtime="20201115 21:59:56.681"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.334" endtime="20201115 21:59:56.683"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.329" endtime="20201115 21:59:56.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:56.701" level="INFO">${RESULT} = [{'time': 0.038711708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999995217e-06, 'source_diff': 5.624999999995217e-06}, {'time': 0.038730681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:56.686" endtime="20201115 21:59:56.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:56.720" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:56.703" endtime="20201115 21:59:56.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.731" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:56.729" endtime="20201115 21:59:56.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.736" level="INFO">VALUE: [5.624999999995217e-06, 1.1056000000002342e-05, 1.4374999999997029e-05, 4.597000000002016e-06, 1.2721999999999734e-05, 1.2499999999998623e-05, 1.2291999999997083e-05, 6.888999999996037e-06, 1.0222000000004172e-05, 1.3360999999996459e-05, 1.1513999999997193e-05, 6.861000000003836e-06, 3.319000000001626e-06, 8.750000000001812e-06, 1.2708000000000164e-05, 1.3541999999998333e-05, 5.625000000002156e-06, 1.3527999999998763e-05, 6.249999999999312e-06, 3.333000000001196e-06, 4.79200000000346e-06, 1.3611000000003648e-05, 1.3763999999999443e-05, 3.3340000000006698e-06, 9.986000000003492e-06]</msg>
<status status="PASS" starttime="20201115 21:59:56.734" endtime="20201115 21:59:56.737"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.722" endtime="20201115 21:59:56.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.746" endtime="20201115 21:59:56.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.755" endtime="20201115 21:59:56.777"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.750" endtime="20201115 21:59:56.779"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.741" endtime="20201115 21:59:56.781"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.277" endtime="20201115 21:59:56.782"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.142" endtime="20201115 21:59:56.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.794" endtime="20201115 21:59:56.817"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.789" endtime="20201115 21:59:56.819"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.786" endtime="20201115 21:59:56.819"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:53.940" endtime="20201115 21:59:56.821" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.841" endtime="20201115 21:59:56.863"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.837" endtime="20201115 21:59:56.865"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.902" endtime="20201115 21:59:56.921"></status>
</kw>
<msg timestamp="20201115 21:59:56.922" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.897" endtime="20201115 21:59:56.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.929" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.924" endtime="20201115 21:59:56.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.936" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:56.931" endtime="20201115 21:59:56.937"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:56.889" endtime="20201115 21:59:56.939"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:56.882" endtime="20201115 21:59:56.940"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.879" endtime="20201115 21:59:56.941"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:56.950" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:56.949" endtime="20201115 21:59:56.951"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.944" endtime="20201115 21:59:56.952"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.877" endtime="20201115 21:59:56.952"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.875" endtime="20201115 21:59:56.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.954" endtime="20201115 21:59:56.958"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.871" endtime="20201115 21:59:56.959"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.866" endtime="20201115 21:59:56.961"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.834" endtime="20201115 21:59:56.962"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 21:59:56.967" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.988" endtime="20201115 21:59:57.005"></status>
</kw>
<msg timestamp="20201115 21:59:57.006" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.985" endtime="20201115 21:59:57.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.012" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.008" endtime="20201115 21:59:57.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.015" endtime="20201115 21:59:57.019"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.977" endtime="20201115 21:59:57.021"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.972" endtime="20201115 21:59:57.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.040" endtime="20201115 21:59:57.410"></status>
</kw>
<msg timestamp="20201115 21:59:57.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140096097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140097833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.036" endtime="20201115 21:59:57.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140096097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140097833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.420" endtime="20201115 21:59:57.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.439" endtime="20201115 21:59:57.444"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.029" endtime="20201115 21:59:57.445"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.024" endtime="20201115 21:59:57.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:57.459" level="INFO">${RESULT} = [{'time': 0.140097833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.140103292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:57.449" endtime="20201115 21:59:57.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:57.496" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:57.461" endtime="20201115 21:59:57.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.508" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:57.504" endtime="20201115 21:59:57.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.513" level="INFO">VALUE: [1.7360000000021802e-06, 1.7499999999948113e-06, 1.6810000000033742e-06, 1.7629999999879686e-06, 1.7499999999948113e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7079999999891626e-06, 1.7220000000095492e-06, 1.6660000000112696e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7770000000083552e-06, 1.7360000000021802e-06, 1.7780000000078289e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7089999999886363e-06, 1.7220000000095492e-06, 1.7629999999879686e-06, 1.7640000000151979e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7920000000004599e-06, 1.7499999999948113e-06, 1.7370000000016539e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7220000000095492e-06, 1.6939999999965316e-06, 1.7499999999948113e-06, 1.7499999999948113e-06, 1.7499999999948113e-06, 1.7359999999744247e-06, 1.7219999999817936e-06, 1.7360000000021802e-06, 1.7230000000090229e-06, 1.7499999999948113e-06, 1.7080000000169182e-06, 1.7640000000151979e-06, 1.7360000000021802e-06, 1.7220000000095492e-06, 1.7500000000225668e-06, 1.7499999999948113e-06]</msg>
<status status="PASS" starttime="20201115 21:59:57.510" endtime="20201115 21:59:57.515"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.498" endtime="20201115 21:59:57.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.523" endtime="20201115 21:59:57.526"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:57.532" endtime="20201115 21:59:57.554"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.528" endtime="20201115 21:59:57.555"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.518" endtime="20201115 21:59:57.557"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.968" endtime="20201115 21:59:57.557"></status>
</kw>
<msg timestamp="20201115 21:59:57.558" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.578" endtime="20201115 21:59:57.593"></status>
</kw>
<msg timestamp="20201115 21:59:57.594" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.575" endtime="20201115 21:59:57.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.600" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.596" endtime="20201115 21:59:57.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.603" endtime="20201115 21:59:57.606"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.567" endtime="20201115 21:59:57.608"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.563" endtime="20201115 21:59:57.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.626" endtime="20201115 21:59:57.970"></status>
</kw>
<msg timestamp="20201115 21:59:57.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037758931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037760681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.623" endtime="20201115 21:59:57.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037758931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037760681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.979" endtime="20201115 21:59:57.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.998" endtime="20201115 21:59:58.003"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.615" endtime="20201115 21:59:58.004"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.611" endtime="20201115 21:59:58.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:58.016" level="INFO">${RESULT} = [{'time': 0.037760681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999948113e-06, 'source_diff': 1.7499999999948113e-06}, {'time': 0.037777597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:58.007" endtime="20201115 21:59:58.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:58.048" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:58.018" endtime="20201115 21:59:58.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.059" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:58.057" endtime="20201115 21:59:58.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.065" level="INFO">VALUE: [1.7499999999948113e-06, 1.6940000000034705e-06, 1.7080000000030404e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7079999999961015e-06, 1.7359999999952413e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.7079999999961015e-06, 1.7360000000021802e-06, 1.7629999999949075e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7500000000017502e-06, 1.7370000000016539e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.76400000000132e-06, 1.7359999999952413e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7769999999944774e-06, 1.709000000002514e-06, 1.7910000000009862e-06, 1.7500000000017502e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.7639999999943812e-06, 1.7360000000021802e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201115 21:59:58.062" endtime="20201115 21:59:58.066"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.051" endtime="20201115 21:59:58.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.074" endtime="20201115 21:59:58.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:58.082" endtime="20201115 21:59:58.104"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.078" endtime="20201115 21:59:58.106"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.069" endtime="20201115 21:59:58.107"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.559" endtime="20201115 21:59:58.108"></status>
</kw>
<msg timestamp="20201115 21:59:58.109" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.129" endtime="20201115 21:59:58.144"></status>
</kw>
<msg timestamp="20201115 21:59:58.145" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.125" endtime="20201115 21:59:58.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.152" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.148" endtime="20201115 21:59:58.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.155" endtime="20201115 21:59:58.159"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.118" endtime="20201115 21:59:58.160"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.113" endtime="20201115 21:59:58.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.178" endtime="20201115 21:59:58.523"></status>
</kw>
<msg timestamp="20201115 21:59:58.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038592569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038594333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.175" endtime="20201115 21:59:58.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038592569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038594333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.533" endtime="20201115 21:59:58.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.552" endtime="20201115 21:59:58.556"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.168" endtime="20201115 21:59:58.558"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.163" endtime="20201115 21:59:58.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:58.570" level="INFO">${RESULT} = [{'time': 0.038594333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.038603097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 21:59:58.561" endtime="20201115 21:59:58.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:58.602" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:58.573" endtime="20201115 21:59:58.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.614" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:58.610" endtime="20201115 21:59:58.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.619" level="INFO">VALUE: [1.76400000000132e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.6809999999964353e-06, 1.7639999999943812e-06, 1.7499999999948113e-06, 1.7220000000026103e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7770000000014163e-06, 1.7499999999948113e-06, 1.7359999999952413e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7499999999948113e-06, 1.7920000000004599e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.736999999994715e-06, 1.7359999999952413e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7770000000014163e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7639999999943812e-06, 1.7500000000017502e-06, 1.7079999999961015e-06, 1.7500000000017502e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.6810000000033742e-06, 1.7770000000014163e-06, 1.7359999999952413e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7500000000017502e-06, 1.76400000000132e-06]</msg>
<status status="PASS" starttime="20201115 21:59:58.616" endtime="20201115 21:59:58.620"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.604" endtime="20201115 21:59:58.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.628" endtime="20201115 21:59:58.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:58.637" endtime="20201115 21:59:58.658"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.632" endtime="20201115 21:59:58.660"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.624" endtime="20201115 21:59:58.662"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.110" endtime="20201115 21:59:58.662"></status>
</kw>
<msg timestamp="20201115 21:59:58.663" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.683" endtime="20201115 21:59:58.698"></status>
</kw>
<msg timestamp="20201115 21:59:58.699" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.679" endtime="20201115 21:59:58.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.705" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.701" endtime="20201115 21:59:58.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.708" endtime="20201115 21:59:58.712"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.672" endtime="20201115 21:59:58.713"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.667" endtime="20201115 21:59:58.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.732" endtime="20201115 21:59:59.071"></status>
</kw>
<msg timestamp="20201115 21:59:59.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038121486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038123222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.728" endtime="20201115 21:59:59.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038121486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038123222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.080" endtime="20201115 21:59:59.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.099" endtime="20201115 21:59:59.103"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.721" endtime="20201115 21:59:59.105"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.716" endtime="20201115 21:59:59.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:59.117" level="INFO">${RESULT} = [{'time': 0.038123222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999952413e-06, 'source_diff': 1.7359999999952413e-06}, {'time': 0.038127, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 21:59:59.108" endtime="20201115 21:59:59.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:59.148" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:59.120" endtime="20201115 21:59:59.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.159" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:59.156" endtime="20201115 21:59:59.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.166" level="INFO">VALUE: [1.7359999999952413e-06, 1.7220000000026103e-06, 1.6809999999964353e-06, 1.7630000000018464e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7639999999943812e-06, 1.7359999999952413e-06, 1.7500000000017502e-06, 1.7499999999948113e-06, 1.7359999999952413e-06, 1.7499999999948113e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7769999999944774e-06, 1.7219999999956714e-06, 1.7500000000017502e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.6939999999965316e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.723000000002084e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.723000000002084e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7910000000009862e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7630000000018464e-06, 1.76400000000132e-06]</msg>
<status status="PASS" starttime="20201115 21:59:59.162" endtime="20201115 21:59:59.166"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.150" endtime="20201115 21:59:59.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.175" endtime="20201115 21:59:59.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:59.185" endtime="20201115 21:59:59.206"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.180" endtime="20201115 21:59:59.208"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.170" endtime="20201115 21:59:59.210"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.664" endtime="20201115 21:59:59.211"></status>
</kw>
<msg timestamp="20201115 21:59:59.211" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.231" endtime="20201115 21:59:59.246"></status>
</kw>
<msg timestamp="20201115 21:59:59.248" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.228" endtime="20201115 21:59:59.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.254" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.250" endtime="20201115 21:59:59.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.256" endtime="20201115 21:59:59.260"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.220" endtime="20201115 21:59:59.262"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.216" endtime="20201115 21:59:59.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.280" endtime="20201115 21:59:59.628"></status>
</kw>
<msg timestamp="20201115 21:59:59.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038594028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038595764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.277" endtime="20201115 21:59:59.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038594028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038595764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.638" endtime="20201115 21:59:59.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.657" endtime="20201115 21:59:59.661"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.269" endtime="20201115 21:59:59.663"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.265" endtime="20201115 21:59:59.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:59.675" level="INFO">${RESULT} = [{'time': 0.038595764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999952413e-06, 'source_diff': 1.7359999999952413e-06}, {'time': 0.038601431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:59.666" endtime="20201115 21:59:59.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:59.708" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:59.677" endtime="20201115 21:59:59.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.719" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:59.716" endtime="20201115 21:59:59.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.725" level="INFO">VALUE: [1.7359999999952413e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7370000000016539e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7920000000004599e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7370000000016539e-06, 1.7499999999948113e-06, 1.7500000000017502e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7500000000017502e-06, 1.7219999999956714e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.777999999993951e-06, 1.6809999999964353e-06, 1.7500000000017502e-06, 1.7499999999948113e-06, 1.7359999999952413e-06, 1.7499999999948113e-06, 1.7500000000017502e-06, 1.7219999999956714e-06, 1.6950000000029442e-06, 1.8060000000000298e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.723000000002084e-06, 1.7910000000009862e-06, 1.7359999999952413e-06]</msg>
<status status="PASS" starttime="20201115 21:59:59.721" endtime="20201115 21:59:59.726"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.710" endtime="20201115 21:59:59.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.734" endtime="20201115 21:59:59.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:59.743" endtime="20201115 21:59:59.765"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.738" endtime="20201115 21:59:59.767"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.730" endtime="20201115 21:59:59.768"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.212" endtime="20201115 21:59:59.769"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.965" endtime="20201115 21:59:59.770"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:59.782" endtime="20201115 21:59:59.806"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.777" endtime="20201115 21:59:59.807"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.773" endtime="20201115 21:59:59.808"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:56.827" endtime="20201115 21:59:59.809" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:59.830" endtime="20201115 21:59:59.852"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.826" endtime="20201115 21:59:59.853"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.888" endtime="20201115 21:59:59.907"></status>
</kw>
<msg timestamp="20201115 21:59:59.909" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.884" endtime="20201115 21:59:59.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.916" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.911" endtime="20201115 21:59:59.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.922" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:59.918" endtime="20201115 21:59:59.923"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:59.876" endtime="20201115 21:59:59.925"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:59.870" endtime="20201115 21:59:59.927"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.867" endtime="20201115 21:59:59.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:59.935" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:59.934" endtime="20201115 21:59:59.936"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.929" endtime="20201115 21:59:59.937"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.865" endtime="20201115 21:59:59.937"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.864" endtime="20201115 21:59:59.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.939" endtime="20201115 21:59:59.943"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.859" endtime="20201115 21:59:59.944"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.855" endtime="20201115 21:59:59.946"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.823" endtime="20201115 21:59:59.946"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.954" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.980" endtime="20201115 21:59:59.996"></status>
</kw>
<msg timestamp="20201115 21:59:59.997" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.976" endtime="20201115 21:59:59.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.003" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.999" endtime="20201115 22:00:00.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.006" endtime="20201115 22:00:00.010"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.967" endtime="20201115 22:00:00.011"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.961" endtime="20201115 22:00:00.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.029" endtime="20201115 22:00:00.392"></status>
</kw>
<msg timestamp="20201115 22:00:00.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143399889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143405278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.026" endtime="20201115 22:00:00.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143399889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143405278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.402" endtime="20201115 22:00:00.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.421" endtime="20201115 22:00:00.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.019" endtime="20201115 22:00:00.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.014" endtime="20201115 22:00:00.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:00.439" level="INFO">${RESULT} = [{'time': 0.143405278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.388999999994537e-06, 'source_diff': 5.388999999994537e-06}, {'time': 0.143460125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:00.430" endtime="20201115 22:00:00.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:00.470" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:00.441" endtime="20201115 22:00:00.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.481" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:00:00.478" endtime="20201115 22:00:00.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.486" level="INFO">VALUE: [5.388999999994537e-06, 5.417000000007555e-06, 5.417000000007555e-06, 5.431000000000186e-06, 5.403000000014924e-06, 5.375000000001906e-06, 5.402999999987168e-06, 5.402999999987168e-06, 5.444999999992817e-06, 5.417000000007555e-06, 5.403000000014924e-06, 5.388999999994537e-06, 5.40200000001545e-06, 5.401999999987694e-06, 5.402999999987168e-06, 5.348000000016118e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.361000000009275e-06, 5.403000000014924e-06, 5.402999999987168e-06, 5.387999999995063e-06, 5.416000000008081e-06, 5.416999999979799e-06, 5.402999999987168e-06, 5.457999999985974e-06, 5.362000000008749e-06, 5.403000000014924e-06, 5.361000000009275e-06, 5.485999999998992e-06, 5.347000000016644e-06, 5.403000000014924e-06, 5.417000000007555e-06, 5.403000000014924e-06, 5.417000000007555e-06, 5.375000000001906e-06, 5.402999999987168e-06, 5.388999999994537e-06, 5.388999999994537e-06, 5.416000000008081e-06, 5.431000000000186e-06, 5.403000000014924e-06, 5.402999999987168e-06, 5.417000000007555e-06, 5.417000000007555e-06, 5.416000000008081e-06, 5.375000000001906e-06, 5.403000000014924e-06, 5.402999999987168e-06]</msg>
<status status="PASS" starttime="20201115 22:00:00.483" endtime="20201115 22:00:00.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.472" endtime="20201115 22:00:00.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.495" endtime="20201115 22:00:00.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:00.504" endtime="20201115 22:00:00.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.499" endtime="20201115 22:00:00.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.491" endtime="20201115 22:00:00.529"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.955" endtime="20201115 22:00:00.530"></status>
</kw>
<msg timestamp="20201115 22:00:00.530" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.554" endtime="20201115 22:00:00.568"></status>
</kw>
<msg timestamp="20201115 22:00:00.569" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.550" endtime="20201115 22:00:00.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.576" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.572" endtime="20201115 22:00:00.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.578" endtime="20201115 22:00:00.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.543" endtime="20201115 22:00:00.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.537" endtime="20201115 22:00:00.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.604" endtime="20201115 22:00:00.953"></status>
</kw>
<msg timestamp="20201115 22:00:00.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04328175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043287153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:00.600" endtime="20201115 22:00:00.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04328175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043287153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:00.963" endtime="20201115 22:00:00.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.983" endtime="20201115 22:00:00.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.593" endtime="20201115 22:00:00.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.588" endtime="20201115 22:00:00.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:01.000" level="INFO">${RESULT} = [{'time': 0.043287153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.0433395, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:00.991" endtime="20201115 22:00:01.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:01.031" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:01.003" endtime="20201115 22:00:01.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.042" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:00:01.040" endtime="20201115 22:00:01.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.048" level="INFO">VALUE: [5.403000000001046e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.389000000001476e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.402999999994107e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.389000000001476e-06, 5.403000000001046e-06, 5.416000000001142e-06, 5.416000000001142e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.361000000002336e-06, 5.347000000002766e-06, 5.431000000000186e-06, 5.389000000001476e-06, 5.416000000001142e-06, 5.416000000001142e-06, 5.34800000000224e-06, 5.403000000001046e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.389000000001476e-06, 5.346999999995827e-06, 5.403000000001046e-06, 5.389000000001476e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.430000000000712e-06, 5.403000000001046e-06, 5.416000000001142e-06, 5.403000000001046e-06, 5.388999999994537e-06]</msg>
<status status="PASS" starttime="20201115 22:00:01.044" endtime="20201115 22:00:01.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.033" endtime="20201115 22:00:01.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.056" endtime="20201115 22:00:01.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:01.065" endtime="20201115 22:00:01.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.061" endtime="20201115 22:00:01.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.052" endtime="20201115 22:00:01.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.531" endtime="20201115 22:00:01.091"></status>
</kw>
<msg timestamp="20201115 22:00:01.091" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.114" endtime="20201115 22:00:01.130"></status>
</kw>
<msg timestamp="20201115 22:00:01.131" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.111" endtime="20201115 22:00:01.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.137" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.133" endtime="20201115 22:00:01.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.140" endtime="20201115 22:00:01.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.104" endtime="20201115 22:00:01.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.098" endtime="20201115 22:00:01.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.165" endtime="20201115 22:00:01.513"></status>
</kw>
<msg timestamp="20201115 22:00:01.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042641875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042647306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.161" endtime="20201115 22:00:01.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042641875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042647306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.523" endtime="20201115 22:00:01.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.542" endtime="20201115 22:00:01.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.153" endtime="20201115 22:00:01.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.148" endtime="20201115 22:00:01.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:01.559" level="INFO">${RESULT} = [{'time': 0.042647306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.042692319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:01.550" endtime="20201115 22:00:01.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:01.590" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:01.562" endtime="20201115 22:00:01.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.601" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:00:01.599" endtime="20201115 22:00:01.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.606" level="INFO">VALUE: [5.431000000000186e-06, 5.375000000001906e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.402999999994107e-06, 5.403000000001046e-06, 5.416000000001142e-06, 5.416999999993677e-06, 5.389000000001476e-06, 5.403000000001046e-06, 5.431000000000186e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.402999999994107e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.361000000002336e-06, 5.416000000001142e-06, 5.431000000000186e-06, 5.402000000001572e-06, 5.389000000001476e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.361000000002336e-06, 5.347000000002766e-06, 5.417000000000616e-06, 5.389000000001476e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.375000000001906e-06, 5.431000000000186e-06, 5.417000000000616e-06, 5.375000000001906e-06, 5.431000000000186e-06, 5.389000000001476e-06, 5.402999999994107e-06, 5.389000000001476e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.402999999994107e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.401999999994633e-06, 5.416000000001142e-06, 5.403000000001046e-06, 5.333000000003196e-06, 5.416000000001142e-06]</msg>
<status status="PASS" starttime="20201115 22:00:01.603" endtime="20201115 22:00:01.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.592" endtime="20201115 22:00:01.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.615" endtime="20201115 22:00:01.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:01.624" endtime="20201115 22:00:01.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.619" endtime="20201115 22:00:01.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.611" endtime="20201115 22:00:01.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.092" endtime="20201115 22:00:01.650"></status>
</kw>
<msg timestamp="20201115 22:00:01.650" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.674" endtime="20201115 22:00:01.689"></status>
</kw>
<msg timestamp="20201115 22:00:01.690" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.670" endtime="20201115 22:00:01.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.697" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.693" endtime="20201115 22:00:01.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.699" endtime="20201115 22:00:01.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.663" endtime="20201115 22:00:01.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.657" endtime="20201115 22:00:01.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.732" endtime="20201115 22:00:02.080"></status>
</kw>
<msg timestamp="20201115 22:00:02.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042931806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042937167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.728" endtime="20201115 22:00:02.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042931806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042937167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.090" endtime="20201115 22:00:02.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.108" endtime="20201115 22:00:02.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.719" endtime="20201115 22:00:02.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.707" endtime="20201115 22:00:02.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:02.126" level="INFO">${RESULT} = [{'time': 0.042937167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999995397e-06, 'source_diff': 5.360999999995397e-06}, {'time': 0.04299075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:02.117" endtime="20201115 22:00:02.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:02.159" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:02.128" endtime="20201115 22:00:02.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.170" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:00:02.168" endtime="20201115 22:00:02.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.175" level="INFO">VALUE: [5.360999999995397e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.388000000002002e-06, 5.4589999999993255e-06, 5.403000000001046e-06, 5.416999999993677e-06, 5.431000000000186e-06, 5.402000000001572e-06, 5.402000000001572e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.416000000001142e-06, 5.402999999994107e-06, 5.403000000001046e-06, 5.416999999993677e-06, 5.361000000002336e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.402000000001572e-06, 5.389000000001476e-06, 5.417000000000616e-06, 5.360999999995397e-06, 5.361000000002336e-06, 5.416000000001142e-06, 5.403000000001046e-06, 5.33400000000267e-06, 5.403000000001046e-06, 5.402000000001572e-06, 5.416000000001142e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.333000000003196e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.416000000001142e-06, 5.402999999994107e-06, 5.402999999994107e-06, 5.417000000000616e-06, 5.415999999994203e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.417000000000616e-06, 5.471999999999422e-06, 5.36200000000181e-06, 5.402000000001572e-06, 5.416000000001142e-06, 5.403000000001046e-06]</msg>
<status status="PASS" starttime="20201115 22:00:02.172" endtime="20201115 22:00:02.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.161" endtime="20201115 22:00:02.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.184" endtime="20201115 22:00:02.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:02.193" endtime="20201115 22:00:02.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.188" endtime="20201115 22:00:02.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.180" endtime="20201115 22:00:02.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.651" endtime="20201115 22:00:02.219"></status>
</kw>
<msg timestamp="20201115 22:00:02.219" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.243" endtime="20201115 22:00:02.257"></status>
</kw>
<msg timestamp="20201115 22:00:02.259" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.239" endtime="20201115 22:00:02.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.265" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.261" endtime="20201115 22:00:02.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.268" endtime="20201115 22:00:02.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.232" endtime="20201115 22:00:02.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.226" endtime="20201115 22:00:02.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.292" endtime="20201115 22:00:02.642"></status>
</kw>
<msg timestamp="20201115 22:00:02.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042898542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042903944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.289" endtime="20201115 22:00:02.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042898542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042903944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.652" endtime="20201115 22:00:02.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.670" endtime="20201115 22:00:02.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.281" endtime="20201115 22:00:02.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.276" endtime="20201115 22:00:02.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:02.688" level="INFO">${RESULT} = [{'time': 0.042903944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402000000001572e-06, 'source_diff': 5.402000000001572e-06}, {'time': 0.042951069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:02.679" endtime="20201115 22:00:02.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:02.720" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:02.690" endtime="20201115 22:00:02.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.731" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:00:02.729" endtime="20201115 22:00:02.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.737" level="INFO">VALUE: [5.402000000001572e-06, 5.402000000001572e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.416000000001142e-06, 5.375000000001906e-06, 5.402999999994107e-06, 5.389000000001476e-06, 5.416000000001142e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.388999999994537e-06, 5.389000000001476e-06, 5.403000000001046e-06, 5.402999999994107e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.431000000000186e-06, 5.402000000001572e-06, 5.389000000001476e-06, 5.415999999994203e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.388999999994537e-06, 5.416999999993677e-06, 5.444000000000282e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.388999999994537e-06, 5.33400000000267e-06, 5.402999999994107e-06, 5.417000000000616e-06, 5.360999999995397e-06, 5.403000000001046e-06, 5.402999999994107e-06, 5.403000000001046e-06, 5.361000000002336e-06, 5.415999999994203e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.403000000001046e-06, 5.403000000001046e-06]</msg>
<status status="PASS" starttime="20201115 22:00:02.734" endtime="20201115 22:00:02.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.722" endtime="20201115 22:00:02.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.746" endtime="20201115 22:00:02.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:02.754" endtime="20201115 22:00:02.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.750" endtime="20201115 22:00:02.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.741" endtime="20201115 22:00:02.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.220" endtime="20201115 22:00:02.780"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.952" endtime="20201115 22:00:02.780"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.950" endtime="20201115 22:00:02.781"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.786" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.810" endtime="20201115 22:00:02.826"></status>
</kw>
<msg timestamp="20201115 22:00:02.827" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.806" endtime="20201115 22:00:02.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.833" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.829" endtime="20201115 22:00:02.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.835" endtime="20201115 22:00:02.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.798" endtime="20201115 22:00:02.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.792" endtime="20201115 22:00:02.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.859" endtime="20201115 22:00:03.186"></status>
</kw>
<msg timestamp="20201115 22:00:03.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048670944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048674569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.856" endtime="20201115 22:00:03.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048670944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048674569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.191" endtime="20201115 22:00:03.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.199" endtime="20201115 22:00:03.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.848" endtime="20201115 22:00:03.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.844" endtime="20201115 22:00:03.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:03.207" level="INFO">${RESULT} = [{'time': 0.048674569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.048727472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:03.203" endtime="20201115 22:00:03.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:03.222" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:03.208" endtime="20201115 22:00:03.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.230" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:00:03.228" endtime="20201115 22:00:03.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.236" level="INFO">VALUE: [3.625000000000156e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.5690000000018762e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6670000000058045e-06, 3.6390000000066647e-06, 3.665999999999392e-06, 3.679999999998962e-06, 3.6389999999997258e-06, 3.638000000000252e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6120000000000596e-06, 3.638000000000252e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6669999999988656e-06, 3.625000000000156e-06, 3.6809999999984355e-06, 3.597000000001016e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.693999999998532e-06, 3.665999999999392e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.6120000000000596e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6669999999988656e-06, 3.597000000001016e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.6529999999992957e-06, 3.596999999994077e-06, 3.597000000001016e-06, 3.625000000000156e-06, 3.5829999999945072e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.610999999993647e-06]</msg>
<status status="PASS" starttime="20201115 22:00:03.233" endtime="20201115 22:00:03.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.223" endtime="20201115 22:00:03.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.245" endtime="20201115 22:00:03.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.253" endtime="20201115 22:00:03.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.249" endtime="20201115 22:00:03.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.240" endtime="20201115 22:00:03.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.787" endtime="20201115 22:00:03.280"></status>
</kw>
<msg timestamp="20201115 22:00:03.280" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.304" endtime="20201115 22:00:03.319"></status>
</kw>
<msg timestamp="20201115 22:00:03.321" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.300" endtime="20201115 22:00:03.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.327" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.323" endtime="20201115 22:00:03.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.329" endtime="20201115 22:00:03.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.293" endtime="20201115 22:00:03.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.287" endtime="20201115 22:00:03.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.353" endtime="20201115 22:00:03.693"></status>
</kw>
<msg timestamp="20201115 22:00:03.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043487458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043491097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.350" endtime="20201115 22:00:03.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043487458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043491097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.703" endtime="20201115 22:00:03.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.721" endtime="20201115 22:00:03.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.342" endtime="20201115 22:00:03.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.338" endtime="20201115 22:00:03.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:03.739" level="INFO">${RESULT} = [{'time': 0.043491097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.043548986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:03.730" endtime="20201115 22:00:03.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:03.772" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:03.742" endtime="20201115 22:00:03.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.783" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:00:03.780" endtime="20201115 22:00:03.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.788" level="INFO">VALUE: [3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.638000000000252e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.611000000000586e-06, 3.6529999999992957e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.665999999999392e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.651999999999822e-06, 3.6389999999997258e-06, 3.651999999999822e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.638000000000252e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.57000000000135e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6669999999988656e-06, 3.679999999998962e-06, 3.625000000000156e-06, 3.6529999999992957e-06]</msg>
<status status="PASS" starttime="20201115 22:00:03.785" endtime="20201115 22:00:03.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.773" endtime="20201115 22:00:03.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.798" endtime="20201115 22:00:03.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.807" endtime="20201115 22:00:03.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.802" endtime="20201115 22:00:03.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.793" endtime="20201115 22:00:03.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.281" endtime="20201115 22:00:03.832"></status>
</kw>
<msg timestamp="20201115 22:00:03.833" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.856" endtime="20201115 22:00:03.872"></status>
</kw>
<msg timestamp="20201115 22:00:03.873" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.853" endtime="20201115 22:00:03.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.875" endtime="20201115 22:00:03.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.881" endtime="20201115 22:00:03.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.845" endtime="20201115 22:00:03.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.839" endtime="20201115 22:00:03.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.905" endtime="20201115 22:00:04.246"></status>
</kw>
<msg timestamp="20201115 22:00:04.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042715639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042719264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.902" endtime="20201115 22:00:04.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042715639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042719264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.256" endtime="20201115 22:00:04.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.275" endtime="20201115 22:00:04.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.895" endtime="20201115 22:00:04.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.890" endtime="20201115 22:00:04.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:04.293" level="INFO">${RESULT} = [{'time': 0.042719264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.042776111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:04.284" endtime="20201115 22:00:04.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:04.326" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:04.295" endtime="20201115 22:00:04.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.337" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:00:04.335" endtime="20201115 22:00:04.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.343" level="INFO">VALUE: [3.625000000000156e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6809999999984355e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.5690000000018762e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.6390000000066647e-06, 3.5829999999945072e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.597000000001016e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6529999999992957e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.610999999993647e-06, 3.638000000000252e-06, 3.611000000000586e-06, 3.6389999999997258e-06, 3.6120000000000596e-06, 3.625000000000156e-06, 3.624999999993217e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.597000000001016e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06]</msg>
<status status="PASS" starttime="20201115 22:00:04.340" endtime="20201115 22:00:04.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.328" endtime="20201115 22:00:04.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.353" endtime="20201115 22:00:04.356"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:04.361" endtime="20201115 22:00:04.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.357" endtime="20201115 22:00:04.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.348" endtime="20201115 22:00:04.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.834" endtime="20201115 22:00:04.387"></status>
</kw>
<msg timestamp="20201115 22:00:04.387" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.411" endtime="20201115 22:00:04.426"></status>
</kw>
<msg timestamp="20201115 22:00:04.427" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.407" endtime="20201115 22:00:04.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.434" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.430" endtime="20201115 22:00:04.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.436" endtime="20201115 22:00:04.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.400" endtime="20201115 22:00:04.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.394" endtime="20201115 22:00:04.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.460" endtime="20201115 22:00:04.800"></status>
</kw>
<msg timestamp="20201115 22:00:04.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042784611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042788194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.456" endtime="20201115 22:00:04.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042784611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042788194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.810" endtime="20201115 22:00:04.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.829" endtime="20201115 22:00:04.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.449" endtime="20201115 22:00:04.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.444" endtime="20201115 22:00:04.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:04.847" level="INFO">${RESULT} = [{'time': 0.042788194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}, {'time': 0.042852986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:04.837" endtime="20201115 22:00:04.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:04.878" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:04.849" endtime="20201115 22:00:04.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.890" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:00:04.887" endtime="20201115 22:00:04.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.896" level="INFO">VALUE: [3.583000000001446e-06, 3.6670000000058045e-06, 3.57000000000135e-06, 3.597000000001016e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.569999999994411e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6379999999933132e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6669999999988656e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.611000000000586e-06, 3.6529999999992957e-06, 3.583999999993981e-06, 3.5840000000009198e-06, 3.625000000000156e-06, 3.5550000000023063e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.611000000000586e-06, 3.5980000000004897e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6669999999988656e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.57000000000135e-06, 3.6389999999997258e-06]</msg>
<status status="PASS" starttime="20201115 22:00:04.893" endtime="20201115 22:00:04.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.880" endtime="20201115 22:00:04.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.906" endtime="20201115 22:00:04.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:04.914" endtime="20201115 22:00:04.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.909" endtime="20201115 22:00:04.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.901" endtime="20201115 22:00:04.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.389" endtime="20201115 22:00:04.940"></status>
</kw>
<msg timestamp="20201115 22:00:04.940" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.963" endtime="20201115 22:00:04.979"></status>
</kw>
<msg timestamp="20201115 22:00:04.981" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.960" endtime="20201115 22:00:04.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.987" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.983" endtime="20201115 22:00:04.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.989" endtime="20201115 22:00:04.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.953" endtime="20201115 22:00:04.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.947" endtime="20201115 22:00:04.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.013" endtime="20201115 22:00:05.354"></status>
</kw>
<msg timestamp="20201115 22:00:05.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042906931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042910528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.010" endtime="20201115 22:00:05.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042906931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042910528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.364" endtime="20201115 22:00:05.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.383" endtime="20201115 22:00:05.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.003" endtime="20201115 22:00:05.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.998" endtime="20201115 22:00:05.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:05.401" level="INFO">${RESULT} = [{'time': 0.042910528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.042970944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:05.392" endtime="20201115 22:00:05.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:05.432" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:05.403" endtime="20201115 22:00:05.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.443" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:00:05.441" endtime="20201115 22:00:05.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.448" level="INFO">VALUE: [3.597000000001016e-06, 3.651999999999822e-06, 3.6529999999992957e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.651999999999822e-06, 3.596999999994077e-06, 3.611000000000586e-06, 3.5840000000009198e-06, 3.6530000000062346e-06, 3.6389999999997258e-06, 3.7089999999975753e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.583999999993981e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.5980000000004897e-06, 3.638000000000252e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.5840000000009198e-06, 3.6389999999997258e-06, 3.597000000001016e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.611000000000586e-06, 3.6530000000062346e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.6390000000066647e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.55600000000178e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.625000000000156e-06]</msg>
<status status="PASS" starttime="20201115 22:00:05.445" endtime="20201115 22:00:05.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.434" endtime="20201115 22:00:05.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.459" endtime="20201115 22:00:05.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:05.468" endtime="20201115 22:00:05.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.464" endtime="20201115 22:00:05.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.455" endtime="20201115 22:00:05.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.941" endtime="20201115 22:00:05.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.783" endtime="20201115 22:00:05.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.782" endtime="20201115 22:00:05.494"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.499" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.523" endtime="20201115 22:00:05.538"></status>
</kw>
<msg timestamp="20201115 22:00:05.540" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.519" endtime="20201115 22:00:05.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.546" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.542" endtime="20201115 22:00:05.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.548" endtime="20201115 22:00:05.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.512" endtime="20201115 22:00:05.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.506" endtime="20201115 22:00:05.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.572" endtime="20201115 22:00:05.913"></status>
</kw>
<msg timestamp="20201115 22:00:05.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047916806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047920625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.569" endtime="20201115 22:00:05.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047916806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047920625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.923" endtime="20201115 22:00:05.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.942" endtime="20201115 22:00:05.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.561" endtime="20201115 22:00:05.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.557" endtime="20201115 22:00:05.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:05.959" level="INFO">${RESULT} = [{'time': 0.047920625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.819000000002126e-06, 'source_diff': 3.819000000002126e-06}, {'time': 0.047982194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:05.950" endtime="20201115 22:00:05.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:05.990" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:05.961" endtime="20201115 22:00:05.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.001" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:05.999" endtime="20201115 22:00:06.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.009" level="INFO">VALUE: [3.819000000002126e-06, 3.847000000001266e-06, 3.8200000000016e-06, 3.819000000002126e-06, 3.860999999993897e-06, 3.84800000000074e-06, 3.833000000001696e-06, 3.8200000000016e-06, 3.833000000001696e-06, 3.83400000000117e-06, 3.84800000000074e-06, 3.8200000000016e-06, 3.916999999999116e-06, 3.832999999994757e-06, 3.83400000000117e-06, 3.819000000002126e-06, 3.83400000000117e-06, 3.83400000000117e-06, 3.833000000001696e-06, 3.8200000000016e-06, 3.77800000000289e-06, 3.818999999995187e-06, 3.819000000002126e-06, 3.8049999999956174e-06, 3.7640000000033202e-06, 3.805999999995091e-06, 3.819000000002126e-06, 3.819000000002126e-06, 3.7910000000029864e-06, 3.833000000001696e-06, 3.8200000000016e-06, 3.8200000000016e-06, 3.80600000000203e-06, 3.84800000000074e-06, 3.8200000000016e-06, 3.8050000000025563e-06, 3.84800000000074e-06, 3.818999999995187e-06, 3.83400000000117e-06, 3.902000000000072e-06, 3.832999999994757e-06, 3.8200000000016e-06, 3.7639999999963814e-06, 3.833000000001696e-06, 3.86200000000031e-06, 3.86200000000031e-06, 3.818999999995187e-06, 3.8200000000016e-06, 3.86200000000031e-06, 3.861000000000836e-06]</msg>
<status status="PASS" starttime="20201115 22:00:06.004" endtime="20201115 22:00:06.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.992" endtime="20201115 22:00:06.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.018" endtime="20201115 22:00:06.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:06.026" endtime="20201115 22:00:06.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.022" endtime="20201115 22:00:06.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.013" endtime="20201115 22:00:06.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.501" endtime="20201115 22:00:06.052"></status>
</kw>
<msg timestamp="20201115 22:00:06.052" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.076" endtime="20201115 22:00:06.092"></status>
</kw>
<msg timestamp="20201115 22:00:06.093" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.072" endtime="20201115 22:00:06.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.099" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.095" endtime="20201115 22:00:06.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.102" endtime="20201115 22:00:06.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.065" endtime="20201115 22:00:06.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.059" endtime="20201115 22:00:06.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.127" endtime="20201115 22:00:06.465"></status>
</kw>
<msg timestamp="20201115 22:00:06.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042957333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042961167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.124" endtime="20201115 22:00:06.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042957333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042961167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.469" endtime="20201115 22:00:06.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.477" endtime="20201115 22:00:06.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.116" endtime="20201115 22:00:06.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.111" endtime="20201115 22:00:06.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:06.485" level="INFO">${RESULT} = [{'time': 0.042961167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.83400000000117e-06, 'source_diff': 3.83400000000117e-06}, {'time': 0.043031889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:06.481" endtime="20201115 22:00:06.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:06.500" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:06.486" endtime="20201115 22:00:06.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.506" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:06.505" endtime="20201115 22:00:06.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.508" level="INFO">VALUE: [3.83400000000117e-06, 3.805999999995091e-06, 3.902999999999546e-06, 3.819999999994661e-06, 3.8200000000016e-06, 3.819000000002126e-06, 3.819000000002126e-06, 3.902000000000072e-06, 3.805999999995091e-06, 3.818999999995187e-06, 3.902999999999546e-06, 3.8200000000016e-06, 3.875000000000406e-06, 3.847000000001266e-06, 3.84800000000074e-06, 3.847000000001266e-06, 3.80600000000203e-06, 3.818999999995187e-06, 3.832999999994757e-06, 3.84800000000074e-06, 3.818999999995187e-06, 3.8200000000016e-06, 3.83400000000117e-06, 3.805999999995091e-06, 3.80600000000203e-06, 3.888999999999976e-06, 3.902000000000072e-06, 3.80600000000203e-06, 3.84800000000074e-06, 3.833000000001696e-06, 3.83400000000117e-06, 3.805999999995091e-06, 3.833000000001696e-06, 3.819000000002126e-06, 3.833000000001696e-06, 3.83400000000117e-06, 3.847000000001266e-06, 3.818999999995187e-06, 3.833000000001696e-06, 3.83400000000117e-06, 3.833000000001696e-06, 3.83400000000117e-06, 3.791999999995521e-06, 3.833000000001696e-06, 3.833000000001696e-06, 3.847000000001266e-06, 3.833000000001696e-06, 3.847000000001266e-06, 3.833000000001696e-06, 3.819000000002126e-06]</msg>
<status status="PASS" starttime="20201115 22:00:06.507" endtime="20201115 22:00:06.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.501" endtime="20201115 22:00:06.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.513" endtime="20201115 22:00:06.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:06.517" endtime="20201115 22:00:06.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.515" endtime="20201115 22:00:06.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.510" endtime="20201115 22:00:06.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.053" endtime="20201115 22:00:06.538"></status>
</kw>
<msg timestamp="20201115 22:00:06.539" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.550" endtime="20201115 22:00:06.564"></status>
</kw>
<msg timestamp="20201115 22:00:06.564" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.548" endtime="20201115 22:00:06.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.565" endtime="20201115 22:00:06.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.568" endtime="20201115 22:00:06.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.545" endtime="20201115 22:00:06.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.542" endtime="20201115 22:00:06.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.579" endtime="20201115 22:00:06.905"></status>
</kw>
<msg timestamp="20201115 22:00:06.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024995458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024999306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.578" endtime="20201115 22:00:06.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024995458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024999306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.914" endtime="20201115 22:00:06.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.933" endtime="20201115 22:00:06.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.575" endtime="20201115 22:00:06.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.572" endtime="20201115 22:00:06.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:06.951" level="INFO">${RESULT} = [{'time': 0.024999306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.84799999999727e-06, 'source_diff': 3.84799999999727e-06}, {'time': 0.025072708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:06.942" endtime="20201115 22:00:06.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:06.987" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:06.958" endtime="20201115 22:00:06.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.998" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:06.996" endtime="20201115 22:00:06.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.004" level="INFO">VALUE: [3.84799999999727e-06, 3.763999999999851e-06, 3.902999999999546e-06, 3.84800000000074e-06, 3.8199999999981304e-06, 3.846999999997797e-06, 3.83400000000117e-06, 3.818999999998657e-06, 3.7919999999989906e-06, 3.8059999999985605e-06, 3.750000000000281e-06, 3.819000000002126e-06, 3.8199999999981304e-06, 3.875000000000406e-06, 3.8200000000016e-06, 3.819000000002126e-06, 3.819000000002126e-06, 3.832999999998227e-06, 3.833000000001696e-06, 3.832999999998227e-06, 3.750000000000281e-06, 3.902999999999546e-06, 3.833000000001696e-06, 3.8059999999985605e-06, 3.804999999999087e-06, 3.847000000001266e-06, 3.8200000000016e-06, 3.818999999998657e-06, 3.83400000000117e-06, 3.846999999997797e-06, 3.83400000000117e-06, 3.832999999998227e-06, 3.736000000000711e-06, 3.83400000000117e-06, 3.83400000000117e-06, 3.875000000000406e-06, 3.832999999998227e-06, 3.8059999999985605e-06, 3.847000000001266e-06, 3.804999999999087e-06, 3.84800000000074e-06, 3.763000000000377e-06, 3.818999999998657e-06, 3.8339999999977e-06, 3.833000000001696e-06, 3.818999999998657e-06, 3.832999999998227e-06, 3.84800000000074e-06, 3.819000000002126e-06, 3.8059999999985605e-06]</msg>
<status status="PASS" starttime="20201115 22:00:07.001" endtime="20201115 22:00:07.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.989" endtime="20201115 22:00:07.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.013" endtime="20201115 22:00:07.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:07.021" endtime="20201115 22:00:07.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.017" endtime="20201115 22:00:07.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.008" endtime="20201115 22:00:07.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.539" endtime="20201115 22:00:07.048"></status>
</kw>
<msg timestamp="20201115 22:00:07.049" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.072" endtime="20201115 22:00:07.089"></status>
</kw>
<msg timestamp="20201115 22:00:07.090" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.069" endtime="20201115 22:00:07.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.096" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.092" endtime="20201115 22:00:07.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.098" endtime="20201115 22:00:07.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.062" endtime="20201115 22:00:07.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.056" endtime="20201115 22:00:07.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.122" endtime="20201115 22:00:07.464"></status>
</kw>
<msg timestamp="20201115 22:00:07.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042810403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042814222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.119" endtime="20201115 22:00:07.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042810403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042814222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.474" endtime="20201115 22:00:07.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.492" endtime="20201115 22:00:07.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.112" endtime="20201115 22:00:07.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.107" endtime="20201115 22:00:07.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:07.512" level="INFO">${RESULT} = [{'time': 0.042814222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.819000000002126e-06, 'source_diff': 3.819000000002126e-06}, {'time': 0.042875153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:07.502" endtime="20201115 22:00:07.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:07.544" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:07.514" endtime="20201115 22:00:07.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.557" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:07.554" endtime="20201115 22:00:07.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.565" level="INFO">VALUE: [3.819000000002126e-06, 3.83400000000117e-06, 3.819000000002126e-06, 3.833000000001696e-06, 3.833000000001696e-06, 3.833000000001696e-06, 3.833000000001696e-06, 3.79200000000246e-06, 3.80600000000203e-06, 3.83400000000117e-06, 3.7640000000033202e-06, 3.819000000002126e-06, 3.791999999995521e-06, 3.833999999994231e-06, 3.847000000001266e-06, 3.833000000001696e-06, 3.8200000000016e-06, 3.79200000000246e-06, 3.833000000001696e-06, 3.819000000002126e-06, 3.819999999994661e-06, 3.8200000000016e-06, 3.833000000001696e-06, 3.83400000000117e-06, 3.819000000002126e-06, 3.7639999999963814e-06, 3.819000000002126e-06, 3.7640000000033202e-06, 3.83400000000117e-06, 3.833000000001696e-06, 3.818999999995187e-06, 3.8200000000016e-06, 3.833000000001696e-06, 3.8200000000016e-06, 3.833000000001696e-06, 3.833000000001696e-06, 3.8200000000016e-06, 3.7779999999959513e-06, 3.846999999994327e-06, 3.8200000000016e-06, 3.83400000000117e-06, 3.7639999999963814e-06, 3.902000000000072e-06, 3.819000000002126e-06, 3.819000000002126e-06, 3.847000000001266e-06, 3.819000000002126e-06, 3.80600000000203e-06, 3.833000000001696e-06, 3.818999999995187e-06]</msg>
<status status="PASS" starttime="20201115 22:00:07.560" endtime="20201115 22:00:07.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.546" endtime="20201115 22:00:07.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.576" endtime="20201115 22:00:07.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:07.584" endtime="20201115 22:00:07.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.580" endtime="20201115 22:00:07.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.571" endtime="20201115 22:00:07.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.050" endtime="20201115 22:00:07.610"></status>
</kw>
<msg timestamp="20201115 22:00:07.611" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.636" endtime="20201115 22:00:07.651"></status>
</kw>
<msg timestamp="20201115 22:00:07.652" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.632" endtime="20201115 22:00:07.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.659" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.654" endtime="20201115 22:00:07.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.661" endtime="20201115 22:00:07.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.625" endtime="20201115 22:00:07.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.617" endtime="20201115 22:00:07.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.685" endtime="20201115 22:00:08.025"></status>
</kw>
<msg timestamp="20201115 22:00:08.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044513, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044516875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:07.681" endtime="20201115 22:00:08.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044513, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044516875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:08.034" endtime="20201115 22:00:08.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.054" endtime="20201115 22:00:08.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.674" endtime="20201115 22:00:08.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.669" endtime="20201115 22:00:08.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:08.072" level="INFO">${RESULT} = [{'time': 0.044516875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.044582139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:08.063" endtime="20201115 22:00:08.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:08.102" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:08.074" endtime="20201115 22:00:08.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.113" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:00:08.111" endtime="20201115 22:00:08.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.119" level="INFO">VALUE: [3.875000000000406e-06, 3.833000000001696e-06, 3.818999999995187e-06, 3.819000000002126e-06, 3.833000000001696e-06, 3.819000000002126e-06, 3.888999999999976e-06, 3.805999999995091e-06, 3.875000000000406e-06, 3.83400000000117e-06, 3.8200000000016e-06, 3.818999999995187e-06, 3.832999999994757e-06, 3.8050000000025563e-06, 3.833999999994231e-06, 3.833000000001696e-06, 3.819000000002126e-06, 3.861000000000836e-06, 3.8200000000016e-06, 3.832999999994757e-06, 3.819000000002126e-06, 3.819000000002126e-06, 3.8200000000016e-06, 3.83400000000117e-06, 3.833000000001696e-06, 3.819999999994661e-06, 3.8200000000016e-06, 3.84800000000074e-06, 3.819000000002126e-06, 3.875000000000406e-06, 3.861000000000836e-06, 3.847000000001266e-06, 3.833000000001696e-06, 3.833000000001696e-06, 3.84800000000074e-06, 3.847000000001266e-06, 3.80600000000203e-06, 3.875000000000406e-06, 3.888999999999976e-06, 3.833000000001696e-06, 3.8200000000016e-06, 3.819999999994661e-06, 3.846999999994327e-06, 3.818999999995187e-06, 3.8200000000016e-06, 3.80600000000203e-06, 3.819999999994661e-06, 3.861000000000836e-06, 3.875000000000406e-06, 3.8200000000016e-06]</msg>
<status status="PASS" starttime="20201115 22:00:08.116" endtime="20201115 22:00:08.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.104" endtime="20201115 22:00:08.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.128" endtime="20201115 22:00:08.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:08.136" endtime="20201115 22:00:08.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.132" endtime="20201115 22:00:08.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.123" endtime="20201115 22:00:08.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.612" endtime="20201115 22:00:08.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.497" endtime="20201115 22:00:08.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.495" endtime="20201115 22:00:08.163"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.169" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.193" endtime="20201115 22:00:08.212"></status>
</kw>
<msg timestamp="20201115 22:00:08.213" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.189" endtime="20201115 22:00:08.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.219" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.215" endtime="20201115 22:00:08.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.222" endtime="20201115 22:00:08.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.182" endtime="20201115 22:00:08.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.176" endtime="20201115 22:00:08.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.246" endtime="20201115 22:00:08.585"></status>
</kw>
<msg timestamp="20201115 22:00:08.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051890861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051894917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.243" endtime="20201115 22:00:08.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051890861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051894917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.595" endtime="20201115 22:00:08.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.614" endtime="20201115 22:00:08.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.235" endtime="20201115 22:00:08.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.230" endtime="20201115 22:00:08.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:08.631" level="INFO">${RESULT} = [{'time': 0.051894917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.055999999995341e-06, 'source_diff': 4.055999999995341e-06}, {'time': 0.051975069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:08.622" endtime="20201115 22:00:08.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:08.664" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:08.633" endtime="20201115 22:00:08.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.675" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:08.673" endtime="20201115 22:00:08.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.681" level="INFO">VALUE: [4.055999999995341e-06, 3.9859999999974915e-06, 4.07000000000185e-06, 4.012999999997158e-06, 3.9999999999970615e-06, 4.07000000000185e-06, 4.013999999996631e-06, 3.9999999999970615e-06, 4.013999999996631e-06, 4.01400000000357e-06, 4.02800000000314e-06, 4.01400000000357e-06, 4.013999999996631e-06, 4.013999999996631e-06, 4.068999999995437e-06, 4.02800000000314e-06, 4.000000000004e-06, 4.027999999996201e-06, 4.01400000000357e-06, 4.000000000004e-06, 4.01400000000357e-06, 4.02800000000314e-06, 4.01400000000357e-06, 4.027999999996201e-06, 4.013999999996631e-06, 4.041999999995771e-06, 4.027999999996201e-06, 4.04200000000271e-06, 4.027999999996201e-06, 3.9859999999974915e-06, 4.013999999996631e-06, 4.013999999996631e-06, 4.05600000000228e-06, 4.01400000000357e-06, 4.026999999996728e-06, 4.01400000000357e-06, 4.02800000000314e-06, 4.04200000000271e-06, 4.02800000000314e-06, 4.012999999997158e-06, 4.027999999996201e-06, 4.055999999995341e-06, 4.01400000000357e-06, 4.013999999996631e-06, 4.027999999996201e-06, 3.9999999999970615e-06, 4.013999999996631e-06, 3.9860000000044304e-06, 4.07000000000185e-06, 4.027999999996201e-06]</msg>
<status status="PASS" starttime="20201115 22:00:08.678" endtime="20201115 22:00:08.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.666" endtime="20201115 22:00:08.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.690" endtime="20201115 22:00:08.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:08.698" endtime="20201115 22:00:08.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.694" endtime="20201115 22:00:08.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.685" endtime="20201115 22:00:08.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.170" endtime="20201115 22:00:08.724"></status>
</kw>
<msg timestamp="20201115 22:00:08.724" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.748" endtime="20201115 22:00:08.764"></status>
</kw>
<msg timestamp="20201115 22:00:08.765" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.744" endtime="20201115 22:00:08.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.772" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.767" endtime="20201115 22:00:08.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.774" endtime="20201115 22:00:08.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.737" endtime="20201115 22:00:08.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.731" endtime="20201115 22:00:08.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.800" endtime="20201115 22:00:09.140"></status>
</kw>
<msg timestamp="20201115 22:00:09.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043053042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043057069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.797" endtime="20201115 22:00:09.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043053042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043057069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.150" endtime="20201115 22:00:09.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.169" endtime="20201115 22:00:09.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.788" endtime="20201115 22:00:09.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.783" endtime="20201115 22:00:09.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:09.187" level="INFO">${RESULT} = [{'time': 0.043057069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0270000000036665e-06, 'source_diff': 4.0270000000036665e-06}, {'time': 0.043127069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:09.178" endtime="20201115 22:00:09.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:09.217" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:09.189" endtime="20201115 22:00:09.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.229" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:09.227" endtime="20201115 22:00:09.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.235" level="INFO">VALUE: [4.0270000000036665e-06, 4.012999999997158e-06, 4.0270000000036665e-06, 3.9999999999970615e-06, 4.013999999996631e-06, 4.01400000000357e-06, 4.041999999995771e-06, 4.013000000004097e-06, 4.02800000000314e-06, 4.01400000000357e-06, 4.026999999996728e-06, 4.0409999999962976e-06, 4.01400000000357e-06, 4.0409999999962976e-06, 3.957999999998352e-06, 3.971999999997922e-06, 4.02800000000314e-06, 4.013999999996631e-06, 4.02800000000314e-06, 4.01400000000357e-06, 4.02800000000314e-06, 4.04200000000271e-06, 3.9449999999982555e-06, 4.05600000000228e-06, 4.013999999996631e-06, 4.000000000004e-06, 4.02800000000314e-06, 4.02800000000314e-06, 4.027999999996201e-06, 4.027999999996201e-06, 3.9999999999970615e-06, 4.01400000000357e-06, 4.05600000000228e-06, 4.05600000000228e-06, 4.01400000000357e-06, 3.9999999999970615e-06, 4.07000000000185e-06, 4.000000000004e-06, 4.0549999999958675e-06, 4.013999999996631e-06, 4.01400000000357e-06, 4.013999999996631e-06, 4.000000000004e-06, 4.0410000000032364e-06, 4.013999999996631e-06, 4.027999999996201e-06, 4.013999999996631e-06, 4.04200000000271e-06, 3.9999999999970615e-06, 4.000000000004e-06]</msg>
<status status="PASS" starttime="20201115 22:00:09.232" endtime="20201115 22:00:09.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.219" endtime="20201115 22:00:09.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.244" endtime="20201115 22:00:09.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:09.252" endtime="20201115 22:00:09.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.248" endtime="20201115 22:00:09.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.239" endtime="20201115 22:00:09.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.726" endtime="20201115 22:00:09.278"></status>
</kw>
<msg timestamp="20201115 22:00:09.279" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.302" endtime="20201115 22:00:09.319"></status>
</kw>
<msg timestamp="20201115 22:00:09.321" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.299" endtime="20201115 22:00:09.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.327" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.323" endtime="20201115 22:00:09.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.330" endtime="20201115 22:00:09.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.291" endtime="20201115 22:00:09.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.285" endtime="20201115 22:00:09.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.353" endtime="20201115 22:00:09.696"></status>
</kw>
<msg timestamp="20201115 22:00:09.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042981278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042985278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.350" endtime="20201115 22:00:09.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042981278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042985278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.706" endtime="20201115 22:00:09.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.725" endtime="20201115 22:00:09.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.343" endtime="20201115 22:00:09.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.338" endtime="20201115 22:00:09.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:09.743" level="INFO">${RESULT} = [{'time': 0.042985278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.000000000004e-06, 'source_diff': 4.000000000004e-06}, {'time': 0.043055917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0...</msg>
<status status="PASS" starttime="20201115 22:00:09.734" endtime="20201115 22:00:09.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:09.774" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:09.745" endtime="20201115 22:00:09.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.785" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:09.783" endtime="20201115 22:00:09.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.790" level="INFO">VALUE: [4.000000000004e-06, 4.027999999996201e-06, 4.01400000000357e-06, 4.027999999996201e-06, 4.027999999996201e-06, 4.012999999997158e-06, 4.01400000000357e-06, 4.02800000000314e-06, 4.027999999996201e-06, 4.013999999996631e-06, 3.9999999999970615e-06, 4.0410000000032364e-06, 4.01400000000357e-06, 4.082999999995007e-06, 3.9720000000048605e-06, 4.000000000004e-06, 4.027999999996201e-06, 3.957999999998352e-06, 4.01400000000357e-06, 4.05600000000228e-06, 4.04200000000271e-06, 4.082999999995007e-06, 4.01400000000357e-06, 4.0270000000036665e-06, 4.097000000001516e-06, 4.013999999996631e-06, 4.055999999995341e-06, 4.01400000000357e-06, 4.02800000000314e-06, 4.013999999996631e-06, 4.04200000000271e-06, 4.013999999996631e-06, 4.013999999996631e-06, 4.013999999996631e-06, 4.013999999996631e-06, 4.02800000000314e-06, 3.957999999998352e-06, 4.027999999996201e-06, 3.9859999999974915e-06, 4.026999999996728e-06, 4.041999999995771e-06, 4.027999999996201e-06, 4.01400000000357e-06, 4.013999999996631e-06, 3.9859999999974915e-06, 4.026999999996728e-06, 4.01400000000357e-06, 4.027999999996201e-06, 4.02800000000314e-06, 4.000000000004e-06]</msg>
<status status="PASS" starttime="20201115 22:00:09.787" endtime="20201115 22:00:09.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.775" endtime="20201115 22:00:09.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.799" endtime="20201115 22:00:09.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:09.808" endtime="20201115 22:00:09.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.804" endtime="20201115 22:00:09.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.795" endtime="20201115 22:00:09.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.280" endtime="20201115 22:00:09.833"></status>
</kw>
<msg timestamp="20201115 22:00:09.834" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.858" endtime="20201115 22:00:09.875"></status>
</kw>
<msg timestamp="20201115 22:00:09.876" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.855" endtime="20201115 22:00:09.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.878" endtime="20201115 22:00:09.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.884" endtime="20201115 22:00:09.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.847" endtime="20201115 22:00:09.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.841" endtime="20201115 22:00:09.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.908" endtime="20201115 22:00:10.251"></status>
</kw>
<msg timestamp="20201115 22:00:10.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043464208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043468222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.905" endtime="20201115 22:00:10.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043464208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043468222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.261" endtime="20201115 22:00:10.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.280" endtime="20201115 22:00:10.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.897" endtime="20201115 22:00:10.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.893" endtime="20201115 22:00:10.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:10.298" level="INFO">${RESULT} = [{'time': 0.043468222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.01400000000357e-06, 'source_diff': 4.01400000000357e-06}, {'time': 0.043541542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:10.289" endtime="20201115 22:00:10.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:10.328" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:10.300" endtime="20201115 22:00:10.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.340" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:10.337" endtime="20201115 22:00:10.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.345" level="INFO">VALUE: [4.01400000000357e-06, 4.02800000000314e-06, 4.124999999993717e-06, 4.0270000000036665e-06, 4.02800000000314e-06, 4.013999999996631e-06, 4.0549999999958675e-06, 4.013999999996631e-06, 4.026999999996728e-06, 4.013999999996631e-06, 4.0270000000036665e-06, 4.02800000000314e-06, 4.01400000000357e-06, 4.0409999999962976e-06, 4.0409999999962976e-06, 4.027999999996201e-06, 4.027999999996201e-06, 4.02800000000314e-06, 4.02800000000314e-06, 4.000000000004e-06, 3.9999999999970615e-06, 4.013999999996631e-06, 4.000000000004e-06, 4.041999999995771e-06, 4.027999999996201e-06, 3.972999999997395e-06, 4.013999999996631e-06, 4.01400000000357e-06, 4.01400000000357e-06, 4.01400000000357e-06, 4.02800000000314e-06, 4.01400000000357e-06, 4.09800000000099e-06, 4.000000000004e-06, 3.9859999999974915e-06, 4.05600000000228e-06, 4.111000000001086e-06, 3.973000000004334e-06, 4.026999999996728e-06, 4.01400000000357e-06, 4.041999999995771e-06, 4.04200000000271e-06, 4.02800000000314e-06, 3.9999999999970615e-06, 4.000000000004e-06, 3.957999999998352e-06, 4.02800000000314e-06, 4.02800000000314e-06, 3.9999999999970615e-06, 4.0410000000032364e-06]</msg>
<status status="PASS" starttime="20201115 22:00:10.342" endtime="20201115 22:00:10.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.330" endtime="20201115 22:00:10.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.354" endtime="20201115 22:00:10.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:10.363" endtime="20201115 22:00:10.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.358" endtime="20201115 22:00:10.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.349" endtime="20201115 22:00:10.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.835" endtime="20201115 22:00:10.389"></status>
</kw>
<msg timestamp="20201115 22:00:10.390" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.413" endtime="20201115 22:00:10.429"></status>
</kw>
<msg timestamp="20201115 22:00:10.431" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.410" endtime="20201115 22:00:10.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.437" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.433" endtime="20201115 22:00:10.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.439" endtime="20201115 22:00:10.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.402" endtime="20201115 22:00:10.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.396" endtime="20201115 22:00:10.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.463" endtime="20201115 22:00:10.804"></status>
</kw>
<msg timestamp="20201115 22:00:10.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043668931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043672958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.460" endtime="20201115 22:00:10.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043668931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043672958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.814" endtime="20201115 22:00:10.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.822" endtime="20201115 22:00:10.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.452" endtime="20201115 22:00:10.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.448" endtime="20201115 22:00:10.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:10.832" level="INFO">${RESULT} = [{'time': 0.043672958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.026999999996728e-06, 'source_diff': 4.026999999996728e-06}, {'time': 0.043744222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:10.827" endtime="20201115 22:00:10.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:10.846" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:10.833" endtime="20201115 22:00:10.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.852" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:10.851" endtime="20201115 22:00:10.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.854" level="INFO">VALUE: [4.026999999996728e-06, 4.027999999996201e-06, 4.01400000000357e-06, 4.027999999996201e-06, 4.01400000000357e-06, 4.026999999996728e-06, 3.957999999998352e-06, 4.012999999997158e-06, 4.02800000000314e-06, 4.013999999996631e-06, 4.0410000000032364e-06, 4.02800000000314e-06, 3.9999999999970615e-06, 4.027999999996201e-06, 3.9999999999970615e-06, 3.9999999999970615e-06, 3.9859999999974915e-06, 4.01400000000357e-06, 4.04200000000271e-06, 4.013999999996631e-06, 4.012999999997158e-06, 4.01400000000357e-06, 4.041999999995771e-06, 3.9720000000048605e-06, 4.013999999996631e-06, 4.013999999996631e-06, 4.026999999996728e-06, 3.9449999999982555e-06, 4.027999999996201e-06, 3.957999999998352e-06, 4.02800000000314e-06, 4.02800000000314e-06, 4.02800000000314e-06, 4.000000000004e-06, 4.013999999996631e-06, 4.013999999996631e-06, 4.026999999996728e-06, 4.013999999996631e-06, 4.097000000001516e-06, 4.05600000000228e-06, 4.04200000000271e-06, 4.013999999996631e-06, 4.027999999996201e-06, 4.013000000004097e-06, 4.026999999996728e-06, 4.02800000000314e-06, 4.069999999994911e-06, 4.02800000000314e-06, 4.013999999996631e-06, 4.02800000000314e-06]</msg>
<status status="PASS" starttime="20201115 22:00:10.853" endtime="20201115 22:00:10.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.847" endtime="20201115 22:00:10.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.859" endtime="20201115 22:00:10.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:10.863" endtime="20201115 22:00:10.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.861" endtime="20201115 22:00:10.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.857" endtime="20201115 22:00:10.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.391" endtime="20201115 22:00:10.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.166" endtime="20201115 22:00:10.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.164" endtime="20201115 22:00:10.885"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.887" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.898" endtime="20201115 22:00:10.913"></status>
</kw>
<msg timestamp="20201115 22:00:10.913" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.896" endtime="20201115 22:00:10.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.916" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.914" endtime="20201115 22:00:10.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.917" endtime="20201115 22:00:10.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.893" endtime="20201115 22:00:10.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.890" endtime="20201115 22:00:10.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.929" endtime="20201115 22:00:11.252"></status>
</kw>
<msg timestamp="20201115 22:00:11.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027777181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027781333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.927" endtime="20201115 22:00:11.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027777181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027781333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.261" endtime="20201115 22:00:11.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.281" endtime="20201115 22:00:11.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.924" endtime="20201115 22:00:11.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.921" endtime="20201115 22:00:11.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:11.301" level="INFO">${RESULT} = [{'time': 0.027781333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.151999999996853e-06, 'source_diff': 4.151999999996853e-06}, {'time': 0.027864569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:11.292" endtime="20201115 22:00:11.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:11.332" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:11.303" endtime="20201115 22:00:11.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.343" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:11.340" endtime="20201115 22:00:11.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.348" level="INFO">VALUE: [4.151999999996853e-06, 4.221999999998172e-06, 4.193999999999032e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.179999999999462e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.291000000000017e-06, 4.222999999997645e-06, 4.207999999998602e-06, 4.209000000001545e-06, 4.222999999997645e-06, 4.223000000001115e-06, 4.207999999998602e-06, 4.236000000001211e-06, 4.222999999997645e-06, 4.264000000000351e-06, 4.208000000002071e-06, 4.208000000002071e-06, 4.221999999998172e-06, 4.209000000001545e-06, 4.195000000001975e-06, 4.167000000002835e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.195000000001975e-06, 4.208999999998075e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.236999999997215e-06, 4.207999999998602e-06, 4.208000000002071e-06, 4.207999999998602e-06, 4.221999999998172e-06, 4.193999999999032e-06, 4.1949999999985055e-06, 4.223000000004584e-06, 4.221999999998172e-06, 4.208999999998075e-06, 4.1810000000058745e-06, 4.209000000005014e-06, 4.207999999998602e-06, 4.221999999998172e-06, 4.208000000005541e-06, 4.2770000000039166e-06]</msg>
<status status="PASS" starttime="20201115 22:00:11.345" endtime="20201115 22:00:11.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.334" endtime="20201115 22:00:11.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.358" endtime="20201115 22:00:11.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.366" endtime="20201115 22:00:11.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.362" endtime="20201115 22:00:11.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.353" endtime="20201115 22:00:11.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.887" endtime="20201115 22:00:11.392"></status>
</kw>
<msg timestamp="20201115 22:00:11.393" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.416" endtime="20201115 22:00:11.433"></status>
</kw>
<msg timestamp="20201115 22:00:11.435" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.413" endtime="20201115 22:00:11.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.441" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.437" endtime="20201115 22:00:11.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.443" endtime="20201115 22:00:11.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.405" endtime="20201115 22:00:11.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.399" endtime="20201115 22:00:11.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.467" endtime="20201115 22:00:11.815"></status>
</kw>
<msg timestamp="20201115 22:00:11.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042709778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042713986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.464" endtime="20201115 22:00:11.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042709778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042713986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.824" endtime="20201115 22:00:11.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.843" endtime="20201115 22:00:11.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.456" endtime="20201115 22:00:11.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.452" endtime="20201115 22:00:11.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:11.863" level="INFO">${RESULT} = [{'time': 0.042713986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.208000000005541e-06, 'source_diff': 4.208000000005541e-06}, {'time': 0.04280225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:11.853" endtime="20201115 22:00:11.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:11.893" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:11.865" endtime="20201115 22:00:11.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.905" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:11.903" endtime="20201115 22:00:11.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.911" level="INFO">VALUE: [4.208000000005541e-06, 4.2499999999973115e-06, 4.207999999998602e-06, 4.222999999997645e-06, 4.195000000005444e-06, 4.207999999998602e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.223000000004584e-06, 4.221999999998172e-06, 4.208000000005541e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.1949999999985055e-06, 4.1809999999989356e-06, 4.179999999999462e-06, 4.2360000000046805e-06, 4.2220000000051106e-06, 4.207999999998602e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.208999999998075e-06, 4.25000000000425e-06, 4.2220000000051106e-06, 4.207999999998602e-06, 4.1949999999985055e-06, 4.1949999999985055e-06, 4.2910000000034865e-06, 4.207999999998602e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.1809999999989356e-06, 4.221999999998172e-06, 4.222999999997645e-06, 4.166999999999366e-06, 4.1949999999985055e-06, 4.193999999999032e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.2359999999977416e-06, 4.2360000000046805e-06, 4.207999999998602e-06, 4.222999999997645e-06, 4.207999999998602e-06, 4.221999999998172e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.193999999999032e-06]</msg>
<status status="PASS" starttime="20201115 22:00:11.907" endtime="20201115 22:00:11.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.896" endtime="20201115 22:00:11.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.919" endtime="20201115 22:00:11.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.928" endtime="20201115 22:00:11.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.924" endtime="20201115 22:00:11.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.915" endtime="20201115 22:00:11.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.394" endtime="20201115 22:00:11.954"></status>
</kw>
<msg timestamp="20201115 22:00:11.954" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.978" endtime="20201115 22:00:11.995"></status>
</kw>
<msg timestamp="20201115 22:00:11.996" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.974" endtime="20201115 22:00:11.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.002" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.998" endtime="20201115 22:00:12.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.005" endtime="20201115 22:00:12.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.967" endtime="20201115 22:00:12.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.961" endtime="20201115 22:00:12.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.029" endtime="20201115 22:00:12.382"></status>
</kw>
<msg timestamp="20201115 22:00:12.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043275931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043280125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.025" endtime="20201115 22:00:12.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043275931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043280125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.392" endtime="20201115 22:00:12.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.411" endtime="20201115 22:00:12.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.018" endtime="20201115 22:00:12.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.013" endtime="20201115 22:00:12.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:12.430" level="INFO">${RESULT} = [{'time': 0.043280125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.194000000005971e-06, 'source_diff': 4.194000000005971e-06}, {'time': 0.043360861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:12.421" endtime="20201115 22:00:12.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:12.461" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:12.433" endtime="20201115 22:00:12.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.473" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:12.470" endtime="20201115 22:00:12.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.478" level="INFO">VALUE: [4.194000000005971e-06, 4.221999999998172e-06, 4.222999999997645e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.2220000000051106e-06, 4.208999999998075e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.1949999999985055e-06, 4.208999999998075e-06, 4.2360000000046805e-06, 4.207999999998602e-06, 4.222999999997645e-06, 4.2359999999977416e-06, 4.193999999999032e-06, 4.179999999999462e-06, 4.208000000005541e-06, 4.2220000000051106e-06, 4.2220000000051106e-06, 4.208999999998075e-06, 4.2359999999977416e-06, 4.263999999996881e-06, 4.207999999998602e-06, 4.2360000000046805e-06, 4.209000000005014e-06, 4.2359999999977416e-06, 4.166999999999366e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.209000000005014e-06, 4.2359999999977416e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.208000000005541e-06, 4.222999999997645e-06, 4.2220000000051106e-06, 4.2359999999977416e-06, 4.152000000000322e-06, 4.1949999999985055e-06, 4.222999999997645e-06, 4.1809999999989356e-06, 4.2360000000046805e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.221999999998172e-06, 4.1810000000058745e-06, 4.207999999998602e-06, 4.207999999998602e-06]</msg>
<status status="PASS" starttime="20201115 22:00:12.475" endtime="20201115 22:00:12.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.463" endtime="20201115 22:00:12.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.487" endtime="20201115 22:00:12.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:12.496" endtime="20201115 22:00:12.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.491" endtime="20201115 22:00:12.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.482" endtime="20201115 22:00:12.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.956" endtime="20201115 22:00:12.521"></status>
</kw>
<msg timestamp="20201115 22:00:12.522" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.545" endtime="20201115 22:00:12.562"></status>
</kw>
<msg timestamp="20201115 22:00:12.563" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.542" endtime="20201115 22:00:12.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.569" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.565" endtime="20201115 22:00:12.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.572" endtime="20201115 22:00:12.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.535" endtime="20201115 22:00:12.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.529" endtime="20201115 22:00:12.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.596" endtime="20201115 22:00:12.938"></status>
</kw>
<msg timestamp="20201115 22:00:12.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043293542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04329775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:12.592" endtime="20201115 22:00:12.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043293542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04329775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:12.947" endtime="20201115 22:00:12.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.966" endtime="20201115 22:00:12.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.585" endtime="20201115 22:00:12.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.580" endtime="20201115 22:00:12.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:12.986" level="INFO">${RESULT} = [{'time': 0.04329775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.208000000005541e-06, 'source_diff': 4.208000000005541e-06}, {'time': 0.043376639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:12.977" endtime="20201115 22:00:12.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.019" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:12.988" endtime="20201115 22:00:13.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.030" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:13.028" endtime="20201115 22:00:13.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.035" level="INFO">VALUE: [4.208000000005541e-06, 4.25000000000425e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.2220000000051106e-06, 4.263999999996881e-06, 4.209000000005014e-06, 4.1949999999985055e-06, 4.207999999998602e-06, 4.1810000000058745e-06, 4.221999999998172e-06, 4.208000000005541e-06, 4.222999999997645e-06, 4.221999999998172e-06, 4.193999999999032e-06, 4.2359999999977416e-06, 4.193999999999032e-06, 4.2220000000051106e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.209000000005014e-06, 4.193999999999032e-06, 4.2360000000046805e-06, 4.221999999998172e-06, 4.1949999999985055e-06, 4.208999999998075e-06, 4.208999999998075e-06, 4.1949999999985055e-06, 4.221999999998172e-06, 4.153000000006735e-06, 4.208999999998075e-06, 4.208999999998075e-06, 4.208999999998075e-06, 4.27800000000339e-06, 4.208999999998075e-06, 4.1809999999989356e-06, 4.195000000005444e-06, 4.2220000000051106e-06, 4.207999999998602e-06, 4.1809999999989356e-06, 4.207999999998602e-06, 4.195000000005444e-06, 4.2359999999977416e-06, 4.207999999998602e-06, 4.209000000005014e-06, 4.179999999999462e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.221999999998172e-06]</msg>
<status status="PASS" starttime="20201115 22:00:13.032" endtime="20201115 22:00:13.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.021" endtime="20201115 22:00:13.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.044" endtime="20201115 22:00:13.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:13.053" endtime="20201115 22:00:13.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.048" endtime="20201115 22:00:13.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.040" endtime="20201115 22:00:13.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.523" endtime="20201115 22:00:13.078"></status>
</kw>
<msg timestamp="20201115 22:00:13.079" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.102" endtime="20201115 22:00:13.119"></status>
</kw>
<msg timestamp="20201115 22:00:13.120" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.099" endtime="20201115 22:00:13.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.126" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.122" endtime="20201115 22:00:13.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.128" endtime="20201115 22:00:13.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.092" endtime="20201115 22:00:13.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.086" endtime="20201115 22:00:13.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.152" endtime="20201115 22:00:13.492"></status>
</kw>
<msg timestamp="20201115 22:00:13.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042699389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042703597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.149" endtime="20201115 22:00:13.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042699389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042703597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.502" endtime="20201115 22:00:13.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.521" endtime="20201115 22:00:13.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.141" endtime="20201115 22:00:13.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.137" endtime="20201115 22:00:13.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:13.539" level="INFO">${RESULT} = [{'time': 0.042703597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.208000000005541e-06, 'source_diff': 4.208000000005541e-06}, {'time': 0.042792028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:13.530" endtime="20201115 22:00:13.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.571" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:13.541" endtime="20201115 22:00:13.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.582" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:13.580" endtime="20201115 22:00:13.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.588" level="INFO">VALUE: [4.208000000005541e-06, 4.1810000000058745e-06, 4.1809999999989356e-06, 4.195000000005444e-06, 4.193999999999032e-06, 4.221999999998172e-06, 4.2359999999977416e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.221999999998172e-06, 4.208999999998075e-06, 4.2220000000051106e-06, 4.222999999997645e-06, 4.208000000005541e-06, 4.193999999999032e-06, 4.1809999999989356e-06, 4.221999999998172e-06, 4.223000000004584e-06, 4.222999999997645e-06, 4.236999999997215e-06, 4.208999999998075e-06, 4.27800000000339e-06, 4.221999999998172e-06, 4.208999999998075e-06, 4.221999999998172e-06, 4.166999999999366e-06, 4.208999999998075e-06, 4.208999999998075e-06, 4.208999999998075e-06, 4.2360000000046805e-06, 4.2220000000051106e-06, 4.2360000000046805e-06, 4.208999999998075e-06, 4.222999999997645e-06, 4.194000000005971e-06, 4.2499999999973115e-06, 4.263999999996881e-06, 4.193999999999032e-06, 4.139000000000226e-06, 4.1949999999985055e-06, 4.207999999998602e-06, 4.223000000004584e-06, 4.2220000000051106e-06, 4.223000000004584e-06, 4.26400000000382e-06, 4.221999999998172e-06, 4.2770000000039166e-06, 4.2360000000046805e-06, 4.208999999998075e-06]</msg>
<status status="PASS" starttime="20201115 22:00:13.585" endtime="20201115 22:00:13.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.573" endtime="20201115 22:00:13.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.597" endtime="20201115 22:00:13.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:13.605" endtime="20201115 22:00:13.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.601" endtime="20201115 22:00:13.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.592" endtime="20201115 22:00:13.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.080" endtime="20201115 22:00:13.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.886" endtime="20201115 22:00:13.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.885" endtime="20201115 22:00:13.632"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.637" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.660" endtime="20201115 22:00:13.677"></status>
</kw>
<msg timestamp="20201115 22:00:13.679" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.657" endtime="20201115 22:00:13.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.685" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.681" endtime="20201115 22:00:13.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.687" endtime="20201115 22:00:13.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.649" endtime="20201115 22:00:13.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.644" endtime="20201115 22:00:13.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.712" endtime="20201115 22:00:14.055"></status>
</kw>
<msg timestamp="20201115 22:00:14.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048029472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048033875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.708" endtime="20201115 22:00:14.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048029472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048033875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.065" endtime="20201115 22:00:14.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.084" endtime="20201115 22:00:14.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.701" endtime="20201115 22:00:14.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.696" endtime="20201115 22:00:14.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:14.102" level="INFO">${RESULT} = [{'time': 0.048033875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.048127194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:14.092" endtime="20201115 22:00:14.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:14.133" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:14.104" endtime="20201115 22:00:14.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.145" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:14.142" endtime="20201115 22:00:14.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.150" level="INFO">VALUE: [4.403000000000046e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.34800000000124e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.402000000000572e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.360999999994397e-06, 4.416000000000142e-06, 4.402000000000572e-06, 4.430999999999186e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.402000000000572e-06, 4.402000000000572e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.375000000000906e-06, 4.332999999995257e-06, 4.403000000000046e-06, 4.36200000000081e-06, 4.416999999999616e-06, 4.30600000000253e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.416000000000142e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201115 22:00:14.147" endtime="20201115 22:00:14.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.135" endtime="20201115 22:00:14.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.159" endtime="20201115 22:00:14.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.167" endtime="20201115 22:00:14.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.163" endtime="20201115 22:00:14.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.154" endtime="20201115 22:00:14.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.638" endtime="20201115 22:00:14.193"></status>
</kw>
<msg timestamp="20201115 22:00:14.194" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.217" endtime="20201115 22:00:14.235"></status>
</kw>
<msg timestamp="20201115 22:00:14.236" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.214" endtime="20201115 22:00:14.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.242" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.238" endtime="20201115 22:00:14.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.245" endtime="20201115 22:00:14.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.206" endtime="20201115 22:00:14.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.201" endtime="20201115 22:00:14.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.262" endtime="20201115 22:00:14.570"></status>
</kw>
<msg timestamp="20201115 22:00:14.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043053875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043058333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.261" endtime="20201115 22:00:14.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043053875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043058333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.580" endtime="20201115 22:00:14.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.599" endtime="20201115 22:00:14.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.257" endtime="20201115 22:00:14.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.254" endtime="20201115 22:00:14.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:14.616" level="INFO">${RESULT} = [{'time': 0.043058333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.043148264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:14.607" endtime="20201115 22:00:14.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:14.648" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:14.619" endtime="20201115 22:00:14.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.659" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:14.657" endtime="20201115 22:00:14.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.665" level="INFO">VALUE: [4.457999999998852e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.485999999997992e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.416999999999616e-06, 4.347000000001766e-06, 4.416000000000142e-06, 4.361000000001336e-06, 4.473000000004834e-06, 4.443999999999282e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.402000000000572e-06, 4.4170000000065546e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.4860000000049305e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201115 22:00:14.662" endtime="20201115 22:00:14.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.650" endtime="20201115 22:00:14.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.674" endtime="20201115 22:00:14.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.683" endtime="20201115 22:00:14.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.678" endtime="20201115 22:00:14.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.669" endtime="20201115 22:00:14.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.195" endtime="20201115 22:00:14.708"></status>
</kw>
<msg timestamp="20201115 22:00:14.709" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.733" endtime="20201115 22:00:14.751"></status>
</kw>
<msg timestamp="20201115 22:00:14.752" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.729" endtime="20201115 22:00:14.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.758" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.754" endtime="20201115 22:00:14.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.760" endtime="20201115 22:00:14.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.722" endtime="20201115 22:00:14.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.716" endtime="20201115 22:00:14.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.784" endtime="20201115 22:00:15.124"></status>
</kw>
<msg timestamp="20201115 22:00:15.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043858042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043862417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.781" endtime="20201115 22:00:15.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043858042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043862417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.134" endtime="20201115 22:00:15.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.153" endtime="20201115 22:00:15.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.773" endtime="20201115 22:00:15.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.769" endtime="20201115 22:00:15.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.170" level="INFO">${RESULT} = [{'time': 0.043862417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.043955597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:15.161" endtime="20201115 22:00:15.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.204" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:15.172" endtime="20201115 22:00:15.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.215" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:15.212" endtime="20201115 22:00:15.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.220" level="INFO">VALUE: [4.375000000000906e-06, 4.485999999997992e-06, 4.443999999999282e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.388000000001002e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.416000000000142e-06, 4.346999999994827e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.361000000001336e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201115 22:00:15.217" endtime="20201115 22:00:15.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.205" endtime="20201115 22:00:15.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.229" endtime="20201115 22:00:15.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.238" endtime="20201115 22:00:15.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.233" endtime="20201115 22:00:15.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.225" endtime="20201115 22:00:15.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.710" endtime="20201115 22:00:15.263"></status>
</kw>
<msg timestamp="20201115 22:00:15.264" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.288" endtime="20201115 22:00:15.306"></status>
</kw>
<msg timestamp="20201115 22:00:15.307" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.284" endtime="20201115 22:00:15.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.313" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.309" endtime="20201115 22:00:15.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.315" endtime="20201115 22:00:15.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.277" endtime="20201115 22:00:15.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.270" endtime="20201115 22:00:15.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.339" endtime="20201115 22:00:15.679"></status>
</kw>
<msg timestamp="20201115 22:00:15.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043820847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04382525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:15.336" endtime="20201115 22:00:15.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043820847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04382525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:15.688" endtime="20201115 22:00:15.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.707" endtime="20201115 22:00:15.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.328" endtime="20201115 22:00:15.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.324" endtime="20201115 22:00:15.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.725" level="INFO">${RESULT} = [{'time': 0.04382525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.043919181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:15.716" endtime="20201115 22:00:15.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.756" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:15.727" endtime="20201115 22:00:15.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.768" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:15.765" endtime="20201115 22:00:15.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.774" level="INFO">VALUE: [4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.458999999998325e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.387999999994063e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.347000000001766e-06, 4.374999999993967e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.402000000000572e-06, 4.416000000000142e-06, 4.416000000000142e-06, 4.388000000001002e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201115 22:00:15.771" endtime="20201115 22:00:15.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.758" endtime="20201115 22:00:15.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.783" endtime="20201115 22:00:15.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.792" endtime="20201115 22:00:15.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.787" endtime="20201115 22:00:15.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.778" endtime="20201115 22:00:15.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.265" endtime="20201115 22:00:15.818"></status>
</kw>
<msg timestamp="20201115 22:00:15.818" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.842" endtime="20201115 22:00:15.858"></status>
</kw>
<msg timestamp="20201115 22:00:15.860" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.838" endtime="20201115 22:00:15.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.866" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.862" endtime="20201115 22:00:15.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.868" endtime="20201115 22:00:15.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.831" endtime="20201115 22:00:15.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.825" endtime="20201115 22:00:15.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.892" endtime="20201115 22:00:16.234"></status>
</kw>
<msg timestamp="20201115 22:00:16.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042661083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042665514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.889" endtime="20201115 22:00:16.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042661083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042665514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.243" endtime="20201115 22:00:16.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.262" endtime="20201115 22:00:16.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.881" endtime="20201115 22:00:16.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.877" endtime="20201115 22:00:16.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:16.280" level="INFO">${RESULT} = [{'time': 0.042665514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.042761097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:16.271" endtime="20201115 22:00:16.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:16.311" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:16.282" endtime="20201115 22:00:16.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.322" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:16.319" endtime="20201115 22:00:16.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.327" level="INFO">VALUE: [4.430999999999186e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.443999999999282e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.429999999999712e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.4999999999975615e-06, 4.416000000000142e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.403000000000046e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201115 22:00:16.324" endtime="20201115 22:00:16.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.312" endtime="20201115 22:00:16.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.338" endtime="20201115 22:00:16.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.347" endtime="20201115 22:00:16.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.342" endtime="20201115 22:00:16.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.334" endtime="20201115 22:00:16.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.820" endtime="20201115 22:00:16.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.635" endtime="20201115 22:00:16.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.633" endtime="20201115 22:00:16.373"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.378" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.402" endtime="20201115 22:00:16.420"></status>
</kw>
<msg timestamp="20201115 22:00:16.421" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.398" endtime="20201115 22:00:16.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.428" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.424" endtime="20201115 22:00:16.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.430" endtime="20201115 22:00:16.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.391" endtime="20201115 22:00:16.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.385" endtime="20201115 22:00:16.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.455" endtime="20201115 22:00:16.796"></status>
</kw>
<msg timestamp="20201115 22:00:16.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048203097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048207667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.452" endtime="20201115 22:00:16.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048203097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048207667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.805" endtime="20201115 22:00:16.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.824" endtime="20201115 22:00:16.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.444" endtime="20201115 22:00:16.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.439" endtime="20201115 22:00:16.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:16.842" level="INFO">${RESULT} = [{'time': 0.048207667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.57000000000235e-06, 'source_diff': 4.57000000000235e-06}, {'time': 0.048316264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:16.833" endtime="20201115 22:00:16.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:16.872" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:16.844" endtime="20201115 22:00:16.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.883" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:16.881" endtime="20201115 22:00:16.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.891" level="INFO">VALUE: [4.57000000000235e-06, 4.610999999994647e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.5549999999963675e-06, 4.597000000002016e-06, 4.611000000001586e-06, 4.59800000000149e-06, 4.624999999994217e-06, 4.52800000000364e-06, 4.610999999994647e-06, 4.54200000000321e-06, 4.624999999994217e-06, 4.611000000001586e-06, 4.597000000002016e-06, 4.57000000000235e-06, 4.597000000002016e-06, 4.597000000002016e-06, 4.610999999994647e-06, 4.57000000000235e-06, 4.610999999994647e-06, 4.597000000002016e-06, 4.611000000001586e-06, 4.596999999995077e-06, 4.596999999995077e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.583000000002446e-06, 4.597000000002016e-06, 4.611000000001586e-06, 4.582999999995507e-06, 4.58400000000192e-06, 4.597000000002016e-06, 4.5549999999963675e-06, 4.59800000000149e-06, 4.597000000002016e-06, 4.597000000002016e-06, 4.583999999994981e-06, 4.611000000001586e-06, 4.597000000002016e-06, 4.59800000000149e-06, 4.555999999995841e-06, 4.597000000002016e-06, 4.624999999994217e-06, 4.52800000000364e-06, 4.625000000001156e-06, 4.597000000002016e-06, 4.611000000001586e-06, 4.5549999999963675e-06, 4.597000000002016e-06]</msg>
<status status="PASS" starttime="20201115 22:00:16.886" endtime="20201115 22:00:16.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.874" endtime="20201115 22:00:16.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.900" endtime="20201115 22:00:16.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.908" endtime="20201115 22:00:16.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.904" endtime="20201115 22:00:16.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.895" endtime="20201115 22:00:16.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.379" endtime="20201115 22:00:16.934"></status>
</kw>
<msg timestamp="20201115 22:00:16.934" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.958" endtime="20201115 22:00:16.976"></status>
</kw>
<msg timestamp="20201115 22:00:16.977" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.954" endtime="20201115 22:00:16.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.983" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.979" endtime="20201115 22:00:16.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.986" endtime="20201115 22:00:16.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.947" endtime="20201115 22:00:16.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.941" endtime="20201115 22:00:16.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.010" endtime="20201115 22:00:17.348"></status>
</kw>
<msg timestamp="20201115 22:00:17.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042680861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042685472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.006" endtime="20201115 22:00:17.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042680861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042685472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.357" endtime="20201115 22:00:17.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.376" endtime="20201115 22:00:17.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.999" endtime="20201115 22:00:17.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.994" endtime="20201115 22:00:17.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:17.393" level="INFO">${RESULT} = [{'time': 0.042685472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.042793833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:17.384" endtime="20201115 22:00:17.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:17.424" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:17.395" endtime="20201115 22:00:17.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.436" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:17.434" endtime="20201115 22:00:17.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.442" level="INFO">VALUE: [4.611000000001586e-06, 4.583000000002446e-06, 4.624999999994217e-06, 4.597999999994551e-06, 4.610999999994647e-06, 4.582999999995507e-06, 4.666000000000392e-06, 4.597999999994551e-06, 4.583999999994981e-06, 4.583000000002446e-06, 4.611000000001586e-06, 4.582999999995507e-06, 4.625000000001156e-06, 4.61200000000106e-06, 4.55600000000278e-06, 4.624999999994217e-06, 4.597000000002016e-06, 4.597999999994551e-06, 4.611000000001586e-06, 4.569999999995411e-06, 4.597999999994551e-06, 4.59800000000149e-06, 4.597000000002016e-06, 4.611000000001586e-06, 4.610999999994647e-06, 4.611000000001586e-06, 4.582999999995507e-06, 4.59800000000149e-06, 4.597000000002016e-06, 4.597999999994551e-06, 4.61200000000106e-06, 4.611000000001586e-06, 4.582999999995507e-06, 4.583000000002446e-06, 4.597000000002016e-06, 4.611000000001586e-06, 4.653000000000296e-06, 4.611000000001586e-06, 4.61200000000106e-06, 4.596999999995077e-06, 4.597000000002016e-06, 4.625000000001156e-06, 4.597000000002016e-06, 4.582999999995507e-06, 4.652000000000822e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.597000000002016e-06, 4.597000000002016e-06, 4.597000000002016e-06]</msg>
<status status="PASS" starttime="20201115 22:00:17.438" endtime="20201115 22:00:17.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.427" endtime="20201115 22:00:17.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.451" endtime="20201115 22:00:17.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:17.464" endtime="20201115 22:00:17.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.459" endtime="20201115 22:00:17.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.446" endtime="20201115 22:00:17.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.936" endtime="20201115 22:00:17.490"></status>
</kw>
<msg timestamp="20201115 22:00:17.490" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.514" endtime="20201115 22:00:17.532"></status>
</kw>
<msg timestamp="20201115 22:00:17.533" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.511" endtime="20201115 22:00:17.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.539" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.535" endtime="20201115 22:00:17.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.542" endtime="20201115 22:00:17.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.504" endtime="20201115 22:00:17.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.498" endtime="20201115 22:00:17.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.565" endtime="20201115 22:00:17.908"></status>
</kw>
<msg timestamp="20201115 22:00:17.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043892403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043896958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.562" endtime="20201115 22:00:17.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043892403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043896958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.918" endtime="20201115 22:00:17.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.937" endtime="20201115 22:00:17.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.555" endtime="20201115 22:00:17.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.550" endtime="20201115 22:00:17.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:17.954" level="INFO">${RESULT} = [{'time': 0.043896958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5549999999963675e-06, 'source_diff': 4.5549999999963675e-06}, {'time': 0.043995583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:17.945" endtime="20201115 22:00:17.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:17.986" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:17.957" endtime="20201115 22:00:17.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.997" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:17.994" endtime="20201115 22:00:17.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.002" level="INFO">VALUE: [4.5549999999963675e-06, 4.639000000000726e-06, 4.610999999994647e-06, 4.597000000002016e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.58400000000192e-06, 4.625000000001156e-06, 4.596999999995077e-06, 4.597000000002016e-06, 4.597000000002016e-06, 4.611000000001586e-06, 4.583000000002446e-06, 4.611000000001586e-06, 4.596999999995077e-06, 4.555999999995841e-06, 4.610999999994647e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.597000000002016e-06, 4.639000000000726e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.61200000000106e-06, 4.611000000001586e-06, 4.597000000002016e-06, 4.583000000002446e-06, 4.611000000001586e-06, 4.59800000000149e-06, 4.57000000000235e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.597999999994551e-06, 4.597000000002016e-06, 4.541999999996271e-06, 4.596999999995077e-06, 4.59800000000149e-06, 4.597000000002016e-06, 4.583000000002446e-06, 4.610999999994647e-06, 4.597000000002016e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.639000000000726e-06, 4.597000000002016e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.597000000002016e-06]</msg>
<status status="PASS" starttime="20201115 22:00:17.999" endtime="20201115 22:00:18.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.987" endtime="20201115 22:00:18.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.011" endtime="20201115 22:00:18.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:18.020" endtime="20201115 22:00:18.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.015" endtime="20201115 22:00:18.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.007" endtime="20201115 22:00:18.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.492" endtime="20201115 22:00:18.045"></status>
</kw>
<msg timestamp="20201115 22:00:18.046" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.071" endtime="20201115 22:00:18.088"></status>
</kw>
<msg timestamp="20201115 22:00:18.089" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.067" endtime="20201115 22:00:18.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.096" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.092" endtime="20201115 22:00:18.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.098" endtime="20201115 22:00:18.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.060" endtime="20201115 22:00:18.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.053" endtime="20201115 22:00:18.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.123" endtime="20201115 22:00:18.463"></status>
</kw>
<msg timestamp="20201115 22:00:18.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044251694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044256306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.119" endtime="20201115 22:00:18.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044251694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044256306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.473" endtime="20201115 22:00:18.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.492" endtime="20201115 22:00:18.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.112" endtime="20201115 22:00:18.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.107" endtime="20201115 22:00:18.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:18.511" level="INFO">${RESULT} = [{'time': 0.044256306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.61200000000106e-06, 'source_diff': 4.61200000000106e-06}, {'time': 0.044356972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:18.501" endtime="20201115 22:00:18.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:18.542" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:18.513" endtime="20201115 22:00:18.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.553" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:18.551" endtime="20201115 22:00:18.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.558" level="INFO">VALUE: [4.61200000000106e-06, 4.583000000002446e-06, 4.596999999995077e-06, 4.611000000001586e-06, 4.583000000002446e-06, 4.625000000001156e-06, 4.597000000002016e-06, 4.625000000001156e-06, 4.583000000002446e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.597000000002016e-06, 4.597000000002016e-06, 4.597000000002016e-06, 4.597000000002016e-06, 4.610999999994647e-06, 4.611000000001586e-06, 4.597000000002016e-06, 4.597000000002016e-06, 4.582999999995507e-06, 4.597000000002016e-06, 4.61200000000106e-06, 4.597000000002016e-06, 4.58400000000192e-06, 4.597000000002016e-06, 4.639000000000726e-06, 4.597000000002016e-06, 4.569999999995411e-06, 4.652000000000822e-06, 4.58400000000192e-06, 4.597000000002016e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.610999999994647e-06, 4.597000000002016e-06, 4.611000000001586e-06, 4.59800000000149e-06, 4.625000000001156e-06, 4.610999999994647e-06, 4.596999999995077e-06, 4.611000000001586e-06, 4.596999999995077e-06, 4.639000000000726e-06, 4.597000000002016e-06, 4.569000000002876e-06, 4.610999999994647e-06, 4.597000000002016e-06, 4.597000000002016e-06, 4.625000000001156e-06]</msg>
<status status="PASS" starttime="20201115 22:00:18.555" endtime="20201115 22:00:18.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.544" endtime="20201115 22:00:18.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.567" endtime="20201115 22:00:18.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:18.576" endtime="20201115 22:00:18.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.572" endtime="20201115 22:00:18.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.563" endtime="20201115 22:00:18.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.047" endtime="20201115 22:00:18.602"></status>
</kw>
<msg timestamp="20201115 22:00:18.602" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.625" endtime="20201115 22:00:18.643"></status>
</kw>
<msg timestamp="20201115 22:00:18.644" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.622" endtime="20201115 22:00:18.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.650" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.646" endtime="20201115 22:00:18.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.653" endtime="20201115 22:00:18.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.615" endtime="20201115 22:00:18.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.609" endtime="20201115 22:00:18.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.678" endtime="20201115 22:00:19.018"></status>
</kw>
<msg timestamp="20201115 22:00:19.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042716194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042720806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.675" endtime="20201115 22:00:19.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042716194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042720806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.028" endtime="20201115 22:00:19.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.047" endtime="20201115 22:00:19.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.667" endtime="20201115 22:00:19.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.663" endtime="20201115 22:00:19.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:19.065" level="INFO">${RESULT} = [{'time': 0.042720806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.61200000000106e-06, 'source_diff': 4.61200000000106e-06}, {'time': 0.042820264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:19.055" endtime="20201115 22:00:19.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:19.095" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:19.067" endtime="20201115 22:00:19.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.106" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:19.104" endtime="20201115 22:00:19.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.112" level="INFO">VALUE: [4.61200000000106e-06, 4.638999999993787e-06, 4.596999999995077e-06, 4.582999999995507e-06, 4.597000000002016e-06, 4.597000000002016e-06, 4.569000000002876e-06, 4.596999999995077e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.597000000002016e-06, 4.583000000002446e-06, 4.555000000003306e-06, 4.597000000002016e-06, 4.625000000001156e-06, 4.597000000002016e-06, 4.58400000000192e-06, 4.611000000001586e-06, 4.61200000000106e-06, 4.59800000000149e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.610999999994647e-06, 4.597000000002016e-06, 4.569000000002876e-06, 4.58400000000192e-06, 4.583000000002446e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.583000000002446e-06, 4.597999999994551e-06, 4.611000000001586e-06, 4.597000000002016e-06, 4.55600000000278e-06, 4.651999999993883e-06, 4.58400000000192e-06, 4.597000000002016e-06, 4.597000000002016e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.610999999994647e-06, 4.639000000000726e-06, 4.610999999994647e-06, 4.61200000000106e-06, 4.597000000002016e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201115 22:00:19.109" endtime="20201115 22:00:19.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.097" endtime="20201115 22:00:19.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.121" endtime="20201115 22:00:19.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:19.129" endtime="20201115 22:00:19.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.125" endtime="20201115 22:00:19.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.116" endtime="20201115 22:00:19.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.603" endtime="20201115 22:00:19.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.376" endtime="20201115 22:00:19.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.374" endtime="20201115 22:00:19.156"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.161" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.185" endtime="20201115 22:00:19.203"></status>
</kw>
<msg timestamp="20201115 22:00:19.204" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.181" endtime="20201115 22:00:19.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.207" endtime="20201115 22:00:19.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.213" endtime="20201115 22:00:19.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.174" endtime="20201115 22:00:19.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.168" endtime="20201115 22:00:19.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.239" endtime="20201115 22:00:19.581"></status>
</kw>
<msg timestamp="20201115 22:00:19.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048654806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048659597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.236" endtime="20201115 22:00:19.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048654806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048659597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.591" endtime="20201115 22:00:19.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.609" endtime="20201115 22:00:19.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.227" endtime="20201115 22:00:19.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.222" endtime="20201115 22:00:19.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:19.627" level="INFO">${RESULT} = [{'time': 0.048659597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.790999999997048e-06, 'source_diff': 4.790999999997048e-06}, {'time': 0.048770528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:19.618" endtime="20201115 22:00:19.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:19.658" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:19.629" endtime="20201115 22:00:19.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.669" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:19.667" endtime="20201115 22:00:19.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.675" level="INFO">VALUE: [4.790999999997048e-06, 4.79200000000346e-06, 4.776999999997478e-06, 4.805999999996091e-06, 4.805999999996091e-06, 4.8049999999966175e-06, 4.776999999997478e-06, 4.790999999997048e-06, 4.805999999996091e-06, 4.80600000000303e-06, 4.84800000000174e-06, 4.80600000000303e-06, 4.80600000000303e-06, 4.76400000000432e-06, 4.790999999997048e-06, 4.8049999999966175e-06, 4.777999999996951e-06, 4.8049999999966175e-06, 4.791999999996521e-06, 4.8050000000035564e-06, 4.777999999996951e-06, 4.8049999999966175e-06, 4.79200000000346e-06, 4.861000000001836e-06, 4.846999999995327e-06, 4.819999999995661e-06, 4.777999999996951e-06, 4.8050000000035564e-06, 4.80600000000303e-06, 4.8200000000026e-06, 4.7910000000039865e-06, 4.80600000000303e-06, 4.805999999996091e-06, 4.8050000000035564e-06, 4.80600000000303e-06, 4.8050000000035564e-06, 4.8189999999961874e-06, 4.77800000000389e-06, 4.80600000000303e-06, 4.8200000000026e-06, 4.777999999996951e-06, 4.819000000003126e-06, 4.791999999996521e-06, 4.80600000000303e-06, 4.791999999996521e-06, 4.77800000000389e-06, 4.79200000000346e-06, 4.791999999996521e-06, 4.80600000000303e-06, 4.79200000000346e-06]</msg>
<status status="PASS" starttime="20201115 22:00:19.671" endtime="20201115 22:00:19.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.660" endtime="20201115 22:00:19.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.684" endtime="20201115 22:00:19.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:19.692" endtime="20201115 22:00:19.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.688" endtime="20201115 22:00:19.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.679" endtime="20201115 22:00:19.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.162" endtime="20201115 22:00:19.718"></status>
</kw>
<msg timestamp="20201115 22:00:19.718" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.742" endtime="20201115 22:00:19.761"></status>
</kw>
<msg timestamp="20201115 22:00:19.762" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.739" endtime="20201115 22:00:19.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.769" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.764" endtime="20201115 22:00:19.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.771" endtime="20201115 22:00:19.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.731" endtime="20201115 22:00:19.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.725" endtime="20201115 22:00:19.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.795" endtime="20201115 22:00:20.139"></status>
</kw>
<msg timestamp="20201115 22:00:20.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043087014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043091792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.792" endtime="20201115 22:00:20.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043087014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043091792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.149" endtime="20201115 22:00:20.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.167" endtime="20201115 22:00:20.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.784" endtime="20201115 22:00:20.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.779" endtime="20201115 22:00:20.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.185" level="INFO">${RESULT} = [{'time': 0.043091792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.777999999996951e-06, 'source_diff': 4.777999999996951e-06}, {'time': 0.043205528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:20.176" endtime="20201115 22:00:20.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.216" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:20.188" endtime="20201115 22:00:20.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.227" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:20.225" endtime="20201115 22:00:20.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.232" level="INFO">VALUE: [4.777999999996951e-06, 4.889000000000976e-06, 4.805999999996091e-06, 4.791999999996521e-06, 4.79200000000346e-06, 4.777999999996951e-06, 4.79200000000346e-06, 4.8189999999961874e-06, 4.80600000000303e-06, 4.8189999999961874e-06, 4.790999999997048e-06, 4.805999999996091e-06, 4.805999999996091e-06, 4.79200000000346e-06, 4.8049999999966175e-06, 4.76400000000432e-06, 4.861000000001836e-06, 4.791999999996521e-06, 4.777999999996951e-06, 4.791999999996521e-06, 4.777000000004417e-06, 4.790999999997048e-06, 4.79200000000346e-06, 4.80600000000303e-06, 4.7910000000039865e-06, 4.762999999997908e-06, 4.8050000000035564e-06, 4.79200000000346e-06, 4.791999999996521e-06, 4.777999999996951e-06, 4.80600000000303e-06, 4.8050000000035564e-06, 4.8049999999966175e-06, 4.889000000000976e-06, 4.75000000000475e-06, 4.819000000003126e-06, 4.79200000000346e-06, 4.777999999996951e-06, 4.79200000000346e-06, 4.76400000000432e-06, 4.7499999999978115e-06, 4.777999999996951e-06, 4.8049999999966175e-06, 4.79200000000346e-06, 4.790999999997048e-06, 4.790999999997048e-06, 4.7910000000039865e-06, 4.861000000001836e-06, 4.805999999996091e-06, 4.8050000000035564e-06]</msg>
<status status="PASS" starttime="20201115 22:00:20.229" endtime="20201115 22:00:20.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.218" endtime="20201115 22:00:20.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.241" endtime="20201115 22:00:20.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.250" endtime="20201115 22:00:20.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.245" endtime="20201115 22:00:20.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.237" endtime="20201115 22:00:20.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.719" endtime="20201115 22:00:20.275"></status>
</kw>
<msg timestamp="20201115 22:00:20.276" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.300" endtime="20201115 22:00:20.318"></status>
</kw>
<msg timestamp="20201115 22:00:20.319" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.296" endtime="20201115 22:00:20.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.326" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.322" endtime="20201115 22:00:20.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.328" endtime="20201115 22:00:20.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.289" endtime="20201115 22:00:20.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.283" endtime="20201115 22:00:20.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.352" endtime="20201115 22:00:20.695"></status>
</kw>
<msg timestamp="20201115 22:00:20.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043448917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043453694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.348" endtime="20201115 22:00:20.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043448917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043453694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.704" endtime="20201115 22:00:20.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.723" endtime="20201115 22:00:20.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.341" endtime="20201115 22:00:20.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.336" endtime="20201115 22:00:20.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.741" level="INFO">${RESULT} = [{'time': 0.043453694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.777000000004417e-06, 'source_diff': 4.777000000004417e-06}, {'time': 0.043571292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:20.732" endtime="20201115 22:00:20.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.771" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:20.743" endtime="20201115 22:00:20.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.782" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:20.780" endtime="20201115 22:00:20.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.788" level="INFO">VALUE: [4.777000000004417e-06, 4.777999999996951e-06, 4.79200000000346e-06, 4.77800000000389e-06, 4.819000000003126e-06, 4.777999999996951e-06, 4.76400000000432e-06, 4.790999999997048e-06, 4.805999999996091e-06, 4.8050000000035564e-06, 4.791999999996521e-06, 4.8049999999966175e-06, 4.8050000000035564e-06, 4.791999999996521e-06, 4.8200000000026e-06, 4.805999999996091e-06, 4.721999999998672e-06, 4.819999999995661e-06, 4.819000000003126e-06, 4.791999999996521e-06, 4.819000000003126e-06, 4.805999999996091e-06, 4.791999999996521e-06, 4.80600000000303e-06, 4.791999999996521e-06, 4.7910000000039865e-06, 4.8050000000035564e-06, 4.80600000000303e-06, 4.77800000000389e-06, 4.79200000000346e-06, 4.819000000003126e-06, 4.819999999995661e-06, 4.790999999997048e-06, 4.80600000000303e-06, 4.860999999994897e-06, 4.790999999997048e-06, 4.77800000000389e-06, 4.819000000003126e-06, 4.777999999996951e-06, 4.77800000000389e-06, 4.790999999997048e-06, 4.777999999996951e-06, 4.8049999999966175e-06, 4.8050000000035564e-06, 4.79200000000346e-06, 4.80600000000303e-06, 4.791999999996521e-06, 4.77800000000389e-06, 4.79200000000346e-06, 4.7910000000039865e-06]</msg>
<status status="PASS" starttime="20201115 22:00:20.785" endtime="20201115 22:00:20.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.773" endtime="20201115 22:00:20.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.797" endtime="20201115 22:00:20.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.805" endtime="20201115 22:00:20.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.801" endtime="20201115 22:00:20.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.792" endtime="20201115 22:00:20.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.277" endtime="20201115 22:00:20.831"></status>
</kw>
<msg timestamp="20201115 22:00:20.831" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.855" endtime="20201115 22:00:20.873"></status>
</kw>
<msg timestamp="20201115 22:00:20.875" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.852" endtime="20201115 22:00:20.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.881" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.877" endtime="20201115 22:00:20.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.883" endtime="20201115 22:00:20.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.845" endtime="20201115 22:00:20.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.839" endtime="20201115 22:00:20.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.907" endtime="20201115 22:00:21.213"></status>
</kw>
<msg timestamp="20201115 22:00:21.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043406514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043411306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.904" endtime="20201115 22:00:21.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043406514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043411306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.218" endtime="20201115 22:00:21.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.226" endtime="20201115 22:00:21.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.896" endtime="20201115 22:00:21.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.892" endtime="20201115 22:00:21.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:21.235" level="INFO">${RESULT} = [{'time': 0.043411306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999996521e-06, 'source_diff': 4.791999999996521e-06}, {'time': 0.043526625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:21.231" endtime="20201115 22:00:21.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:21.262" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:21.236" endtime="20201115 22:00:21.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.273" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:21.271" endtime="20201115 22:00:21.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.279" level="INFO">VALUE: [4.791999999996521e-06, 4.805999999996091e-06, 4.777999999996951e-06, 4.8050000000035564e-06, 4.819000000003126e-06, 4.790999999997048e-06, 4.791999999996521e-06, 4.77800000000389e-06, 4.79200000000346e-06, 4.805999999996091e-06, 4.77800000000389e-06, 4.832999999995757e-06, 4.722000000005611e-06, 4.791999999996521e-06, 4.777999999996951e-06, 4.777999999996951e-06, 4.7639999999973814e-06, 4.790999999997048e-06, 4.805999999996091e-06, 4.777999999996951e-06, 4.791999999996521e-06, 4.875000000001406e-06, 4.819000000003126e-06, 4.8200000000026e-06, 4.7910000000039865e-06, 4.777999999996951e-06, 4.80600000000303e-06, 4.77800000000389e-06, 4.79200000000346e-06, 4.80600000000303e-06, 4.791999999996521e-06, 4.777000000004417e-06, 4.80600000000303e-06, 4.79200000000346e-06, 4.8049999999966175e-06, 4.8050000000035564e-06, 4.77800000000389e-06, 4.791999999996521e-06, 4.80600000000303e-06, 4.790999999997048e-06, 4.777000000004417e-06, 4.8050000000035564e-06, 4.77800000000389e-06, 4.791999999996521e-06, 4.8200000000026e-06, 4.790999999997048e-06, 4.847000000002266e-06, 4.790999999997048e-06, 4.777000000004417e-06, 4.7639999999973814e-06]</msg>
<status status="PASS" starttime="20201115 22:00:21.275" endtime="20201115 22:00:21.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.264" endtime="20201115 22:00:21.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.288" endtime="20201115 22:00:21.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:21.297" endtime="20201115 22:00:21.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.293" endtime="20201115 22:00:21.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.283" endtime="20201115 22:00:21.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.833" endtime="20201115 22:00:21.323"></status>
</kw>
<msg timestamp="20201115 22:00:21.323" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.346" endtime="20201115 22:00:21.365"></status>
</kw>
<msg timestamp="20201115 22:00:21.366" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.343" endtime="20201115 22:00:21.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.372" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.368" endtime="20201115 22:00:21.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.374" endtime="20201115 22:00:21.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.336" endtime="20201115 22:00:21.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.330" endtime="20201115 22:00:21.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.398" endtime="20201115 22:00:21.739"></status>
</kw>
<msg timestamp="20201115 22:00:21.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042708889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042713694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.395" endtime="20201115 22:00:21.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042708889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042713694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.748" endtime="20201115 22:00:21.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.767" endtime="20201115 22:00:21.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.387" endtime="20201115 22:00:21.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.383" endtime="20201115 22:00:21.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:21.786" level="INFO">${RESULT} = [{'time': 0.042713694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8050000000035564e-06, 'source_diff': 4.8050000000035564e-06}, {'time': 0.042832542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:21.777" endtime="20201115 22:00:21.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:21.816" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:21.788" endtime="20201115 22:00:21.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.828" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:21.825" endtime="20201115 22:00:21.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.833" level="INFO">VALUE: [4.8050000000035564e-06, 4.7089999999985754e-06, 4.777999999996951e-06, 4.8049999999966175e-06, 4.790999999997048e-06, 4.777999999996951e-06, 4.791999999996521e-06, 4.790999999997048e-06, 4.8049999999966175e-06, 4.819000000003126e-06, 4.791999999996521e-06, 4.791999999996521e-06, 4.80600000000303e-06, 4.790999999997048e-06, 4.8049999999966175e-06, 4.7910000000039865e-06, 4.846999999995327e-06, 4.8189999999961874e-06, 4.79200000000346e-06, 4.791999999996521e-06, 4.79200000000346e-06, 4.79200000000346e-06, 4.7910000000039865e-06, 4.777999999996951e-06, 4.79200000000346e-06, 4.790999999997048e-06, 4.791999999996521e-06, 4.805999999996091e-06, 4.77800000000389e-06, 4.80600000000303e-06, 4.80600000000303e-06, 4.80600000000303e-06, 4.80600000000303e-06, 4.80600000000303e-06, 4.791999999996521e-06, 4.8200000000026e-06, 4.777000000004417e-06, 4.8049999999966175e-06, 4.791999999996521e-06, 4.7499999999978115e-06, 4.8049999999966175e-06, 4.80600000000303e-06, 4.8049999999966175e-06, 4.805999999996091e-06, 4.790999999997048e-06, 4.791999999996521e-06, 4.791999999996521e-06, 4.8049999999966175e-06, 4.777999999996951e-06, 4.8200000000026e-06]</msg>
<status status="PASS" starttime="20201115 22:00:21.830" endtime="20201115 22:00:21.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.818" endtime="20201115 22:00:21.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.843" endtime="20201115 22:00:21.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:21.851" endtime="20201115 22:00:21.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.847" endtime="20201115 22:00:21.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.838" endtime="20201115 22:00:21.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.324" endtime="20201115 22:00:21.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.159" endtime="20201115 22:00:21.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.157" endtime="20201115 22:00:21.878"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.883" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.906" endtime="20201115 22:00:21.925"></status>
</kw>
<msg timestamp="20201115 22:00:21.926" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.903" endtime="20201115 22:00:21.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.933" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.929" endtime="20201115 22:00:21.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.935" endtime="20201115 22:00:21.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.895" endtime="20201115 22:00:21.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.889" endtime="20201115 22:00:21.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.959" endtime="20201115 22:00:22.314"></status>
</kw>
<msg timestamp="20201115 22:00:22.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047929, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047933986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:21.955" endtime="20201115 22:00:22.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047929, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047933986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:22.323" endtime="20201115 22:00:22.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.342" endtime="20201115 22:00:22.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.948" endtime="20201115 22:00:22.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.943" endtime="20201115 22:00:22.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:22.359" level="INFO">${RESULT} = [{'time': 0.047933986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.048063083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:22.350" endtime="20201115 22:00:22.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:22.390" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:22.361" endtime="20201115 22:00:22.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.401" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:22.398" endtime="20201115 22:00:22.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.407" level="INFO">VALUE: [4.985999999998492e-06, 4.943999999999782e-06, 4.985999999998492e-06, 4.971999999998922e-06, 4.972000000005861e-06, 5.0000000000050004e-06, 5.02800000000414e-06, 4.971999999998922e-06, 4.985999999998492e-06, 4.972000000005861e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.971999999998922e-06, 4.972000000005861e-06, 4.9999999999980616e-06, 4.943999999999782e-06, 4.9999999999980616e-06, 4.971999999998922e-06, 5.0000000000050004e-06, 4.958000000006291e-06, 5.02800000000414e-06, 5.0000000000050004e-06, 5.0139999999976315e-06, 4.9860000000054305e-06, 4.972000000005861e-06, 5.0139999999976315e-06, 5.0139999999976315e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.9860000000054305e-06, 4.985999999998492e-06, 4.987000000004904e-06, 4.9999999999980616e-06, 4.986999999997965e-06, 4.971999999998922e-06, 5.04200000000371e-06, 4.971999999998922e-06, 5.0000000000050004e-06, 4.9999999999980616e-06, 4.971999999998922e-06, 4.9999999999980616e-06, 4.985999999998492e-06, 4.9860000000054305e-06, 4.9999999999980616e-06, 5.05600000000328e-06, 5.0000000000050004e-06, 5.0139999999976315e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.9860000000054305e-06]</msg>
<status status="PASS" starttime="20201115 22:00:22.403" endtime="20201115 22:00:22.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.392" endtime="20201115 22:00:22.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.416" endtime="20201115 22:00:22.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:22.424" endtime="20201115 22:00:22.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.420" endtime="20201115 22:00:22.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.411" endtime="20201115 22:00:22.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.884" endtime="20201115 22:00:22.450"></status>
</kw>
<msg timestamp="20201115 22:00:22.451" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.474" endtime="20201115 22:00:22.493"></status>
</kw>
<msg timestamp="20201115 22:00:22.494" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.471" endtime="20201115 22:00:22.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.500" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.496" endtime="20201115 22:00:22.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.503" endtime="20201115 22:00:22.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.463" endtime="20201115 22:00:22.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.457" endtime="20201115 22:00:22.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.526" endtime="20201115 22:00:22.880"></status>
</kw>
<msg timestamp="20201115 22:00:22.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042768208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042773208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.523" endtime="20201115 22:00:22.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042768208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042773208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.889" endtime="20201115 22:00:22.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.908" endtime="20201115 22:00:22.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.516" endtime="20201115 22:00:22.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.511" endtime="20201115 22:00:22.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:22.927" level="INFO">${RESULT} = [{'time': 0.042773208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.04290275, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:22.918" endtime="20201115 22:00:22.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:22.957" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:22.929" endtime="20201115 22:00:22.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.973" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:22.971" endtime="20201115 22:00:22.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.979" level="INFO">VALUE: [4.9999999999980616e-06, 4.9310000000066245e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.957999999999352e-06, 4.986999999997965e-06, 4.985999999998492e-06, 4.972000000005861e-06, 5.0000000000050004e-06, 4.972999999998395e-06, 4.985999999998492e-06, 5.01400000000457e-06, 4.973000000005334e-06, 4.985999999998492e-06, 5.0139999999976315e-06, 4.972999999998395e-06, 5.0000000000050004e-06, 5.0000000000050004e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.9860000000054305e-06, 4.972999999998395e-06, 4.916000000000642e-06, 4.9999999999980616e-06, 4.971999999998922e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.971999999998922e-06, 5.0410000000042365e-06, 5.01400000000457e-06, 4.971999999998922e-06, 5.0550000000038064e-06, 5.027000000004667e-06, 4.972000000005861e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.971999999998922e-06, 4.9999999999980616e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 5.0000000000050004e-06, 4.985999999998492e-06, 4.971999999998922e-06, 4.957999999999352e-06, 5.04200000000371e-06, 4.9450000000061944e-06, 4.9999999999980616e-06, 4.9999999999980616e-06, 4.9999999999980616e-06]</msg>
<status status="PASS" starttime="20201115 22:00:22.976" endtime="20201115 22:00:22.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.964" endtime="20201115 22:00:22.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.988" endtime="20201115 22:00:22.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:22.996" endtime="20201115 22:00:23.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.992" endtime="20201115 22:00:23.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.983" endtime="20201115 22:00:23.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.452" endtime="20201115 22:00:23.022"></status>
</kw>
<msg timestamp="20201115 22:00:23.023" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.046" endtime="20201115 22:00:23.065"></status>
</kw>
<msg timestamp="20201115 22:00:23.066" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.043" endtime="20201115 22:00:23.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.072" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.068" endtime="20201115 22:00:23.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.075" endtime="20201115 22:00:23.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.035" endtime="20201115 22:00:23.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.029" endtime="20201115 22:00:23.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.098" endtime="20201115 22:00:23.451"></status>
</kw>
<msg timestamp="20201115 22:00:23.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043052125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043057097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.095" endtime="20201115 22:00:23.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043052125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043057097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.461" endtime="20201115 22:00:23.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.479" endtime="20201115 22:00:23.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.088" endtime="20201115 22:00:23.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.083" endtime="20201115 22:00:23.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:23.499" level="INFO">${RESULT} = [{'time': 0.043057097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972000000005861e-06, 'source_diff': 4.972000000005861e-06}, {'time': 0.043175625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:23.489" endtime="20201115 22:00:23.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:23.530" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:23.501" endtime="20201115 22:00:23.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.541" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:23.538" endtime="20201115 22:00:23.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.546" level="INFO">VALUE: [4.972000000005861e-06, 5.04200000000371e-06, 4.9999999999980616e-06, 4.971999999998922e-06, 4.9999999999980616e-06, 4.985999999998492e-06, 5.0139999999976315e-06, 4.957999999999352e-06, 5.01400000000457e-06, 5.0550000000038064e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 5.0139999999976315e-06, 4.9999999999980616e-06, 5.01400000000457e-06, 4.9449999999992555e-06, 5.041999999996771e-06, 4.971999999998922e-06, 4.971999999998922e-06, 4.985999999998492e-06, 4.971999999998922e-06, 4.986999999997965e-06, 4.985999999998492e-06, 5.0139999999976315e-06, 4.9999999999980616e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.9449999999992555e-06, 4.971999999998922e-06, 4.9999999999980616e-06, 4.9860000000054305e-06, 5.026999999997728e-06, 5.02800000000414e-06, 4.9999999999980616e-06, 5.027999999997201e-06, 5.0549999999968676e-06, 4.985999999998492e-06, 5.0139999999976315e-06, 4.9999999999980616e-06, 4.9860000000054305e-06, 4.9860000000054305e-06, 4.985999999998492e-06, 4.985999999998492e-06, 5.012999999998158e-06, 4.985999999998492e-06, 4.985999999998492e-06, 4.985999999998492e-06, 5.041999999996771e-06, 5.0000000000050004e-06, 4.985999999998492e-06]</msg>
<status status="PASS" starttime="20201115 22:00:23.543" endtime="20201115 22:00:23.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.531" endtime="20201115 22:00:23.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.555" endtime="20201115 22:00:23.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:23.564" endtime="20201115 22:00:23.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.559" endtime="20201115 22:00:23.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.551" endtime="20201115 22:00:23.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.024" endtime="20201115 22:00:23.589"></status>
</kw>
<msg timestamp="20201115 22:00:23.590" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.613" endtime="20201115 22:00:23.632"></status>
</kw>
<msg timestamp="20201115 22:00:23.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.610" endtime="20201115 22:00:23.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.640" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.636" endtime="20201115 22:00:23.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.642" endtime="20201115 22:00:23.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.602" endtime="20201115 22:00:23.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.597" endtime="20201115 22:00:23.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.666" endtime="20201115 22:00:24.007"></status>
</kw>
<msg timestamp="20201115 22:00:24.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042776778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04278175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:23.663" endtime="20201115 22:00:24.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042776778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04278175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:24.017" endtime="20201115 22:00:24.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.036" endtime="20201115 22:00:24.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.655" endtime="20201115 22:00:24.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.650" endtime="20201115 22:00:24.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.055" level="INFO">${RESULT} = [{'time': 0.04278175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.042906917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:24.046" endtime="20201115 22:00:24.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.085" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:24.057" endtime="20201115 22:00:24.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.097" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:24.094" endtime="20201115 22:00:24.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.102" level="INFO">VALUE: [4.971999999998922e-06, 5.01400000000457e-06, 4.971999999998922e-06, 4.916000000000642e-06, 5.041999999996771e-06, 4.9589999999988255e-06, 4.973000000005334e-06, 5.0000000000050004e-06, 5.0139999999976315e-06, 4.9860000000054305e-06, 4.9999999999980616e-06, 5.027999999997201e-06, 5.0000000000050004e-06, 5.04200000000371e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.9999999999980616e-06, 5.055999999996341e-06, 5.04200000000371e-06, 4.9589999999988255e-06, 4.971999999998922e-06, 4.972999999998395e-06, 4.9999999999980616e-06, 4.971999999998922e-06, 5.0000000000050004e-06, 4.972999999998395e-06, 4.9999999999980616e-06, 4.985999999998492e-06, 4.973000000005334e-06, 4.985999999998492e-06, 4.986999999997965e-06, 4.9999999999980616e-06, 5.0000000000050004e-06, 4.971999999998922e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.943999999999782e-06, 5.0139999999976315e-06, 4.985999999998492e-06, 4.971999999998922e-06, 4.985999999998492e-06, 4.9589999999988255e-06, 4.9999999999980616e-06, 4.9999999999980616e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.9999999999980616e-06, 4.957999999999352e-06]</msg>
<status status="PASS" starttime="20201115 22:00:24.099" endtime="20201115 22:00:24.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.087" endtime="20201115 22:00:24.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.111" endtime="20201115 22:00:24.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.120" endtime="20201115 22:00:24.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.115" endtime="20201115 22:00:24.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.107" endtime="20201115 22:00:24.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.591" endtime="20201115 22:00:24.145"></status>
</kw>
<msg timestamp="20201115 22:00:24.146" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.169" endtime="20201115 22:00:24.188"></status>
</kw>
<msg timestamp="20201115 22:00:24.189" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.166" endtime="20201115 22:00:24.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.195" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.191" endtime="20201115 22:00:24.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.198" endtime="20201115 22:00:24.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.158" endtime="20201115 22:00:24.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.153" endtime="20201115 22:00:24.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.222" endtime="20201115 22:00:24.546"></status>
</kw>
<msg timestamp="20201115 22:00:24.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042676472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042681514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.218" endtime="20201115 22:00:24.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042676472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042681514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.550" endtime="20201115 22:00:24.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.559" endtime="20201115 22:00:24.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.211" endtime="20201115 22:00:24.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.206" endtime="20201115 22:00:24.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.569" level="INFO">${RESULT} = [{'time': 0.042681514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.042807611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:24.565" endtime="20201115 22:00:24.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.582" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:24.570" endtime="20201115 22:00:24.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.588" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:24.586" endtime="20201115 22:00:24.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.590" level="INFO">VALUE: [5.041999999996771e-06, 4.943999999999782e-06, 5.012999999998158e-06, 4.971999999998922e-06, 4.972999999998395e-06, 5.0139999999976315e-06, 4.9999999999980616e-06, 5.01400000000457e-06, 4.972999999998395e-06, 5.0139999999976315e-06, 4.971999999998922e-06, 5.055999999996341e-06, 5.0139999999976315e-06, 5.04200000000371e-06, 4.985999999998492e-06, 5.04200000000371e-06, 4.971999999998922e-06, 4.957999999999352e-06, 5.027999999997201e-06, 5.012999999998158e-06, 5.0549999999968676e-06, 5.0139999999976315e-06, 5.01400000000457e-06, 5.01400000000457e-06, 5.0000000000050004e-06, 4.9999999999980616e-06, 5.01400000000457e-06, 4.9999999999980616e-06, 4.9999999999980616e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.985999999998492e-06, 4.986999999997965e-06, 4.985999999998492e-06, 5.0000000000050004e-06, 4.971999999998922e-06, 4.985999999998492e-06, 4.971999999998922e-06, 5.0000000000050004e-06, 4.9999999999980616e-06, 5.0000000000050004e-06, 5.0000000000050004e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.9999999999980616e-06, 4.9999999999980616e-06, 4.9999999999980616e-06, 4.9589999999988255e-06, 4.9999999999980616e-06, 4.9999999999980616e-06]</msg>
<status status="PASS" starttime="20201115 22:00:24.589" endtime="20201115 22:00:24.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.583" endtime="20201115 22:00:24.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.594" endtime="20201115 22:00:24.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.598" endtime="20201115 22:00:24.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.596" endtime="20201115 22:00:24.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.592" endtime="20201115 22:00:24.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.147" endtime="20201115 22:00:24.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.880" endtime="20201115 22:00:24.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.879" endtime="20201115 22:00:24.620"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.622" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.633" endtime="20201115 22:00:24.649"></status>
</kw>
<msg timestamp="20201115 22:00:24.650" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.632" endtime="20201115 22:00:24.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.653" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.651" endtime="20201115 22:00:24.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.654" endtime="20201115 22:00:24.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.628" endtime="20201115 22:00:24.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.625" endtime="20201115 22:00:24.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.666" endtime="20201115 22:00:24.985"></status>
</kw>
<msg timestamp="20201115 22:00:24.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027473194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027478361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.664" endtime="20201115 22:00:24.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027473194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027478361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.995" endtime="20201115 22:00:25.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.014" endtime="20201115 22:00:25.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.661" endtime="20201115 22:00:25.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.658" endtime="20201115 22:00:25.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.031" level="INFO">${RESULT} = [{'time': 0.027478361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.027612708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:25.022" endtime="20201115 22:00:25.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.062" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:25.033" endtime="20201115 22:00:25.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.073" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:25.071" endtime="20201115 22:00:25.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.078" level="INFO">VALUE: [5.167000000000366e-06, 5.194000000000032e-06, 5.180999999999936e-06, 5.153000000000796e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.1949999999995056e-06, 5.180999999999936e-06, 5.153000000000796e-06, 5.180000000000462e-06, 5.237000000001685e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.180000000000462e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.209000000002545e-06, 5.180000000000462e-06, 5.194000000000032e-06, 5.180999999999936e-06, 5.194000000000032e-06, 5.1949999999995056e-06, 5.166000000000892e-06, 5.194000000000032e-06, 5.180000000000462e-06, 5.1949999999995056e-06, 5.180999999999936e-06, 5.125000000001656e-06, 5.262999999998408e-06, 5.111000000002086e-06, 5.180000000000462e-06, 5.166000000000892e-06, 5.180999999999936e-06, 5.2089999999990755e-06, 5.180999999999936e-06, 5.166000000000892e-06, 5.207999999999602e-06, 5.180999999999936e-06, 5.194000000000032e-06, 5.1949999999995056e-06, 5.152999999993857e-06, 5.2089999999990755e-06, 5.221999999999172e-06, 5.180999999999936e-06, 5.180999999999936e-06, 5.153000000000796e-06, 5.166000000000892e-06]</msg>
<status status="PASS" starttime="20201115 22:00:25.075" endtime="20201115 22:00:25.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.064" endtime="20201115 22:00:25.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.087" endtime="20201115 22:00:25.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.096" endtime="20201115 22:00:25.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.092" endtime="20201115 22:00:25.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.083" endtime="20201115 22:00:25.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.623" endtime="20201115 22:00:25.121"></status>
</kw>
<msg timestamp="20201115 22:00:25.122" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.145" endtime="20201115 22:00:25.165"></status>
</kw>
<msg timestamp="20201115 22:00:25.166" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.142" endtime="20201115 22:00:25.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.173" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.168" endtime="20201115 22:00:25.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.175" endtime="20201115 22:00:25.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.135" endtime="20201115 22:00:25.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.129" endtime="20201115 22:00:25.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.199" endtime="20201115 22:00:25.539"></status>
</kw>
<msg timestamp="20201115 22:00:25.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042737944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042743208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.196" endtime="20201115 22:00:25.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042737944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042743208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.548" endtime="20201115 22:00:25.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.566" endtime="20201115 22:00:25.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.188" endtime="20201115 22:00:25.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.184" endtime="20201115 22:00:25.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.586" level="INFO">${RESULT} = [{'time': 0.042743208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.042882903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:25.577" endtime="20201115 22:00:25.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.616" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:25.588" endtime="20201115 22:00:25.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.627" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:25.625" endtime="20201115 22:00:25.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.633" level="INFO">VALUE: [5.2639999999978815e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.180000000000462e-06, 5.194000000000032e-06, 5.167000000000366e-06, 5.194000000000032e-06, 5.167000000000366e-06, 5.1949999999995056e-06, 5.207999999999602e-06, 5.208000000006541e-06, 5.1949999999995056e-06, 5.180999999999936e-06, 5.180999999999936e-06, 5.111000000002086e-06, 5.207999999999602e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.180999999999936e-06, 5.180999999999936e-06, 5.2089999999990755e-06, 5.165999999993953e-06, 5.194000000000032e-06, 5.153000000000796e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.1950000000064445e-06, 5.180000000000462e-06, 5.180000000000462e-06, 5.167000000000366e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.209000000006014e-06, 5.180999999999936e-06, 5.207999999999602e-06, 5.166000000000892e-06, 5.152000000001322e-06, 5.180999999999936e-06, 5.194000000000032e-06, 5.180000000000462e-06, 5.166000000000892e-06, 5.153000000000796e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.1949999999995056e-06, 5.180000000000462e-06, 5.180999999999936e-06, 5.207999999999602e-06, 5.2089999999990755e-06]</msg>
<status status="PASS" starttime="20201115 22:00:25.630" endtime="20201115 22:00:25.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.618" endtime="20201115 22:00:25.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.642" endtime="20201115 22:00:25.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.650" endtime="20201115 22:00:25.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.646" endtime="20201115 22:00:25.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.637" endtime="20201115 22:00:25.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.123" endtime="20201115 22:00:25.676"></status>
</kw>
<msg timestamp="20201115 22:00:25.676" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.701" endtime="20201115 22:00:25.721"></status>
</kw>
<msg timestamp="20201115 22:00:25.722" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.696" endtime="20201115 22:00:25.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.729" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.725" endtime="20201115 22:00:25.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.732" endtime="20201115 22:00:25.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.689" endtime="20201115 22:00:25.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.683" endtime="20201115 22:00:25.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.757" endtime="20201115 22:00:26.097"></status>
</kw>
<msg timestamp="20201115 22:00:26.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043581833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043587056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.753" endtime="20201115 22:00:26.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043581833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043587056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.106" endtime="20201115 22:00:26.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.124" endtime="20201115 22:00:26.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.746" endtime="20201115 22:00:26.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.741" endtime="20201115 22:00:26.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.144" level="INFO">${RESULT} = [{'time': 0.043587056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.043723889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:26.134" endtime="20201115 22:00:26.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.174" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:26.146" endtime="20201115 22:00:26.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.185" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:26.183" endtime="20201115 22:00:26.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.191" level="INFO">VALUE: [5.222999999998645e-06, 5.207999999999602e-06, 5.153000000000796e-06, 5.221999999999172e-06, 5.180000000000462e-06, 5.262999999998408e-06, 5.180999999999936e-06, 5.180000000000462e-06, 5.1949999999995056e-06, 5.180999999999936e-06, 5.207999999999602e-06, 5.209000000006014e-06, 5.180999999999936e-06, 5.180000000000462e-06, 5.166999999993427e-06, 5.194000000000032e-06, 5.167000000000366e-06, 5.180000000000462e-06, 5.2499999999983116e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.221999999999172e-06, 5.180999999999936e-06, 5.180000000000462e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.180000000000462e-06, 5.2089999999990755e-06, 5.180000000000462e-06, 5.124999999994717e-06, 5.2089999999990755e-06, 5.2089999999990755e-06, 5.207999999999602e-06, 5.180999999999936e-06, 5.180000000000462e-06, 5.1950000000064445e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.167000000000366e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.235999999998742e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.221999999999172e-06, 5.1949999999995056e-06]</msg>
<status status="PASS" starttime="20201115 22:00:26.187" endtime="20201115 22:00:26.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.176" endtime="20201115 22:00:26.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.199" endtime="20201115 22:00:26.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:26.208" endtime="20201115 22:00:26.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.204" endtime="20201115 22:00:26.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.195" endtime="20201115 22:00:26.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.677" endtime="20201115 22:00:26.234"></status>
</kw>
<msg timestamp="20201115 22:00:26.235" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.258" endtime="20201115 22:00:26.278"></status>
</kw>
<msg timestamp="20201115 22:00:26.279" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.255" endtime="20201115 22:00:26.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.285" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.281" endtime="20201115 22:00:26.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.288" endtime="20201115 22:00:26.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.247" endtime="20201115 22:00:26.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.242" endtime="20201115 22:00:26.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.311" endtime="20201115 22:00:26.652"></status>
</kw>
<msg timestamp="20201115 22:00:26.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043595556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043600736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.308" endtime="20201115 22:00:26.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043595556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043600736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.662" endtime="20201115 22:00:26.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.680" endtime="20201115 22:00:26.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.301" endtime="20201115 22:00:26.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.296" endtime="20201115 22:00:26.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.701" level="INFO">${RESULT} = [{'time': 0.043600736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.04373175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:26.692" endtime="20201115 22:00:26.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.732" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:26.703" endtime="20201115 22:00:26.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.743" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:26.741" endtime="20201115 22:00:26.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.749" level="INFO">VALUE: [5.180000000000462e-06, 5.194000000000032e-06, 5.180000000000462e-06, 5.180999999999936e-06, 5.180000000000462e-06, 5.194000000000032e-06, 5.2500000000052505e-06, 5.180000000000462e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.222999999998645e-06, 5.207999999999602e-06, 5.235999999998742e-06, 5.207999999999602e-06, 5.139000000001226e-06, 5.1949999999995056e-06, 5.180999999999936e-06, 5.180000000000462e-06, 5.194000000000032e-06, 5.180999999999936e-06, 5.167000000000366e-06, 5.180999999999936e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.180000000000462e-06, 5.207999999999602e-06, 5.180000000000462e-06, 5.153000000000796e-06, 5.180000000000462e-06, 5.207999999999602e-06, 5.1949999999995056e-06, 5.180000000000462e-06, 5.167000000000366e-06, 5.194000000000032e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.180000000000462e-06, 5.125000000001656e-06, 5.1949999999995056e-06, 5.207999999999602e-06, 5.180000000000462e-06, 5.207999999999602e-06, 5.180999999999936e-06, 5.180000000000462e-06]</msg>
<status status="PASS" starttime="20201115 22:00:26.745" endtime="20201115 22:00:26.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.734" endtime="20201115 22:00:26.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.758" endtime="20201115 22:00:26.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:26.768" endtime="20201115 22:00:26.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.763" endtime="20201115 22:00:26.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.753" endtime="20201115 22:00:26.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.236" endtime="20201115 22:00:26.794"></status>
</kw>
<msg timestamp="20201115 22:00:26.794" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.818" endtime="20201115 22:00:26.837"></status>
</kw>
<msg timestamp="20201115 22:00:26.838" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.814" endtime="20201115 22:00:26.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.845" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.841" endtime="20201115 22:00:26.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.847" endtime="20201115 22:00:26.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.807" endtime="20201115 22:00:26.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.801" endtime="20201115 22:00:26.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.871" endtime="20201115 22:00:27.212"></status>
</kw>
<msg timestamp="20201115 22:00:27.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043408444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043413611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.867" endtime="20201115 22:00:27.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043408444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043413611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.221" endtime="20201115 22:00:27.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.240" endtime="20201115 22:00:27.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.860" endtime="20201115 22:00:27.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.855" endtime="20201115 22:00:27.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.259" level="INFO">${RESULT} = [{'time': 0.043413611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.043543153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:27.250" endtime="20201115 22:00:27.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.290" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:27.261" endtime="20201115 22:00:27.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.301" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:27.298" endtime="20201115 22:00:27.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.306" level="INFO">VALUE: [5.167000000000366e-06, 5.180999999999936e-06, 5.2089999999990755e-06, 5.167000000000366e-06, 5.180000000000462e-06, 5.180000000000462e-06, 5.1949999999995056e-06, 5.152999999993857e-06, 5.223000000005584e-06, 5.180000000000462e-06, 5.180000000000462e-06, 5.207999999999602e-06, 5.167000000000366e-06, 5.180999999999936e-06, 5.2089999999990755e-06, 5.2089999999990755e-06, 5.1949999999995056e-06, 5.167000000000366e-06, 5.180000000000462e-06, 5.180000000000462e-06, 5.180999999999936e-06, 5.194000000000032e-06, 5.139000000001226e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.180000000000462e-06, 5.207999999999602e-06, 5.1949999999995056e-06, 5.1949999999995056e-06, 5.207999999999602e-06, 5.180000000000462e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.180000000000462e-06, 5.1949999999995056e-06, 5.2089999999990755e-06, 5.180999999999936e-06, 5.180999999999936e-06, 5.11200000000156e-06, 5.180999999999936e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.180000000000462e-06, 5.180000000000462e-06, 5.1949999999995056e-06, 5.237000000005154e-06, 5.166000000000892e-06, 5.166000000000892e-06, 5.194000000000032e-06, 5.2089999999990755e-06]</msg>
<status status="PASS" starttime="20201115 22:00:27.303" endtime="20201115 22:00:27.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.291" endtime="20201115 22:00:27.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.316" endtime="20201115 22:00:27.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.324" endtime="20201115 22:00:27.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.320" endtime="20201115 22:00:27.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.311" endtime="20201115 22:00:27.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.796" endtime="20201115 22:00:27.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.621" endtime="20201115 22:00:27.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.620" endtime="20201115 22:00:27.351"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.356" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.379" endtime="20201115 22:00:27.399"></status>
</kw>
<msg timestamp="20201115 22:00:27.400" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.376" endtime="20201115 22:00:27.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.406" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.402" endtime="20201115 22:00:27.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.409" endtime="20201115 22:00:27.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.368" endtime="20201115 22:00:27.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.363" endtime="20201115 22:00:27.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.433" endtime="20201115 22:00:27.774"></status>
</kw>
<msg timestamp="20201115 22:00:27.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048467181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048472556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.429" endtime="20201115 22:00:27.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048467181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048472556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.783" endtime="20201115 22:00:27.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.802" endtime="20201115 22:00:27.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.422" endtime="20201115 22:00:27.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.417" endtime="20201115 22:00:27.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.821" level="INFO">${RESULT} = [{'time': 0.048472556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.048611069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:27.811" endtime="20201115 22:00:27.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.851" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:27.823" endtime="20201115 22:00:27.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.862" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:27.860" endtime="20201115 22:00:27.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.869" level="INFO">VALUE: [5.375000000001906e-06, 5.304999999997118e-06, 5.388999999994537e-06, 5.388999999994537e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.374999999994967e-06, 5.403000000001046e-06, 5.403000000001046e-06, 5.375000000001906e-06, 5.416999999993677e-06, 5.360999999995397e-06, 5.388999999994537e-06, 5.417000000000616e-06, 5.305999999996591e-06, 5.431000000000186e-06, 5.375000000001906e-06, 5.387999999995063e-06, 5.389000000001476e-06, 5.388999999994537e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.360999999995397e-06, 5.416999999993677e-06, 5.361000000002336e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.417000000000616e-06, 5.374999999994967e-06, 5.389000000001476e-06, 5.388999999994537e-06, 5.374999999994967e-06, 5.402999999994107e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.319999999996161e-06, 5.375000000001906e-06, 5.333000000003196e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.360999999995397e-06, 5.402999999994107e-06, 5.361000000002336e-06, 5.403000000001046e-06, 5.401999999994633e-06, 5.374999999994967e-06, 5.388999999994537e-06]</msg>
<status status="PASS" starttime="20201115 22:00:27.865" endtime="20201115 22:00:27.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.853" endtime="20201115 22:00:27.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.878" endtime="20201115 22:00:27.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.886" endtime="20201115 22:00:27.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.882" endtime="20201115 22:00:27.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.873" endtime="20201115 22:00:27.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.357" endtime="20201115 22:00:27.912"></status>
</kw>
<msg timestamp="20201115 22:00:27.912" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.936" endtime="20201115 22:00:27.955"></status>
</kw>
<msg timestamp="20201115 22:00:27.957" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.932" endtime="20201115 22:00:27.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.963" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.959" endtime="20201115 22:00:27.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.965" endtime="20201115 22:00:27.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.925" endtime="20201115 22:00:27.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.919" endtime="20201115 22:00:27.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.989" endtime="20201115 22:00:28.309"></status>
</kw>
<msg timestamp="20201115 22:00:28.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043133194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043138597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.986" endtime="20201115 22:00:28.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043133194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043138597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.318" endtime="20201115 22:00:28.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.337" endtime="20201115 22:00:28.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.978" endtime="20201115 22:00:28.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.973" endtime="20201115 22:00:28.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.356" level="INFO">${RESULT} = [{'time': 0.043138597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.043277486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:28.347" endtime="20201115 22:00:28.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.386" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:28.358" endtime="20201115 22:00:28.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.402" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:28.400" endtime="20201115 22:00:28.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.408" level="INFO">VALUE: [5.403000000001046e-06, 5.346999999995827e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.319999999996161e-06, 5.403000000001046e-06, 5.3200000000031e-06, 5.417000000000616e-06, 5.431000000000186e-06, 5.374999999994967e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.374999999994967e-06, 5.33400000000267e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.388999999994537e-06, 5.360999999995397e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.36200000000181e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.33400000000267e-06, 5.361000000002336e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.388000000002002e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.374999999994967e-06]</msg>
<status status="PASS" starttime="20201115 22:00:28.405" endtime="20201115 22:00:28.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.393" endtime="20201115 22:00:28.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.417" endtime="20201115 22:00:28.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.425" endtime="20201115 22:00:28.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.421" endtime="20201115 22:00:28.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.412" endtime="20201115 22:00:28.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.914" endtime="20201115 22:00:28.451"></status>
</kw>
<msg timestamp="20201115 22:00:28.451" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.475" endtime="20201115 22:00:28.495"></status>
</kw>
<msg timestamp="20201115 22:00:28.496" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.471" endtime="20201115 22:00:28.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.498" endtime="20201115 22:00:28.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.505" endtime="20201115 22:00:28.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.464" endtime="20201115 22:00:28.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.458" endtime="20201115 22:00:28.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.528" endtime="20201115 22:00:28.868"></status>
</kw>
<msg timestamp="20201115 22:00:28.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042824903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042830278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.525" endtime="20201115 22:00:28.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042824903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042830278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.877" endtime="20201115 22:00:28.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.896" endtime="20201115 22:00:28.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.518" endtime="20201115 22:00:28.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.513" endtime="20201115 22:00:28.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.917" level="INFO">${RESULT} = [{'time': 0.042830278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.042968208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:28.908" endtime="20201115 22:00:28.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.948" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:28.920" endtime="20201115 22:00:28.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.959" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:28.957" endtime="20201115 22:00:28.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.964" level="INFO">VALUE: [5.375000000001906e-06, 5.402000000001572e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.374999999994967e-06, 5.375000000001906e-06, 5.374999999994967e-06, 5.346999999995827e-06, 5.388999999994537e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.360999999995397e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.374999999994967e-06, 5.374999999994967e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.374999999994967e-06, 5.360999999995397e-06, 5.361000000002336e-06, 5.361000000002336e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.403000000001046e-06, 5.388999999994537e-06, 5.346999999995827e-06, 5.417000000000616e-06, 5.375000000001906e-06, 5.374999999994967e-06, 5.361000000002336e-06, 5.403000000001046e-06, 5.361000000002336e-06, 5.402000000001572e-06, 5.389000000001476e-06, 5.388999999994537e-06, 5.402999999994107e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.360999999995397e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.361000000002336e-06]</msg>
<status status="PASS" starttime="20201115 22:00:28.961" endtime="20201115 22:00:28.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.950" endtime="20201115 22:00:28.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.973" endtime="20201115 22:00:28.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.982" endtime="20201115 22:00:29.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.977" endtime="20201115 22:00:29.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.969" endtime="20201115 22:00:29.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.452" endtime="20201115 22:00:29.008"></status>
</kw>
<msg timestamp="20201115 22:00:29.008" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.031" endtime="20201115 22:00:29.053"></status>
</kw>
<msg timestamp="20201115 22:00:29.054" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.028" endtime="20201115 22:00:29.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.060" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.056" endtime="20201115 22:00:29.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.062" endtime="20201115 22:00:29.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.021" endtime="20201115 22:00:29.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.015" endtime="20201115 22:00:29.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.086" endtime="20201115 22:00:29.426"></status>
</kw>
<msg timestamp="20201115 22:00:29.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043406583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043411986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.083" endtime="20201115 22:00:29.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043406583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043411986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.436" endtime="20201115 22:00:29.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.454" endtime="20201115 22:00:29.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.075" endtime="20201115 22:00:29.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.071" endtime="20201115 22:00:29.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:29.474" level="INFO">${RESULT} = [{'time': 0.043411986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.043551306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:29.465" endtime="20201115 22:00:29.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:29.504" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:29.476" endtime="20201115 22:00:29.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.515" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:29.513" endtime="20201115 22:00:29.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.521" level="INFO">VALUE: [5.403000000001046e-06, 5.388999999994537e-06, 5.388999999994537e-06, 5.347999999995301e-06, 5.374999999994967e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.402999999994107e-06, 5.389000000001476e-06, 5.402000000001572e-06, 5.402000000001572e-06, 5.374999999994967e-06, 5.388999999994537e-06, 5.361000000002336e-06, 5.375000000001906e-06, 5.416000000001142e-06, 5.388999999994537e-06, 5.374999999994967e-06, 5.360999999995397e-06, 5.374999999994967e-06, 5.361000000002336e-06, 5.374999999994967e-06, 5.388000000002002e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.332999999996257e-06, 5.403000000001046e-06, 5.417000000000616e-06, 5.375000000001906e-06, 5.332999999996257e-06, 5.389000000001476e-06, 5.388999999994537e-06, 5.389000000001476e-06, 5.3200000000031e-06, 5.389000000001476e-06, 5.388999999994537e-06, 5.389000000001476e-06, 5.361000000002336e-06, 5.319000000003626e-06, 5.388999999994537e-06, 5.375000000001906e-06, 5.388000000002002e-06, 5.347000000002766e-06, 5.347000000002766e-06]</msg>
<status status="PASS" starttime="20201115 22:00:29.517" endtime="20201115 22:00:29.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.506" endtime="20201115 22:00:29.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.529" endtime="20201115 22:00:29.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:29.538" endtime="20201115 22:00:29.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.534" endtime="20201115 22:00:29.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.525" endtime="20201115 22:00:29.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.009" endtime="20201115 22:00:29.563"></status>
</kw>
<msg timestamp="20201115 22:00:29.564" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.587" endtime="20201115 22:00:29.608"></status>
</kw>
<msg timestamp="20201115 22:00:29.609" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.584" endtime="20201115 22:00:29.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.615" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.611" endtime="20201115 22:00:29.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.618" endtime="20201115 22:00:29.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.577" endtime="20201115 22:00:29.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.571" endtime="20201115 22:00:29.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.641" endtime="20201115 22:00:29.984"></status>
</kw>
<msg timestamp="20201115 22:00:29.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042824722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042830056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.638" endtime="20201115 22:00:29.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042824722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042830056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.994" endtime="20201115 22:00:30.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.013" endtime="20201115 22:00:30.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.631" endtime="20201115 22:00:30.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.626" endtime="20201115 22:00:30.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.033" level="INFO">${RESULT} = [{'time': 0.042830056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.333999999995731e-06, 'source_diff': 5.333999999995731e-06}, {'time': 0.042974208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:30.023" endtime="20201115 22:00:30.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.063" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:30.035" endtime="20201115 22:00:30.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.074" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:30.072" endtime="20201115 22:00:30.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.080" level="INFO">VALUE: [5.333999999995731e-06, 5.389000000001476e-06, 5.388999999994537e-06, 5.375000000001906e-06, 5.387999999995063e-06, 5.402000000001572e-06, 5.361000000002336e-06, 5.388999999994537e-06, 5.375000000001906e-06, 5.360999999995397e-06, 5.361000000002336e-06, 5.403000000001046e-06, 5.389000000001476e-06, 5.430000000000712e-06, 5.361000000002336e-06, 5.30600000000353e-06, 5.361000000002336e-06, 5.374999999994967e-06, 5.403000000001046e-06, 5.375000000001906e-06, 5.389000000001476e-06, 5.403000000001046e-06, 5.389000000001476e-06, 5.333000000003196e-06, 5.375000000001906e-06, 5.387999999995063e-06, 5.361000000002336e-06, 5.389000000001476e-06, 5.374999999994967e-06, 5.388999999994537e-06, 5.375000000001906e-06, 5.346999999995827e-06, 5.388999999994537e-06, 5.457999999999852e-06, 5.346999999995827e-06, 5.402000000001572e-06, 5.389000000001476e-06, 5.375000000001906e-06, 5.388000000002002e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.333000000003196e-06, 5.403000000001046e-06, 5.375000000001906e-06, 5.431000000000186e-06, 5.34800000000224e-06, 5.375000000001906e-06, 5.388000000002002e-06, 5.389000000001476e-06, 5.389000000001476e-06]</msg>
<status status="PASS" starttime="20201115 22:00:30.077" endtime="20201115 22:00:30.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.065" endtime="20201115 22:00:30.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.089" endtime="20201115 22:00:30.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.097" endtime="20201115 22:00:30.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.093" endtime="20201115 22:00:30.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.084" endtime="20201115 22:00:30.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.565" endtime="20201115 22:00:30.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.354" endtime="20201115 22:00:30.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.352" endtime="20201115 22:00:30.124"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.129" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.152" endtime="20201115 22:00:30.172"></status>
</kw>
<msg timestamp="20201115 22:00:30.173" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.149" endtime="20201115 22:00:30.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.180" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.176" endtime="20201115 22:00:30.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.182" endtime="20201115 22:00:30.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.142" endtime="20201115 22:00:30.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.136" endtime="20201115 22:00:30.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.207" endtime="20201115 22:00:30.550"></status>
</kw>
<msg timestamp="20201115 22:00:30.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048639139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048644722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.203" endtime="20201115 22:00:30.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048639139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048644722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.559" endtime="20201115 22:00:30.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.578" endtime="20201115 22:00:30.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.196" endtime="20201115 22:00:30.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.191" endtime="20201115 22:00:30.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.596" level="INFO">${RESULT} = [{'time': 0.048644722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.583000000003446e-06, 'source_diff': 5.583000000003446e-06}, {'time': 0.048794708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:30.587" endtime="20201115 22:00:30.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.626" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:30.598" endtime="20201115 22:00:30.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.637" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:30.635" endtime="20201115 22:00:30.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.643" level="INFO">VALUE: [5.583000000003446e-06, 5.582999999996507e-06, 5.582999999996507e-06, 5.5689999999969375e-06, 5.555999999996841e-06, 5.582999999996507e-06, 5.569000000003876e-06, 5.5689999999969375e-06, 5.554999999997368e-06, 5.57000000000335e-06, 5.5689999999969375e-06, 5.582999999996507e-06, 5.5689999999969375e-06, 5.639000000001726e-06, 5.5689999999969375e-06, 5.583000000003446e-06, 5.58400000000292e-06, 5.583000000003446e-06, 5.597000000003016e-06, 5.5550000000043065e-06, 5.55600000000378e-06, 5.555999999996841e-06, 5.582999999996507e-06, 5.652000000001822e-06, 5.5139999999981315e-06, 5.597000000003016e-06, 5.652000000001822e-06, 5.582999999996507e-06, 5.5689999999969375e-06, 5.583999999995981e-06, 5.5689999999969375e-06, 5.554999999997368e-06, 5.583000000003446e-06, 5.555999999996841e-06, 5.554999999997368e-06, 5.583000000003446e-06, 5.5689999999969375e-06, 5.582999999996507e-06, 5.569000000003876e-06, 5.582999999996507e-06, 5.597999999995551e-06, 5.569999999996411e-06, 5.596999999996077e-06, 5.5689999999969375e-06, 5.5139999999981315e-06, 5.583000000003446e-06, 5.58400000000292e-06, 5.527999999997701e-06, 5.583000000003446e-06, 5.582999999996507e-06]</msg>
<status status="PASS" starttime="20201115 22:00:30.640" endtime="20201115 22:00:30.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.628" endtime="20201115 22:00:30.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.652" endtime="20201115 22:00:30.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.660" endtime="20201115 22:00:30.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.656" endtime="20201115 22:00:30.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.647" endtime="20201115 22:00:30.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.130" endtime="20201115 22:00:30.686"></status>
</kw>
<msg timestamp="20201115 22:00:30.686" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.710" endtime="20201115 22:00:30.730"></status>
</kw>
<msg timestamp="20201115 22:00:30.732" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.706" endtime="20201115 22:00:30.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.738" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.734" endtime="20201115 22:00:30.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.741" endtime="20201115 22:00:30.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.699" endtime="20201115 22:00:30.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.693" endtime="20201115 22:00:30.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.765" endtime="20201115 22:00:31.107"></status>
</kw>
<msg timestamp="20201115 22:00:31.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043032069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043037708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.761" endtime="20201115 22:00:31.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043032069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043037708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.116" endtime="20201115 22:00:31.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.134" endtime="20201115 22:00:31.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.754" endtime="20201115 22:00:31.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.749" endtime="20201115 22:00:31.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.156" level="INFO">${RESULT} = [{'time': 0.043037708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.043197431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:31.147" endtime="20201115 22:00:31.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.186" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:31.158" endtime="20201115 22:00:31.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.197" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:31.195" endtime="20201115 22:00:31.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.203" level="INFO">VALUE: [5.639000000001726e-06, 5.58400000000292e-06, 5.55600000000378e-06, 5.57000000000335e-06, 5.527999999997701e-06, 5.5689999999969375e-06, 5.582999999996507e-06, 5.597000000003016e-06, 5.57000000000335e-06, 5.583000000003446e-06, 5.5689999999969375e-06, 5.569000000003876e-06, 5.569999999996411e-06, 5.57000000000335e-06, 5.569999999996411e-06, 5.569999999996411e-06, 5.58400000000292e-06, 5.582999999996507e-06, 5.639000000001726e-06, 5.55600000000378e-06, 5.653000000001296e-06, 5.5550000000043065e-06, 5.582999999996507e-06, 5.583999999995981e-06, 5.583000000003446e-06, 5.569000000003876e-06, 5.583000000003446e-06, 5.55600000000378e-06, 5.583999999995981e-06, 5.597000000003016e-06, 5.5689999999969375e-06, 5.569999999996411e-06, 5.5689999999969375e-06, 5.596999999996077e-06, 5.58400000000292e-06, 5.625000000002156e-06, 5.583000000003446e-06, 5.526999999998228e-06, 5.639000000001726e-06, 5.583999999995981e-06, 5.57000000000335e-06, 5.583000000003446e-06, 5.569999999996411e-06, 5.596999999996077e-06, 5.583000000003446e-06, 5.569000000003876e-06, 5.569999999996411e-06, 5.569000000003876e-06, 5.583999999995981e-06, 5.57000000000335e-06]</msg>
<status status="PASS" starttime="20201115 22:00:31.200" endtime="20201115 22:00:31.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.188" endtime="20201115 22:00:31.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.212" endtime="20201115 22:00:31.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:31.220" endtime="20201115 22:00:31.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.216" endtime="20201115 22:00:31.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.207" endtime="20201115 22:00:31.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.687" endtime="20201115 22:00:31.246"></status>
</kw>
<msg timestamp="20201115 22:00:31.246" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.271" endtime="20201115 22:00:31.292"></status>
</kw>
<msg timestamp="20201115 22:00:31.293" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.266" endtime="20201115 22:00:31.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.299" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.295" endtime="20201115 22:00:31.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.301" endtime="20201115 22:00:31.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.259" endtime="20201115 22:00:31.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.253" endtime="20201115 22:00:31.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.325" endtime="20201115 22:00:31.646"></status>
</kw>
<msg timestamp="20201115 22:00:31.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043626694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043632264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.322" endtime="20201115 22:00:31.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043626694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043632264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.656" endtime="20201115 22:00:31.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.674" endtime="20201115 22:00:31.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.314" endtime="20201115 22:00:31.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.310" endtime="20201115 22:00:31.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.693" level="INFO">${RESULT} = [{'time': 0.043632264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.569999999996411e-06, 'source_diff': 5.569999999996411e-06}, {'time': 0.043791194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:31.684" endtime="20201115 22:00:31.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.724" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:31.695" endtime="20201115 22:00:31.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.735" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:31.733" endtime="20201115 22:00:31.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.741" level="INFO">VALUE: [5.569999999996411e-06, 5.5689999999969375e-06, 5.582999999996507e-06, 5.583999999995981e-06, 5.597000000003016e-06, 5.57000000000335e-06, 5.583000000003446e-06, 5.597000000003016e-06, 5.555999999996841e-06, 5.625000000002156e-06, 5.540999999997798e-06, 5.569999999996411e-06, 5.583000000003446e-06, 5.57000000000335e-06, 5.582999999996507e-06, 5.57000000000335e-06, 5.5689999999969375e-06, 5.5550000000043065e-06, 5.58400000000292e-06, 5.597999999995551e-06, 5.5139999999981315e-06, 5.55600000000378e-06, 5.610999999995647e-06, 5.569000000003876e-06, 5.527999999997701e-06, 5.5689999999969375e-06, 5.596999999996077e-06, 5.597000000003016e-06, 5.583000000003446e-06, 5.57000000000335e-06, 5.55600000000378e-06, 5.582999999996507e-06, 5.611000000002586e-06, 5.582999999996507e-06, 5.541999999997271e-06, 5.597000000003016e-06, 5.527999999997701e-06, 5.58400000000292e-06, 5.58400000000292e-06, 5.583000000003446e-06, 5.54200000000421e-06, 5.541999999997271e-06, 5.5689999999969375e-06, 5.583999999995981e-06, 5.57000000000335e-06, 5.555999999996841e-06, 5.582999999996507e-06, 5.639000000001726e-06, 5.57000000000335e-06, 5.582999999996507e-06]</msg>
<status status="PASS" starttime="20201115 22:00:31.737" endtime="20201115 22:00:31.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.726" endtime="20201115 22:00:31.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.750" endtime="20201115 22:00:31.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:31.758" endtime="20201115 22:00:31.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.754" endtime="20201115 22:00:31.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.745" endtime="20201115 22:00:31.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.248" endtime="20201115 22:00:31.784"></status>
</kw>
<msg timestamp="20201115 22:00:31.784" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.808" endtime="20201115 22:00:31.828"></status>
</kw>
<msg timestamp="20201115 22:00:31.829" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.805" endtime="20201115 22:00:31.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.836" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.832" endtime="20201115 22:00:31.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.838" endtime="20201115 22:00:31.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.797" endtime="20201115 22:00:31.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.792" endtime="20201115 22:00:31.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.862" endtime="20201115 22:00:32.202"></status>
</kw>
<msg timestamp="20201115 22:00:32.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043796667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043802236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.858" endtime="20201115 22:00:32.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043796667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043802236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.211" endtime="20201115 22:00:32.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.229" endtime="20201115 22:00:32.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.851" endtime="20201115 22:00:32.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.846" endtime="20201115 22:00:32.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:32.248" level="INFO">${RESULT} = [{'time': 0.043802236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.569000000003876e-06, 'source_diff': 5.569000000003876e-06}, {'time': 0.04395875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:32.239" endtime="20201115 22:00:32.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.279" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:32.251" endtime="20201115 22:00:32.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.290" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:32.288" endtime="20201115 22:00:32.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.295" level="INFO">VALUE: [5.569000000003876e-06, 5.624999999995217e-06, 5.583000000003446e-06, 5.596999999996077e-06, 5.569000000003876e-06, 5.583000000003446e-06, 5.5550000000043065e-06, 5.5689999999969375e-06, 5.583000000003446e-06, 5.596999999996077e-06, 5.583000000003446e-06, 5.583999999995981e-06, 5.596999999996077e-06, 5.582999999996507e-06, 5.5689999999969375e-06, 5.597000000003016e-06, 5.625000000002156e-06, 5.5689999999969375e-06, 5.541999999997271e-06, 5.5689999999969375e-06, 5.5689999999969375e-06, 5.583000000003446e-06, 5.583000000003446e-06, 5.58400000000292e-06, 5.569999999996411e-06, 5.569000000003876e-06, 5.582999999996507e-06, 5.5689999999969375e-06, 5.582999999996507e-06, 5.597000000003016e-06, 5.611000000002586e-06, 5.583000000003446e-06, 5.569999999996411e-06, 5.583000000003446e-06, 5.57000000000335e-06, 5.499999999998562e-06, 5.555999999996841e-06, 5.569999999996411e-06, 5.569000000003876e-06, 5.58400000000292e-06, 5.583000000003446e-06, 5.554999999997368e-06, 5.583000000003446e-06, 5.569999999996411e-06, 5.569999999996411e-06, 5.582999999996507e-06, 5.596999999996077e-06, 5.596999999996077e-06, 5.596999999996077e-06, 5.5689999999969375e-06]</msg>
<status status="PASS" starttime="20201115 22:00:32.292" endtime="20201115 22:00:32.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.281" endtime="20201115 22:00:32.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.304" endtime="20201115 22:00:32.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.314" endtime="20201115 22:00:32.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.309" endtime="20201115 22:00:32.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.300" endtime="20201115 22:00:32.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.786" endtime="20201115 22:00:32.339"></status>
</kw>
<msg timestamp="20201115 22:00:32.340" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.363" endtime="20201115 22:00:32.384"></status>
</kw>
<msg timestamp="20201115 22:00:32.385" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.360" endtime="20201115 22:00:32.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.391" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.387" endtime="20201115 22:00:32.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.394" endtime="20201115 22:00:32.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.352" endtime="20201115 22:00:32.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.347" endtime="20201115 22:00:32.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.417" endtime="20201115 22:00:32.758"></status>
</kw>
<msg timestamp="20201115 22:00:32.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042883986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042889472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.414" endtime="20201115 22:00:32.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042883986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042889472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.767" endtime="20201115 22:00:32.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.785" endtime="20201115 22:00:32.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.407" endtime="20201115 22:00:32.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.402" endtime="20201115 22:00:32.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:32.804" level="INFO">${RESULT} = [{'time': 0.042889472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.043043431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:32.795" endtime="20201115 22:00:32.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.835" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:32.807" endtime="20201115 22:00:32.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.846" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:32.844" endtime="20201115 22:00:32.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.851" level="INFO">VALUE: [5.485999999998992e-06, 5.58400000000292e-06, 5.597000000003016e-06, 5.5550000000043065e-06, 5.582999999996507e-06, 5.596999999996077e-06, 5.569000000003876e-06, 5.582999999996507e-06, 5.554999999997368e-06, 5.554999999997368e-06, 5.569000000003876e-06, 5.58400000000292e-06, 5.55600000000378e-06, 5.596999999996077e-06, 5.5689999999969375e-06, 5.5139999999981315e-06, 5.5689999999969375e-06, 5.59800000000249e-06, 5.583999999995981e-06, 5.59800000000249e-06, 5.58400000000292e-06, 5.639000000001726e-06, 5.625000000002156e-06, 5.583000000003446e-06, 5.582999999996507e-06, 5.554999999997368e-06, 5.569999999996411e-06, 5.569999999996411e-06, 5.624999999995217e-06, 5.52800000000464e-06, 5.569000000003876e-06, 5.57000000000335e-06, 5.597000000003016e-06, 5.499999999998562e-06, 5.638000000002252e-06, 5.569000000003876e-06, 5.5689999999969375e-06, 5.583999999995981e-06, 5.5689999999969375e-06, 5.555999999996841e-06, 5.5550000000043065e-06, 5.582999999996507e-06, 5.583000000003446e-06, 5.569999999996411e-06, 5.527999999997701e-06, 5.5689999999969375e-06, 5.555999999996841e-06, 5.597000000003016e-06, 5.5689999999969375e-06, 5.583000000003446e-06]</msg>
<status status="PASS" starttime="20201115 22:00:32.848" endtime="20201115 22:00:32.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.837" endtime="20201115 22:00:32.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.861" endtime="20201115 22:00:32.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.870" endtime="20201115 22:00:32.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.865" endtime="20201115 22:00:32.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.856" endtime="20201115 22:00:32.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.341" endtime="20201115 22:00:32.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.126" endtime="20201115 22:00:32.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.125" endtime="20201115 22:00:32.896"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.901" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.925" endtime="20201115 22:00:32.945"></status>
</kw>
<msg timestamp="20201115 22:00:32.947" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.921" endtime="20201115 22:00:32.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.953" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.949" endtime="20201115 22:00:32.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.956" endtime="20201115 22:00:32.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.914" endtime="20201115 22:00:32.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.908" endtime="20201115 22:00:32.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.981" endtime="20201115 22:00:33.325"></status>
</kw>
<msg timestamp="20201115 22:00:33.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048509903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048515681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.977" endtime="20201115 22:00:33.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048509903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048515681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.334" endtime="20201115 22:00:33.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.352" endtime="20201115 22:00:33.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.969" endtime="20201115 22:00:33.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.964" endtime="20201115 22:00:33.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:33.370" level="INFO">${RESULT} = [{'time': 0.048515681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.048678125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:33.361" endtime="20201115 22:00:33.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.401" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:33.372" endtime="20201115 22:00:33.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.412" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:33.409" endtime="20201115 22:00:33.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.423" level="INFO">VALUE: [5.7779999999979514e-06, 5.735999999999242e-06, 5.76400000000532e-06, 5.721999999999672e-06, 5.7639999999983815e-06, 5.77800000000489e-06, 5.77800000000489e-06, 5.7639999999983815e-06, 5.7639999999983815e-06, 5.749999999998812e-06, 5.804999999997618e-06, 5.736000000006181e-06, 5.7639999999983815e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.847000000003266e-06, 5.804999999997618e-06, 5.77800000000489e-06, 5.7639999999983815e-06, 5.79200000000446e-06, 5.762999999998908e-06, 5.791999999997521e-06, 5.7639999999983815e-06, 5.7229999999991454e-06, 5.79200000000446e-06, 5.7779999999979514e-06, 5.791999999997521e-06, 5.76400000000532e-06, 5.749999999998812e-06, 5.735999999999242e-06, 5.776999999998478e-06, 5.749999999998812e-06, 5.76400000000532e-06, 5.749999999998812e-06, 5.7500000000057505e-06, 5.721999999999672e-06, 5.804999999997618e-06, 5.749999999998812e-06, 5.76400000000532e-06, 5.7639999999983815e-06, 5.7779999999979514e-06, 5.804999999997618e-06, 5.77800000000489e-06, 5.79200000000446e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.77800000000489e-06, 5.749999999998812e-06, 5.7639999999983815e-06]</msg>
<status status="PASS" starttime="20201115 22:00:33.414" endtime="20201115 22:00:33.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.403" endtime="20201115 22:00:33.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.433" endtime="20201115 22:00:33.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.441" endtime="20201115 22:00:33.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.437" endtime="20201115 22:00:33.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.428" endtime="20201115 22:00:33.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.902" endtime="20201115 22:00:33.467"></status>
</kw>
<msg timestamp="20201115 22:00:33.467" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.491" endtime="20201115 22:00:33.511"></status>
</kw>
<msg timestamp="20201115 22:00:33.512" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.487" endtime="20201115 22:00:33.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.518" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.515" endtime="20201115 22:00:33.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.521" endtime="20201115 22:00:33.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.480" endtime="20201115 22:00:33.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.474" endtime="20201115 22:00:33.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.545" endtime="20201115 22:00:33.884"></status>
</kw>
<msg timestamp="20201115 22:00:33.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042732792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042738542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.541" endtime="20201115 22:00:33.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042732792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042738542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.893" endtime="20201115 22:00:33.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.912" endtime="20201115 22:00:33.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.534" endtime="20201115 22:00:33.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.529" endtime="20201115 22:00:33.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:33.931" level="INFO">${RESULT} = [{'time': 0.042738542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.04290725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:33.922" endtime="20201115 22:00:33.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.961" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:33.933" endtime="20201115 22:00:33.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.973" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:33.971" endtime="20201115 22:00:33.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.979" level="INFO">VALUE: [5.749999999998812e-06, 5.749999999998812e-06, 5.749999999998812e-06, 5.777000000005417e-06, 5.735999999999242e-06, 5.7639999999983815e-06, 5.76400000000532e-06, 5.7779999999979514e-06, 5.83400000000317e-06, 5.7639999999983815e-06, 5.791000000004987e-06, 5.749999999998812e-06, 5.790999999998048e-06, 5.790999999998048e-06, 5.76400000000532e-06, 5.77800000000489e-06, 5.7779999999979514e-06, 5.721999999999672e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.79200000000446e-06, 5.694000000000532e-06, 5.76400000000532e-06, 5.7639999999983815e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.8050000000045565e-06, 5.7639999999983815e-06, 5.83400000000317e-06, 5.749999999998812e-06, 5.762999999998908e-06, 5.776999999998478e-06, 5.7779999999979514e-06, 5.749999999998812e-06, 5.749999999998812e-06, 5.790999999998048e-06, 5.7639999999983815e-06, 5.749999999998812e-06, 5.7639999999983815e-06, 5.7639999999983815e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.76400000000532e-06, 5.777000000005417e-06, 5.7779999999979514e-06, 5.76400000000532e-06, 5.762999999998908e-06, 5.749999999998812e-06, 5.7779999999979514e-06]</msg>
<status status="PASS" starttime="20201115 22:00:33.975" endtime="20201115 22:00:33.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.964" endtime="20201115 22:00:33.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.988" endtime="20201115 22:00:33.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.997" endtime="20201115 22:00:34.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.992" endtime="20201115 22:00:34.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.983" endtime="20201115 22:00:34.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.468" endtime="20201115 22:00:34.023"></status>
</kw>
<msg timestamp="20201115 22:00:34.024" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.047" endtime="20201115 22:00:34.068"></status>
</kw>
<msg timestamp="20201115 22:00:34.070" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.044" endtime="20201115 22:00:34.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.076" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.072" endtime="20201115 22:00:34.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.078" endtime="20201115 22:00:34.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.037" endtime="20201115 22:00:34.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.031" endtime="20201115 22:00:34.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.102" endtime="20201115 22:00:34.443"></status>
</kw>
<msg timestamp="20201115 22:00:34.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043647708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043653542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.098" endtime="20201115 22:00:34.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043647708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043653542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.452" endtime="20201115 22:00:34.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.471" endtime="20201115 22:00:34.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.091" endtime="20201115 22:00:34.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.086" endtime="20201115 22:00:34.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.490" level="INFO">${RESULT} = [{'time': 0.043653542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833999999996231e-06, 'source_diff': 5.833999999996231e-06}, {'time': 0.04381575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:34.481" endtime="20201115 22:00:34.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:34.521" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:34.493" endtime="20201115 22:00:34.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.532" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:34.530" endtime="20201115 22:00:34.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.538" level="INFO">VALUE: [5.833999999996231e-06, 5.7779999999979514e-06, 5.736999999998715e-06, 5.708000000000102e-06, 5.8329999999967574e-06, 5.749999999998812e-06, 5.7779999999979514e-06, 5.7500000000057505e-06, 5.749999999998812e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.80600000000403e-06, 5.776999999998478e-06, 5.776999999998478e-06, 5.762999999998908e-06, 5.749999999998812e-06, 5.76400000000532e-06, 5.847000000003266e-06, 5.7089999999995755e-06, 5.7639999999983815e-06, 5.737000000005654e-06, 5.708000000000102e-06, 5.749999999998812e-06, 5.7779999999979514e-06, 5.749999999998812e-06, 5.708000000000102e-06, 5.7639999999983815e-06, 5.749999999998812e-06, 5.736999999998715e-06, 5.736000000006181e-06, 5.805999999997091e-06, 5.749999999998812e-06, 5.7639999999983815e-06, 5.694000000000532e-06, 5.7639999999983815e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.7779999999979514e-06, 5.76400000000532e-06, 5.7639999999983815e-06, 5.79200000000446e-06, 5.736999999998715e-06, 5.79200000000446e-06, 5.79200000000446e-06, 5.8050000000045565e-06, 5.819999999996661e-06, 5.749999999998812e-06, 5.7779999999979514e-06, 5.7779999999979514e-06]</msg>
<status status="PASS" starttime="20201115 22:00:34.535" endtime="20201115 22:00:34.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.523" endtime="20201115 22:00:34.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.547" endtime="20201115 22:00:34.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:34.555" endtime="20201115 22:00:34.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.551" endtime="20201115 22:00:34.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.542" endtime="20201115 22:00:34.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.025" endtime="20201115 22:00:34.581"></status>
</kw>
<msg timestamp="20201115 22:00:34.581" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.605" endtime="20201115 22:00:34.626"></status>
</kw>
<msg timestamp="20201115 22:00:34.627" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.601" endtime="20201115 22:00:34.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.629" endtime="20201115 22:00:34.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.636" endtime="20201115 22:00:34.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.594" endtime="20201115 22:00:34.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.588" endtime="20201115 22:00:34.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.659" endtime="20201115 22:00:34.980"></status>
</kw>
<msg timestamp="20201115 22:00:34.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042829708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042835458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.656" endtime="20201115 22:00:34.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042829708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042835458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.989" endtime="20201115 22:00:35.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.009" endtime="20201115 22:00:35.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.649" endtime="20201115 22:00:35.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.644" endtime="20201115 22:00:35.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.028" level="INFO">${RESULT} = [{'time': 0.042835458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.0430065, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:35.019" endtime="20201115 22:00:35.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.059" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:35.031" endtime="20201115 22:00:35.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.072" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:35.069" endtime="20201115 22:00:35.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.077" level="INFO">VALUE: [5.749999999998812e-06, 5.79200000000446e-06, 5.749999999998812e-06, 5.84800000000274e-06, 5.77800000000489e-06, 5.7779999999979514e-06, 5.762999999998908e-06, 5.776999999998478e-06, 5.7779999999979514e-06, 5.735999999999242e-06, 5.722000000006611e-06, 5.735999999999242e-06, 5.7639999999983815e-06, 5.721999999999672e-06, 5.7639999999983815e-06, 5.77800000000489e-06, 5.749999999998812e-06, 5.7639999999983815e-06, 5.7639999999983815e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.77800000000489e-06, 5.7639999999983815e-06, 5.7639999999983815e-06, 5.7639999999983815e-06, 5.76400000000532e-06, 5.77800000000489e-06, 5.791999999997521e-06, 5.735999999999242e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.749999999998812e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.762999999998908e-06, 5.77800000000489e-06, 5.8190000000041264e-06, 5.721999999999672e-06, 5.749999999998812e-06, 5.7779999999979514e-06, 5.721999999999672e-06, 5.7639999999983815e-06, 5.7639999999983815e-06, 5.708000000000102e-06, 5.7639999999983815e-06, 5.7639999999983815e-06, 5.736999999998715e-06, 5.804999999997618e-06, 5.7639999999983815e-06]</msg>
<status status="PASS" starttime="20201115 22:00:35.074" endtime="20201115 22:00:35.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.062" endtime="20201115 22:00:35.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.087" endtime="20201115 22:00:35.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.095" endtime="20201115 22:00:35.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.091" endtime="20201115 22:00:35.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.082" endtime="20201115 22:00:35.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.582" endtime="20201115 22:00:35.121"></status>
</kw>
<msg timestamp="20201115 22:00:35.122" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.145" endtime="20201115 22:00:35.166"></status>
</kw>
<msg timestamp="20201115 22:00:35.167" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.141" endtime="20201115 22:00:35.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.173" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.169" endtime="20201115 22:00:35.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.176" endtime="20201115 22:00:35.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.134" endtime="20201115 22:00:35.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.128" endtime="20201115 22:00:35.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.199" endtime="20201115 22:00:35.538"></status>
</kw>
<msg timestamp="20201115 22:00:35.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042741472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04274725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:35.196" endtime="20201115 22:00:35.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042741472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04274725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:35.548" endtime="20201115 22:00:35.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.567" endtime="20201115 22:00:35.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.189" endtime="20201115 22:00:35.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.184" endtime="20201115 22:00:35.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.588" level="INFO">${RESULT} = [{'time': 0.04274725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.042908875, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:35.579" endtime="20201115 22:00:35.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.618" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:35.590" endtime="20201115 22:00:35.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.629" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:35.627" endtime="20201115 22:00:35.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.635" level="INFO">VALUE: [5.7779999999979514e-06, 5.7639999999983815e-06, 5.76400000000532e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.776999999998478e-06, 5.7089999999995755e-06, 5.7779999999979514e-06, 5.749999999998812e-06, 5.7639999999983815e-06, 5.695000000000006e-06, 5.791999999997521e-06, 5.776999999998478e-06, 5.846999999996327e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.749999999998812e-06, 5.735999999999242e-06, 5.749999999998812e-06, 5.679999999994023e-06, 5.791999999997521e-06, 5.7779999999979514e-06, 5.749999999998812e-06, 5.749999999998812e-06, 5.8050000000045565e-06, 5.76400000000532e-06, 5.77800000000489e-06, 5.77800000000489e-06, 5.749999999998812e-06, 5.7639999999983815e-06, 5.791999999997521e-06, 5.77800000000489e-06, 5.77800000000489e-06, 5.791999999997521e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.749999999998812e-06, 5.76400000000532e-06, 5.749999999998812e-06, 5.7639999999983815e-06, 5.7500000000057505e-06, 5.804999999997618e-06, 5.77800000000489e-06, 5.708000000000102e-06, 5.7779999999979514e-06, 5.7500000000057505e-06, 5.7500000000057505e-06, 5.749999999998812e-06, 5.749999999998812e-06]</msg>
<status status="PASS" starttime="20201115 22:00:35.632" endtime="20201115 22:00:35.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.620" endtime="20201115 22:00:35.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.644" endtime="20201115 22:00:35.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.652" endtime="20201115 22:00:35.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.648" endtime="20201115 22:00:35.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.639" endtime="20201115 22:00:35.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.123" endtime="20201115 22:00:35.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.899" endtime="20201115 22:00:35.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.897" endtime="20201115 22:00:35.679"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.684" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.707" endtime="20201115 22:00:35.728"></status>
</kw>
<msg timestamp="20201115 22:00:35.730" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.704" endtime="20201115 22:00:35.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.736" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.732" endtime="20201115 22:00:35.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.738" endtime="20201115 22:00:35.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.696" endtime="20201115 22:00:35.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.691" endtime="20201115 22:00:35.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.763" endtime="20201115 22:00:36.106"></status>
</kw>
<msg timestamp="20201115 22:00:36.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048374833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048380806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.759" endtime="20201115 22:00:36.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048374833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048380806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.116" endtime="20201115 22:00:36.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.134" endtime="20201115 22:00:36.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.752" endtime="20201115 22:00:36.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.747" endtime="20201115 22:00:36.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.152" level="INFO">${RESULT} = [{'time': 0.048380806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.048553028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:36.143" endtime="20201115 22:00:36.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.183" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:36.154" endtime="20201115 22:00:36.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.194" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:36.191" endtime="20201115 22:00:36.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.199" level="INFO">VALUE: [5.9729999999993955e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.903000000001546e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.986000000006431e-06, 5.985999999999492e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.917000000001116e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.930000000001212e-06, 5.9729999999993955e-06, 5.958000000000352e-06, 6.0279999999982015e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.888999999995037e-06, 5.999999999999062e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.944000000000782e-06, 5.930000000001212e-06, 5.944000000000782e-06, 5.987000000005904e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.041999999997771e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.931000000000686e-06, 5.971999999999922e-06]</msg>
<status status="PASS" starttime="20201115 22:00:36.196" endtime="20201115 22:00:36.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.184" endtime="20201115 22:00:36.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.208" endtime="20201115 22:00:36.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.217" endtime="20201115 22:00:36.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.212" endtime="20201115 22:00:36.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.204" endtime="20201115 22:00:36.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.685" endtime="20201115 22:00:36.242"></status>
</kw>
<msg timestamp="20201115 22:00:36.243" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.266" endtime="20201115 22:00:36.287"></status>
</kw>
<msg timestamp="20201115 22:00:36.288" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.263" endtime="20201115 22:00:36.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.295" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.291" endtime="20201115 22:00:36.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.298" endtime="20201115 22:00:36.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.255" endtime="20201115 22:00:36.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.250" endtime="20201115 22:00:36.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.322" endtime="20201115 22:00:36.661"></status>
</kw>
<msg timestamp="20201115 22:00:36.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043015958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043021917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.318" endtime="20201115 22:00:36.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043015958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043021917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.670" endtime="20201115 22:00:36.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.689" endtime="20201115 22:00:36.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.311" endtime="20201115 22:00:36.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.306" endtime="20201115 22:00:36.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.708" level="INFO">${RESULT} = [{'time': 0.043021917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.043197153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:36.699" endtime="20201115 22:00:36.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.739" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:36.710" endtime="20201115 22:00:36.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.750" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:36.748" endtime="20201115 22:00:36.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.756" level="INFO">VALUE: [5.9589999999998255e-06, 6.05600000000428e-06, 5.972000000006861e-06, 5.9729999999993955e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.986999999998965e-06, 5.9589999999998255e-06, 5.985999999999492e-06, 5.958000000000352e-06, 5.957999999993413e-06, 6.0139999999986316e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 6.012999999999158e-06, 5.930999999993747e-06, 5.957999999993413e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.999999999999062e-06, 5.9729999999993955e-06, 5.916000000001642e-06, 5.903000000001546e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 6.02800000000514e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.957999999993413e-06, 5.9729999999993955e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.973000000006334e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.999999999999062e-06]</msg>
<status status="PASS" starttime="20201115 22:00:36.753" endtime="20201115 22:00:36.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.741" endtime="20201115 22:00:36.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.765" endtime="20201115 22:00:36.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.773" endtime="20201115 22:00:36.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.769" endtime="20201115 22:00:36.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.760" endtime="20201115 22:00:36.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.244" endtime="20201115 22:00:36.799"></status>
</kw>
<msg timestamp="20201115 22:00:36.799" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.824" endtime="20201115 22:00:36.847"></status>
</kw>
<msg timestamp="20201115 22:00:36.848" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.819" endtime="20201115 22:00:36.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.854" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.850" endtime="20201115 22:00:36.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.857" endtime="20201115 22:00:36.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.812" endtime="20201115 22:00:36.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.806" endtime="20201115 22:00:36.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.880" endtime="20201115 22:00:37.222"></status>
</kw>
<msg timestamp="20201115 22:00:37.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044058667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044064653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.877" endtime="20201115 22:00:37.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044058667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044064653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.231" endtime="20201115 22:00:37.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.249" endtime="20201115 22:00:37.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.870" endtime="20201115 22:00:37.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.865" endtime="20201115 22:00:37.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:37.269" level="INFO">${RESULT} = [{'time': 0.044064653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.044242292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:37.259" endtime="20201115 22:00:37.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:37.299" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:37.271" endtime="20201115 22:00:37.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.310" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:37.308" endtime="20201115 22:00:37.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.316" level="INFO">VALUE: [5.985999999999492e-06, 5.9729999999993955e-06, 5.985999999999492e-06, 5.915999999994703e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.958000000000352e-06, 5.971999999999922e-06, 6.04200000000471e-06, 5.971999999999922e-06, 5.944000000000782e-06, 6.0140000000055704e-06, 5.9589999999998255e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.944000000000782e-06, 5.917000000001116e-06, 5.944000000000782e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 5.944000000000782e-06, 5.985999999999492e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 5.931000000000686e-06, 5.971999999999922e-06, 6.041000000005237e-06, 5.971999999999922e-06, 5.930000000001212e-06, 5.958000000000352e-06, 6.05600000000428e-06, 5.931000000000686e-06, 5.9589999999998255e-06, 5.903000000001546e-06, 5.958000000000352e-06, 5.999999999999062e-06, 5.9729999999993955e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 5.903000000001546e-06, 5.971999999999922e-06]</msg>
<status status="PASS" starttime="20201115 22:00:37.313" endtime="20201115 22:00:37.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.301" endtime="20201115 22:00:37.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.325" endtime="20201115 22:00:37.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.333" endtime="20201115 22:00:37.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.329" endtime="20201115 22:00:37.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.320" endtime="20201115 22:00:37.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.801" endtime="20201115 22:00:37.359"></status>
</kw>
<msg timestamp="20201115 22:00:37.360" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.384" endtime="20201115 22:00:37.405"></status>
</kw>
<msg timestamp="20201115 22:00:37.407" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.380" endtime="20201115 22:00:37.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.413" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.409" endtime="20201115 22:00:37.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.415" endtime="20201115 22:00:37.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.373" endtime="20201115 22:00:37.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.367" endtime="20201115 22:00:37.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.439" endtime="20201115 22:00:37.780"></status>
</kw>
<msg timestamp="20201115 22:00:37.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044074597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044080556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.436" endtime="20201115 22:00:37.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044074597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044080556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.790" endtime="20201115 22:00:37.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.808" endtime="20201115 22:00:37.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.428" endtime="20201115 22:00:37.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.424" endtime="20201115 22:00:37.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:37.830" level="INFO">${RESULT} = [{'time': 0.044080556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.044253222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:37.821" endtime="20201115 22:00:37.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:37.860" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:37.832" endtime="20201115 22:00:37.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.872" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:37.869" endtime="20201115 22:00:37.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.877" level="INFO">VALUE: [5.9589999999998255e-06, 5.971999999999922e-06, 5.930000000001212e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.999999999999062e-06, 5.929999999994273e-06, 5.985999999999492e-06, 5.929999999994273e-06, 6.0139999999986316e-06, 6.0000000000060005e-06, 5.971999999999922e-06, 5.945000000000256e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 5.987000000005904e-06, 5.916999999994177e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.985999999999492e-06, 6.0000000000060005e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.917000000001116e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.9729999999993955e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.971999999999922e-06, 5.903000000001546e-06, 5.9589999999998255e-06, 5.944000000000782e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.958000000000352e-06, 5.945000000000256e-06, 5.875000000002406e-06]</msg>
<status status="PASS" starttime="20201115 22:00:37.874" endtime="20201115 22:00:37.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.862" endtime="20201115 22:00:37.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.886" endtime="20201115 22:00:37.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.896" endtime="20201115 22:00:37.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.891" endtime="20201115 22:00:37.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.882" endtime="20201115 22:00:37.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.361" endtime="20201115 22:00:37.921"></status>
</kw>
<msg timestamp="20201115 22:00:37.922" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.945" endtime="20201115 22:00:37.967"></status>
</kw>
<msg timestamp="20201115 22:00:37.968" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.942" endtime="20201115 22:00:37.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.974" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.970" endtime="20201115 22:00:37.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.976" endtime="20201115 22:00:37.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.934" endtime="20201115 22:00:37.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.929" endtime="20201115 22:00:37.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.002" endtime="20201115 22:00:38.325"></status>
</kw>
<msg timestamp="20201115 22:00:38.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042830528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0428365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:37.998" endtime="20201115 22:00:38.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042830528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0428365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:38.335" endtime="20201115 22:00:38.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.353" endtime="20201115 22:00:38.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.990" endtime="20201115 22:00:38.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.985" endtime="20201115 22:00:38.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.372" level="INFO">${RESULT} = [{'time': 0.0428365, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.043014583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:38.363" endtime="20201115 22:00:38.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.403" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:38.374" endtime="20201115 22:00:38.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.415" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:38.412" endtime="20201115 22:00:38.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.420" level="INFO">VALUE: [5.971999999999922e-06, 5.999999999999062e-06, 5.944000000000782e-06, 5.971999999999922e-06, 5.986999999998965e-06, 5.986999999998965e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 5.915999999994703e-06, 5.971999999999922e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.944000000000782e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.958000000000352e-06, 5.986999999998965e-06, 5.945000000000256e-06, 5.957999999993413e-06, 5.943999999993843e-06, 5.986999999998965e-06, 5.9729999999993955e-06, 5.931000000000686e-06, 5.971999999999922e-06, 5.999999999999062e-06, 5.944000000000782e-06, 5.889000000001976e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.9589999999998255e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.985999999999492e-06, 5.958000000000352e-06, 5.999999999999062e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.9729999999993955e-06, 5.985999999999492e-06, 6.02800000000514e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.9729999999993955e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.903000000001546e-06, 5.944000000000782e-06]</msg>
<status status="PASS" starttime="20201115 22:00:38.417" endtime="20201115 22:00:38.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.405" endtime="20201115 22:00:38.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.435" endtime="20201115 22:00:38.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:38.444" endtime="20201115 22:00:38.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.439" endtime="20201115 22:00:38.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.431" endtime="20201115 22:00:38.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.923" endtime="20201115 22:00:38.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.682" endtime="20201115 22:00:38.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.680" endtime="20201115 22:00:38.471"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.476" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.499" endtime="20201115 22:00:38.521"></status>
</kw>
<msg timestamp="20201115 22:00:38.522" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.496" endtime="20201115 22:00:38.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.529" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.525" endtime="20201115 22:00:38.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.531" endtime="20201115 22:00:38.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.488" endtime="20201115 22:00:38.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.482" endtime="20201115 22:00:38.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.555" endtime="20201115 22:00:38.897"></status>
</kw>
<msg timestamp="20201115 22:00:38.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048781208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048787347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.551" endtime="20201115 22:00:38.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048781208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048787347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.907" endtime="20201115 22:00:38.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.926" endtime="20201115 22:00:38.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.544" endtime="20201115 22:00:38.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.539" endtime="20201115 22:00:38.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.943" level="INFO">${RESULT} = [{'time': 0.048787347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.048973528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:38.934" endtime="20201115 22:00:38.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.974" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:38.945" endtime="20201115 22:00:38.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.985" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:38.982" endtime="20201115 22:00:38.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.991" level="INFO">VALUE: [6.139000000002226e-06, 6.181000000000936e-06, 6.166999999994427e-06, 6.153000000001796e-06, 6.138999999995287e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.166999999994427e-06, 6.166999999994427e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.208000000000602e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.097999999996051e-06, 6.153000000001796e-06, 6.166000000001892e-06, 6.152999999994857e-06, 6.167000000001366e-06, 6.165999999994953e-06, 6.138999999995287e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.208000000000602e-06, 6.165999999994953e-06, 6.180000000001462e-06, 6.138999999995287e-06, 6.180999999993997e-06, 6.165999999994953e-06, 6.1379999999958135e-06, 6.166000000001892e-06, 6.194000000001032e-06, 6.083000000003946e-06, 6.180999999993997e-06, 6.167000000001366e-06, 6.166000000001892e-06, 6.249999999999312e-06, 6.111000000003086e-06, 6.152999999994857e-06, 6.193999999994093e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.179999999994523e-06, 6.153000000001796e-06, 6.165999999994953e-06]</msg>
<status status="PASS" starttime="20201115 22:00:38.987" endtime="20201115 22:00:38.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.976" endtime="20201115 22:00:38.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.001" endtime="20201115 22:00:39.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.009" endtime="20201115 22:00:39.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.005" endtime="20201115 22:00:39.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.995" endtime="20201115 22:00:39.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.477" endtime="20201115 22:00:39.035"></status>
</kw>
<msg timestamp="20201115 22:00:39.035" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.059" endtime="20201115 22:00:39.080"></status>
</kw>
<msg timestamp="20201115 22:00:39.082" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.055" endtime="20201115 22:00:39.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.088" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.084" endtime="20201115 22:00:39.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.090" endtime="20201115 22:00:39.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.048" endtime="20201115 22:00:39.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.042" endtime="20201115 22:00:39.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.114" endtime="20201115 22:00:39.455"></status>
</kw>
<msg timestamp="20201115 22:00:39.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042979097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042985264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.110" endtime="20201115 22:00:39.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042979097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042985264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.464" endtime="20201115 22:00:39.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.482" endtime="20201115 22:00:39.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.103" endtime="20201115 22:00:39.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.098" endtime="20201115 22:00:39.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:39.502" level="INFO">${RESULT} = [{'time': 0.042985264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.043175167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:39.492" endtime="20201115 22:00:39.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:39.532" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:39.504" endtime="20201115 22:00:39.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.544" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:39.541" endtime="20201115 22:00:39.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.549" level="INFO">VALUE: [6.167000000001366e-06, 6.181000000000936e-06, 6.249999999999312e-06, 6.179999999994523e-06, 6.125000000002656e-06, 6.151999999995383e-06, 6.180000000001462e-06, 6.222000000000172e-06, 6.167000000001366e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.166000000001892e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.138999999995287e-06, 6.125000000002656e-06, 6.152000000002322e-06, 6.180999999993997e-06, 6.152999999994857e-06, 6.153000000001796e-06, 6.166000000001892e-06, 6.166000000001892e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.139000000002226e-06, 6.166999999994427e-06, 6.167000000001366e-06, 6.0829999999970075e-06, 6.167000000001366e-06, 6.097000000003516e-06, 6.151999999995383e-06, 6.180000000001462e-06, 6.153000000001796e-06, 6.181000000000936e-06, 6.138999999995287e-06, 6.0829999999970075e-06, 6.167000000001366e-06, 6.165999999994953e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.1379999999958135e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.152000000002322e-06, 6.138999999995287e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.139000000002226e-06, 6.139000000002226e-06, 6.167000000001366e-06]</msg>
<status status="PASS" starttime="20201115 22:00:39.546" endtime="20201115 22:00:39.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.534" endtime="20201115 22:00:39.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.558" endtime="20201115 22:00:39.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.567" endtime="20201115 22:00:39.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.562" endtime="20201115 22:00:39.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.554" endtime="20201115 22:00:39.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.037" endtime="20201115 22:00:39.592"></status>
</kw>
<msg timestamp="20201115 22:00:39.593" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.617" endtime="20201115 22:00:39.639"></status>
</kw>
<msg timestamp="20201115 22:00:39.640" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.613" endtime="20201115 22:00:39.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.647" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.643" endtime="20201115 22:00:39.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.649" endtime="20201115 22:00:39.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.605" endtime="20201115 22:00:39.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.599" endtime="20201115 22:00:39.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.673" endtime="20201115 22:00:40.014"></status>
</kw>
<msg timestamp="20201115 22:00:40.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043973806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043979889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.669" endtime="20201115 22:00:40.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043973806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043979889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.023" endtime="20201115 22:00:40.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.041" endtime="20201115 22:00:40.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.662" endtime="20201115 22:00:40.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.657" endtime="20201115 22:00:40.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:40.063" level="INFO">${RESULT} = [{'time': 0.043979889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000003946e-06, 'source_diff': 6.083000000003946e-06}, {'time': 0.044166889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:40.054" endtime="20201115 22:00:40.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:40.094" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:40.065" endtime="20201115 22:00:40.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.105" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:40.103" endtime="20201115 22:00:40.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.110" level="INFO">VALUE: [6.083000000003946e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.180000000001462e-06, 6.180999999993997e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.222000000000172e-06, 6.166000000001892e-06, 6.152000000002322e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.153000000001796e-06, 6.138999999995287e-06, 6.194000000001032e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.097000000003516e-06, 6.152999999994857e-06, 6.152999999994857e-06, 6.153000000001796e-06, 6.152999999994857e-06, 6.167000000001366e-06, 6.179999999994523e-06, 6.138000000002752e-06, 6.167000000001366e-06, 6.152999999994857e-06, 6.167000000001366e-06, 6.124999999995717e-06, 6.166000000001892e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.139000000002226e-06, 6.153000000001796e-06, 6.139000000002226e-06, 6.152000000002322e-06, 6.167000000001366e-06, 6.2090000000000756e-06, 6.138999999995287e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.138999999995287e-06, 6.153000000001796e-06]</msg>
<status status="PASS" starttime="20201115 22:00:40.107" endtime="20201115 22:00:40.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.095" endtime="20201115 22:00:40.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.119" endtime="20201115 22:00:40.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:40.128" endtime="20201115 22:00:40.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.124" endtime="20201115 22:00:40.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.115" endtime="20201115 22:00:40.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.594" endtime="20201115 22:00:40.153"></status>
</kw>
<msg timestamp="20201115 22:00:40.154" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.177" endtime="20201115 22:00:40.200"></status>
</kw>
<msg timestamp="20201115 22:00:40.201" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.174" endtime="20201115 22:00:40.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.208" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.203" endtime="20201115 22:00:40.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.210" endtime="20201115 22:00:40.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.167" endtime="20201115 22:00:40.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.161" endtime="20201115 22:00:40.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.234" endtime="20201115 22:00:40.575"></status>
</kw>
<msg timestamp="20201115 22:00:40.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043267403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043273597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.231" endtime="20201115 22:00:40.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043267403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043273597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.585" endtime="20201115 22:00:40.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.603" endtime="20201115 22:00:40.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.224" endtime="20201115 22:00:40.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.219" endtime="20201115 22:00:40.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:40.623" level="INFO">${RESULT} = [{'time': 0.043273597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.193999999994093e-06, 'source_diff': 6.193999999994093e-06}, {'time': 0.043465319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:40.614" endtime="20201115 22:00:40.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:40.653" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:40.625" endtime="20201115 22:00:40.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.664" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:40.662" endtime="20201115 22:00:40.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.670" level="INFO">VALUE: [6.193999999994093e-06, 6.111000000003086e-06, 6.194000000001032e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.166000000001892e-06, 6.181000000000936e-06, 6.110999999996147e-06, 6.152000000002322e-06, 6.153000000001796e-06, 6.165999999994953e-06, 6.166999999994427e-06, 6.167000000001366e-06, 6.139000000002226e-06, 6.166000000001892e-06, 6.153000000001796e-06, 6.151999999995383e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.166000000001892e-06, 6.195000000000506e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.153000000001796e-06, 6.180000000001462e-06, 6.139000000002226e-06, 6.152000000002322e-06, 6.153000000001796e-06, 6.166000000001892e-06, 6.167000000001366e-06, 6.138999999995287e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.222000000000172e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.152999999994857e-06, 6.138000000002752e-06, 6.165999999994953e-06, 6.165999999994953e-06, 6.139000000002226e-06, 6.138000000002752e-06, 6.151999999995383e-06, 6.166000000001892e-06, 6.165999999994953e-06, 6.181000000000936e-06, 6.165999999994953e-06, 6.195000000000506e-06, 6.181000000000936e-06]</msg>
<status status="PASS" starttime="20201115 22:00:40.666" endtime="20201115 22:00:40.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.655" endtime="20201115 22:00:40.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.679" endtime="20201115 22:00:40.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:40.687" endtime="20201115 22:00:40.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.683" endtime="20201115 22:00:40.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.674" endtime="20201115 22:00:40.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.155" endtime="20201115 22:00:40.713"></status>
</kw>
<msg timestamp="20201115 22:00:40.713" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.738" endtime="20201115 22:00:40.760"></status>
</kw>
<msg timestamp="20201115 22:00:40.761" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.735" endtime="20201115 22:00:40.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.767" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.763" endtime="20201115 22:00:40.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.770" endtime="20201115 22:00:40.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.727" endtime="20201115 22:00:40.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.720" endtime="20201115 22:00:40.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.793" endtime="20201115 22:00:41.134"></status>
</kw>
<msg timestamp="20201115 22:00:41.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044443014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044449181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.790" endtime="20201115 22:00:41.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044443014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044449181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.144" endtime="20201115 22:00:41.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.163" endtime="20201115 22:00:41.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.783" endtime="20201115 22:00:41.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.778" endtime="20201115 22:00:41.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.182" level="INFO">${RESULT} = [{'time': 0.044449181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166999999994427e-06, 'source_diff': 6.166999999994427e-06}, {'time': 0.044640361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:41.173" endtime="20201115 22:00:41.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.212" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:41.184" endtime="20201115 22:00:41.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.224" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:41.221" endtime="20201115 22:00:41.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.230" level="INFO">VALUE: [6.166999999994427e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.152999999994857e-06, 6.180000000001462e-06, 6.179999999994523e-06, 6.139000000002226e-06, 6.181000000000936e-06, 6.166999999994427e-06, 6.181000000000936e-06, 6.166000000001892e-06, 6.153000000001796e-06, 6.096999999996577e-06, 6.152000000002322e-06, 6.111000000003086e-06, 6.166999999994427e-06, 6.152999999994857e-06, 6.153000000001796e-06, 6.139000000002226e-06, 6.110999999996147e-06, 6.166999999994427e-06, 6.153000000001796e-06, 6.165999999994953e-06, 6.166999999994427e-06, 6.152999999994857e-06, 6.152999999994857e-06, 6.139000000002226e-06, 6.166000000001892e-06, 6.166999999994427e-06, 6.139000000002226e-06, 6.180000000001462e-06, 6.111000000003086e-06, 6.166999999994427e-06, 6.153000000001796e-06, 6.166999999994427e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.152999999994857e-06, 6.138999999995287e-06, 6.152999999994857e-06, 6.110999999996147e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.181000000000936e-06, 6.208000000000602e-06]</msg>
<status status="PASS" starttime="20201115 22:00:41.226" endtime="20201115 22:00:41.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.214" endtime="20201115 22:00:41.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.239" endtime="20201115 22:00:41.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.248" endtime="20201115 22:00:41.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.244" endtime="20201115 22:00:41.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.234" endtime="20201115 22:00:41.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.714" endtime="20201115 22:00:41.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.473" endtime="20201115 22:00:41.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.471" endtime="20201115 22:00:41.275"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.280" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.304" endtime="20201115 22:00:41.326"></status>
</kw>
<msg timestamp="20201115 22:00:41.327" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.300" endtime="20201115 22:00:41.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.333" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.329" endtime="20201115 22:00:41.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.336" endtime="20201115 22:00:41.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.293" endtime="20201115 22:00:41.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.287" endtime="20201115 22:00:41.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.360" endtime="20201115 22:00:41.663"></status>
</kw>
<msg timestamp="20201115 22:00:41.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048554583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048560958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.357" endtime="20201115 22:00:41.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048554583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048560958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.667" endtime="20201115 22:00:41.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.675" endtime="20201115 22:00:41.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.349" endtime="20201115 22:00:41.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.345" endtime="20201115 22:00:41.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.684" level="INFO">${RESULT} = [{'time': 0.048560958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.048759972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:41.679" endtime="20201115 22:00:41.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.714" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:41.685" endtime="20201115 22:00:41.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.725" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:41.723" endtime="20201115 22:00:41.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.731" level="INFO">VALUE: [6.375000000002906e-06, 6.374999999995967e-06, 6.34800000000324e-06, 6.34800000000324e-06, 6.361000000003336e-06, 6.347999999996301e-06, 6.3050000000050566e-06, 6.346999999996827e-06, 6.361999999995871e-06, 6.361000000003336e-06, 6.29200000000496e-06, 6.346999999996827e-06, 6.346999999996827e-06, 6.347000000003766e-06, 6.361000000003336e-06, 6.361000000003336e-06, 6.361000000003336e-06, 6.347000000003766e-06, 6.360999999996397e-06, 6.347000000003766e-06, 6.361999999995871e-06, 6.347000000003766e-06, 6.375000000002906e-06, 6.347999999996301e-06, 6.360999999996397e-06, 6.361999999995871e-06, 6.360999999996397e-06, 6.361999999995871e-06, 6.360999999996397e-06, 6.347999999996301e-06, 6.346999999996827e-06, 6.361000000003336e-06, 6.346999999996827e-06, 6.361000000003336e-06, 6.360999999996397e-06, 6.3190000000046265e-06, 6.347000000003766e-06, 6.346999999996827e-06, 6.346999999996827e-06, 6.361999999995871e-06, 6.360999999996397e-06, 6.374999999995967e-06, 6.361000000003336e-06, 6.347999999996301e-06, 6.34800000000324e-06, 6.347000000003766e-06, 6.290999999998548e-06, 6.360999999996397e-06, 6.361000000003336e-06, 6.34800000000324e-06]</msg>
<status status="PASS" starttime="20201115 22:00:41.728" endtime="20201115 22:00:41.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.716" endtime="20201115 22:00:41.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.740" endtime="20201115 22:00:41.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.748" endtime="20201115 22:00:41.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.744" endtime="20201115 22:00:41.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.735" endtime="20201115 22:00:41.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.281" endtime="20201115 22:00:41.774"></status>
</kw>
<msg timestamp="20201115 22:00:41.774" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.798" endtime="20201115 22:00:41.821"></status>
</kw>
<msg timestamp="20201115 22:00:41.822" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.794" endtime="20201115 22:00:41.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.829" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.825" endtime="20201115 22:00:41.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.832" endtime="20201115 22:00:41.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.787" endtime="20201115 22:00:41.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.781" endtime="20201115 22:00:41.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.855" endtime="20201115 22:00:42.195"></status>
</kw>
<msg timestamp="20201115 22:00:42.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043420375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043426736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.852" endtime="20201115 22:00:42.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043420375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043426736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.204" endtime="20201115 22:00:42.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.222" endtime="20201115 22:00:42.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.845" endtime="20201115 22:00:42.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.840" endtime="20201115 22:00:42.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.244" level="INFO">${RESULT} = [{'time': 0.043426736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.361000000003336e-06, 'source_diff': 6.361000000003336e-06}, {'time': 0.04362075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:42.235" endtime="20201115 22:00:42.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.274" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:42.246" endtime="20201115 22:00:42.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.286" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:42.283" endtime="20201115 22:00:42.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.291" level="INFO">VALUE: [6.361000000003336e-06, 6.346999999996827e-06, 6.375000000002906e-06, 6.347000000003766e-06, 6.347000000003766e-06, 6.346999999996827e-06, 6.36200000000281e-06, 6.360999999996397e-06, 6.346999999996827e-06, 6.361000000003336e-06, 6.361000000003336e-06, 6.375000000002906e-06, 6.346999999996827e-06, 6.3329999999972575e-06, 6.375000000002906e-06, 6.33400000000367e-06, 6.361000000003336e-06, 6.347000000003766e-06, 6.360999999996397e-06, 6.347999999996301e-06, 6.3329999999972575e-06, 6.361000000003336e-06, 6.360999999996397e-06, 6.346999999996827e-06, 6.360999999996397e-06, 6.319999999997161e-06, 6.305999999997591e-06, 6.360999999996397e-06, 6.360999999996397e-06, 6.3329999999972575e-06, 6.347000000003766e-06, 6.374999999995967e-06, 6.374999999995967e-06, 6.347999999996301e-06, 6.360999999996397e-06, 6.347000000003766e-06, 6.388999999995537e-06, 6.389000000002476e-06, 6.361000000003336e-06, 6.360999999996397e-06, 6.347999999996301e-06, 6.374999999995967e-06, 6.3200000000041e-06, 6.375000000002906e-06, 6.347000000003766e-06, 6.333000000004196e-06, 6.360999999996397e-06, 6.3329999999972575e-06, 6.305999999997591e-06, 6.347000000003766e-06]</msg>
<status status="PASS" starttime="20201115 22:00:42.288" endtime="20201115 22:00:42.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.276" endtime="20201115 22:00:42.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.300" endtime="20201115 22:00:42.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.309" endtime="20201115 22:00:42.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.304" endtime="20201115 22:00:42.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.296" endtime="20201115 22:00:42.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.775" endtime="20201115 22:00:42.335"></status>
</kw>
<msg timestamp="20201115 22:00:42.335" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.359" endtime="20201115 22:00:42.382"></status>
</kw>
<msg timestamp="20201115 22:00:42.383" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.355" endtime="20201115 22:00:42.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.389" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.385" endtime="20201115 22:00:42.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.392" endtime="20201115 22:00:42.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.348" endtime="20201115 22:00:42.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.342" endtime="20201115 22:00:42.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.416" endtime="20201115 22:00:42.756"></status>
</kw>
<msg timestamp="20201115 22:00:42.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043713361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043719694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.412" endtime="20201115 22:00:42.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043713361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043719694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.765" endtime="20201115 22:00:42.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.783" endtime="20201115 22:00:42.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.405" endtime="20201115 22:00:42.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.400" endtime="20201115 22:00:42.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.802" level="INFO">${RESULT} = [{'time': 0.043719694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.333000000004196e-06, 'source_diff': 6.333000000004196e-06}, {'time': 0.043911833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:42.793" endtime="20201115 22:00:42.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.833" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:42.805" endtime="20201115 22:00:42.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.844" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:42.842" endtime="20201115 22:00:42.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.849" level="INFO">VALUE: [6.333000000004196e-06, 6.3329999999972575e-06, 6.318999999997688e-06, 6.360999999996397e-06, 6.3329999999972575e-06, 6.347000000003766e-06, 6.347999999996301e-06, 6.360999999996397e-06, 6.361000000003336e-06, 6.346999999996827e-06, 6.361000000003336e-06, 6.346999999996827e-06, 6.375000000002906e-06, 6.347000000003766e-06, 6.346999999996827e-06, 6.347000000003766e-06, 6.361000000003336e-06, 6.347000000003766e-06, 6.361000000003336e-06, 6.347000000003766e-06, 6.360999999996397e-06, 6.347000000003766e-06, 6.360999999996397e-06, 6.374999999995967e-06, 6.361000000003336e-06, 6.361999999995871e-06, 6.346999999996827e-06, 6.388000000003002e-06, 6.347000000003766e-06, 6.34800000000324e-06, 6.360999999996397e-06, 6.319999999997161e-06, 6.361000000003336e-06, 6.361000000003336e-06, 6.360999999996397e-06, 6.347000000003766e-06, 6.33400000000367e-06, 6.347000000003766e-06, 6.402999999995107e-06, 6.346999999996827e-06, 6.361000000003336e-06, 6.346999999996827e-06, 6.360999999996397e-06, 6.333000000004196e-06, 6.346999999996827e-06, 6.388999999995537e-06, 6.346999999996827e-06, 6.361000000003336e-06, 6.3329999999972575e-06, 6.360999999996397e-06]</msg>
<status status="PASS" starttime="20201115 22:00:42.846" endtime="20201115 22:00:42.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.835" endtime="20201115 22:00:42.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.858" endtime="20201115 22:00:42.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.867" endtime="20201115 22:00:42.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.863" endtime="20201115 22:00:42.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.854" endtime="20201115 22:00:42.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.336" endtime="20201115 22:00:42.892"></status>
</kw>
<msg timestamp="20201115 22:00:42.894" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.917" endtime="20201115 22:00:42.940"></status>
</kw>
<msg timestamp="20201115 22:00:42.941" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.914" endtime="20201115 22:00:42.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.947" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.943" endtime="20201115 22:00:42.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.950" endtime="20201115 22:00:42.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.906" endtime="20201115 22:00:42.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.900" endtime="20201115 22:00:42.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.974" endtime="20201115 22:00:43.314"></status>
</kw>
<msg timestamp="20201115 22:00:43.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043452028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043458389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.970" endtime="20201115 22:00:43.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043452028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043458389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.324" endtime="20201115 22:00:43.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.342" endtime="20201115 22:00:43.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.963" endtime="20201115 22:00:43.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.958" endtime="20201115 22:00:43.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:43.361" level="INFO">${RESULT} = [{'time': 0.043458389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.361000000003336e-06, 'source_diff': 6.361000000003336e-06}, {'time': 0.043654306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:43.352" endtime="20201115 22:00:43.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:43.392" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:43.364" endtime="20201115 22:00:43.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.403" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:43.401" endtime="20201115 22:00:43.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.409" level="INFO">VALUE: [6.361000000003336e-06, 6.347999999996301e-06, 6.3329999999972575e-06, 6.361000000003336e-06, 6.361000000003336e-06, 6.347000000003766e-06, 6.360999999996397e-06, 6.291999999998021e-06, 6.3879999999960635e-06, 6.361000000003336e-06, 6.361000000003336e-06, 6.347000000003766e-06, 6.346999999996827e-06, 6.361000000003336e-06, 6.346999999996827e-06, 6.361000000003336e-06, 6.347999999996301e-06, 6.346999999996827e-06, 6.375000000002906e-06, 6.346999999996827e-06, 6.346999999996827e-06, 6.402999999995107e-06, 6.445000000000756e-06, 6.361000000003336e-06, 6.318999999997688e-06, 6.347000000003766e-06, 6.347000000003766e-06, 6.30600000000453e-06, 6.291999999998021e-06, 6.347999999996301e-06, 6.375000000002906e-06, 6.360999999996397e-06, 6.360999999996397e-06, 6.333999999996731e-06, 6.347999999996301e-06, 6.346999999996827e-06, 6.360999999996397e-06, 6.374999999995967e-06, 6.361000000003336e-06, 6.402999999995107e-06, 6.361000000003336e-06, 6.347000000003766e-06, 6.36200000000281e-06, 6.360999999996397e-06, 6.347000000003766e-06, 6.374999999995967e-06, 6.374999999995967e-06, 6.361000000003336e-06, 6.416000000002142e-06, 6.360999999996397e-06]</msg>
<status status="PASS" starttime="20201115 22:00:43.405" endtime="20201115 22:00:43.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.394" endtime="20201115 22:00:43.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.417" endtime="20201115 22:00:43.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.427" endtime="20201115 22:00:43.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.422" endtime="20201115 22:00:43.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.413" endtime="20201115 22:00:43.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.895" endtime="20201115 22:00:43.452"></status>
</kw>
<msg timestamp="20201115 22:00:43.453" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.476" endtime="20201115 22:00:43.499"></status>
</kw>
<msg timestamp="20201115 22:00:43.500" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.473" endtime="20201115 22:00:43.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.506" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.502" endtime="20201115 22:00:43.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.508" endtime="20201115 22:00:43.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.465" endtime="20201115 22:00:43.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.460" endtime="20201115 22:00:43.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.532" endtime="20201115 22:00:43.873"></status>
</kw>
<msg timestamp="20201115 22:00:43.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042731653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042738014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.529" endtime="20201115 22:00:43.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042731653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042738014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.882" endtime="20201115 22:00:43.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.900" endtime="20201115 22:00:43.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.521" endtime="20201115 22:00:43.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.517" endtime="20201115 22:00:43.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:43.920" level="INFO">${RESULT} = [{'time': 0.042738014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.360999999996397e-06, 'source_diff': 6.360999999996397e-06}, {'time': 0.042935361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:43.911" endtime="20201115 22:00:43.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:43.950" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:43.922" endtime="20201115 22:00:43.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.961" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:43.959" endtime="20201115 22:00:43.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.967" level="INFO">VALUE: [6.360999999996397e-06, 6.3329999999972575e-06, 6.361000000003336e-06, 6.361000000003336e-06, 6.347000000003766e-06, 6.3190000000046265e-06, 6.346999999996827e-06, 6.347999999996301e-06, 6.375000000002906e-06, 6.374999999995967e-06, 6.361000000003336e-06, 6.361000000003336e-06, 6.347000000003766e-06, 6.290999999998548e-06, 6.347000000003766e-06, 6.361000000003336e-06, 6.347000000003766e-06, 6.388999999995537e-06, 6.347000000003766e-06, 6.3200000000041e-06, 6.333999999996731e-06, 6.3329999999972575e-06, 6.305999999997591e-06, 6.374999999995967e-06, 6.347000000003766e-06, 6.346999999996827e-06, 6.360999999996397e-06, 6.374999999995967e-06, 6.347000000003766e-06, 6.276999999998978e-06, 6.360999999996397e-06, 6.375000000002906e-06, 6.361000000003336e-06, 6.388999999995537e-06, 6.333000000004196e-06, 6.360999999996397e-06, 6.417000000001616e-06, 6.347000000003766e-06, 6.291000000005487e-06, 6.375000000002906e-06, 6.347000000003766e-06, 6.346999999996827e-06, 6.346999999996827e-06, 6.361000000003336e-06, 6.361000000003336e-06, 6.374999999995967e-06, 6.346999999996827e-06, 6.34800000000324e-06, 6.361000000003336e-06, 6.360999999996397e-06]</msg>
<status status="PASS" starttime="20201115 22:00:43.964" endtime="20201115 22:00:43.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.952" endtime="20201115 22:00:43.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.981" endtime="20201115 22:00:43.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.989" endtime="20201115 22:00:44.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.985" endtime="20201115 22:00:44.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.976" endtime="20201115 22:00:44.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.454" endtime="20201115 22:00:44.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.278" endtime="20201115 22:00:44.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.276" endtime="20201115 22:00:44.016"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.021" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.044" endtime="20201115 22:00:44.067"></status>
</kw>
<msg timestamp="20201115 22:00:44.068" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.041" endtime="20201115 22:00:44.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.075" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.071" endtime="20201115 22:00:44.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.077" endtime="20201115 22:00:44.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.033" endtime="20201115 22:00:44.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.027" endtime="20201115 22:00:44.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.101" endtime="20201115 22:00:44.444"></status>
</kw>
<msg timestamp="20201115 22:00:44.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048526222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048532764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.097" endtime="20201115 22:00:44.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048526222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048532764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.454" endtime="20201115 22:00:44.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.472" endtime="20201115 22:00:44.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.090" endtime="20201115 22:00:44.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.085" endtime="20201115 22:00:44.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.490" level="INFO">${RESULT} = [{'time': 0.048532764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.048740681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:44.481" endtime="20201115 22:00:44.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:44.521" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:44.492" endtime="20201115 22:00:44.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.532" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:44.529" endtime="20201115 22:00:44.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.538" level="INFO">VALUE: [6.541999999998271e-06, 6.5279999999987015e-06, 6.554999999998368e-06, 6.568999999997938e-06, 6.568999999997938e-06, 6.555000000005307e-06, 6.55600000000478e-06, 6.54200000000521e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.526999999999228e-06, 6.555999999997841e-06, 6.555999999997841e-06, 6.52800000000564e-06, 6.541999999998271e-06, 6.555000000005307e-06, 6.554999999998368e-06, 6.597999999996551e-06, 6.513999999999132e-06, 6.555999999997841e-06, 6.513999999999132e-06, 6.52800000000564e-06, 6.611000000003586e-06, 6.555999999997841e-06, 6.5279999999987015e-06, 6.5279999999987015e-06, 6.57000000000435e-06, 6.555999999997841e-06, 6.472000000000422e-06, 6.52800000000564e-06, 6.541999999998271e-06, 6.513999999999132e-06, 6.541999999998271e-06, 6.554999999998368e-06, 6.5279999999987015e-06, 6.526999999999228e-06, 6.554999999998368e-06, 6.541999999998271e-06, 6.555000000005307e-06, 6.541000000005737e-06, 6.513999999999132e-06, 6.541999999998271e-06, 6.540999999998798e-06, 6.540999999998798e-06, 6.554999999998368e-06, 6.555000000005307e-06, 6.541999999998271e-06, 6.52800000000564e-06, 6.5279999999987015e-06, 6.583999999996981e-06]</msg>
<status status="PASS" starttime="20201115 22:00:44.534" endtime="20201115 22:00:44.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.522" endtime="20201115 22:00:44.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.547" endtime="20201115 22:00:44.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:44.556" endtime="20201115 22:00:44.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.551" endtime="20201115 22:00:44.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.543" endtime="20201115 22:00:44.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.022" endtime="20201115 22:00:44.581"></status>
</kw>
<msg timestamp="20201115 22:00:44.582" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.605" endtime="20201115 22:00:44.628"></status>
</kw>
<msg timestamp="20201115 22:00:44.630" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.602" endtime="20201115 22:00:44.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.636" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.632" endtime="20201115 22:00:44.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.638" endtime="20201115 22:00:44.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.595" endtime="20201115 22:00:44.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.589" endtime="20201115 22:00:44.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.662" endtime="20201115 22:00:44.989"></status>
</kw>
<msg timestamp="20201115 22:00:44.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043058875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043065431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.659" endtime="20201115 22:00:44.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043058875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043065431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.994" endtime="20201115 22:00:45.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.002" endtime="20201115 22:00:45.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.651" endtime="20201115 22:00:45.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.647" endtime="20201115 22:00:45.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.011" level="INFO">${RESULT} = [{'time': 0.043065431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.555999999997841e-06, 'source_diff': 6.555999999997841e-06}, {'time': 0.043275639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:45.007" endtime="20201115 22:00:45.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.025" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:45.012" endtime="20201115 22:00:45.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.036" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:45.034" endtime="20201115 22:00:45.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.042" level="INFO">VALUE: [6.555999999997841e-06, 6.555999999997841e-06, 6.610999999996647e-06, 6.5279999999987015e-06, 6.541999999998271e-06, 6.540999999998798e-06, 6.583000000004446e-06, 6.610999999996647e-06, 6.541000000005737e-06, 6.52800000000564e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.541000000005737e-06, 6.58400000000392e-06, 6.554999999998368e-06, 6.540999999998798e-06, 6.54200000000521e-06, 6.554999999998368e-06, 6.5690000000048765e-06, 6.555000000005307e-06, 6.540999999998798e-06, 6.527000000006167e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.555999999997841e-06, 6.554999999998368e-06, 6.555999999997841e-06, 6.55600000000478e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.5690000000048765e-06, 6.554999999998368e-06, 6.55600000000478e-06, 6.540999999998798e-06, 6.526999999999228e-06, 6.55600000000478e-06, 6.540999999998798e-06, 6.611000000003586e-06, 6.540999999998798e-06, 6.526999999999228e-06, 6.541999999998271e-06, 6.5279999999987015e-06, 6.554999999998368e-06, 6.610999999996647e-06, 6.555999999997841e-06, 6.54200000000521e-06, 6.5279999999987015e-06, 6.541999999998271e-06, 6.513999999999132e-06]</msg>
<status status="PASS" starttime="20201115 22:00:45.039" endtime="20201115 22:00:45.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.027" endtime="20201115 22:00:45.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.051" endtime="20201115 22:00:45.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.059" endtime="20201115 22:00:45.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.055" endtime="20201115 22:00:45.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.046" endtime="20201115 22:00:45.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.583" endtime="20201115 22:00:45.085"></status>
</kw>
<msg timestamp="20201115 22:00:45.086" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.109" endtime="20201115 22:00:45.133"></status>
</kw>
<msg timestamp="20201115 22:00:45.134" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.106" endtime="20201115 22:00:45.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.141" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.136" endtime="20201115 22:00:45.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.143" endtime="20201115 22:00:45.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.098" endtime="20201115 22:00:45.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.092" endtime="20201115 22:00:45.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.167" endtime="20201115 22:00:45.507"></status>
</kw>
<msg timestamp="20201115 22:00:45.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043189667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043196222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.164" endtime="20201115 22:00:45.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043189667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043196222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.516" endtime="20201115 22:00:45.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.534" endtime="20201115 22:00:45.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.156" endtime="20201115 22:00:45.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.151" endtime="20201115 22:00:45.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.554" level="INFO">${RESULT} = [{'time': 0.043196222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.554999999998368e-06, 'source_diff': 6.554999999998368e-06}, {'time': 0.043409972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:45.544" endtime="20201115 22:00:45.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.585" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:45.556" endtime="20201115 22:00:45.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.596" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:45.594" endtime="20201115 22:00:45.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.602" level="INFO">VALUE: [6.554999999998368e-06, 6.540999999998798e-06, 6.5690000000048765e-06, 6.555999999997841e-06, 6.540999999998798e-06, 6.597000000004016e-06, 6.541999999998271e-06, 6.540999999998798e-06, 6.5279999999987015e-06, 6.540999999998798e-06, 6.541999999998271e-06, 6.5690000000048765e-06, 6.555999999997841e-06, 6.5829999999975075e-06, 6.541000000005737e-06, 6.52800000000564e-06, 6.5279999999987015e-06, 6.486999999999465e-06, 6.541999999998271e-06, 6.5969999999970774e-06, 6.568999999997938e-06, 6.5279999999987015e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.554999999998368e-06, 6.499999999999562e-06, 6.555999999997841e-06, 6.499999999999562e-06, 6.541999999998271e-06, 6.555999999997841e-06, 6.555999999997841e-06, 6.540999999998798e-06, 6.555999999997841e-06, 6.541999999998271e-06, 6.554999999998368e-06, 6.540999999998798e-06, 6.568999999997938e-06, 6.540999999998798e-06, 6.52800000000564e-06, 6.624999999996217e-06, 6.54200000000521e-06, 6.472000000000422e-06, 6.554999999998368e-06, 6.55600000000478e-06, 6.541999999998271e-06, 6.583999999996981e-06, 6.569999999997411e-06, 6.555000000005307e-06, 6.583000000004446e-06, 6.54200000000521e-06]</msg>
<status status="PASS" starttime="20201115 22:00:45.598" endtime="20201115 22:00:45.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.587" endtime="20201115 22:00:45.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.611" endtime="20201115 22:00:45.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.619" endtime="20201115 22:00:45.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.615" endtime="20201115 22:00:45.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.606" endtime="20201115 22:00:45.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.087" endtime="20201115 22:00:45.645"></status>
</kw>
<msg timestamp="20201115 22:00:45.645" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.668" endtime="20201115 22:00:45.692"></status>
</kw>
<msg timestamp="20201115 22:00:45.694" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.665" endtime="20201115 22:00:45.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.700" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.696" endtime="20201115 22:00:45.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.702" endtime="20201115 22:00:45.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.658" endtime="20201115 22:00:45.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.652" endtime="20201115 22:00:45.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.726" endtime="20201115 22:00:46.066"></status>
</kw>
<msg timestamp="20201115 22:00:46.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042806292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042812861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.722" endtime="20201115 22:00:46.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042806292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042812861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.075" endtime="20201115 22:00:46.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.094" endtime="20201115 22:00:46.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.715" endtime="20201115 22:00:46.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.710" endtime="20201115 22:00:46.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:46.113" level="INFO">${RESULT} = [{'time': 0.042812861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.568999999997938e-06, 'source_diff': 6.568999999997938e-06}, {'time': 0.043020556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:46.104" endtime="20201115 22:00:46.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.144" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:46.116" endtime="20201115 22:00:46.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.155" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:46.153" endtime="20201115 22:00:46.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.161" level="INFO">VALUE: [6.568999999997938e-06, 6.57000000000435e-06, 6.554999999998368e-06, 6.5279999999987015e-06, 6.5829999999975075e-06, 6.568999999997938e-06, 6.541999999998271e-06, 6.57000000000435e-06, 6.568999999997938e-06, 6.554999999998368e-06, 6.541999999998271e-06, 6.555999999997841e-06, 6.55600000000478e-06, 6.541999999998271e-06, 6.555000000005307e-06, 6.540999999998798e-06, 6.541999999998271e-06, 6.624999999996217e-06, 6.55600000000478e-06, 6.499999999999562e-06, 6.624999999996217e-06, 6.541999999998271e-06, 6.568999999997938e-06, 6.472000000000422e-06, 6.554999999998368e-06, 6.540999999998798e-06, 6.541000000005737e-06, 6.55600000000478e-06, 6.540999999998798e-06, 6.541999999998271e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.554999999998368e-06, 6.597000000004016e-06, 6.57000000000435e-06, 6.55600000000478e-06, 6.499999999999562e-06, 6.555999999997841e-06, 6.555999999997841e-06, 6.513999999999132e-06, 6.554999999998368e-06, 6.568999999997938e-06, 6.554999999998368e-06, 6.52800000000564e-06, 6.485999999999992e-06, 6.5279999999987015e-06, 6.5829999999975075e-06, 6.58400000000392e-06, 6.540999999998798e-06, 6.540999999998798e-06]</msg>
<status status="PASS" starttime="20201115 22:00:46.157" endtime="20201115 22:00:46.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.146" endtime="20201115 22:00:46.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.169" endtime="20201115 22:00:46.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.178" endtime="20201115 22:00:46.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.174" endtime="20201115 22:00:46.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.165" endtime="20201115 22:00:46.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.646" endtime="20201115 22:00:46.204"></status>
</kw>
<msg timestamp="20201115 22:00:46.204" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.227" endtime="20201115 22:00:46.251"></status>
</kw>
<msg timestamp="20201115 22:00:46.252" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.224" endtime="20201115 22:00:46.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.258" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.254" endtime="20201115 22:00:46.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.260" endtime="20201115 22:00:46.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.217" endtime="20201115 22:00:46.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.211" endtime="20201115 22:00:46.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.284" endtime="20201115 22:00:46.625"></status>
</kw>
<msg timestamp="20201115 22:00:46.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042819306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042825847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.281" endtime="20201115 22:00:46.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042819306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042825847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.635" endtime="20201115 22:00:46.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.654" endtime="20201115 22:00:46.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.273" endtime="20201115 22:00:46.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.268" endtime="20201115 22:00:46.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:46.675" level="INFO">${RESULT} = [{'time': 0.042825847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.540999999998798e-06, 'source_diff': 6.540999999998798e-06}, {'time': 0.043037694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:46.666" endtime="20201115 22:00:46.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.705" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:46.677" endtime="20201115 22:00:46.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.716" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:46.714" endtime="20201115 22:00:46.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.722" level="INFO">VALUE: [6.540999999998798e-06, 6.526999999999228e-06, 6.583000000004446e-06, 6.555999999997841e-06, 6.513999999999132e-06, 6.568999999997938e-06, 6.583000000004446e-06, 6.57000000000435e-06, 6.555999999997841e-06, 6.55600000000478e-06, 6.540999999998798e-06, 6.568999999997938e-06, 6.569999999997411e-06, 6.555999999997841e-06, 6.5279999999987015e-06, 6.625000000003156e-06, 6.555999999997841e-06, 6.54200000000521e-06, 6.555999999997841e-06, 6.554999999998368e-06, 6.513999999999132e-06, 6.554999999998368e-06, 6.5690000000048765e-06, 6.541999999998271e-06, 6.554999999998368e-06, 6.541999999998271e-06, 6.555999999997841e-06, 6.541999999998271e-06, 6.555999999997841e-06, 6.555000000005307e-06, 6.526999999999228e-06, 6.541999999998271e-06, 6.555999999997841e-06, 6.5969999999970774e-06, 6.52800000000564e-06, 6.568999999997938e-06, 6.610999999996647e-06, 6.555999999997841e-06, 6.5829999999975075e-06, 6.5279999999987015e-06, 6.611000000003586e-06, 6.555999999997841e-06, 6.555999999997841e-06, 6.554999999998368e-06, 6.554999999998368e-06, 6.541999999998271e-06, 6.583000000004446e-06, 6.540999999998798e-06, 6.610999999996647e-06, 6.54200000000521e-06]</msg>
<status status="PASS" starttime="20201115 22:00:46.719" endtime="20201115 22:00:46.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.707" endtime="20201115 22:00:46.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.732" endtime="20201115 22:00:46.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.741" endtime="20201115 22:00:46.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.737" endtime="20201115 22:00:46.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.727" endtime="20201115 22:00:46.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.205" endtime="20201115 22:00:46.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.018" endtime="20201115 22:00:46.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.017" endtime="20201115 22:00:46.768"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.773" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.796" endtime="20201115 22:00:46.820"></status>
</kw>
<msg timestamp="20201115 22:00:46.821" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.793" endtime="20201115 22:00:46.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.827" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.823" endtime="20201115 22:00:46.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.830" endtime="20201115 22:00:46.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.785" endtime="20201115 22:00:46.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.779" endtime="20201115 22:00:46.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.854" endtime="20201115 22:00:47.196"></status>
</kw>
<msg timestamp="20201115 22:00:47.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048476181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048482917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.851" endtime="20201115 22:00:47.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048476181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048482917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.206" endtime="20201115 22:00:47.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.224" endtime="20201115 22:00:47.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.843" endtime="20201115 22:00:47.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.839" endtime="20201115 22:00:47.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.242" level="INFO">${RESULT} = [{'time': 0.048482917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.048697014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:47.233" endtime="20201115 22:00:47.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.273" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:47.244" endtime="20201115 22:00:47.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.284" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:47.281" endtime="20201115 22:00:47.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.289" level="INFO">VALUE: [6.736000000000242e-06, 6.763999999999382e-06, 6.763999999999382e-06, 6.790999999999048e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.7369999999997154e-06, 6.7779999999989515e-06, 6.790999999999048e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.721999999993733e-06, 6.749999999999812e-06, 6.7919999999985214e-06, 6.749999999999812e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.7369999999997154e-06, 6.722000000000672e-06, 6.709000000000576e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.7640000000063205e-06, 6.736000000000242e-06, 6.7369999999997154e-06, 6.722000000000672e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.722999999993207e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.790999999999048e-06, 6.7230000000001455e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.7640000000063205e-06, 6.736000000000242e-06, 6.7230000000001455e-06, 6.736000000000242e-06, 6.763999999999382e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.736000000000242e-06]</msg>
<status status="PASS" starttime="20201115 22:00:47.286" endtime="20201115 22:00:47.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.274" endtime="20201115 22:00:47.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.298" endtime="20201115 22:00:47.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.307" endtime="20201115 22:00:47.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.302" endtime="20201115 22:00:47.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.294" endtime="20201115 22:00:47.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.774" endtime="20201115 22:00:47.332"></status>
</kw>
<msg timestamp="20201115 22:00:47.333" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.356" endtime="20201115 22:00:47.380"></status>
</kw>
<msg timestamp="20201115 22:00:47.382" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.353" endtime="20201115 22:00:47.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.389" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.384" endtime="20201115 22:00:47.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.391" endtime="20201115 22:00:47.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.346" endtime="20201115 22:00:47.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.340" endtime="20201115 22:00:47.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.415" endtime="20201115 22:00:47.756"></status>
</kw>
<msg timestamp="20201115 22:00:47.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043188861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043195611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.411" endtime="20201115 22:00:47.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043188861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043195611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.766" endtime="20201115 22:00:47.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.784" endtime="20201115 22:00:47.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.404" endtime="20201115 22:00:47.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.399" endtime="20201115 22:00:47.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.803" level="INFO">${RESULT} = [{'time': 0.043195611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.043419694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:47.794" endtime="20201115 22:00:47.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.834" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:47.806" endtime="20201115 22:00:47.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.845" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:47.843" endtime="20201115 22:00:47.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.850" level="INFO">VALUE: [6.749999999999812e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.763999999999382e-06, 6.8200000000046e-06, 6.735999999993303e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.695000000001006e-06, 6.763999999999382e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.735999999993303e-06, 6.7230000000001455e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.790999999999048e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.694000000001532e-06, 6.749999999999812e-06, 6.7230000000001455e-06, 6.7640000000063205e-06, 6.736000000000242e-06, 6.652999999995357e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.722000000000672e-06, 6.763999999999382e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.805999999998091e-06, 6.736000000000242e-06]</msg>
<status status="PASS" starttime="20201115 22:00:47.847" endtime="20201115 22:00:47.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.836" endtime="20201115 22:00:47.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.859" endtime="20201115 22:00:47.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.868" endtime="20201115 22:00:47.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.864" endtime="20201115 22:00:47.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.855" endtime="20201115 22:00:47.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.334" endtime="20201115 22:00:47.894"></status>
</kw>
<msg timestamp="20201115 22:00:47.894" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.918" endtime="20201115 22:00:47.942"></status>
</kw>
<msg timestamp="20201115 22:00:47.943" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.914" endtime="20201115 22:00:47.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.949" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.945" endtime="20201115 22:00:47.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.952" endtime="20201115 22:00:47.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.907" endtime="20201115 22:00:47.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.901" endtime="20201115 22:00:47.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.975" endtime="20201115 22:00:48.306"></status>
</kw>
<msg timestamp="20201115 22:00:48.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043757278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:47.972" endtime="20201115 22:00:48.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043757278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:48.310" endtime="20201115 22:00:48.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.319" endtime="20201115 22:00:48.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.965" endtime="20201115 22:00:48.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.960" endtime="20201115 22:00:48.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.328" level="INFO">${RESULT} = [{'time': 0.043764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.043989514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:00:48.323" endtime="20201115 22:00:48.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.341" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:48.329" endtime="20201115 22:00:48.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.347" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:48.345" endtime="20201115 22:00:48.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.349" level="INFO">VALUE: [6.722000000000672e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.722000000000672e-06, 6.667000000001866e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.7919999999985214e-06, 6.736000000000242e-06, 6.7779999999989515e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.709000000000576e-06, 6.763999999999382e-06, 6.736000000000242e-06, 6.7369999999997154e-06, 6.736000000000242e-06, 6.7369999999997154e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.763999999999382e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.735999999993303e-06, 6.763999999999382e-06, 6.722000000000672e-06, 6.707999999994163e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.804999999998618e-06, 6.749999999999812e-06, 6.7230000000001455e-06, 6.7230000000001455e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.722000000000672e-06]</msg>
<status status="PASS" starttime="20201115 22:00:48.348" endtime="20201115 22:00:48.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.342" endtime="20201115 22:00:48.350"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.353" endtime="20201115 22:00:48.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:48.357" endtime="20201115 22:00:48.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.355" endtime="20201115 22:00:48.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.351" endtime="20201115 22:00:48.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.895" endtime="20201115 22:00:48.379"></status>
</kw>
<msg timestamp="20201115 22:00:48.379" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.390" endtime="20201115 22:00:48.411"></status>
</kw>
<msg timestamp="20201115 22:00:48.412" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.389" endtime="20201115 22:00:48.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.415" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.413" endtime="20201115 22:00:48.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.416" endtime="20201115 22:00:48.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.385" endtime="20201115 22:00:48.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.383" endtime="20201115 22:00:48.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.427" endtime="20201115 22:00:48.760"></status>
</kw>
<msg timestamp="20201115 22:00:48.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025473764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0254805, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:48.425" endtime="20201115 22:00:48.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025473764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0254805, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:48.769" endtime="20201115 22:00:48.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.787" endtime="20201115 22:00:48.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.422" endtime="20201115 22:00:48.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.420" endtime="20201115 22:00:48.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.809" level="INFO">${RESULT} = [{'time': 0.0254805, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.025704764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:48.800" endtime="20201115 22:00:48.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.839" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:48.811" endtime="20201115 22:00:48.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.850" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:48.848" endtime="20201115 22:00:48.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.856" level="INFO">VALUE: [6.736000000000242e-06, 6.736000000000242e-06, 6.763999999999382e-06, 6.749999999999812e-06, 6.778000000002421e-06, 6.749999999999812e-06, 6.750000000003281e-06, 6.750000000003281e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.790999999999048e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.750000000003281e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.763999999999382e-06, 6.805999999998091e-06, 6.736000000000242e-06, 6.804999999998618e-06, 6.694000000001532e-06, 6.763999999999382e-06, 6.805999999998091e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.694000000001532e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.679999999995023e-06, 6.680000000001962e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.749999999999812e-06]</msg>
<status status="PASS" starttime="20201115 22:00:48.853" endtime="20201115 22:00:48.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.841" endtime="20201115 22:00:48.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.865" endtime="20201115 22:00:48.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:48.874" endtime="20201115 22:00:48.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.870" endtime="20201115 22:00:48.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.860" endtime="20201115 22:00:48.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.380" endtime="20201115 22:00:48.900"></status>
</kw>
<msg timestamp="20201115 22:00:48.900" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.924" endtime="20201115 22:00:48.947"></status>
</kw>
<msg timestamp="20201115 22:00:48.948" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.920" endtime="20201115 22:00:48.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.955" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.951" endtime="20201115 22:00:48.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.957" endtime="20201115 22:00:48.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.913" endtime="20201115 22:00:48.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.907" endtime="20201115 22:00:48.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.981" endtime="20201115 22:00:49.321"></status>
</kw>
<msg timestamp="20201115 22:00:49.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042808889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042815653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.977" endtime="20201115 22:00:49.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042808889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042815653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.330" endtime="20201115 22:00:49.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.348" endtime="20201115 22:00:49.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.970" endtime="20201115 22:00:49.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.965" endtime="20201115 22:00:49.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.368" level="INFO">${RESULT} = [{'time': 0.042815653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.763999999999382e-06, 'source_diff': 6.763999999999382e-06}, {'time': 0.043042597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:49.359" endtime="20201115 22:00:49.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.398" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:49.370" endtime="20201115 22:00:49.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.409" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:49.407" endtime="20201115 22:00:49.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.415" level="INFO">VALUE: [6.763999999999382e-06, 6.749999999999812e-06, 6.7230000000001455e-06, 6.7919999999985214e-06, 6.722000000000672e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.7369999999997154e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.708000000001102e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.7369999999997154e-06, 6.7369999999997154e-06, 6.790999999999048e-06, 6.749999999999812e-06, 6.7369999999997154e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.7779999999989515e-06]</msg>
<status status="PASS" starttime="20201115 22:00:49.412" endtime="20201115 22:00:49.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.400" endtime="20201115 22:00:49.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.429" endtime="20201115 22:00:49.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.437" endtime="20201115 22:00:49.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.433" endtime="20201115 22:00:49.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.424" endtime="20201115 22:00:49.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.901" endtime="20201115 22:00:49.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.770" endtime="20201115 22:00:49.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.769" endtime="20201115 22:00:49.464"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.469" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.493" endtime="20201115 22:00:49.517"></status>
</kw>
<msg timestamp="20201115 22:00:49.519" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.489" endtime="20201115 22:00:49.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.525" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.521" endtime="20201115 22:00:49.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.527" endtime="20201115 22:00:49.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.482" endtime="20201115 22:00:49.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.476" endtime="20201115 22:00:49.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.551" endtime="20201115 22:00:49.892"></status>
</kw>
<msg timestamp="20201115 22:00:49.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049350528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049357486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.548" endtime="20201115 22:00:49.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049350528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049357486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.902" endtime="20201115 22:00:49.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.920" endtime="20201115 22:00:49.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.540" endtime="20201115 22:00:49.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.536" endtime="20201115 22:00:49.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.937" level="INFO">${RESULT} = [{'time': 0.049357486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.049591208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:49.928" endtime="20201115 22:00:49.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.968" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:49.939" endtime="20201115 22:00:49.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.979" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:49.976" endtime="20201115 22:00:49.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.985" level="INFO">VALUE: [6.958000000001352e-06, 6.943999999994843e-06, 6.916000000002642e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.930000000002212e-06, 6.8879999999965635e-06, 6.986000000000492e-06, 6.917000000002116e-06, 6.916000000002642e-06, 6.917000000002116e-06, 6.944000000001782e-06, 6.930000000002212e-06, 6.902999999995607e-06, 6.972000000000922e-06, 6.931000000001686e-06, 6.915999999995703e-06, 6.958999999993887e-06, 6.929999999995273e-06, 6.931000000001686e-06, 6.986000000000492e-06, 6.916999999995177e-06, 6.945000000001256e-06, 6.958000000001352e-06, 6.944999999994317e-06, 6.944000000001782e-06, 6.986000000000492e-06, 6.945000000001256e-06, 6.931000000001686e-06, 6.874999999996467e-06, 6.944000000001782e-06, 6.929999999995273e-06, 6.931000000001686e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.930999999994747e-06, 6.930000000002212e-06, 6.958000000001352e-06, 6.915999999995703e-06, 6.931000000001686e-06, 6.930000000002212e-06, 6.944000000001782e-06, 6.972000000000922e-06, 6.889000000002976e-06, 6.8880000000035024e-06, 6.945000000001256e-06, 6.917000000002116e-06, 6.944000000001782e-06, 6.986000000000492e-06, 6.916000000002642e-06]</msg>
<status status="PASS" starttime="20201115 22:00:49.981" endtime="20201115 22:00:49.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.970" endtime="20201115 22:00:49.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.994" endtime="20201115 22:00:49.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.003" endtime="20201115 22:00:50.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.998" endtime="20201115 22:00:50.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.989" endtime="20201115 22:00:50.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.470" endtime="20201115 22:00:50.028"></status>
</kw>
<msg timestamp="20201115 22:00:50.029" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.052" endtime="20201115 22:00:50.077"></status>
</kw>
<msg timestamp="20201115 22:00:50.078" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.049" endtime="20201115 22:00:50.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.085" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.081" endtime="20201115 22:00:50.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.087" endtime="20201115 22:00:50.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.042" endtime="20201115 22:00:50.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.036" endtime="20201115 22:00:50.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.111" endtime="20201115 22:00:50.451"></status>
</kw>
<msg timestamp="20201115 22:00:50.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042867528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042874486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.107" endtime="20201115 22:00:50.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042867528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042874486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.461" endtime="20201115 22:00:50.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.479" endtime="20201115 22:00:50.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.100" endtime="20201115 22:00:50.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.095" endtime="20201115 22:00:50.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.498" level="INFO">${RESULT} = [{'time': 0.042874486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.04310725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:50.489" endtime="20201115 22:00:50.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.529" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:50.500" endtime="20201115 22:00:50.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.541" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:50.539" endtime="20201115 22:00:50.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.547" level="INFO">VALUE: [6.958000000001352e-06, 7.000000000000062e-06, 6.917000000002116e-06, 6.958000000001352e-06, 6.945000000001256e-06, 6.972000000000922e-06, 6.930999999994747e-06, 6.9730000000003955e-06, 6.943999999994843e-06, 6.945000000001256e-06, 6.917000000002116e-06, 6.930000000002212e-06, 6.930000000002212e-06, 6.957999999994413e-06, 6.944000000001782e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.875000000003406e-06, 6.931000000001686e-06, 6.929999999995273e-06, 6.943999999994843e-06, 6.958999999993887e-06, 6.943999999994843e-06, 6.972000000000922e-06, 6.931000000001686e-06, 6.944000000001782e-06, 6.945000000001256e-06, 7.000000000000062e-06, 6.917000000002116e-06, 6.945000000001256e-06, 6.9730000000003955e-06, 6.958000000001352e-06, 6.986000000000492e-06, 6.875000000003406e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.944999999994317e-06, 6.930000000002212e-06, 6.929999999995273e-06, 6.944000000001782e-06, 6.930000000002212e-06, 6.930000000002212e-06, 6.944000000001782e-06, 6.931000000001686e-06, 6.930999999994747e-06, 6.930000000002212e-06, 6.931000000001686e-06, 6.931000000001686e-06, 6.930000000002212e-06, 6.861000000003836e-06]</msg>
<status status="PASS" starttime="20201115 22:00:50.544" endtime="20201115 22:00:50.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.532" endtime="20201115 22:00:50.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.556" endtime="20201115 22:00:50.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.565" endtime="20201115 22:00:50.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.560" endtime="20201115 22:00:50.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.552" endtime="20201115 22:00:50.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.030" endtime="20201115 22:00:50.591"></status>
</kw>
<msg timestamp="20201115 22:00:50.591" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.615" endtime="20201115 22:00:50.640"></status>
</kw>
<msg timestamp="20201115 22:00:50.641" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.611" endtime="20201115 22:00:50.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.647" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.643" endtime="20201115 22:00:50.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.650" endtime="20201115 22:00:50.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.604" endtime="20201115 22:00:50.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.598" endtime="20201115 22:00:50.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.674" endtime="20201115 22:00:51.014"></status>
</kw>
<msg timestamp="20201115 22:00:51.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043514625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043521556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.670" endtime="20201115 22:00:51.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043514625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043521556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.023" endtime="20201115 22:00:51.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.041" endtime="20201115 22:00:51.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.663" endtime="20201115 22:00:51.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.658" endtime="20201115 22:00:51.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.063" level="INFO">${RESULT} = [{'time': 0.043521556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.931000000001686e-06, 'source_diff': 6.931000000001686e-06}, {'time': 0.043752, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:00:51.053" endtime="20201115 22:00:51.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.094" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:51.065" endtime="20201115 22:00:51.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.105" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:51.103" endtime="20201115 22:00:51.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.110" level="INFO">VALUE: [6.931000000001686e-06, 6.944000000001782e-06, 6.945000000001256e-06, 6.930000000002212e-06, 6.9019999999961335e-06, 6.929999999995273e-06, 6.944000000001782e-06, 6.903000000002546e-06, 6.945000000001256e-06, 6.917000000002116e-06, 6.944000000001782e-06, 6.958000000001352e-06, 6.916999999995177e-06, 6.945000000001256e-06, 6.931000000001686e-06, 6.916000000002642e-06, 6.943999999994843e-06, 6.957999999994413e-06, 6.944000000001782e-06, 6.902999999995607e-06, 6.944000000001782e-06, 6.888999999996037e-06, 6.958000000001352e-06, 6.945000000001256e-06, 6.944999999994317e-06, 6.945000000001256e-06, 6.944000000001782e-06, 6.930000000002212e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.930000000002212e-06, 6.930999999994747e-06, 6.931000000001686e-06, 6.929999999995273e-06, 6.888999999996037e-06, 6.958000000001352e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.930999999994747e-06, 6.945000000001256e-06, 6.958000000001352e-06, 6.931000000001686e-06, 6.929999999995273e-06, 6.930999999994747e-06, 6.944000000001782e-06, 6.944000000001782e-06, 6.944000000001782e-06, 6.944999999994317e-06, 6.945000000001256e-06]</msg>
<status status="PASS" starttime="20201115 22:00:51.107" endtime="20201115 22:00:51.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.096" endtime="20201115 22:00:51.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.119" endtime="20201115 22:00:51.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.128" endtime="20201115 22:00:51.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.123" endtime="20201115 22:00:51.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.115" endtime="20201115 22:00:51.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.592" endtime="20201115 22:00:51.153"></status>
</kw>
<msg timestamp="20201115 22:00:51.154" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.177" endtime="20201115 22:00:51.203"></status>
</kw>
<msg timestamp="20201115 22:00:51.204" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.174" endtime="20201115 22:00:51.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.210" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.206" endtime="20201115 22:00:51.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.213" endtime="20201115 22:00:51.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.167" endtime="20201115 22:00:51.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.161" endtime="20201115 22:00:51.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.236" endtime="20201115 22:00:51.576"></status>
</kw>
<msg timestamp="20201115 22:00:51.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043428458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043435347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.233" endtime="20201115 22:00:51.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043428458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043435347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.586" endtime="20201115 22:00:51.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.605" endtime="20201115 22:00:51.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.226" endtime="20201115 22:00:51.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.221" endtime="20201115 22:00:51.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.625" level="INFO">${RESULT} = [{'time': 0.043435347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888999999996037e-06, 'source_diff': 6.888999999996037e-06}, {'time': 0.043663764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:51.615" endtime="20201115 22:00:51.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.655" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:51.627" endtime="20201115 22:00:51.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.666" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:51.664" endtime="20201115 22:00:51.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.672" level="INFO">VALUE: [6.888999999996037e-06, 6.986000000000492e-06, 6.958000000001352e-06, 6.916999999995177e-06, 6.902000000003072e-06, 6.930000000002212e-06, 6.902000000003072e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.929999999995273e-06, 6.944000000001782e-06, 6.945000000001256e-06, 6.958000000001352e-06, 6.986000000000492e-06, 6.916999999995177e-06, 6.931000000001686e-06, 6.931000000001686e-06, 6.860999999996897e-06, 6.931000000001686e-06, 6.917000000002116e-06, 6.972000000000922e-06, 6.917000000002116e-06, 6.972000000000922e-06, 6.902999999995607e-06, 6.931000000001686e-06, 6.874999999996467e-06, 6.931000000001686e-06, 6.903000000002546e-06, 6.931000000001686e-06, 6.929999999995273e-06, 6.944000000001782e-06, 6.958000000001352e-06, 6.916999999995177e-06, 6.861000000003836e-06, 6.929999999995273e-06, 6.944000000001782e-06, 6.958000000001352e-06, 6.944000000001782e-06, 6.945000000001256e-06, 6.944000000001782e-06, 6.9730000000003955e-06, 6.971999999993983e-06, 6.917000000002116e-06, 6.8469999999973274e-06, 6.931000000001686e-06, 6.931000000001686e-06, 6.875000000003406e-06, 6.957999999994413e-06, 6.931000000001686e-06, 6.944000000001782e-06]</msg>
<status status="PASS" starttime="20201115 22:00:51.668" endtime="20201115 22:00:51.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.657" endtime="20201115 22:00:51.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.681" endtime="20201115 22:00:51.683"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.689" endtime="20201115 22:00:51.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.685" endtime="20201115 22:00:51.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.676" endtime="20201115 22:00:51.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.155" endtime="20201115 22:00:51.715"></status>
</kw>
<msg timestamp="20201115 22:00:51.715" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.739" endtime="20201115 22:00:51.764"></status>
</kw>
<msg timestamp="20201115 22:00:51.765" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.736" endtime="20201115 22:00:51.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.771" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.767" endtime="20201115 22:00:51.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.774" endtime="20201115 22:00:51.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.728" endtime="20201115 22:00:51.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.722" endtime="20201115 22:00:51.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.797" endtime="20201115 22:00:52.100"></status>
</kw>
<msg timestamp="20201115 22:00:52.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043232417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043239361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.794" endtime="20201115 22:00:52.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043232417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043239361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.110" endtime="20201115 22:00:52.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.129" endtime="20201115 22:00:52.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.787" endtime="20201115 22:00:52.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.782" endtime="20201115 22:00:52.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.148" level="INFO">${RESULT} = [{'time': 0.043239361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.943999999994843e-06, 'source_diff': 6.943999999994843e-06}, {'time': 0.043467889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:52.139" endtime="20201115 22:00:52.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.178" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:52.150" endtime="20201115 22:00:52.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.190" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:52.187" endtime="20201115 22:00:52.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.195" level="INFO">VALUE: [6.943999999994843e-06, 6.903000000002546e-06, 6.944000000001782e-06, 6.931000000001686e-06, 6.930000000002212e-06, 6.903000000002546e-06, 6.930000000002212e-06, 6.943999999994843e-06, 6.943999999994843e-06, 6.944000000001782e-06, 6.944000000001782e-06, 6.930000000002212e-06, 6.959000000000826e-06, 6.945000000001256e-06, 6.929999999995273e-06, 6.958000000001352e-06, 6.944000000001782e-06, 6.972000000000922e-06, 6.931000000001686e-06, 6.943999999994843e-06, 6.944000000001782e-06, 6.945000000001256e-06, 6.944000000001782e-06, 6.986000000000492e-06, 6.945000000001256e-06, 6.972000000000922e-06, 6.930000000002212e-06, 6.945000000001256e-06, 6.931000000001686e-06, 6.945000000001256e-06, 6.944000000001782e-06, 6.944000000001782e-06, 6.944000000001782e-06, 6.971999999993983e-06, 6.930000000002212e-06, 6.931000000001686e-06, 6.930000000002212e-06, 6.931000000001686e-06, 6.931000000001686e-06, 6.944000000001782e-06, 6.945000000001256e-06, 6.930000000002212e-06, 6.945000000001256e-06, 6.944000000001782e-06, 6.888999999996037e-06, 6.958000000001352e-06, 6.943999999994843e-06, 6.945000000001256e-06, 7.000000000000062e-06, 6.888999999996037e-06]</msg>
<status status="PASS" starttime="20201115 22:00:52.192" endtime="20201115 22:00:52.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.180" endtime="20201115 22:00:52.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.204" endtime="20201115 22:00:52.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.213" endtime="20201115 22:00:52.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.208" endtime="20201115 22:00:52.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.199" endtime="20201115 22:00:52.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.717" endtime="20201115 22:00:52.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.467" endtime="20201115 22:00:52.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.465" endtime="20201115 22:00:52.239"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.244" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.268" endtime="20201115 22:00:52.293"></status>
</kw>
<msg timestamp="20201115 22:00:52.294" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.264" endtime="20201115 22:00:52.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.296" endtime="20201115 22:00:52.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.302" endtime="20201115 22:00:52.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.257" endtime="20201115 22:00:52.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.251" endtime="20201115 22:00:52.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.327" endtime="20201115 22:00:52.670"></status>
</kw>
<msg timestamp="20201115 22:00:52.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048305847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048312986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.324" endtime="20201115 22:00:52.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048305847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048312986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.680" endtime="20201115 22:00:52.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.698" endtime="20201115 22:00:52.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.316" endtime="20201115 22:00:52.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.311" endtime="20201115 22:00:52.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.716" level="INFO">${RESULT} = [{'time': 0.048312986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.048554764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:52.707" endtime="20201115 22:00:52.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.747" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:52.718" endtime="20201115 22:00:52.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.758" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:52.756" endtime="20201115 22:00:52.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.764" level="INFO">VALUE: [7.139000000003226e-06, 7.125000000003656e-06, 7.124999999996717e-06, 7.125000000003656e-06, 7.152999999995857e-06, 7.1380000000037525e-06, 7.097999999997051e-06, 7.124999999996717e-06, 7.181000000001936e-06, 7.1519999999963835e-06, 7.1519999999963835e-06, 7.125000000003656e-06, 7.111000000004086e-06, 7.124999999996717e-06, 7.124999999996717e-06, 7.125000000003656e-06, 7.167000000002366e-06, 7.139000000003226e-06, 7.165999999995953e-06, 7.125000000003656e-06, 7.181000000001936e-06, 7.139000000003226e-06, 7.138999999996287e-06, 7.0830000000049465e-06, 7.124999999996717e-06, 7.0829999999980076e-06, 7.153000000002796e-06, 7.138999999996287e-06, 7.11200000000356e-06, 7.153000000002796e-06, 7.125000000003656e-06, 7.138999999996287e-06, 7.138999999996287e-06, 7.0829999999980076e-06, 7.110999999997147e-06, 7.139000000003226e-06, 7.1519999999963835e-06, 7.068999999998438e-06, 7.124999999996717e-06, 7.124999999996717e-06, 7.139000000003226e-06, 7.153000000002796e-06, 7.083999999997481e-06, 7.124999999996717e-06, 7.111999999996621e-06, 7.138999999996287e-06, 7.124999999996717e-06, 7.110999999997147e-06, 7.138999999996287e-06, 7.125000000003656e-06]</msg>
<status status="PASS" starttime="20201115 22:00:52.760" endtime="20201115 22:00:52.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.749" endtime="20201115 22:00:52.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.773" endtime="20201115 22:00:52.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.781" endtime="20201115 22:00:52.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.777" endtime="20201115 22:00:52.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.768" endtime="20201115 22:00:52.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.245" endtime="20201115 22:00:52.807"></status>
</kw>
<msg timestamp="20201115 22:00:52.807" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.831" endtime="20201115 22:00:52.855"></status>
</kw>
<msg timestamp="20201115 22:00:52.857" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.827" endtime="20201115 22:00:52.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.864" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.859" endtime="20201115 22:00:52.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.866" endtime="20201115 22:00:52.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.820" endtime="20201115 22:00:52.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.814" endtime="20201115 22:00:52.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.890" endtime="20201115 22:00:53.230"></status>
</kw>
<msg timestamp="20201115 22:00:53.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043349361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0433565, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:52.886" endtime="20201115 22:00:53.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043349361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0433565, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:53.239" endtime="20201115 22:00:53.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.257" endtime="20201115 22:00:53.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.879" endtime="20201115 22:00:53.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.874" endtime="20201115 22:00:53.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.279" level="INFO">${RESULT} = [{'time': 0.0433565, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.138999999996287e-06, 'source_diff': 7.138999999996287e-06}, {'time': 0.043602667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:53.270" endtime="20201115 22:00:53.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.309" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:53.281" endtime="20201115 22:00:53.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.320" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:53.318" endtime="20201115 22:00:53.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.326" level="INFO">VALUE: [7.138999999996287e-06, 7.138999999996287e-06, 7.125000000003656e-06, 7.153000000002796e-06, 7.0830000000049465e-06, 7.124999999996717e-06, 7.139000000003226e-06, 7.125000000003656e-06, 7.180000000002462e-06, 7.167000000002366e-06, 7.0969999999975775e-06, 7.153000000002796e-06, 7.111999999996621e-06, 7.152000000003322e-06, 7.097999999997051e-06, 7.110999999997147e-06, 7.124999999996717e-06, 7.152000000003322e-06, 7.139000000003226e-06, 7.125000000003656e-06, 7.125000000003656e-06, 7.110999999997147e-06, 7.0969999999975775e-06, 7.139000000003226e-06, 7.111000000004086e-06, 7.139000000003226e-06, 7.111999999996621e-06, 7.110999999997147e-06, 7.125000000003656e-06, 7.125000000003656e-06, 7.111000000004086e-06, 7.0829999999980076e-06, 7.153000000002796e-06, 7.138999999996287e-06, 7.125000000003656e-06, 7.124999999996717e-06, 7.166000000002892e-06, 7.124999999996717e-06, 7.139000000003226e-06, 7.124999999996717e-06, 7.138999999996287e-06, 7.125000000003656e-06, 7.139000000003226e-06, 7.138999999996287e-06, 7.125000000003656e-06, 7.153000000002796e-06, 7.0969999999975775e-06, 7.125000000003656e-06, 7.125000000003656e-06, 7.124999999996717e-06]</msg>
<status status="PASS" starttime="20201115 22:00:53.323" endtime="20201115 22:00:53.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.311" endtime="20201115 22:00:53.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.335" endtime="20201115 22:00:53.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.343" endtime="20201115 22:00:53.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.339" endtime="20201115 22:00:53.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.330" endtime="20201115 22:00:53.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.808" endtime="20201115 22:00:53.369"></status>
</kw>
<msg timestamp="20201115 22:00:53.369" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.394" endtime="20201115 22:00:53.418"></status>
</kw>
<msg timestamp="20201115 22:00:53.419" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.389" endtime="20201115 22:00:53.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.426" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.422" endtime="20201115 22:00:53.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.428" endtime="20201115 22:00:53.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.382" endtime="20201115 22:00:53.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.376" endtime="20201115 22:00:53.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.452" endtime="20201115 22:00:53.792"></status>
</kw>
<msg timestamp="20201115 22:00:53.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043510208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043517347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.448" endtime="20201115 22:00:53.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043510208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043517347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.801" endtime="20201115 22:00:53.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.820" endtime="20201115 22:00:53.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.441" endtime="20201115 22:00:53.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.436" endtime="20201115 22:00:53.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.839" level="INFO">${RESULT} = [{'time': 0.043517347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.138999999996287e-06, 'source_diff': 7.138999999996287e-06}, {'time': 0.043764764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:53.830" endtime="20201115 22:00:53.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.869" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:53.841" endtime="20201115 22:00:53.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.881" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:53.878" endtime="20201115 22:00:53.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.886" level="INFO">VALUE: [7.138999999996287e-06, 7.138999999996287e-06, 7.125000000003656e-06, 7.125000000003656e-06, 7.125000000003656e-06, 7.111000000004086e-06, 7.124999999996717e-06, 7.179999999995523e-06, 7.125000000003656e-06, 7.139000000003226e-06, 7.221999999994233e-06, 7.139000000003226e-06, 7.097000000004516e-06, 7.0969999999975775e-06, 7.0969999999975775e-06, 7.124999999996717e-06, 7.139000000003226e-06, 7.125000000003656e-06, 7.193999999995093e-06, 7.124999999996717e-06, 7.152000000003322e-06, 7.209000000001076e-06, 7.139000000003226e-06, 7.124999999996717e-06, 7.124999999996717e-06, 7.110999999997147e-06, 7.139000000003226e-06, 7.153000000002796e-06, 7.124999999996717e-06, 7.110999999997147e-06, 7.1380000000037525e-06, 7.08400000000442e-06, 7.124999999996717e-06, 7.0969999999975775e-06, 7.125000000003656e-06, 7.124999999996717e-06, 7.152999999995857e-06, 7.1380000000037525e-06, 7.153000000002796e-06, 7.125000000003656e-06, 7.166999999995427e-06, 7.208000000001602e-06, 7.152999999995857e-06, 7.153000000002796e-06, 7.0829999999980076e-06, 7.139000000003226e-06, 7.124999999996717e-06, 7.166000000002892e-06, 7.138999999996287e-06, 7.167000000002366e-06]</msg>
<status status="PASS" starttime="20201115 22:00:53.883" endtime="20201115 22:00:53.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.871" endtime="20201115 22:00:53.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.895" endtime="20201115 22:00:53.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.904" endtime="20201115 22:00:53.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.899" endtime="20201115 22:00:53.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.891" endtime="20201115 22:00:53.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.371" endtime="20201115 22:00:53.929"></status>
</kw>
<msg timestamp="20201115 22:00:53.930" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.954" endtime="20201115 22:00:53.979"></status>
</kw>
<msg timestamp="20201115 22:00:53.981" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.950" endtime="20201115 22:00:53.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.987" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.983" endtime="20201115 22:00:53.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.989" endtime="20201115 22:00:53.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.943" endtime="20201115 22:00:53.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.937" endtime="20201115 22:00:53.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.013" endtime="20201115 22:00:54.355"></status>
</kw>
<msg timestamp="20201115 22:00:54.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043965319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043972431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.010" endtime="20201115 22:00:54.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043965319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043972431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.364" endtime="20201115 22:00:54.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.383" endtime="20201115 22:00:54.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.002" endtime="20201115 22:00:54.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.997" endtime="20201115 22:00:54.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.402" level="INFO">${RESULT} = [{'time': 0.043972431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.111999999996621e-06, 'source_diff': 7.111999999996621e-06}, {'time': 0.044211472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:54.393" endtime="20201115 22:00:54.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.433" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:54.404" endtime="20201115 22:00:54.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.444" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:54.441" endtime="20201115 22:00:54.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.449" level="INFO">VALUE: [7.111999999996621e-06, 7.139000000003226e-06, 7.138999999996287e-06, 7.153000000002796e-06, 7.139000000003226e-06, 7.152999999995857e-06, 7.124999999996717e-06, 7.124999999996717e-06, 7.125000000003656e-06, 7.139000000003226e-06, 7.0829999999980076e-06, 7.124999999996717e-06, 7.124999999996717e-06, 7.139000000003226e-06, 7.0969999999975775e-06, 7.124999999996717e-06, 7.139000000003226e-06, 7.139000000003226e-06, 7.2230000000006456e-06, 7.111000000004086e-06, 7.139000000003226e-06, 7.153000000002796e-06, 7.0969999999975775e-06, 7.124999999996717e-06, 7.180000000002462e-06, 7.152999999995857e-06, 7.111000000004086e-06, 7.125000000003656e-06, 7.139000000003226e-06, 7.153000000002796e-06, 7.180999999994997e-06, 7.138999999996287e-06, 7.139000000003226e-06, 7.124999999996717e-06, 7.110999999997147e-06, 7.125000000003656e-06, 7.125000000003656e-06, 7.110999999997147e-06, 7.124999999996717e-06, 7.124999999996717e-06, 7.125000000003656e-06, 7.139000000003226e-06, 7.138999999996287e-06, 7.125000000003656e-06, 7.152999999995857e-06, 7.125000000003656e-06, 7.181000000001936e-06, 7.111000000004086e-06, 7.167000000002366e-06, 7.124999999996717e-06]</msg>
<status status="PASS" starttime="20201115 22:00:54.446" endtime="20201115 22:00:54.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.434" endtime="20201115 22:00:54.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.458" endtime="20201115 22:00:54.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.471" endtime="20201115 22:00:54.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.467" endtime="20201115 22:00:54.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.454" endtime="20201115 22:00:54.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.932" endtime="20201115 22:00:54.497"></status>
</kw>
<msg timestamp="20201115 22:00:54.497" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.521" endtime="20201115 22:00:54.546"></status>
</kw>
<msg timestamp="20201115 22:00:54.547" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.517" endtime="20201115 22:00:54.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.553" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.549" endtime="20201115 22:00:54.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.556" endtime="20201115 22:00:54.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.510" endtime="20201115 22:00:54.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.504" endtime="20201115 22:00:54.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.579" endtime="20201115 22:00:54.923"></status>
</kw>
<msg timestamp="20201115 22:00:54.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043089958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043097083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.576" endtime="20201115 22:00:54.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043089958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043097083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.932" endtime="20201115 22:00:54.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.950" endtime="20201115 22:00:54.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.569" endtime="20201115 22:00:54.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.564" endtime="20201115 22:00:54.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.969" level="INFO">${RESULT} = [{'time': 0.043097083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.125000000003656e-06, 'source_diff': 7.125000000003656e-06}, {'time': 0.043342194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:54.960" endtime="20201115 22:00:54.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.000" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:54.972" endtime="20201115 22:00:55.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.011" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:55.009" endtime="20201115 22:00:55.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.017" level="INFO">VALUE: [7.125000000003656e-06, 7.125000000003656e-06, 7.11200000000356e-06, 7.097000000004516e-06, 7.139000000003226e-06, 7.124999999996717e-06, 7.138999999996287e-06, 7.110999999997147e-06, 7.138999999996287e-06, 7.195000000001506e-06, 7.110999999997147e-06, 7.139000000003226e-06, 7.1519999999963835e-06, 7.124999999996717e-06, 7.0969999999975775e-06, 7.124999999996717e-06, 7.111000000004086e-06, 7.1379999999968136e-06, 7.138999999996287e-06, 7.138999999996287e-06, 7.110999999997147e-06, 7.055999999998341e-06, 7.11200000000356e-06, 7.1379999999968136e-06, 7.124999999996717e-06, 7.139000000003226e-06, 7.153000000002796e-06, 7.165999999995953e-06, 7.11200000000356e-06, 7.153000000002796e-06, 7.069999999997911e-06, 7.124999999996717e-06, 7.138999999996287e-06, 7.11200000000356e-06, 7.124999999996717e-06, 7.111000000004086e-06, 7.138999999996287e-06, 7.124999999996717e-06, 7.152999999995857e-06, 7.138999999996287e-06, 7.139000000003226e-06, 7.0969999999975775e-06, 7.125000000003656e-06, 7.124999999996717e-06, 7.167000000002366e-06, 7.110999999997147e-06, 7.138999999996287e-06, 7.124999999996717e-06, 7.0969999999975775e-06, 7.152999999995857e-06]</msg>
<status status="PASS" starttime="20201115 22:00:55.014" endtime="20201115 22:00:55.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.002" endtime="20201115 22:00:55.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.026" endtime="20201115 22:00:55.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.035" endtime="20201115 22:00:55.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.030" endtime="20201115 22:00:55.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.022" endtime="20201115 22:00:55.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.498" endtime="20201115 22:00:55.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.242" endtime="20201115 22:00:55.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.240" endtime="20201115 22:00:55.061"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.066" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.090" endtime="20201115 22:00:55.116"></status>
</kw>
<msg timestamp="20201115 22:00:55.117" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.086" endtime="20201115 22:00:55.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.123" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.119" endtime="20201115 22:00:55.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.125" endtime="20201115 22:00:55.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.079" endtime="20201115 22:00:55.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.073" endtime="20201115 22:00:55.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.149" endtime="20201115 22:00:55.453"></status>
</kw>
<msg timestamp="20201115 22:00:55.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048627833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048635153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.146" endtime="20201115 22:00:55.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048627833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048635153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.462" endtime="20201115 22:00:55.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.481" endtime="20201115 22:00:55.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.138" endtime="20201115 22:00:55.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.134" endtime="20201115 22:00:55.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.498" level="INFO">${RESULT} = [{'time': 0.048635153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.319999999998161e-06, 'source_diff': 7.319999999998161e-06}, {'time': 0.048886819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:55.489" endtime="20201115 22:00:55.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.529" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:55.500" endtime="20201115 22:00:55.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.540" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:55.537" endtime="20201115 22:00:55.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.546" level="INFO">VALUE: [7.319999999998161e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.304999999999118e-06, 7.305999999998591e-06, 7.30600000000553e-06, 7.3469999999978275e-06, 7.305999999998591e-06, 7.318999999998688e-06, 7.347000000004766e-06, 7.3469999999978275e-06, 7.3330000000051965e-06, 7.3200000000051e-06, 7.333999999997731e-06, 7.3469999999978275e-06, 7.333999999997731e-06, 7.3330000000051965e-06, 7.332999999998258e-06, 7.305999999998591e-06, 7.3469999999978275e-06, 7.3330000000051965e-06, 7.304999999999118e-06, 7.319999999998161e-06, 7.319999999998161e-06, 7.33400000000467e-06, 7.332999999998258e-06, 7.33400000000467e-06, 7.333999999997731e-06, 7.304999999999118e-06, 7.319999999998161e-06, 7.3330000000051965e-06, 7.2919999999990215e-06, 7.332999999998258e-06, 7.347000000004766e-06, 7.2919999999990215e-06, 7.332999999998258e-06, 7.3469999999978275e-06, 7.3330000000051965e-06, 7.333999999997731e-06, 7.33400000000467e-06, 7.3190000000056266e-06, 7.361000000004336e-06, 7.319999999998161e-06, 7.3190000000056266e-06, 7.3200000000051e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.276999999999978e-06, 7.332999999998258e-06, 7.34800000000424e-06]</msg>
<status status="PASS" starttime="20201115 22:00:55.542" endtime="20201115 22:00:55.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.531" endtime="20201115 22:00:55.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.555" endtime="20201115 22:00:55.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.564" endtime="20201115 22:00:55.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.559" endtime="20201115 22:00:55.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.551" endtime="20201115 22:00:55.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.068" endtime="20201115 22:00:55.589"></status>
</kw>
<msg timestamp="20201115 22:00:55.590" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.613" endtime="20201115 22:00:55.639"></status>
</kw>
<msg timestamp="20201115 22:00:55.640" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.610" endtime="20201115 22:00:55.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.646" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.642" endtime="20201115 22:00:55.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.649" endtime="20201115 22:00:55.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.603" endtime="20201115 22:00:55.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.597" endtime="20201115 22:00:55.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.672" endtime="20201115 22:00:56.014"></status>
</kw>
<msg timestamp="20201115 22:00:56.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043327722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043335125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.669" endtime="20201115 22:00:56.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043327722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043335125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.024" endtime="20201115 22:00:56.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.042" endtime="20201115 22:00:56.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.662" endtime="20201115 22:00:56.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.657" endtime="20201115 22:00:56.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.061" level="INFO">${RESULT} = [{'time': 0.043335125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.403000000003046e-06, 'source_diff': 7.403000000003046e-06}, {'time': 0.043592556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:56.052" endtime="20201115 22:00:56.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.092" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:56.063" endtime="20201115 22:00:56.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.104" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:56.101" endtime="20201115 22:00:56.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.109" level="INFO">VALUE: [7.403000000003046e-06, 7.333999999997731e-06, 7.318999999998688e-06, 7.2779999999994516e-06, 7.305999999998591e-06, 7.333999999997731e-06, 7.318999999998688e-06, 7.3469999999978275e-06, 7.347000000004766e-06, 7.3200000000051e-06, 7.33400000000467e-06, 7.2779999999994516e-06, 7.375000000003906e-06, 7.332999999998258e-06, 7.3330000000051965e-06, 7.333999999997731e-06, 7.2919999999990215e-06, 7.319999999998161e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.304999999999118e-06, 7.319999999998161e-06, 7.305999999998591e-06, 7.318999999998688e-06, 7.318999999998688e-06, 7.3469999999978275e-06, 7.2919999999990215e-06, 7.3200000000051e-06, 7.318999999998688e-06, 7.332999999998258e-06, 7.318999999998688e-06, 7.3200000000051e-06, 7.3469999999978275e-06, 7.3330000000051965e-06, 7.3469999999978275e-06, 7.2919999999990215e-06, 7.3330000000051965e-06, 7.360999999997397e-06, 7.347999999997301e-06, 7.332999999998258e-06, 7.318999999998688e-06, 7.3200000000051e-06, 7.319999999998161e-06, 7.333999999997731e-06, 7.3330000000051965e-06, 7.319999999998161e-06, 7.332999999998258e-06, 7.3330000000051965e-06, 7.347000000004766e-06, 7.333999999997731e-06]</msg>
<status status="PASS" starttime="20201115 22:00:56.106" endtime="20201115 22:00:56.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.094" endtime="20201115 22:00:56.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.118" endtime="20201115 22:00:56.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.127" endtime="20201115 22:00:56.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.122" endtime="20201115 22:00:56.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.114" endtime="20201115 22:00:56.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.591" endtime="20201115 22:00:56.152"></status>
</kw>
<msg timestamp="20201115 22:00:56.153" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.176" endtime="20201115 22:00:56.203"></status>
</kw>
<msg timestamp="20201115 22:00:56.205" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.173" endtime="20201115 22:00:56.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.207" endtime="20201115 22:00:56.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.213" endtime="20201115 22:00:56.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.165" endtime="20201115 22:00:56.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.159" endtime="20201115 22:00:56.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.237" endtime="20201115 22:00:56.578"></status>
</kw>
<msg timestamp="20201115 22:00:56.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043185181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0431925, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:56.234" endtime="20201115 22:00:56.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043185181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0431925, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:56.587" endtime="20201115 22:00:56.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.605" endtime="20201115 22:00:56.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.226" endtime="20201115 22:00:56.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.222" endtime="20201115 22:00:56.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.625" level="INFO">${RESULT} = [{'time': 0.0431925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.043455625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:56.616" endtime="20201115 22:00:56.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.656" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:56.628" endtime="20201115 22:00:56.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.667" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:56.665" endtime="20201115 22:00:56.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.673" level="INFO">VALUE: [7.318999999998688e-06, 7.332999999998258e-06, 7.318999999998688e-06, 7.36200000000381e-06, 7.333999999997731e-06, 7.402999999996107e-06, 7.2779999999994516e-06, 7.318999999998688e-06, 7.318999999998688e-06, 7.33400000000467e-06, 7.318999999998688e-06, 7.333999999997731e-06, 7.389000000003476e-06, 7.304999999999118e-06, 7.305999999998591e-06, 7.34800000000424e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.318999999998688e-06, 7.318999999998688e-06, 7.3200000000051e-06, 7.3330000000051965e-06, 7.3200000000051e-06, 7.305999999998591e-06, 7.332999999998258e-06, 7.333999999997731e-06, 7.374999999996967e-06, 7.318999999998688e-06, 7.3330000000051965e-06, 7.3190000000056266e-06, 7.332999999998258e-06, 7.2919999999990215e-06, 7.389000000003476e-06, 7.318999999998688e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.29200000000596e-06, 7.3469999999978275e-06, 7.33400000000467e-06, 7.319999999998161e-06, 7.332999999998258e-06, 7.333999999997731e-06, 7.318999999998688e-06, 7.33400000000467e-06, 7.318999999998688e-06, 7.3469999999978275e-06, 7.3190000000056266e-06, 7.305999999998591e-06, 7.3200000000051e-06, 7.305999999998591e-06]</msg>
<status status="PASS" starttime="20201115 22:00:56.670" endtime="20201115 22:00:56.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.658" endtime="20201115 22:00:56.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.682" endtime="20201115 22:00:56.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.690" endtime="20201115 22:00:56.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.686" endtime="20201115 22:00:56.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.677" endtime="20201115 22:00:56.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.154" endtime="20201115 22:00:56.716"></status>
</kw>
<msg timestamp="20201115 22:00:56.716" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.741" endtime="20201115 22:00:56.767"></status>
</kw>
<msg timestamp="20201115 22:00:56.769" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.738" endtime="20201115 22:00:56.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.775" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.771" endtime="20201115 22:00:56.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.777" endtime="20201115 22:00:56.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.730" endtime="20201115 22:00:56.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.724" endtime="20201115 22:00:56.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.801" endtime="20201115 22:00:57.141"></status>
</kw>
<msg timestamp="20201115 22:00:57.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044563319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044570639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.798" endtime="20201115 22:00:57.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044563319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044570639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.151" endtime="20201115 22:00:57.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.170" endtime="20201115 22:00:57.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.790" endtime="20201115 22:00:57.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.786" endtime="20201115 22:00:57.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.189" level="INFO">${RESULT} = [{'time': 0.044570639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.3200000000051e-06, 'source_diff': 7.3200000000051e-06}, {'time': 0.044827722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201115 22:00:57.180" endtime="20201115 22:00:57.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.220" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:57.191" endtime="20201115 22:00:57.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.231" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:57.228" endtime="20201115 22:00:57.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.236" level="INFO">VALUE: [7.3200000000051e-06, 7.332999999998258e-06, 7.319999999998161e-06, 7.360999999997397e-06, 7.332999999998258e-06, 7.3330000000051965e-06, 7.30600000000553e-06, 7.319999999998161e-06, 7.318999999998688e-06, 7.318999999998688e-06, 7.318999999998688e-06, 7.3330000000051965e-06, 7.3330000000051965e-06, 7.319999999998161e-06, 7.319999999998161e-06, 7.403000000003046e-06, 7.332999999998258e-06, 7.318999999998688e-06, 7.332999999998258e-06, 7.333999999997731e-06, 7.332999999998258e-06, 7.3200000000051e-06, 7.33400000000467e-06, 7.3469999999978275e-06, 7.360999999997397e-06, 7.332999999998258e-06, 7.33400000000467e-06, 7.304999999999118e-06, 7.36200000000381e-06, 7.332999999998258e-06, 7.3190000000056266e-06, 7.318999999998688e-06, 7.3469999999978275e-06, 7.263999999999882e-06, 7.319999999998161e-06, 7.3469999999978275e-06, 7.305999999998591e-06, 7.3469999999978275e-06, 7.389000000003476e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.318999999998688e-06, 7.318999999998688e-06, 7.319999999998161e-06, 7.318999999998688e-06, 7.347000000004766e-06, 7.305000000006057e-06, 7.332999999998258e-06, 7.319999999998161e-06, 7.318999999998688e-06]</msg>
<status status="PASS" starttime="20201115 22:00:57.233" endtime="20201115 22:00:57.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.222" endtime="20201115 22:00:57.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.245" endtime="20201115 22:00:57.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.254" endtime="20201115 22:00:57.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.249" endtime="20201115 22:00:57.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.241" endtime="20201115 22:00:57.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.718" endtime="20201115 22:00:57.279"></status>
</kw>
<msg timestamp="20201115 22:00:57.280" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.303" endtime="20201115 22:00:57.328"></status>
</kw>
<msg timestamp="20201115 22:00:57.329" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.300" endtime="20201115 22:00:57.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.336" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.332" endtime="20201115 22:00:57.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.338" endtime="20201115 22:00:57.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.293" endtime="20201115 22:00:57.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.287" endtime="20201115 22:00:57.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.362" endtime="20201115 22:00:57.704"></status>
</kw>
<msg timestamp="20201115 22:00:57.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042934083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042941403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.358" endtime="20201115 22:00:57.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042934083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042941403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.714" endtime="20201115 22:00:57.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.733" endtime="20201115 22:00:57.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.351" endtime="20201115 22:00:57.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.346" endtime="20201115 22:00:57.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.754" level="INFO">${RESULT} = [{'time': 0.042941403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.3200000000051e-06, 'source_diff': 7.3200000000051e-06}, {'time': 0.043192653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201115 22:00:57.745" endtime="20201115 22:00:57.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.858" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:57.756" endtime="20201115 22:00:57.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.869" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:57.867" endtime="20201115 22:00:57.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.874" level="INFO">VALUE: [7.3200000000051e-06, 7.333999999997731e-06, 7.319999999998161e-06, 7.30600000000553e-06, 7.318999999998688e-06, 7.318999999998688e-06, 7.34800000000424e-06, 7.319999999998161e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.333999999997731e-06, 7.360999999997397e-06, 7.389000000003476e-06, 7.3200000000051e-06, 7.318999999998688e-06, 7.33400000000467e-06, 7.347000000004766e-06, 7.3330000000051965e-06, 7.332999999998258e-06, 7.333999999997731e-06, 7.318999999998688e-06, 7.3330000000051965e-06, 7.318999999998688e-06, 7.333999999997731e-06, 7.263999999999882e-06, 7.304999999999118e-06, 7.318999999998688e-06, 7.3330000000051965e-06, 7.347000000004766e-06, 7.318999999998688e-06, 7.305000000006057e-06, 7.305999999998591e-06, 7.319999999998161e-06, 7.318999999998688e-06, 7.263999999999882e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.318999999998688e-06, 7.360999999997397e-06, 7.375000000003906e-06, 7.332999999998258e-06, 7.347999999997301e-06, 7.319999999998161e-06, 7.3200000000051e-06, 7.2919999999990215e-06, 7.305999999998591e-06, 7.304999999999118e-06, 7.374999999996967e-06, 7.304999999999118e-06, 7.33400000000467e-06]</msg>
<status status="PASS" starttime="20201115 22:00:57.871" endtime="20201115 22:00:57.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.859" endtime="20201115 22:00:57.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.883" endtime="20201115 22:00:57.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.892" endtime="20201115 22:00:57.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.887" endtime="20201115 22:00:57.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.879" endtime="20201115 22:00:57.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.281" endtime="20201115 22:00:57.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.064" endtime="20201115 22:00:57.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.062" endtime="20201115 22:00:57.919"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.924" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.948" endtime="20201115 22:00:57.975"></status>
</kw>
<msg timestamp="20201115 22:00:57.976" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.945" endtime="20201115 22:00:57.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.982" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.978" endtime="20201115 22:00:57.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.985" endtime="20201115 22:00:57.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.936" endtime="20201115 22:00:57.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.930" endtime="20201115 22:00:57.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.009" endtime="20201115 22:00:58.350"></status>
</kw>
<msg timestamp="20201115 22:00:58.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050236306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050243819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.006" endtime="20201115 22:00:58.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050236306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050243819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.360" endtime="20201115 22:00:58.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.378" endtime="20201115 22:00:58.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.999" endtime="20201115 22:00:58.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.994" endtime="20201115 22:00:58.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.396" level="INFO">${RESULT} = [{'time': 0.050243819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.513000000000658e-06, 'source_diff': 7.513000000000658e-06}, {'time': 0.050516792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:58.387" endtime="20201115 22:00:58.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.426" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:58.398" endtime="20201115 22:00:58.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.438" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:58.435" endtime="20201115 22:00:58.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.443" level="INFO">VALUE: [7.513000000000658e-06, 7.500000000000562e-06, 7.486000000000992e-06, 7.5419999999992715e-06, 7.569999999998411e-06, 7.540999999999798e-06, 7.514000000000132e-06, 7.444000000002282e-06, 7.513000000000658e-06, 7.514000000000132e-06, 7.499999999993623e-06, 7.500000000000562e-06, 7.5969999999980775e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.527000000000228e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.471999999994483e-06, 7.500000000000562e-06, 7.540999999999798e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.540999999999798e-06, 7.527999999999702e-06, 7.5830000000054465e-06, 7.597000000005016e-06, 7.554999999999368e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.5419999999992715e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.57000000000535e-06, 7.500000000000562e-06, 7.472999999993957e-06, 7.5559999999919025e-06, 7.514000000000132e-06, 7.513000000000658e-06]</msg>
<status status="PASS" starttime="20201115 22:00:58.440" endtime="20201115 22:00:58.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.428" endtime="20201115 22:00:58.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.452" endtime="20201115 22:00:58.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.462" endtime="20201115 22:00:58.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.457" endtime="20201115 22:00:58.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.447" endtime="20201115 22:00:58.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.925" endtime="20201115 22:00:58.488"></status>
</kw>
<msg timestamp="20201115 22:00:58.488" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.512" endtime="20201115 22:00:58.540"></status>
</kw>
<msg timestamp="20201115 22:00:58.541" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.508" endtime="20201115 22:00:58.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.548" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.543" endtime="20201115 22:00:58.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.550" endtime="20201115 22:00:58.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.501" endtime="20201115 22:00:58.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.495" endtime="20201115 22:00:58.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.575" endtime="20201115 22:00:58.915"></status>
</kw>
<msg timestamp="20201115 22:00:58.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04460375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044611194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:58.571" endtime="20201115 22:00:58.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04460375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044611194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:58.924" endtime="20201115 22:00:58.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.943" endtime="20201115 22:00:58.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.564" endtime="20201115 22:00:58.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.559" endtime="20201115 22:00:58.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.961" level="INFO">${RESULT} = [{'time': 0.044611194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.444000000002282e-06, 'source_diff': 7.444000000002282e-06}, {'time': 0.044879583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:58.951" endtime="20201115 22:00:58.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.991" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:58.963" endtime="20201115 22:00:58.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.003" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:59.000" endtime="20201115 22:00:59.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.008" level="INFO">VALUE: [7.444000000002282e-06, 7.514000000000132e-06, 7.555999999998841e-06, 7.472000000001422e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.471999999994483e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.500000000000562e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.459000000001326e-06, 7.459000000001326e-06, 7.554999999999368e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.527000000000228e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.444000000002282e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.527000000000228e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.471999999994483e-06, 7.472000000001422e-06, 7.5419999999992715e-06, 7.500000000000562e-06, 7.486000000000992e-06, 7.514000000000132e-06, 7.527000000000228e-06, 7.472000000001422e-06, 7.514000000000132e-06, 7.499999999993623e-06, 7.527999999999702e-06, 7.486000000000992e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.514000000000132e-06]</msg>
<status status="PASS" starttime="20201115 22:00:59.005" endtime="20201115 22:00:59.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.993" endtime="20201115 22:00:59.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.017" endtime="20201115 22:00:59.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.026" endtime="20201115 22:00:59.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.021" endtime="20201115 22:00:59.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.013" endtime="20201115 22:00:59.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.489" endtime="20201115 22:00:59.051"></status>
</kw>
<msg timestamp="20201115 22:00:59.052" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.077" endtime="20201115 22:00:59.104"></status>
</kw>
<msg timestamp="20201115 22:00:59.105" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.072" endtime="20201115 22:00:59.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.112" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.108" endtime="20201115 22:00:59.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.114" endtime="20201115 22:00:59.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.065" endtime="20201115 22:00:59.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.058" endtime="20201115 22:00:59.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.140" endtime="20201115 22:00:59.481"></status>
</kw>
<msg timestamp="20201115 22:00:59.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044923625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044931153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.136" endtime="20201115 22:00:59.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044923625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044931153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.491" endtime="20201115 22:00:59.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.509" endtime="20201115 22:00:59.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.127" endtime="20201115 22:00:59.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.122" endtime="20201115 22:00:59.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.527" level="INFO">${RESULT} = [{'time': 0.044931153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.045199347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:59.518" endtime="20201115 22:00:59.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.558" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:59.529" endtime="20201115 22:00:59.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.569" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:59.566" endtime="20201115 22:00:59.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.575" level="INFO">VALUE: [7.527999999999702e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.486000000000992e-06, 7.5419999999992715e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.513000000000658e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.540999999999798e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.513000000000658e-06, 7.486000000000992e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.597999999997551e-06, 7.568999999998938e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.486000000000992e-06, 7.472000000001422e-06, 7.430999999995247e-06, 7.540999999999798e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.5280000000066405e-06]</msg>
<status status="PASS" starttime="20201115 22:00:59.571" endtime="20201115 22:00:59.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.559" endtime="20201115 22:00:59.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.584" endtime="20201115 22:00:59.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.592" endtime="20201115 22:00:59.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.588" endtime="20201115 22:00:59.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.579" endtime="20201115 22:00:59.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.053" endtime="20201115 22:00:59.618"></status>
</kw>
<msg timestamp="20201115 22:00:59.623" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.647" endtime="20201115 22:00:59.673"></status>
</kw>
<msg timestamp="20201115 22:00:59.675" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.644" endtime="20201115 22:00:59.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.681" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.677" endtime="20201115 22:00:59.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.684" endtime="20201115 22:00:59.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.636" endtime="20201115 22:00:59.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.630" endtime="20201115 22:00:59.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.708" endtime="20201115 22:01:00.054"></status>
</kw>
<msg timestamp="20201115 22:01:00.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047946944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047954458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.705" endtime="20201115 22:01:00.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047946944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047954458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.063" endtime="20201115 22:01:00.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.082" endtime="20201115 22:01:00.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.697" endtime="20201115 22:01:00.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.693" endtime="20201115 22:01:00.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:00.099" level="INFO">${RESULT} = [{'time': 0.047954458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.048228903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:00.090" endtime="20201115 22:01:00.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:00.132" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:00.102" endtime="20201115 22:01:00.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.143" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:01:00.141" endtime="20201115 22:01:00.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.149" level="INFO">VALUE: [7.514000000000132e-06, 7.513999999993193e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.486000000000992e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.486000000000992e-06, 7.527000000000228e-06, 7.514000000000132e-06, 7.486000000000992e-06, 7.527000000000228e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.569999999998411e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.486000000000992e-06, 7.554999999999368e-06, 7.5280000000066405e-06, 7.486000000000992e-06, 7.458999999994387e-06, 7.514000000000132e-06, 7.472000000001422e-06, 7.527000000000228e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.5419999999992715e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.5419999999992715e-06, 7.443999999995343e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.500000000000562e-06]</msg>
<status status="PASS" starttime="20201115 22:01:00.145" endtime="20201115 22:01:00.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.134" endtime="20201115 22:01:00.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.158" endtime="20201115 22:01:00.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.167" endtime="20201115 22:01:00.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.162" endtime="20201115 22:01:00.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.153" endtime="20201115 22:01:00.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.625" endtime="20201115 22:01:00.193"></status>
</kw>
<msg timestamp="20201115 22:01:00.193" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.217" endtime="20201115 22:01:00.242"></status>
</kw>
<msg timestamp="20201115 22:01:00.244" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.213" endtime="20201115 22:01:00.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.250" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.246" endtime="20201115 22:01:00.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.252" endtime="20201115 22:01:00.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.206" endtime="20201115 22:01:00.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.200" endtime="20201115 22:01:00.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.278" endtime="20201115 22:01:00.623"></status>
</kw>
<msg timestamp="20201115 22:01:00.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043139833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043147375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.275" endtime="20201115 22:01:00.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043139833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043147375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.633" endtime="20201115 22:01:00.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.651" endtime="20201115 22:01:00.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.268" endtime="20201115 22:01:00.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.262" endtime="20201115 22:01:00.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:00.670" level="INFO">${RESULT} = [{'time': 0.043147375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.043410361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:00.661" endtime="20201115 22:01:00.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:00.701" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:00.672" endtime="20201115 22:01:00.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.712" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:01:00.709" endtime="20201115 22:01:00.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.717" level="INFO">VALUE: [7.5419999999992715e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.457999999994913e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.513000000000658e-06, 7.514000000000132e-06, 7.5830000000054465e-06, 7.540999999999798e-06, 7.514000000000132e-06, 7.569000000005877e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.569999999998411e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.473000000000896e-06, 7.540999999999798e-06, 7.500000000000562e-06, 7.444000000002282e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.500000000000562e-06, 7.5280000000066405e-06, 7.58400000000492e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.5419999999992715e-06, 7.500000000000562e-06, 7.500000000000562e-06, 7.514000000000132e-06]</msg>
<status status="PASS" starttime="20201115 22:01:00.714" endtime="20201115 22:01:00.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.702" endtime="20201115 22:01:00.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.727" endtime="20201115 22:01:00.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.736" endtime="20201115 22:01:00.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.731" endtime="20201115 22:01:00.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.722" endtime="20201115 22:01:00.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.194" endtime="20201115 22:01:00.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.921" endtime="20201115 22:01:00.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.919" endtime="20201115 22:01:00.762"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.767" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.791" endtime="20201115 22:01:00.818"></status>
</kw>
<msg timestamp="20201115 22:01:00.819" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.787" endtime="20201115 22:01:00.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.826" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.822" endtime="20201115 22:01:00.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.828" endtime="20201115 22:01:00.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.780" endtime="20201115 22:01:00.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.774" endtime="20201115 22:01:00.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.852" endtime="20201115 22:01:01.165"></status>
</kw>
<msg timestamp="20201115 22:01:01.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048281833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048289556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.848" endtime="20201115 22:01:01.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048281833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048289556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.169" endtime="20201115 22:01:01.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.177" endtime="20201115 22:01:01.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.841" endtime="20201115 22:01:01.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.836" endtime="20201115 22:01:01.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.185" level="INFO">${RESULT} = [{'time': 0.048289556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.722999999994207e-06, 'source_diff': 7.722999999994207e-06}, {'time': 0.048574056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:01.181" endtime="20201115 22:01:01.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.199" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:01.186" endtime="20201115 22:01:01.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.204" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:01:01.203" endtime="20201115 22:01:01.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.207" level="INFO">VALUE: [7.722999999994207e-06, 7.737000000000716e-06, 7.652999999996357e-06, 7.694000000002532e-06, 7.667000000002866e-06, 7.736999999993777e-06, 7.722000000001672e-06, 7.735999999994303e-06, 7.722999999994207e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.721999999994733e-06, 7.791000000000048e-06, 7.777000000000478e-06, 7.723000000001146e-06, 7.709000000001576e-06, 7.708000000002102e-06, 7.694999999995067e-06, 7.736000000001242e-06, 7.722000000001672e-06, 7.777999999999952e-06, 7.709000000001576e-06, 7.708000000002102e-06, 7.707999999995163e-06, 7.708000000002102e-06, 7.764000000000382e-06, 7.695000000002006e-06, 7.708000000002102e-06, 7.680000000002962e-06, 7.708000000002102e-06, 7.722000000001672e-06, 7.721999999994733e-06, 7.693999999995593e-06, 7.681000000002436e-06, 7.708000000002102e-06, 7.708999999994637e-06, 7.709000000001576e-06, 7.722999999994207e-06, 7.708000000002102e-06, 7.722000000001672e-06, 7.736000000001242e-06, 7.750000000000812e-06, 7.709000000001576e-06, 7.708000000002102e-06, 7.708000000002102e-06, 7.708000000002102e-06, 7.709000000001576e-06, 7.722999999994207e-06, 7.707999999995163e-06, 7.680000000002962e-06]</msg>
<status status="PASS" starttime="20201115 22:01:01.205" endtime="20201115 22:01:01.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.200" endtime="20201115 22:01:01.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.211" endtime="20201115 22:01:01.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.215" endtime="20201115 22:01:01.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.213" endtime="20201115 22:01:01.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.209" endtime="20201115 22:01:01.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.768" endtime="20201115 22:01:01.240"></status>
</kw>
<msg timestamp="20201115 22:01:01.241" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.264" endtime="20201115 22:01:01.291"></status>
</kw>
<msg timestamp="20201115 22:01:01.292" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.261" endtime="20201115 22:01:01.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.298" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.294" endtime="20201115 22:01:01.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.301" endtime="20201115 22:01:01.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.253" endtime="20201115 22:01:01.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.247" endtime="20201115 22:01:01.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.324" endtime="20201115 22:01:01.672"></status>
</kw>
<msg timestamp="20201115 22:01:01.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042741819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042749542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.321" endtime="20201115 22:01:01.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042741819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042749542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.682" endtime="20201115 22:01:01.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.700" endtime="20201115 22:01:01.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.314" endtime="20201115 22:01:01.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.309" endtime="20201115 22:01:01.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.719" level="INFO">${RESULT} = [{'time': 0.042749542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.723000000001146e-06, 'source_diff': 7.723000000001146e-06}, {'time': 0.043028389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:01.710" endtime="20201115 22:01:01.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.750" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:01.722" endtime="20201115 22:01:01.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.762" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:01:01.760" endtime="20201115 22:01:01.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.767" level="INFO">VALUE: [7.723000000001146e-06, 7.708000000002102e-06, 7.707999999995163e-06, 7.723000000001146e-06, 7.707999999995163e-06, 7.708999999994637e-06, 7.723000000001146e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.695000000002006e-06, 7.709000000001576e-06, 7.708000000002102e-06, 7.694999999995067e-06, 7.694999999995067e-06, 7.722000000001672e-06, 7.667000000002866e-06, 7.707999999995163e-06, 7.721999999994733e-06, 7.666999999995927e-06, 7.694000000002532e-06, 7.723000000001146e-06, 7.693999999995593e-06, 7.722999999994207e-06, 7.666999999995927e-06, 7.694000000002532e-06, 7.709000000001576e-06, 7.722000000001672e-06, 7.709000000001576e-06, 7.709000000001576e-06, 7.694000000002532e-06, 7.777999999999952e-06, 7.667000000002866e-06, 7.736000000001242e-06, 7.694999999995067e-06, 7.721999999994733e-06, 7.709000000001576e-06, 7.722000000001672e-06, 7.764000000000382e-06, 7.708000000002102e-06, 7.693999999995593e-06, 7.736000000001242e-06, 7.722999999994207e-06, 7.708000000002102e-06, 7.667000000002866e-06, 7.735999999994303e-06, 7.693999999995593e-06, 7.722000000001672e-06, 7.735999999994303e-06]</msg>
<status status="PASS" starttime="20201115 22:01:01.764" endtime="20201115 22:01:01.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.753" endtime="20201115 22:01:01.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.776" endtime="20201115 22:01:01.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.785" endtime="20201115 22:01:01.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.781" endtime="20201115 22:01:01.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.772" endtime="20201115 22:01:01.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.242" endtime="20201115 22:01:01.811"></status>
</kw>
<msg timestamp="20201115 22:01:01.812" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.835" endtime="20201115 22:01:01.863"></status>
</kw>
<msg timestamp="20201115 22:01:01.864" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.832" endtime="20201115 22:01:01.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.870" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.866" endtime="20201115 22:01:01.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.873" endtime="20201115 22:01:01.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.824" endtime="20201115 22:01:01.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.819" endtime="20201115 22:01:01.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.897" endtime="20201115 22:01:02.250"></status>
</kw>
<msg timestamp="20201115 22:01:02.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043440222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043447944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.893" endtime="20201115 22:01:02.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043440222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043447944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.259" endtime="20201115 22:01:02.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.278" endtime="20201115 22:01:02.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.886" endtime="20201115 22:01:02.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.881" endtime="20201115 22:01:02.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.297" level="INFO">${RESULT} = [{'time': 0.043447944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.043724528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:02.288" endtime="20201115 22:01:02.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.330" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:02.300" endtime="20201115 22:01:02.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.341" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:01:02.339" endtime="20201115 22:01:02.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.347" level="INFO">VALUE: [7.722000000001672e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.721999999994733e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.694000000002532e-06, 7.707999999995163e-06, 7.737000000000716e-06, 7.694000000002532e-06, 7.721999999994733e-06, 7.763000000000908e-06, 7.791999999999522e-06, 7.722000000001672e-06, 7.695000000002006e-06, 7.708000000002102e-06, 7.708999999994637e-06, 7.736000000001242e-06, 7.777999999999952e-06, 7.737000000000716e-06, 7.652999999996357e-06, 7.708000000002102e-06, 7.723000000001146e-06, 7.708999999994637e-06, 7.681000000002436e-06, 7.721999999994733e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.736000000001242e-06, 7.707999999995163e-06, 7.708000000002102e-06, 7.722000000001672e-06, 7.693999999995593e-06, 7.736000000001242e-06, 7.709000000001576e-06, 7.723000000001146e-06, 7.722000000001672e-06, 7.667000000002866e-06, 7.722000000001672e-06, 7.708000000002102e-06, 7.709000000001576e-06, 7.708999999994637e-06, 7.679999999996023e-06, 7.722999999994207e-06, 7.709000000001576e-06, 7.709000000001576e-06, 7.708000000002102e-06, 7.777999999999952e-06]</msg>
<status status="PASS" starttime="20201115 22:01:02.344" endtime="20201115 22:01:02.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.332" endtime="20201115 22:01:02.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.356" endtime="20201115 22:01:02.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.364" endtime="20201115 22:01:02.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.360" endtime="20201115 22:01:02.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.351" endtime="20201115 22:01:02.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.813" endtime="20201115 22:01:02.390"></status>
</kw>
<msg timestamp="20201115 22:01:02.391" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.414" endtime="20201115 22:01:02.440"></status>
</kw>
<msg timestamp="20201115 22:01:02.441" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.411" endtime="20201115 22:01:02.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.448" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.444" endtime="20201115 22:01:02.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.450" endtime="20201115 22:01:02.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.403" endtime="20201115 22:01:02.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.397" endtime="20201115 22:01:02.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.474" endtime="20201115 22:01:02.825"></status>
</kw>
<msg timestamp="20201115 22:01:02.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043007889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043015611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.470" endtime="20201115 22:01:02.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043007889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043015611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.835" endtime="20201115 22:01:02.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.854" endtime="20201115 22:01:02.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.463" endtime="20201115 22:01:02.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.458" endtime="20201115 22:01:02.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.872" level="INFO">${RESULT} = [{'time': 0.043015611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.043292222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:02.862" endtime="20201115 22:01:02.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.903" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:02.874" endtime="20201115 22:01:02.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.914" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:01:02.912" endtime="20201115 22:01:02.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.920" level="INFO">VALUE: [7.722000000001672e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.709000000001576e-06, 7.693999999995593e-06, 7.764000000000382e-06, 7.638999999996787e-06, 7.722000000001672e-06, 7.708000000002102e-06, 7.721999999994733e-06, 7.693999999995593e-06, 7.680000000002962e-06, 7.721999999994733e-06, 7.737000000000716e-06, 7.722000000001672e-06, 7.736000000001242e-06, 7.695000000002006e-06, 7.694000000002532e-06, 7.722000000001672e-06, 7.721999999994733e-06, 7.708000000002102e-06, 7.695000000002006e-06, 7.722000000001672e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.694000000002532e-06, 7.722000000001672e-06, 7.708000000002102e-06, 7.681000000002436e-06, 7.708000000002102e-06, 7.721999999994733e-06, 7.694000000002532e-06, 7.708000000002102e-06, 7.722000000001672e-06, 7.681000000002436e-06, 7.750000000000812e-06, 7.707999999995163e-06, 7.695000000002006e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.707999999995163e-06, 7.722000000001672e-06, 7.708000000002102e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.735999999994303e-06, 7.736000000001242e-06, 7.708000000002102e-06, 7.695000000002006e-06]</msg>
<status status="PASS" starttime="20201115 22:01:02.917" endtime="20201115 22:01:02.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.905" endtime="20201115 22:01:02.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.929" endtime="20201115 22:01:02.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.938" endtime="20201115 22:01:02.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.933" endtime="20201115 22:01:02.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.924" endtime="20201115 22:01:02.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.392" endtime="20201115 22:01:02.964"></status>
</kw>
<msg timestamp="20201115 22:01:02.965" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.988" endtime="20201115 22:01:03.016"></status>
</kw>
<msg timestamp="20201115 22:01:03.017" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.985" endtime="20201115 22:01:03.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.023" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.019" endtime="20201115 22:01:03.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.025" endtime="20201115 22:01:03.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.978" endtime="20201115 22:01:03.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.972" endtime="20201115 22:01:03.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.049" endtime="20201115 22:01:03.402"></status>
</kw>
<msg timestamp="20201115 22:01:03.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043846667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043854361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.046" endtime="20201115 22:01:03.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043846667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043854361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.412" endtime="20201115 22:01:03.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.431" endtime="20201115 22:01:03.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.039" endtime="20201115 22:01:03.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.034" endtime="20201115 22:01:03.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:03.448" level="INFO">${RESULT} = [{'time': 0.043854361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.694000000002532e-06, 'source_diff': 7.694000000002532e-06}, {'time': 0.044142458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:03.439" endtime="20201115 22:01:03.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:03.480" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:03.451" endtime="20201115 22:01:03.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.491" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:01:03.489" endtime="20201115 22:01:03.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.497" level="INFO">VALUE: [7.694000000002532e-06, 7.764000000000382e-06, 7.722999999994207e-06, 7.709000000001576e-06, 7.723000000001146e-06, 7.708000000002102e-06, 7.693999999995593e-06, 7.709000000001576e-06, 7.721999999994733e-06, 7.723000000001146e-06, 7.736000000001242e-06, 7.777999999999952e-06, 7.737000000000716e-06, 7.709000000001576e-06, 7.708999999994637e-06, 7.723000000001146e-06, 7.722000000001672e-06, 7.736000000001242e-06, 7.708000000002102e-06, 7.708000000002102e-06, 7.709000000001576e-06, 7.721999999994733e-06, 7.695000000002006e-06, 7.721999999994733e-06, 7.722999999994207e-06, 7.735999999994303e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.736999999993777e-06, 7.709000000001576e-06, 7.722000000001672e-06, 7.707999999995163e-06, 7.708999999994637e-06, 7.750000000000812e-06, 7.721999999994733e-06, 7.709000000001576e-06, 7.707999999995163e-06, 7.722000000001672e-06, 7.708000000002102e-06, 7.721999999994733e-06, 7.723000000001146e-06, 7.695000000002006e-06, 7.721999999994733e-06, 7.708000000002102e-06, 7.723000000001146e-06, 7.735999999994303e-06, 7.723000000001146e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.707999999995163e-06]</msg>
<status status="PASS" starttime="20201115 22:01:03.494" endtime="20201115 22:01:03.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.482" endtime="20201115 22:01:03.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.506" endtime="20201115 22:01:03.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:03.514" endtime="20201115 22:01:03.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.510" endtime="20201115 22:01:03.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.501" endtime="20201115 22:01:03.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.966" endtime="20201115 22:01:03.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.765" endtime="20201115 22:01:03.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.763" endtime="20201115 22:01:03.541"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.546" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.569" endtime="20201115 22:01:03.597"></status>
</kw>
<msg timestamp="20201115 22:01:03.598" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.566" endtime="20201115 22:01:03.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.604" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.600" endtime="20201115 22:01:03.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.607" endtime="20201115 22:01:03.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.558" endtime="20201115 22:01:03.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.553" endtime="20201115 22:01:03.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.631" endtime="20201115 22:01:03.986"></status>
</kw>
<msg timestamp="20201115 22:01:03.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048495208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048503069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.628" endtime="20201115 22:01:03.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048495208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048503069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.995" endtime="20201115 22:01:04.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.014" endtime="20201115 22:01:04.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.621" endtime="20201115 22:01:04.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.616" endtime="20201115 22:01:04.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.032" level="INFO">${RESULT} = [{'time': 0.048503069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.861000000004836e-06, 'source_diff': 7.861000000004836e-06}, {'time': 0.048803014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:04.023" endtime="20201115 22:01:04.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.064" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:04.034" endtime="20201115 22:01:04.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.075" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:01:04.073" endtime="20201115 22:01:04.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.081" level="INFO">VALUE: [7.861000000004836e-06, 7.902999999996607e-06, 7.959000000001826e-06, 7.959000000001826e-06, 7.944000000002782e-06, 7.917000000003116e-06, 7.916999999996177e-06, 7.903000000003546e-06, 7.901999999997134e-06, 7.916999999996177e-06, 7.903000000003546e-06, 7.929999999996273e-06, 7.943999999995843e-06, 7.902999999996607e-06, 7.917000000003116e-06, 7.917000000003116e-06, 7.916000000003642e-06, 7.847000000005266e-06, 7.903000000003546e-06, 7.902999999996607e-06, 7.902000000004072e-06, 7.903000000003546e-06, 7.832999999998758e-06, 7.902999999996607e-06, 7.944000000002782e-06, 7.833000000005697e-06, 7.972000000001922e-06, 7.944000000002782e-06, 7.860999999997897e-06, 7.944999999995317e-06, 7.930999999995747e-06, 7.917000000003116e-06, 7.902000000004072e-06, 7.846999999998328e-06, 7.889000000003976e-06, 7.888999999997037e-06, 7.959000000001826e-06, 7.916999999996177e-06, 7.902999999996607e-06, 7.958000000002352e-06, 7.888999999997037e-06, 7.945000000002256e-06, 7.888999999997037e-06, 7.903000000003546e-06, 7.917000000003116e-06, 7.916999999996177e-06, 7.930000000003212e-06, 7.917000000003116e-06, 7.888999999997037e-06, 7.916999999996177e-06]</msg>
<status status="PASS" starttime="20201115 22:01:04.078" endtime="20201115 22:01:04.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.066" endtime="20201115 22:01:04.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.090" endtime="20201115 22:01:04.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.098" endtime="20201115 22:01:04.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.094" endtime="20201115 22:01:04.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.085" endtime="20201115 22:01:04.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.547" endtime="20201115 22:01:04.124"></status>
</kw>
<msg timestamp="20201115 22:01:04.124" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.148" endtime="20201115 22:01:04.175"></status>
</kw>
<msg timestamp="20201115 22:01:04.176" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.145" endtime="20201115 22:01:04.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.183" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.178" endtime="20201115 22:01:04.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.186" endtime="20201115 22:01:04.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.137" endtime="20201115 22:01:04.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.131" endtime="20201115 22:01:04.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.209" endtime="20201115 22:01:04.540"></status>
</kw>
<msg timestamp="20201115 22:01:04.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043078, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043085917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:04.206" endtime="20201115 22:01:04.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043078, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043085917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:04.544" endtime="20201115 22:01:04.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.552" endtime="20201115 22:01:04.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.199" endtime="20201115 22:01:04.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.194" endtime="20201115 22:01:04.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.561" level="INFO">${RESULT} = [{'time': 0.043085917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}, {'time': 0.043382514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:04.556" endtime="20201115 22:01:04.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.575" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:04.562" endtime="20201115 22:01:04.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.581" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:01:04.580" endtime="20201115 22:01:04.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.584" level="INFO">VALUE: [7.917000000003116e-06, 7.902999999996607e-06, 7.972000000001922e-06, 7.888000000004503e-06, 7.916999999996177e-06, 7.861999999997371e-06, 7.902999999996607e-06, 7.916999999996177e-06, 7.972000000001922e-06, 7.903000000003546e-06, 7.916000000003642e-06, 7.916000000003642e-06, 7.889000000003976e-06, 7.916999999996177e-06, 7.902000000004072e-06, 7.888999999997037e-06, 7.943999999995843e-06, 7.901999999997134e-06, 7.930999999995747e-06, 7.903000000003546e-06, 7.916999999996177e-06, 7.903000000003546e-06, 7.902999999996607e-06, 7.902999999996607e-06, 7.903000000003546e-06, 7.902999999996607e-06, 7.930000000003212e-06, 7.902000000004072e-06, 7.902000000004072e-06, 7.847000000005266e-06, 7.930000000003212e-06, 7.916999999996177e-06, 7.889000000003976e-06, 7.915999999996703e-06, 7.958999999994887e-06, 7.957999999995413e-06, 7.930999999995747e-06, 7.915999999996703e-06, 7.888999999997037e-06, 7.902000000004072e-06, 7.915999999996703e-06, 7.915999999996703e-06, 7.944000000002782e-06, 7.929999999996273e-06, 7.915999999996703e-06, 7.887999999997564e-06, 7.903000000003546e-06, 7.902999999996607e-06, 7.929999999996273e-06, 7.916999999996177e-06]</msg>
<status status="PASS" starttime="20201115 22:01:04.582" endtime="20201115 22:01:04.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.576" endtime="20201115 22:01:04.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.588" endtime="20201115 22:01:04.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.592" endtime="20201115 22:01:04.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.590" endtime="20201115 22:01:04.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.586" endtime="20201115 22:01:04.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.126" endtime="20201115 22:01:04.613"></status>
</kw>
<msg timestamp="20201115 22:01:04.613" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.631" endtime="20201115 22:01:04.657"></status>
</kw>
<msg timestamp="20201115 22:01:04.657" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.623" endtime="20201115 22:01:04.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.661" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.659" endtime="20201115 22:01:04.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.662" endtime="20201115 22:01:04.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.619" endtime="20201115 22:01:04.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.617" endtime="20201115 22:01:04.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.673" endtime="20201115 22:01:04.996"></status>
</kw>
<msg timestamp="20201115 22:01:05.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032193042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032200944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.671" endtime="20201115 22:01:05.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032193042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032200944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.006" endtime="20201115 22:01:05.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.025" endtime="20201115 22:01:05.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.668" endtime="20201115 22:01:05.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.666" endtime="20201115 22:01:05.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.044" level="INFO">${RESULT} = [{'time': 0.032200944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.902000000004072e-06, 'source_diff': 7.902000000004072e-06}, {'time': 0.032496125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:05.035" endtime="20201115 22:01:05.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.075" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:05.046" endtime="20201115 22:01:05.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.087" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:01:05.084" endtime="20201115 22:01:05.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.093" level="INFO">VALUE: [7.902000000004072e-06, 7.874999999997467e-06, 7.875000000004406e-06, 7.903000000003546e-06, 7.888000000004503e-06, 7.916999999996177e-06, 7.916000000003642e-06, 7.861000000004836e-06, 7.902000000004072e-06, 7.930000000003212e-06, 7.903000000003546e-06, 7.902999999996607e-06, 7.903000000003546e-06, 7.917000000003116e-06, 7.901999999997134e-06, 7.889000000003976e-06, 7.944000000002782e-06, 7.916999999996177e-06, 7.861000000004836e-06, 7.915999999996703e-06, 7.902999999996607e-06, 7.846999999998328e-06, 7.861000000004836e-06, 7.901999999997134e-06, 7.901999999997134e-06, 7.917000000003116e-06, 7.916000000003642e-06, 7.944000000002782e-06, 7.889000000003976e-06, 7.874999999997467e-06, 7.903000000003546e-06, 7.930000000003212e-06, 7.902999999996607e-06, 7.902999999996607e-06, 7.902000000004072e-06, 7.902999999996607e-06, 7.917000000003116e-06, 7.931000000002686e-06, 7.888999999997037e-06, 7.917000000003116e-06, 7.916000000003642e-06, 7.929999999996273e-06, 7.916999999996177e-06, 7.902999999996607e-06, 7.902999999996607e-06, 7.902999999996607e-06, 7.916999999996177e-06, 7.901999999997134e-06, 7.903000000003546e-06, 7.917000000003116e-06]</msg>
<status status="PASS" starttime="20201115 22:01:05.089" endtime="20201115 22:01:05.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.077" endtime="20201115 22:01:05.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.102" endtime="20201115 22:01:05.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.110" endtime="20201115 22:01:05.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.106" endtime="20201115 22:01:05.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.097" endtime="20201115 22:01:05.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.614" endtime="20201115 22:01:05.136"></status>
</kw>
<msg timestamp="20201115 22:01:05.137" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.160" endtime="20201115 22:01:05.188"></status>
</kw>
<msg timestamp="20201115 22:01:05.189" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.157" endtime="20201115 22:01:05.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.195" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.191" endtime="20201115 22:01:05.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.197" endtime="20201115 22:01:05.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.149" endtime="20201115 22:01:05.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.144" endtime="20201115 22:01:05.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.221" endtime="20201115 22:01:05.561"></status>
</kw>
<msg timestamp="20201115 22:01:05.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043471125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043479014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.218" endtime="20201115 22:01:05.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043471125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043479014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.571" endtime="20201115 22:01:05.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.589" endtime="20201115 22:01:05.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.211" endtime="20201115 22:01:05.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.206" endtime="20201115 22:01:05.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.607" level="INFO">${RESULT} = [{'time': 0.043479014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.889000000003976e-06, 'source_diff': 7.889000000003976e-06}, {'time': 0.043768986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:05.598" endtime="20201115 22:01:05.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.638" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:05.609" endtime="20201115 22:01:05.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.649" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:01:05.647" endtime="20201115 22:01:05.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.655" level="INFO">VALUE: [7.889000000003976e-06, 7.917000000003116e-06, 7.901999999997134e-06, 7.888999999997037e-06, 7.917000000003116e-06, 7.889000000003976e-06, 7.929999999996273e-06, 7.916999999996177e-06, 7.916999999996177e-06, 7.902999999996607e-06, 7.902999999996607e-06, 7.889000000003976e-06, 7.874999999997467e-06, 7.917000000003116e-06, 7.930000000003212e-06, 7.917000000003116e-06, 7.902999999996607e-06, 7.860999999997897e-06, 7.888999999997037e-06, 7.915999999996703e-06, 7.917000000003116e-06, 7.915999999996703e-06, 7.888999999997037e-06, 7.931000000002686e-06, 7.916999999996177e-06, 8.000000000001062e-06, 7.901999999997134e-06, 7.903000000003546e-06, 7.903000000003546e-06, 7.903000000003546e-06, 7.833999999998231e-06, 7.901999999997134e-06, 7.915999999996703e-06, 7.902999999996607e-06, 7.972000000001922e-06, 7.916000000003642e-06, 7.901999999997134e-06, 7.902999999996607e-06, 7.902000000004072e-06, 7.888999999997037e-06, 7.957999999995413e-06, 7.901999999997134e-06, 7.931000000002686e-06, 7.887999999997564e-06, 7.889000000003976e-06, 7.916999999996177e-06, 7.915999999996703e-06, 7.916999999996177e-06, 7.944999999995317e-06, 7.888999999997037e-06]</msg>
<status status="PASS" starttime="20201115 22:01:05.651" endtime="20201115 22:01:05.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.640" endtime="20201115 22:01:05.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.665" endtime="20201115 22:01:05.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.674" endtime="20201115 22:01:05.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.670" endtime="20201115 22:01:05.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.660" endtime="20201115 22:01:05.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.138" endtime="20201115 22:01:05.700"></status>
</kw>
<msg timestamp="20201115 22:01:05.700" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.724" endtime="20201115 22:01:05.752"></status>
</kw>
<msg timestamp="20201115 22:01:05.753" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.720" endtime="20201115 22:01:05.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.759" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.755" endtime="20201115 22:01:05.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.762" endtime="20201115 22:01:05.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.713" endtime="20201115 22:01:05.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.707" endtime="20201115 22:01:05.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.786" endtime="20201115 22:01:06.127"></status>
</kw>
<msg timestamp="20201115 22:01:06.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044128333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044136194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.782" endtime="20201115 22:01:06.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044128333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044136194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.137" endtime="20201115 22:01:06.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.155" endtime="20201115 22:01:06.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.775" endtime="20201115 22:01:06.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.770" endtime="20201115 22:01:06.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.173" level="INFO">${RESULT} = [{'time': 0.044136194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.044433208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:06.164" endtime="20201115 22:01:06.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.204" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:06.175" endtime="20201115 22:01:06.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.215" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:01:06.212" endtime="20201115 22:01:06.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.220" level="INFO">VALUE: [7.860999999997897e-06, 7.861000000004836e-06, 7.903000000003546e-06, 7.917000000003116e-06, 7.915999999996703e-06, 7.929999999996273e-06, 7.888999999997037e-06, 7.888999999997037e-06, 7.930999999995747e-06, 7.902999999996607e-06, 7.944000000002782e-06, 7.902999999996607e-06, 7.889000000003976e-06, 7.888999999997037e-06, 7.916999999996177e-06, 7.902999999996607e-06, 7.917000000003116e-06, 7.917000000003116e-06, 7.888999999997037e-06, 7.917000000003116e-06, 7.915999999996703e-06, 7.888999999997037e-06, 7.860999999997897e-06, 7.916000000003642e-06, 7.902999999996607e-06, 7.917000000003116e-06, 7.902999999996607e-06, 7.903000000003546e-06, 7.903000000003546e-06, 7.943999999995843e-06, 7.916999999996177e-06, 7.902999999996607e-06, 7.903000000003546e-06, 7.888999999997037e-06, 7.84800000000474e-06, 7.888999999997037e-06, 7.945000000002256e-06, 7.902999999996607e-06, 7.917000000003116e-06, 7.888999999997037e-06, 7.902000000004072e-06, 7.943999999995843e-06, 7.986000000001492e-06, 7.929999999996273e-06, 7.902999999996607e-06, 7.902999999996607e-06, 7.916999999996177e-06, 7.916999999996177e-06, 7.903000000003546e-06, 7.929999999996273e-06]</msg>
<status status="PASS" starttime="20201115 22:01:06.217" endtime="20201115 22:01:06.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.205" endtime="20201115 22:01:06.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.230" endtime="20201115 22:01:06.234"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.240" endtime="20201115 22:01:06.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.235" endtime="20201115 22:01:06.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.225" endtime="20201115 22:01:06.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.701" endtime="20201115 22:01:06.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.544" endtime="20201115 22:01:06.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.542" endtime="20201115 22:01:06.266"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.271" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.295" endtime="20201115 22:01:06.323"></status>
</kw>
<msg timestamp="20201115 22:01:06.324" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.291" endtime="20201115 22:01:06.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.331" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.327" endtime="20201115 22:01:06.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.333" endtime="20201115 22:01:06.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.284" endtime="20201115 22:01:06.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.278" endtime="20201115 22:01:06.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.357" endtime="20201115 22:01:06.696"></status>
</kw>
<msg timestamp="20201115 22:01:06.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048254, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048262125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:06.353" endtime="20201115 22:01:06.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048254, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048262125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:06.706" endtime="20201115 22:01:06.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.724" endtime="20201115 22:01:06.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.346" endtime="20201115 22:01:06.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.341" endtime="20201115 22:01:06.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.742" level="INFO">${RESULT} = [{'time': 0.048262125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.125000000004656e-06, 'source_diff': 8.125000000004656e-06}, {'time': 0.048571472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:06.733" endtime="20201115 22:01:06.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.775" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:06.744" endtime="20201115 22:01:06.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.786" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:01:06.784" endtime="20201115 22:01:06.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.793" level="INFO">VALUE: [8.125000000004656e-06, 8.096999999998578e-06, 8.096999999998578e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.068999999999438e-06, 8.096999999998578e-06, 8.041999999999772e-06, 8.096999999998578e-06, 8.166999999996427e-06, 8.097000000005516e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.110999999998147e-06, 8.137999999997814e-06, 8.055999999999341e-06, 8.110999999998147e-06, 8.07000000000585e-06, 8.110999999998147e-06, 8.096999999998578e-06, 8.124999999997717e-06, 8.110999999998147e-06, 8.152999999996857e-06, 8.096999999998578e-06, 8.083000000005947e-06, 8.110999999998147e-06, 8.097000000005516e-06, 8.111000000005086e-06, 8.124999999997717e-06, 8.055999999999341e-06, 8.096999999998578e-06, 8.165999999996953e-06, 8.096999999998578e-06, 8.124999999997717e-06, 8.138999999997287e-06, 8.08400000000542e-06, 8.110999999998147e-06, 8.153000000003796e-06, 8.110999999998147e-06, 8.097000000005516e-06, 8.082999999999008e-06, 8.054999999999868e-06, 8.180000000003462e-06, 8.152999999996857e-06, 8.096999999998578e-06, 8.110999999998147e-06, 8.09800000000499e-06, 8.096999999998578e-06, 8.110999999991209e-06, 8.138999999990348e-06]</msg>
<status status="PASS" starttime="20201115 22:01:06.788" endtime="20201115 22:01:06.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.777" endtime="20201115 22:01:06.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.802" endtime="20201115 22:01:06.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.811" endtime="20201115 22:01:06.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.806" endtime="20201115 22:01:06.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.797" endtime="20201115 22:01:06.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.273" endtime="20201115 22:01:06.837"></status>
</kw>
<msg timestamp="20201115 22:01:06.838" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.861" endtime="20201115 22:01:06.889"></status>
</kw>
<msg timestamp="20201115 22:01:06.890" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.858" endtime="20201115 22:01:06.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.896" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.892" endtime="20201115 22:01:06.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.898" endtime="20201115 22:01:06.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.850" endtime="20201115 22:01:06.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.844" endtime="20201115 22:01:06.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.922" endtime="20201115 22:01:07.263"></status>
</kw>
<msg timestamp="20201115 22:01:07.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043015722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043023847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.919" endtime="20201115 22:01:07.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043015722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043023847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.272" endtime="20201115 22:01:07.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.290" endtime="20201115 22:01:07.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.912" endtime="20201115 22:01:07.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.907" endtime="20201115 22:01:07.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.308" level="INFO">${RESULT} = [{'time': 0.043023847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.124999999997717e-06, 'source_diff': 8.124999999997717e-06}, {'time': 0.043328819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:07.299" endtime="20201115 22:01:07.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.339" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:07.310" endtime="20201115 22:01:07.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.351" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:01:07.348" endtime="20201115 22:01:07.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.356" level="INFO">VALUE: [8.124999999997717e-06, 8.110999999998147e-06, 8.111000000005086e-06, 8.137999999997814e-06, 8.096999999998578e-06, 8.125000000004656e-06, 8.165999999996953e-06, 8.096999999998578e-06, 8.111000000005086e-06, 8.096999999998578e-06, 8.068999999999438e-06, 8.179999999996523e-06, 8.124999999997717e-06, 8.05600000000628e-06, 8.096999999998578e-06, 8.041000000000298e-06, 8.097999999998051e-06, 8.110999999998147e-06, 8.096999999998578e-06, 8.152999999996857e-06, 8.111000000005086e-06, 8.014000000000632e-06, 8.124999999997717e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.125000000004656e-06, 8.111000000005086e-06, 8.138999999997287e-06, 8.082999999999008e-06, 8.096999999998578e-06, 8.097000000005516e-06, 8.181000000002936e-06, 8.082999999999008e-06, 8.097000000005516e-06, 8.096999999998578e-06, 8.110999999998147e-06, 8.125000000004656e-06, 8.097000000005516e-06, 8.124999999997717e-06, 8.096999999998578e-06, 8.110999999998147e-06, 8.181000000002936e-06, 8.138999999997287e-06, 8.096999999998578e-06, 8.083000000005947e-06, 8.125000000004656e-06, 8.111000000005086e-06, 8.124999999997717e-06, 8.082999999999008e-06, 8.069999999998911e-06]</msg>
<status status="PASS" starttime="20201115 22:01:07.353" endtime="20201115 22:01:07.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.341" endtime="20201115 22:01:07.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.365" endtime="20201115 22:01:07.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.374" endtime="20201115 22:01:07.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.369" endtime="20201115 22:01:07.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.360" endtime="20201115 22:01:07.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.839" endtime="20201115 22:01:07.399"></status>
</kw>
<msg timestamp="20201115 22:01:07.400" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.425" endtime="20201115 22:01:07.453"></status>
</kw>
<msg timestamp="20201115 22:01:07.454" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.421" endtime="20201115 22:01:07.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.461" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.456" endtime="20201115 22:01:07.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.463" endtime="20201115 22:01:07.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.414" endtime="20201115 22:01:07.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.406" endtime="20201115 22:01:07.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.487" endtime="20201115 22:01:07.826"></status>
</kw>
<msg timestamp="20201115 22:01:07.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044541375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044549458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.483" endtime="20201115 22:01:07.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044541375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044549458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.836" endtime="20201115 22:01:07.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.854" endtime="20201115 22:01:07.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.476" endtime="20201115 22:01:07.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.471" endtime="20201115 22:01:07.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.872" level="INFO">${RESULT} = [{'time': 0.044549458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.044850264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:07.863" endtime="20201115 22:01:07.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.903" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:07.875" endtime="20201115 22:01:07.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.914" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:01:07.912" endtime="20201115 22:01:07.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.920" level="INFO">VALUE: [8.082999999999008e-06, 8.082999999999008e-06, 8.111000000005086e-06, 8.111000000005086e-06, 8.096999999998578e-06, 8.111999999997621e-06, 8.179999999996523e-06, 8.110999999998147e-06, 8.181000000002936e-06, 8.166000000003892e-06, 8.082999999999008e-06, 8.097000000005516e-06, 8.096999999998578e-06, 8.082999999999008e-06, 8.110999999998147e-06, 8.041000000000298e-06, 8.111000000005086e-06, 8.09800000000499e-06, 8.180999999995997e-06, 8.082999999999008e-06, 8.124999999997717e-06, 8.09800000000499e-06, 8.111000000005086e-06, 8.083999999998481e-06, 8.097999999998051e-06, 8.124999999997717e-06, 8.096999999998578e-06, 8.125000000004656e-06, 8.096999999998578e-06, 8.153000000003796e-06, 8.069999999998911e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.068999999999438e-06, 8.111000000005086e-06, 8.082999999999008e-06, 8.096999999998578e-06, 8.096999999998578e-06, 8.096999999998578e-06, 8.082999999999008e-06, 8.096999999998578e-06, 8.083999999998481e-06, 8.124999999997717e-06, 8.096999999998578e-06, 8.111999999997621e-06, 8.111999999997621e-06, 8.096999999998578e-06]</msg>
<status status="PASS" starttime="20201115 22:01:07.917" endtime="20201115 22:01:07.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.905" endtime="20201115 22:01:07.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.929" endtime="20201115 22:01:07.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.937" endtime="20201115 22:01:07.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.933" endtime="20201115 22:01:07.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.924" endtime="20201115 22:01:07.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.401" endtime="20201115 22:01:07.963"></status>
</kw>
<msg timestamp="20201115 22:01:07.964" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.987" endtime="20201115 22:01:08.015"></status>
</kw>
<msg timestamp="20201115 22:01:08.016" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.984" endtime="20201115 22:01:08.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.019" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.017" endtime="20201115 22:01:08.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.020" endtime="20201115 22:01:08.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.976" endtime="20201115 22:01:08.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.970" endtime="20201115 22:01:08.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.031" endtime="20201115 22:01:08.342"></status>
</kw>
<msg timestamp="20201115 22:01:08.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044452819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044460944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.029" endtime="20201115 22:01:08.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044452819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044460944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.351" endtime="20201115 22:01:08.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.371" endtime="20201115 22:01:08.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.026" endtime="20201115 22:01:08.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.024" endtime="20201115 22:01:08.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:08.388" level="INFO">${RESULT} = [{'time': 0.044460944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.125000000004656e-06, 'source_diff': 8.125000000004656e-06}, {'time': 0.044764653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:08.379" endtime="20201115 22:01:08.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:08.419" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:08.390" endtime="20201115 22:01:08.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.430" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:01:08.428" endtime="20201115 22:01:08.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.436" level="INFO">VALUE: [8.125000000004656e-06, 8.083999999998481e-06, 8.124999999997717e-06, 8.111000000005086e-06, 8.110999999998147e-06, 8.167000000003366e-06, 8.152999999996857e-06, 8.096999999998578e-06, 8.152999999996857e-06, 8.124999999997717e-06, 8.096999999998578e-06, 8.111999999997621e-06, 8.054999999999868e-06, 8.097000000005516e-06, 8.181000000002936e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.097999999998051e-06, 8.110999999998147e-06, 8.068999999999438e-06, 8.111000000005086e-06, 8.11200000000456e-06, 8.111000000005086e-06, 8.110999999998147e-06, 8.097000000005516e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.082999999999008e-06, 8.111000000005086e-06, 8.083999999998481e-06, 8.096999999998578e-06, 8.055999999999341e-06, 8.041999999999772e-06, 8.082999999999008e-06, 8.097000000005516e-06, 8.110999999998147e-06, 8.097999999998051e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.110999999998147e-06, 8.111000000005086e-06, 8.082999999999008e-06, 8.069999999998911e-06, 8.111999999997621e-06, 8.110999999998147e-06, 8.083999999998481e-06, 8.124999999997717e-06, 8.110999999998147e-06, 8.111999999997621e-06]</msg>
<status status="PASS" starttime="20201115 22:01:08.433" endtime="20201115 22:01:08.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.421" endtime="20201115 22:01:08.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.445" endtime="20201115 22:01:08.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:08.453" endtime="20201115 22:01:08.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.449" endtime="20201115 22:01:08.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.440" endtime="20201115 22:01:08.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.965" endtime="20201115 22:01:08.479"></status>
</kw>
<msg timestamp="20201115 22:01:08.479" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.503" endtime="20201115 22:01:08.531"></status>
</kw>
<msg timestamp="20201115 22:01:08.532" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.499" endtime="20201115 22:01:08.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.538" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.534" endtime="20201115 22:01:08.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.541" endtime="20201115 22:01:08.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.492" endtime="20201115 22:01:08.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.486" endtime="20201115 22:01:08.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.566" endtime="20201115 22:01:08.907"></status>
</kw>
<msg timestamp="20201115 22:01:08.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042900125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042908222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.563" endtime="20201115 22:01:08.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042900125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042908222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.917" endtime="20201115 22:01:08.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.936" endtime="20201115 22:01:08.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.554" endtime="20201115 22:01:08.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.549" endtime="20201115 22:01:08.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:08.954" level="INFO">${RESULT} = [{'time': 0.042908222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.097000000005516e-06, 'source_diff': 8.097000000005516e-06}, {'time': 0.043210917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:08.945" endtime="20201115 22:01:08.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:08.986" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:08.956" endtime="20201115 22:01:08.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.997" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:01:08.995" endtime="20201115 22:01:08.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.003" level="INFO">VALUE: [8.097000000005516e-06, 8.028000000000202e-06, 8.152999999996857e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.096999999998578e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.082999999999008e-06, 8.096999999998578e-06, 8.096999999998578e-06, 8.08400000000542e-06, 8.096999999998578e-06, 8.110999999998147e-06, 8.096999999998578e-06, 8.096999999998578e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.11200000000456e-06, 8.083999999998481e-06, 8.166999999996427e-06, 8.055999999999341e-06, 8.083000000005947e-06, 8.096999999998578e-06, 8.124999999997717e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.096999999998578e-06, 8.082999999999008e-06, 8.069000000006377e-06, 8.096999999998578e-06, 8.180000000003462e-06, 8.096999999998578e-06, 8.111999999997621e-06, 8.083999999998481e-06, 8.083000000005947e-06, 8.124999999997717e-06, 8.027000000000728e-06, 8.138999999997287e-06, 8.096999999998578e-06, 8.110999999998147e-06, 8.096999999998578e-06, 8.167000000003366e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.082999999999008e-06, 8.181000000002936e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.165999999996953e-06]</msg>
<status status="PASS" starttime="20201115 22:01:09.000" endtime="20201115 22:01:09.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.988" endtime="20201115 22:01:09.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.012" endtime="20201115 22:01:09.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.021" endtime="20201115 22:01:09.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.016" endtime="20201115 22:01:09.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.007" endtime="20201115 22:01:09.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.481" endtime="20201115 22:01:09.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.269" endtime="20201115 22:01:09.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.267" endtime="20201115 22:01:09.047"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.948" endtime="20201115 22:01:09.048"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.058" endtime="20201115 22:01:09.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.054" endtime="20201115 22:01:09.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.051" endtime="20201115 22:01:09.082"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:59.816" endtime="20201115 22:01:09.083" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.102" endtime="20201115 22:01:09.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.098" endtime="20201115 22:01:09.125"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.163" endtime="20201115 22:01:09.182"></status>
</kw>
<msg timestamp="20201115 22:01:09.183" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.159" endtime="20201115 22:01:09.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.189" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.185" endtime="20201115 22:01:09.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.196" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:09.192" endtime="20201115 22:01:09.197"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:09.149" endtime="20201115 22:01:09.198"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:09.143" endtime="20201115 22:01:09.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.140" endtime="20201115 22:01:09.201"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:09.209" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:09.207" endtime="20201115 22:01:09.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.203" endtime="20201115 22:01:09.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.138" endtime="20201115 22:01:09.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.136" endtime="20201115 22:01:09.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.213" endtime="20201115 22:01:09.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.132" endtime="20201115 22:01:09.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.127" endtime="20201115 22:01:09.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.095" endtime="20201115 22:01:09.220"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.227" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.251" endtime="20201115 22:01:09.268"></status>
</kw>
<msg timestamp="20201115 22:01:09.269" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.247" endtime="20201115 22:01:09.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.275" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.271" endtime="20201115 22:01:09.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.277" endtime="20201115 22:01:09.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.240" endtime="20201115 22:01:09.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.234" endtime="20201115 22:01:09.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.301" endtime="20201115 22:01:09.651"></status>
</kw>
<msg timestamp="20201115 22:01:09.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142875778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142881472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.298" endtime="20201115 22:01:09.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142875778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142881472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.661" endtime="20201115 22:01:09.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.680" endtime="20201115 22:01:09.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.291" endtime="20201115 22:01:09.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.286" endtime="20201115 22:01:09.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.704" level="INFO">${RESULT} = [{'time': 0.142881472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.142937361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:09.695" endtime="20201115 22:01:09.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.735" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:09.707" endtime="20201115 22:01:09.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.746" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:01:09.744" endtime="20201115 22:01:09.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.752" level="INFO">VALUE: [5.694000000000532e-06, 5.736000000006181e-06, 5.722999999985268e-06, 5.736000000006181e-06, 5.736000000006181e-06, 5.72200000001355e-06, 5.721999999985794e-06, 5.736000000006181e-06, 5.749999999998812e-06, 5.708999999992637e-06, 5.695000000000006e-06, 5.736000000006181e-06, 5.735999999978425e-06, 5.736000000006181e-06, 5.721999999985794e-06, 5.72200000001355e-06, 5.694000000000532e-06, 5.707999999993163e-06, 5.749999999998812e-06, 5.722999999985268e-06, 5.736000000006181e-06, 5.79200000000446e-06, 5.694000000000532e-06, 5.72200000001355e-06, 5.735999999978425e-06, 5.736000000006181e-06, 5.708999999992637e-06, 5.707999999993163e-06, 5.736000000006181e-06, 5.736000000006181e-06, 5.735999999978425e-06, 5.72200000001355e-06, 5.736000000006181e-06, 5.736000000006181e-06, 5.72200000001355e-06, 5.707999999993163e-06, 5.736000000006181e-06, 5.694000000000532e-06, 5.736000000006181e-06, 5.737000000005654e-06, 5.735999999978425e-06, 5.749999999998812e-06, 5.72200000001355e-06, 5.72200000001355e-06, 5.749999999998812e-06, 5.695000000000006e-06, 5.736000000006181e-06, 5.723000000013023e-06, 5.72200000001355e-06, 5.723000000013023e-06]</msg>
<status status="PASS" starttime="20201115 22:01:09.749" endtime="20201115 22:01:09.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.737" endtime="20201115 22:01:09.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.761" endtime="20201115 22:01:09.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.769" endtime="20201115 22:01:09.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.765" endtime="20201115 22:01:09.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.756" endtime="20201115 22:01:09.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.228" endtime="20201115 22:01:09.795"></status>
</kw>
<msg timestamp="20201115 22:01:09.795" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.819" endtime="20201115 22:01:09.834"></status>
</kw>
<msg timestamp="20201115 22:01:09.835" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.815" endtime="20201115 22:01:09.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.837" endtime="20201115 22:01:09.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.844" endtime="20201115 22:01:09.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.808" endtime="20201115 22:01:09.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.802" endtime="20201115 22:01:09.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.868" endtime="20201115 22:01:10.210"></status>
</kw>
<msg timestamp="20201115 22:01:10.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043090292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043095972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.864" endtime="20201115 22:01:10.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043090292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043095972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.220" endtime="20201115 22:01:10.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.239" endtime="20201115 22:01:10.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.857" endtime="20201115 22:01:10.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.852" endtime="20201115 22:01:10.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:10.259" level="INFO">${RESULT} = [{'time': 0.043095972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.043143528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:10.250" endtime="20201115 22:01:10.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:10.289" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:10.261" endtime="20201115 22:01:10.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.300" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:01:10.298" endtime="20201115 22:01:10.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.306" level="INFO">VALUE: [5.680000000000962e-06, 5.7089999999995755e-06, 5.693999999993593e-06, 5.7089999999995755e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.749999999998812e-06, 5.721999999999672e-06, 5.77800000000489e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.7229999999991454e-06, 5.7229999999991454e-06, 5.667000000000866e-06, 5.735999999999242e-06, 5.708000000000102e-06, 5.7229999999991454e-06, 5.7229999999991454e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.791999999997521e-06, 5.708000000000102e-06, 5.693999999993593e-06, 5.653000000001296e-06, 5.667000000000866e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.791999999997521e-06, 5.749999999998812e-06, 5.7500000000057505e-06, 5.790999999998048e-06, 5.667000000000866e-06, 5.694000000000532e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.708000000000102e-06, 5.749999999998812e-06, 5.7089999999995755e-06, 5.667000000000866e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.7229999999991454e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.7089999999995755e-06, 5.693999999993593e-06, 5.721999999999672e-06]</msg>
<status status="PASS" starttime="20201115 22:01:10.303" endtime="20201115 22:01:10.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.291" endtime="20201115 22:01:10.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.315" endtime="20201115 22:01:10.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:10.323" endtime="20201115 22:01:10.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.319" endtime="20201115 22:01:10.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.310" endtime="20201115 22:01:10.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.797" endtime="20201115 22:01:10.350"></status>
</kw>
<msg timestamp="20201115 22:01:10.350" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.374" endtime="20201115 22:01:10.390"></status>
</kw>
<msg timestamp="20201115 22:01:10.391" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.371" endtime="20201115 22:01:10.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.398" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.394" endtime="20201115 22:01:10.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.400" endtime="20201115 22:01:10.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.363" endtime="20201115 22:01:10.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.357" endtime="20201115 22:01:10.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.425" endtime="20201115 22:01:10.765"></status>
</kw>
<msg timestamp="20201115 22:01:10.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04415925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044165, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:01:10.421" endtime="20201115 22:01:10.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04415925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044165, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:01:10.775" endtime="20201115 22:01:10.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.794" endtime="20201115 22:01:10.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.413" endtime="20201115 22:01:10.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.408" endtime="20201115 22:01:10.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:10.813" level="INFO">${RESULT} = [{'time': 0.044165, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7500000000057505e-06, 'source_diff': 5.7500000000057505e-06}, {'time': 0.044209236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:10.804" endtime="20201115 22:01:10.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:10.843" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:10.815" endtime="20201115 22:01:10.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.855" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:01:10.852" endtime="20201115 22:01:10.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.860" level="INFO">VALUE: [5.7500000000057505e-06, 5.708000000000102e-06, 5.695000000000006e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.694000000000532e-06, 5.7500000000057505e-06, 5.721999999999672e-06, 5.749999999998812e-06, 5.708000000000102e-06, 5.735999999999242e-06, 5.76400000000532e-06, 5.7229999999991454e-06, 5.680000000000962e-06, 5.7089999999995755e-06, 5.735999999999242e-06, 5.7229999999991454e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.653000000001296e-06, 5.722000000006611e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.749999999998812e-06, 5.708000000000102e-06, 5.736000000006181e-06, 5.736999999998715e-06, 5.735999999999242e-06, 5.737000000005654e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.7229999999991454e-06, 5.7639999999983815e-06, 5.721999999999672e-06, 5.736000000006181e-06, 5.749999999998812e-06, 5.736000000006181e-06, 5.679999999994023e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.708000000000102e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.708000000000102e-06, 5.776999999998478e-06, 5.736000000006181e-06]</msg>
<status status="PASS" starttime="20201115 22:01:10.857" endtime="20201115 22:01:10.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.845" endtime="20201115 22:01:10.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.869" endtime="20201115 22:01:10.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:10.878" endtime="20201115 22:01:10.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.873" endtime="20201115 22:01:10.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.865" endtime="20201115 22:01:10.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.351" endtime="20201115 22:01:10.903"></status>
</kw>
<msg timestamp="20201115 22:01:10.904" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.927" endtime="20201115 22:01:10.942"></status>
</kw>
<msg timestamp="20201115 22:01:10.944" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.924" endtime="20201115 22:01:10.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.950" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.946" endtime="20201115 22:01:10.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.953" endtime="20201115 22:01:10.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.916" endtime="20201115 22:01:10.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.911" endtime="20201115 22:01:10.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.977" endtime="20201115 22:01:11.318"></status>
</kw>
<msg timestamp="20201115 22:01:11.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043043139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043048875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.974" endtime="20201115 22:01:11.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043043139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043048875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.328" endtime="20201115 22:01:11.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.347" endtime="20201115 22:01:11.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.967" endtime="20201115 22:01:11.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.962" endtime="20201115 22:01:11.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.366" level="INFO">${RESULT} = [{'time': 0.043048875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.043104431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:11.357" endtime="20201115 22:01:11.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.400" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:11.368" endtime="20201115 22:01:11.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.411" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:01:11.409" endtime="20201115 22:01:11.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.417" level="INFO">VALUE: [5.735999999999242e-06, 5.819999999996661e-06, 5.7089999999995755e-06, 5.7089999999995755e-06, 5.721999999999672e-06, 5.7089999999995755e-06, 5.749999999998812e-06, 5.652000000001822e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.708000000000102e-06, 5.709000000006514e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.7089999999995755e-06, 5.7229999999991454e-06, 5.721999999999672e-06, 5.723000000006084e-06, 5.736000000006181e-06, 5.721999999999672e-06, 5.708000000000102e-06, 5.708000000000102e-06, 5.7229999999991454e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.666999999993927e-06, 5.708000000000102e-06, 5.721999999999672e-06, 5.694000000000532e-06, 5.666000000001392e-06, 5.735999999999242e-06, 5.7089999999995755e-06, 5.7089999999995755e-06, 5.735999999999242e-06, 5.736999999998715e-06, 5.721999999999672e-06, 5.708000000000102e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.7089999999995755e-06, 5.736999999998715e-06, 5.721999999999672e-06, 5.7229999999991454e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.695000000000006e-06, 5.735999999999242e-06, 5.708000000000102e-06]</msg>
<status status="PASS" starttime="20201115 22:01:11.413" endtime="20201115 22:01:11.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.402" endtime="20201115 22:01:11.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.426" endtime="20201115 22:01:11.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.434" endtime="20201115 22:01:11.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.429" endtime="20201115 22:01:11.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.421" endtime="20201115 22:01:11.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.905" endtime="20201115 22:01:11.460"></status>
</kw>
<msg timestamp="20201115 22:01:11.460" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.483" endtime="20201115 22:01:11.499"></status>
</kw>
<msg timestamp="20201115 22:01:11.500" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.480" endtime="20201115 22:01:11.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.507" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.503" endtime="20201115 22:01:11.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.509" endtime="20201115 22:01:11.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.473" endtime="20201115 22:01:11.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.467" endtime="20201115 22:01:11.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.533" endtime="20201115 22:01:11.873"></status>
</kw>
<msg timestamp="20201115 22:01:11.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042999069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043004819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.529" endtime="20201115 22:01:11.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042999069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043004819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.883" endtime="20201115 22:01:11.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.902" endtime="20201115 22:01:11.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.522" endtime="20201115 22:01:11.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.518" endtime="20201115 22:01:11.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.920" level="INFO">${RESULT} = [{'time': 0.043004819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.043060889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:11.911" endtime="20201115 22:01:11.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.952" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:11.922" endtime="20201115 22:01:11.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.963" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:01:11.961" endtime="20201115 22:01:11.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.969" level="INFO">VALUE: [5.749999999998812e-06, 5.721999999999672e-06, 5.7089999999995755e-06, 5.652000000001822e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.708000000000102e-06, 5.736999999998715e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.708000000000102e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.79200000000446e-06, 5.735999999999242e-06, 5.749999999998812e-06, 5.7639999999983815e-06, 5.77800000000489e-06, 5.735999999999242e-06, 5.694000000000532e-06, 5.708000000000102e-06, 5.749999999998812e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.7639999999983815e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.652999999994357e-06, 5.721999999999672e-06, 5.708000000000102e-06, 5.735999999999242e-06, 5.7089999999995755e-06, 5.721999999999672e-06, 5.723000000006084e-06, 5.736999999998715e-06, 5.735999999999242e-06, 5.77800000000489e-06, 5.735999999999242e-06, 5.708000000000102e-06, 5.7500000000057505e-06, 5.680000000000962e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.721999999999672e-06]</msg>
<status status="PASS" starttime="20201115 22:01:11.965" endtime="20201115 22:01:11.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.954" endtime="20201115 22:01:11.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.978" endtime="20201115 22:01:11.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.986" endtime="20201115 22:01:12.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.982" endtime="20201115 22:01:12.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.973" endtime="20201115 22:01:12.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.461" endtime="20201115 22:01:12.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.225" endtime="20201115 22:01:12.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.223" endtime="20201115 22:01:12.013"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.018" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.042" endtime="20201115 22:01:12.058"></status>
</kw>
<msg timestamp="20201115 22:01:12.059" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.038" endtime="20201115 22:01:12.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.066" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.062" endtime="20201115 22:01:12.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.068" endtime="20201115 22:01:12.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.031" endtime="20201115 22:01:12.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.025" endtime="20201115 22:01:12.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.092" endtime="20201115 22:01:12.418"></status>
</kw>
<msg timestamp="20201115 22:01:12.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049158889, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:12.088" endtime="20201115 22:01:12.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049158889, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:12.422" endtime="20201115 22:01:12.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.431" endtime="20201115 22:01:12.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.081" endtime="20201115 22:01:12.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.076" endtime="20201115 22:01:12.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:12.439" level="INFO">${RESULT} = [{'time': 0.049158889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.888999999995037e-06, 'source_diff': 5.888999999995037e-06}, {'time': 0.049223528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:12.435" endtime="20201115 22:01:12.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:12.453" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:12.440" endtime="20201115 22:01:12.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.459" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:01:12.457" endtime="20201115 22:01:12.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.461" level="INFO">VALUE: [5.888999999995037e-06, 5.903000000001546e-06, 5.902000000002072e-06, 5.874999999995467e-06, 5.902000000002072e-06, 5.875000000002406e-06, 5.874999999995467e-06, 5.874999999995467e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.917000000001116e-06, 5.958000000000352e-06, 5.889000000001976e-06, 5.833000000003696e-06, 5.903000000001546e-06, 5.888999999995037e-06, 5.8879999999955634e-06, 5.903000000001546e-06, 5.902000000002072e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.916000000001642e-06, 5.875000000002406e-06, 5.944000000000782e-06, 5.917000000001116e-06, 5.874999999995467e-06, 5.875000000002406e-06, 5.889000000001976e-06, 5.901999999995133e-06, 5.986000000006431e-06, 5.917000000001116e-06, 5.902999999994607e-06, 5.889000000001976e-06, 5.917000000001116e-06, 5.902000000002072e-06, 5.902999999994607e-06, 5.901999999995133e-06, 5.903000000001546e-06, 5.916000000001642e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.930000000001212e-06, 5.917000000001116e-06, 5.944000000000782e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.916999999994177e-06, 5.903000000001546e-06]</msg>
<status status="PASS" starttime="20201115 22:01:12.460" endtime="20201115 22:01:12.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.454" endtime="20201115 22:01:12.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.465" endtime="20201115 22:01:12.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:12.470" endtime="20201115 22:01:12.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.468" endtime="20201115 22:01:12.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.463" endtime="20201115 22:01:12.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.020" endtime="20201115 22:01:12.491"></status>
</kw>
<msg timestamp="20201115 22:01:12.491" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.502" endtime="20201115 22:01:12.516"></status>
</kw>
<msg timestamp="20201115 22:01:12.516" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.501" endtime="20201115 22:01:12.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.519" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.517" endtime="20201115 22:01:12.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.520" endtime="20201115 22:01:12.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.497" endtime="20201115 22:01:12.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.495" endtime="20201115 22:01:12.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.531" endtime="20201115 22:01:12.850"></status>
</kw>
<msg timestamp="20201115 22:01:12.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025214153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025220014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.530" endtime="20201115 22:01:12.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025214153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025220014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.860" endtime="20201115 22:01:12.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.878" endtime="20201115 22:01:12.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.526" endtime="20201115 22:01:12.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.524" endtime="20201115 22:01:12.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:12.896" level="INFO">${RESULT} = [{'time': 0.025220014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.025276292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:12.887" endtime="20201115 22:01:12.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:12.928" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:12.898" endtime="20201115 22:01:12.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.939" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:01:12.937" endtime="20201115 22:01:12.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.945" level="INFO">VALUE: [5.860999999999367e-06, 5.874999999998937e-06, 5.902000000002072e-06, 5.916000000001642e-06, 5.916999999997646e-06, 5.8889999999985065e-06, 5.902000000002072e-06, 5.917000000001116e-06, 5.9029999999980765e-06, 5.874999999998937e-06, 5.887999999999033e-06, 5.8889999999985065e-06, 5.931000000000686e-06, 5.86199999999884e-06, 5.902000000002072e-06, 5.8889999999985065e-06, 5.903000000001546e-06, 5.929999999997743e-06, 5.874999999998937e-06, 5.8889999999985065e-06, 5.903000000001546e-06, 5.8889999999985065e-06, 5.874999999998937e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.8889999999985065e-06, 5.9029999999980765e-06, 5.8889999999985065e-06, 5.889000000001976e-06, 5.9029999999980765e-06, 5.875000000002406e-06, 5.8889999999985065e-06, 5.931000000000686e-06, 5.8889999999985065e-06, 5.901999999998603e-06, 5.916999999997646e-06, 5.846999999999797e-06, 5.887999999999033e-06, 5.8889999999985065e-06, 5.917000000001116e-06, 5.8889999999985065e-06, 5.889000000001976e-06, 5.917000000001116e-06, 5.9589999999998255e-06, 5.901999999998603e-06, 5.833000000000227e-06, 5.874999999998937e-06, 5.8479999999992704e-06, 5.915999999998173e-06, 5.8889999999985065e-06]</msg>
<status status="PASS" starttime="20201115 22:01:12.942" endtime="20201115 22:01:12.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.930" endtime="20201115 22:01:12.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.955" endtime="20201115 22:01:12.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:12.963" endtime="20201115 22:01:12.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.959" endtime="20201115 22:01:12.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.950" endtime="20201115 22:01:12.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.492" endtime="20201115 22:01:12.989"></status>
</kw>
<msg timestamp="20201115 22:01:12.989" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.013" endtime="20201115 22:01:13.029"></status>
</kw>
<msg timestamp="20201115 22:01:13.031" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.009" endtime="20201115 22:01:13.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.037" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.033" endtime="20201115 22:01:13.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.039" endtime="20201115 22:01:13.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.002" endtime="20201115 22:01:13.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.996" endtime="20201115 22:01:13.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.063" endtime="20201115 22:01:13.403"></status>
</kw>
<msg timestamp="20201115 22:01:13.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043364611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0433705, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:13.060" endtime="20201115 22:01:13.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043364611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0433705, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:13.413" endtime="20201115 22:01:13.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.432" endtime="20201115 22:01:13.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.052" endtime="20201115 22:01:13.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.048" endtime="20201115 22:01:13.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.449" level="INFO">${RESULT} = [{'time': 0.0433705, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.043423458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:13.440" endtime="20201115 22:01:13.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.482" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:13.452" endtime="20201115 22:01:13.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.494" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:01:13.492" endtime="20201115 22:01:13.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.500" level="INFO">VALUE: [5.889000000001976e-06, 5.901999999995133e-06, 5.861000000002836e-06, 5.902000000002072e-06, 5.889000000001976e-06, 5.902999999994607e-06, 5.902000000002072e-06, 5.903000000001546e-06, 5.917000000001116e-06, 5.888000000002502e-06, 5.889000000001976e-06, 5.846999999996327e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.888999999995037e-06, 5.902999999994607e-06, 5.875000000002406e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.902999999994607e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.888000000002502e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.888999999995037e-06, 5.889000000001976e-06, 5.916000000001642e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.888999999995037e-06, 5.903000000001546e-06, 5.985999999999492e-06, 5.903000000001546e-06, 5.9729999999993955e-06, 5.888999999995037e-06, 5.931000000000686e-06, 5.875000000002406e-06, 5.916000000001642e-06, 5.902999999994607e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.903000000001546e-06]</msg>
<status status="PASS" starttime="20201115 22:01:13.497" endtime="20201115 22:01:13.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.484" endtime="20201115 22:01:13.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.509" endtime="20201115 22:01:13.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:13.518" endtime="20201115 22:01:13.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.513" endtime="20201115 22:01:13.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.505" endtime="20201115 22:01:13.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.991" endtime="20201115 22:01:13.543"></status>
</kw>
<msg timestamp="20201115 22:01:13.544" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.567" endtime="20201115 22:01:13.583"></status>
</kw>
<msg timestamp="20201115 22:01:13.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.564" endtime="20201115 22:01:13.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.591" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.587" endtime="20201115 22:01:13.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.593" endtime="20201115 22:01:13.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.557" endtime="20201115 22:01:13.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.551" endtime="20201115 22:01:13.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.617" endtime="20201115 22:01:13.956"></status>
</kw>
<msg timestamp="20201115 22:01:13.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043018764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043024694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.614" endtime="20201115 22:01:13.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043018764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043024694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.966" endtime="20201115 22:01:13.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.985" endtime="20201115 22:01:13.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.606" endtime="20201115 22:01:13.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.601" endtime="20201115 22:01:13.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:14.003" level="INFO">${RESULT} = [{'time': 0.043024694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.930000000001212e-06, 'source_diff': 5.930000000001212e-06}, {'time': 0.043081625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:13.993" endtime="20201115 22:01:14.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:14.034" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:14.005" endtime="20201115 22:01:14.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.045" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:01:14.043" endtime="20201115 22:01:14.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.052" level="INFO">VALUE: [5.930000000001212e-06, 5.944000000000782e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.888000000002502e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.861000000002836e-06, 5.888999999995037e-06, 5.888000000002502e-06, 5.8190000000041264e-06, 5.847000000003266e-06, 5.917000000001116e-06, 5.888000000002502e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.9729999999993955e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.888999999995037e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.902000000002072e-06, 5.916999999994177e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.888999999995037e-06, 5.888999999995037e-06, 5.903000000001546e-06, 5.888999999995037e-06, 5.888000000002502e-06, 5.903000000001546e-06, 5.84800000000274e-06, 5.915999999994703e-06, 5.8879999999955634e-06, 5.875000000002406e-06, 5.875000000002406e-06, 5.930000000001212e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.888999999995037e-06, 5.902000000002072e-06, 5.903000000001546e-06, 5.917000000001116e-06]</msg>
<status status="PASS" starttime="20201115 22:01:14.047" endtime="20201115 22:01:14.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.036" endtime="20201115 22:01:14.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.061" endtime="20201115 22:01:14.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.070" endtime="20201115 22:01:14.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.065" endtime="20201115 22:01:14.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.057" endtime="20201115 22:01:14.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.545" endtime="20201115 22:01:14.095"></status>
</kw>
<msg timestamp="20201115 22:01:14.096" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.119" endtime="20201115 22:01:14.136"></status>
</kw>
<msg timestamp="20201115 22:01:14.137" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.116" endtime="20201115 22:01:14.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.143" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.139" endtime="20201115 22:01:14.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.145" endtime="20201115 22:01:14.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.109" endtime="20201115 22:01:14.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.103" endtime="20201115 22:01:14.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.169" endtime="20201115 22:01:14.510"></status>
</kw>
<msg timestamp="20201115 22:01:14.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043182333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043188222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.166" endtime="20201115 22:01:14.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043182333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043188222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.520" endtime="20201115 22:01:14.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.539" endtime="20201115 22:01:14.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.158" endtime="20201115 22:01:14.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.154" endtime="20201115 22:01:14.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:14.556" level="INFO">${RESULT} = [{'time': 0.043188222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.888999999995037e-06, 'source_diff': 5.888999999995037e-06}, {'time': 0.043251611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:14.547" endtime="20201115 22:01:14.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:14.587" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:14.558" endtime="20201115 22:01:14.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.598" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:01:14.596" endtime="20201115 22:01:14.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.604" level="INFO">VALUE: [5.888999999995037e-06, 5.861000000002836e-06, 5.861000000002836e-06, 5.902000000002072e-06, 5.916000000001642e-06, 5.888000000002502e-06, 5.903000000001546e-06, 5.945000000000256e-06, 5.889000000001976e-06, 5.874999999995467e-06, 5.916000000001642e-06, 5.973000000006334e-06, 5.903000000001546e-06, 5.944000000000782e-06, 5.84800000000274e-06, 5.902000000002072e-06, 5.875000000002406e-06, 5.875000000002406e-06, 5.902000000002072e-06, 5.889000000001976e-06, 5.888999999995037e-06, 5.874999999995467e-06, 5.901999999995133e-06, 5.945000000000256e-06, 5.929999999994273e-06, 5.931000000000686e-06, 5.8189999999971875e-06, 5.916000000001642e-06, 5.930000000001212e-06, 5.8879999999955634e-06, 5.888999999995037e-06, 5.860999999995897e-06, 5.889000000001976e-06, 5.902999999994607e-06, 5.903000000001546e-06, 5.888999999995037e-06, 5.945000000000256e-06, 5.903000000001546e-06, 5.971999999999922e-06, 5.889000000001976e-06, 5.915999999994703e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.888999999995037e-06, 5.971999999999922e-06, 5.917000000001116e-06, 5.903000000001546e-06, 5.902999999994607e-06, 5.833999999996231e-06, 5.8879999999955634e-06]</msg>
<status status="PASS" starttime="20201115 22:01:14.601" endtime="20201115 22:01:14.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.589" endtime="20201115 22:01:14.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.614" endtime="20201115 22:01:14.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.624" endtime="20201115 22:01:14.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.619" endtime="20201115 22:01:14.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.609" endtime="20201115 22:01:14.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.097" endtime="20201115 22:01:14.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.016" endtime="20201115 22:01:14.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.014" endtime="20201115 22:01:14.650"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.655" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.679" endtime="20201115 22:01:14.696"></status>
</kw>
<msg timestamp="20201115 22:01:14.697" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.675" endtime="20201115 22:01:14.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.703" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.699" endtime="20201115 22:01:14.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.706" endtime="20201115 22:01:14.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.668" endtime="20201115 22:01:14.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.662" endtime="20201115 22:01:14.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.730" endtime="20201115 22:01:15.070"></status>
</kw>
<msg timestamp="20201115 22:01:15.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048550444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048556528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.726" endtime="20201115 22:01:15.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048550444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048556528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.079" endtime="20201115 22:01:15.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.098" endtime="20201115 22:01:15.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.719" endtime="20201115 22:01:15.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.714" endtime="20201115 22:01:15.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:15.116" level="INFO">${RESULT} = [{'time': 0.048556528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.08400000000342e-06, 'source_diff': 6.08400000000342e-06}, {'time': 0.048626861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:15.107" endtime="20201115 22:01:15.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:15.147" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:15.118" endtime="20201115 22:01:15.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.158" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:01:15.156" endtime="20201115 22:01:15.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.168" level="INFO">VALUE: [6.08400000000342e-06, 6.0689999999974376e-06, 6.153000000001796e-06, 6.096999999996577e-06, 6.097000000003516e-06, 6.096999999996577e-06, 6.097999999996051e-06, 6.097000000003516e-06, 6.07000000000385e-06, 6.0690000000043764e-06, 6.139000000002226e-06, 6.0689999999974376e-06, 6.097000000003516e-06, 6.07000000000385e-06, 6.111000000003086e-06, 6.097000000003516e-06, 6.138999999995287e-06, 6.125000000002656e-06, 6.083999999996481e-06, 6.07000000000385e-06, 6.097000000003516e-06, 6.08400000000342e-06, 6.0139999999986316e-06, 6.096999999996577e-06, 6.110999999996147e-06, 6.0829999999970075e-06, 6.09800000000299e-06, 6.083999999996481e-06, 6.111000000003086e-06, 6.110999999996147e-06, 6.0829999999970075e-06, 6.097999999996051e-06, 6.0689999999974376e-06, 6.069999999996911e-06, 6.09800000000299e-06, 6.096999999996577e-06, 6.097999999996051e-06, 6.0829999999970075e-06, 6.152000000002322e-06, 6.097000000003516e-06, 6.069999999996911e-06, 6.02800000000514e-06, 6.0829999999970075e-06, 6.097000000003516e-06, 6.0689999999974376e-06, 6.111000000003086e-06, 6.069999999996911e-06, 6.097000000003516e-06, 6.097999999996051e-06, 6.097000000003516e-06]</msg>
<status status="PASS" starttime="20201115 22:01:15.160" endtime="20201115 22:01:15.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.148" endtime="20201115 22:01:15.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.177" endtime="20201115 22:01:15.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:15.187" endtime="20201115 22:01:15.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.181" endtime="20201115 22:01:15.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.173" endtime="20201115 22:01:15.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.657" endtime="20201115 22:01:15.213"></status>
</kw>
<msg timestamp="20201115 22:01:15.213" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.236" endtime="20201115 22:01:15.253"></status>
</kw>
<msg timestamp="20201115 22:01:15.254" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.233" endtime="20201115 22:01:15.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.261" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.256" endtime="20201115 22:01:15.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.263" endtime="20201115 22:01:15.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.226" endtime="20201115 22:01:15.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.220" endtime="20201115 22:01:15.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.287" endtime="20201115 22:01:15.625"></status>
</kw>
<msg timestamp="20201115 22:01:15.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043422931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043429042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.283" endtime="20201115 22:01:15.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043422931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043429042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.635" endtime="20201115 22:01:15.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.653" endtime="20201115 22:01:15.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.276" endtime="20201115 22:01:15.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.271" endtime="20201115 22:01:15.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:15.671" level="INFO">${RESULT} = [{'time': 0.043429042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.043503542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:15.662" endtime="20201115 22:01:15.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:15.704" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:15.673" endtime="20201115 22:01:15.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.716" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:01:15.714" endtime="20201115 22:01:15.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.721" level="INFO">VALUE: [6.111000000003086e-06, 6.083999999996481e-06, 6.0689999999974376e-06, 6.125000000002656e-06, 6.040999999998298e-06, 6.083999999996481e-06, 6.097000000003516e-06, 6.0139999999986316e-06, 6.083999999996481e-06, 6.069999999996911e-06, 6.083999999996481e-06, 6.110999999996147e-06, 6.097000000003516e-06, 6.0690000000043764e-06, 6.138999999995287e-06, 6.111000000003086e-06, 6.083000000003946e-06, 6.07000000000385e-06, 6.097000000003516e-06, 6.096999999996577e-06, 6.040999999998298e-06, 6.139000000002226e-06, 6.0829999999970075e-06, 6.083999999996481e-06, 6.096999999996577e-06, 6.097000000003516e-06, 6.096999999996577e-06, 6.0689999999974376e-06, 6.111000000003086e-06, 6.097000000003516e-06, 6.096999999996577e-06, 6.124999999995717e-06, 6.083000000003946e-06, 6.097000000003516e-06, 6.0139999999986316e-06, 6.069999999996911e-06, 6.11200000000256e-06, 6.153000000001796e-06, 6.083000000003946e-06, 6.069999999996911e-06, 6.096999999996577e-06, 6.0689999999974376e-06, 6.08400000000342e-06, 6.0829999999970075e-06, 6.097000000003516e-06, 6.097000000003516e-06, 6.124999999995717e-06, 6.083999999996481e-06, 6.083000000003946e-06, 6.07000000000385e-06]</msg>
<status status="PASS" starttime="20201115 22:01:15.718" endtime="20201115 22:01:15.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.707" endtime="20201115 22:01:15.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.731" endtime="20201115 22:01:15.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:15.739" endtime="20201115 22:01:15.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.735" endtime="20201115 22:01:15.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.726" endtime="20201115 22:01:15.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.214" endtime="20201115 22:01:15.765"></status>
</kw>
<msg timestamp="20201115 22:01:15.765" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.790" endtime="20201115 22:01:15.807"></status>
</kw>
<msg timestamp="20201115 22:01:15.808" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.787" endtime="20201115 22:01:15.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.815" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.811" endtime="20201115 22:01:15.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.817" endtime="20201115 22:01:15.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.780" endtime="20201115 22:01:15.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.772" endtime="20201115 22:01:15.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.841" endtime="20201115 22:01:16.143"></status>
</kw>
<msg timestamp="20201115 22:01:16.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044592194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044598333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.838" endtime="20201115 22:01:16.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044592194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044598333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.153" endtime="20201115 22:01:16.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.172" endtime="20201115 22:01:16.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.830" endtime="20201115 22:01:16.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.826" endtime="20201115 22:01:16.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:16.189" level="INFO">${RESULT} = [{'time': 0.044598333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.138999999995287e-06, 'source_diff': 6.138999999995287e-06}, {'time': 0.044672583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:16.180" endtime="20201115 22:01:16.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:16.221" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:16.192" endtime="20201115 22:01:16.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.232" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:01:16.230" endtime="20201115 22:01:16.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.238" level="INFO">VALUE: [6.138999999995287e-06, 6.083000000003946e-06, 6.08400000000342e-06, 6.097999999996051e-06, 6.083999999996481e-06, 6.097999999996051e-06, 6.083999999996481e-06, 6.083000000003946e-06, 6.153000000001796e-06, 6.0690000000043764e-06, 6.11200000000256e-06, 6.07000000000385e-06, 6.096999999996577e-06, 6.096999999996577e-06, 6.097000000003516e-06, 6.096999999996577e-06, 6.097000000003516e-06, 6.097000000003516e-06, 6.083000000003946e-06, 6.08400000000342e-06, 6.0690000000043764e-06, 6.07000000000385e-06, 6.08400000000342e-06, 6.069999999996911e-06, 6.097000000003516e-06, 6.097000000003516e-06, 6.11200000000256e-06, 6.111000000003086e-06, 6.138999999995287e-06, 6.0829999999970075e-06, 6.083000000003946e-06, 6.069999999996911e-06, 6.09800000000299e-06, 6.07000000000385e-06, 6.08400000000342e-06, 6.041999999997771e-06, 6.096999999996577e-06, 6.138999999995287e-06, 6.0829999999970075e-06, 6.110999999996147e-06, 6.040999999998298e-06, 6.0689999999974376e-06, 6.0829999999970075e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 6.096999999996577e-06, 6.0690000000043764e-06, 6.083999999996481e-06, 6.083000000003946e-06, 6.152000000002322e-06]</msg>
<status status="PASS" starttime="20201115 22:01:16.234" endtime="20201115 22:01:16.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.223" endtime="20201115 22:01:16.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.247" endtime="20201115 22:01:16.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:16.255" endtime="20201115 22:01:16.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.251" endtime="20201115 22:01:16.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.242" endtime="20201115 22:01:16.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.767" endtime="20201115 22:01:16.281"></status>
</kw>
<msg timestamp="20201115 22:01:16.281" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.304" endtime="20201115 22:01:16.321"></status>
</kw>
<msg timestamp="20201115 22:01:16.322" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.301" endtime="20201115 22:01:16.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.328" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.324" endtime="20201115 22:01:16.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.330" endtime="20201115 22:01:16.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.294" endtime="20201115 22:01:16.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.288" endtime="20201115 22:01:16.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.356" endtime="20201115 22:01:16.696"></status>
</kw>
<msg timestamp="20201115 22:01:16.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042869889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042875986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.353" endtime="20201115 22:01:16.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042869889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042875986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.706" endtime="20201115 22:01:16.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.726" endtime="20201115 22:01:16.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.345" endtime="20201115 22:01:16.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.340" endtime="20201115 22:01:16.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:16.744" level="INFO">${RESULT} = [{'time': 0.042875986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.096999999996577e-06, 'source_diff': 6.096999999996577e-06}, {'time': 0.042946542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:16.734" endtime="20201115 22:01:16.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:16.774" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:16.746" endtime="20201115 22:01:16.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.785" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:01:16.783" endtime="20201115 22:01:16.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.791" level="INFO">VALUE: [6.096999999996577e-06, 6.083999999996481e-06, 6.139000000002226e-06, 6.111000000003086e-06, 6.097000000003516e-06, 6.097000000003516e-06, 6.083999999996481e-06, 6.110999999996147e-06, 6.110999999996147e-06, 6.07000000000385e-06, 6.125000000002656e-06, 6.096999999996577e-06, 6.083999999996481e-06, 6.09800000000299e-06, 6.07000000000385e-06, 6.083000000003946e-06, 6.096999999996577e-06, 6.083999999996481e-06, 6.097000000003516e-06, 6.096999999996577e-06, 6.0829999999970075e-06, 6.097999999996051e-06, 6.097999999996051e-06, 6.0550000000048065e-06, 6.153000000001796e-06, 6.097000000003516e-06, 6.09800000000299e-06, 6.097000000003516e-06, 6.09800000000299e-06, 6.096999999996577e-06, 6.138999999995287e-06, 6.097000000003516e-06, 6.096999999996577e-06, 6.09800000000299e-06, 6.08400000000342e-06, 6.097000000003516e-06, 6.0279999999982015e-06, 6.083999999996481e-06, 6.096999999996577e-06, 6.0829999999970075e-06, 6.055999999997341e-06, 6.054999999997868e-06, 6.08400000000342e-06, 6.0689999999974376e-06, 6.083000000003946e-06, 6.069999999996911e-06, 6.096999999996577e-06, 6.097000000003516e-06, 6.069999999996911e-06, 6.069999999996911e-06]</msg>
<status status="PASS" starttime="20201115 22:01:16.788" endtime="20201115 22:01:16.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.776" endtime="20201115 22:01:16.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.800" endtime="20201115 22:01:16.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:16.808" endtime="20201115 22:01:16.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.804" endtime="20201115 22:01:16.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.795" endtime="20201115 22:01:16.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.282" endtime="20201115 22:01:16.834"></status>
</kw>
<msg timestamp="20201115 22:01:16.834" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.858" endtime="20201115 22:01:16.875"></status>
</kw>
<msg timestamp="20201115 22:01:16.876" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.854" endtime="20201115 22:01:16.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.878" endtime="20201115 22:01:16.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.885" endtime="20201115 22:01:16.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.847" endtime="20201115 22:01:16.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.841" endtime="20201115 22:01:16.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.910" endtime="20201115 22:01:17.252"></status>
</kw>
<msg timestamp="20201115 22:01:17.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043030653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043036736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.906" endtime="20201115 22:01:17.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043030653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043036736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.262" endtime="20201115 22:01:17.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.281" endtime="20201115 22:01:17.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.897" endtime="20201115 22:01:17.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.893" endtime="20201115 22:01:17.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.299" level="INFO">${RESULT} = [{'time': 0.043036736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.043108542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:17.290" endtime="20201115 22:01:17.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.329" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:17.301" endtime="20201115 22:01:17.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.341" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:01:17.338" endtime="20201115 22:01:17.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.346" level="INFO">VALUE: [6.0829999999970075e-06, 6.069999999996911e-06, 6.097000000003516e-06, 6.110999999996147e-06, 6.083999999996481e-06, 6.139000000002226e-06, 6.083000000003946e-06, 6.138999999995287e-06, 6.0829999999970075e-06, 6.083000000003946e-06, 6.083000000003946e-06, 6.0829999999970075e-06, 6.083999999996481e-06, 6.125000000002656e-06, 6.083999999996481e-06, 6.097999999996051e-06, 6.0829999999970075e-06, 6.069999999996911e-06, 6.0689999999974376e-06, 6.0689999999974376e-06, 6.111000000003086e-06, 6.096999999996577e-06, 6.083000000003946e-06, 6.0689999999974376e-06, 6.054999999997868e-06, 6.097000000003516e-06, 6.097000000003516e-06, 6.0689999999974376e-06, 6.08400000000342e-06, 6.08400000000342e-06, 6.0690000000043764e-06, 6.069999999996911e-06, 6.096999999996577e-06, 6.0829999999970075e-06, 6.069999999996911e-06, 6.096999999996577e-06, 6.0829999999970075e-06, 6.097999999996051e-06, 6.09800000000299e-06, 6.0690000000043764e-06, 6.07000000000385e-06, 6.0689999999974376e-06, 6.069999999996911e-06, 6.097999999996051e-06, 6.0829999999970075e-06, 6.111000000003086e-06, 6.0690000000043764e-06, 6.08400000000342e-06, 6.083000000003946e-06, 6.096999999996577e-06]</msg>
<status status="PASS" starttime="20201115 22:01:17.343" endtime="20201115 22:01:17.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.332" endtime="20201115 22:01:17.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.355" endtime="20201115 22:01:17.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:17.364" endtime="20201115 22:01:17.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.359" endtime="20201115 22:01:17.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.351" endtime="20201115 22:01:17.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.836" endtime="20201115 22:01:17.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.653" endtime="20201115 22:01:17.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.651" endtime="20201115 22:01:17.391"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.396" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.420" endtime="20201115 22:01:17.438"></status>
</kw>
<msg timestamp="20201115 22:01:17.439" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.417" endtime="20201115 22:01:17.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.445" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.441" endtime="20201115 22:01:17.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.447" endtime="20201115 22:01:17.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.409" endtime="20201115 22:01:17.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.403" endtime="20201115 22:01:17.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.472" endtime="20201115 22:01:17.817"></status>
</kw>
<msg timestamp="20201115 22:01:17.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050338431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050344736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.469" endtime="20201115 22:01:17.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050338431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050344736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.827" endtime="20201115 22:01:17.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.845" endtime="20201115 22:01:17.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.461" endtime="20201115 22:01:17.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.456" endtime="20201115 22:01:17.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.864" level="INFO">${RESULT} = [{'time': 0.050344736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.050421278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:17.854" endtime="20201115 22:01:17.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.896" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:17.866" endtime="20201115 22:01:17.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.907" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:01:17.905" endtime="20201115 22:01:17.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.914" level="INFO">VALUE: [6.304999999998118e-06, 6.305999999997591e-06, 6.319999999997161e-06, 6.3190000000046265e-06, 6.305999999997591e-06, 6.305999999997591e-06, 6.3200000000041e-06, 6.319999999997161e-06, 6.361000000003336e-06, 6.305999999997591e-06, 6.30600000000453e-06, 6.375000000002906e-06, 6.318999999997688e-06, 6.305999999997591e-06, 6.304999999998118e-06, 6.36200000000281e-06, 6.3329999999972575e-06, 6.3200000000041e-06, 6.3050000000050566e-06, 6.361000000003336e-06, 6.361000000003336e-06, 6.333000000004196e-06, 6.3050000000050566e-06, 6.305999999997591e-06, 6.249999999999312e-06, 6.3050000000050566e-06, 6.3200000000041e-06, 6.319999999997161e-06, 6.30600000000453e-06, 6.305999999997591e-06, 6.249999999999312e-06, 6.305999999997591e-06, 6.319999999997161e-06, 6.333999999996731e-06, 6.33400000000367e-06, 6.3190000000046265e-06, 6.237000000006154e-06, 6.30600000000453e-06, 6.291999999998021e-06, 6.34800000000324e-06, 6.291999999998021e-06, 6.3050000000050566e-06, 6.3329999999972575e-06, 6.304999999998118e-06, 6.304999999998118e-06, 6.304999999998118e-06, 6.346999999996827e-06, 6.319999999997161e-06, 6.3200000000041e-06, 6.346999999996827e-06]</msg>
<status status="PASS" starttime="20201115 22:01:17.910" endtime="20201115 22:01:17.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.898" endtime="20201115 22:01:17.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.923" endtime="20201115 22:01:17.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:17.932" endtime="20201115 22:01:17.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.928" endtime="20201115 22:01:17.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.918" endtime="20201115 22:01:17.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.397" endtime="20201115 22:01:17.958"></status>
</kw>
<msg timestamp="20201115 22:01:17.958" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.982" endtime="20201115 22:01:17.998"></status>
</kw>
<msg timestamp="20201115 22:01:18.000" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.978" endtime="20201115 22:01:18.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.007" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.002" endtime="20201115 22:01:18.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.009" endtime="20201115 22:01:18.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.971" endtime="20201115 22:01:18.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.965" endtime="20201115 22:01:18.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.033" endtime="20201115 22:01:18.374"></status>
</kw>
<msg timestamp="20201115 22:01:18.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043245069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043251319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.030" endtime="20201115 22:01:18.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043245069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043251319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.384" endtime="20201115 22:01:18.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.403" endtime="20201115 22:01:18.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.023" endtime="20201115 22:01:18.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.018" endtime="20201115 22:01:18.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:18.423" level="INFO">${RESULT} = [{'time': 0.043251319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2500000000062506e-06, 'source_diff': 6.2500000000062506e-06}, {'time': 0.043330153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:18.413" endtime="20201115 22:01:18.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:18.454" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:18.425" endtime="20201115 22:01:18.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.465" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:01:18.463" endtime="20201115 22:01:18.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.471" level="INFO">VALUE: [6.2500000000062506e-06, 6.3200000000041e-06, 6.29200000000496e-06, 6.318999999997688e-06, 6.304999999998118e-06, 6.3329999999972575e-06, 6.333000000004196e-06, 6.291999999998021e-06, 6.347000000003766e-06, 6.318999999997688e-06, 6.375000000002906e-06, 6.30600000000453e-06, 6.3190000000046265e-06, 6.304999999998118e-06, 6.305999999997591e-06, 6.30600000000453e-06, 6.291000000005487e-06, 6.360999999996397e-06, 6.30600000000453e-06, 6.305999999997591e-06, 6.3329999999972575e-06, 6.304999999998118e-06, 6.318999999997688e-06, 6.291999999998021e-06, 6.319999999997161e-06, 6.318999999997688e-06, 6.304999999998118e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.30600000000453e-06, 6.389000000002476e-06, 6.291999999998021e-06, 6.304999999998118e-06, 6.304999999998118e-06, 6.305999999997591e-06, 6.290999999998548e-06, 6.305999999997591e-06, 6.304999999998118e-06, 6.3050000000050566e-06, 6.333999999996731e-06, 6.291999999998021e-06, 6.305999999997591e-06, 6.30600000000453e-06, 6.304999999998118e-06, 6.305999999997591e-06, 6.319999999997161e-06, 6.34800000000324e-06, 6.347000000003766e-06, 6.235999999999742e-06, 6.318999999997688e-06]</msg>
<status status="PASS" starttime="20201115 22:01:18.468" endtime="20201115 22:01:18.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.456" endtime="20201115 22:01:18.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.480" endtime="20201115 22:01:18.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.488" endtime="20201115 22:01:18.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.484" endtime="20201115 22:01:18.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.475" endtime="20201115 22:01:18.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.959" endtime="20201115 22:01:18.514"></status>
</kw>
<msg timestamp="20201115 22:01:18.515" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.540" endtime="20201115 22:01:18.556"></status>
</kw>
<msg timestamp="20201115 22:01:18.558" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.536" endtime="20201115 22:01:18.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.564" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.560" endtime="20201115 22:01:18.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.566" endtime="20201115 22:01:18.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.528" endtime="20201115 22:01:18.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.521" endtime="20201115 22:01:18.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.590" endtime="20201115 22:01:18.930"></status>
</kw>
<msg timestamp="20201115 22:01:18.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045098125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045104444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.587" endtime="20201115 22:01:18.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045098125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045104444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.940" endtime="20201115 22:01:18.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.959" endtime="20201115 22:01:18.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.579" endtime="20201115 22:01:18.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.575" endtime="20201115 22:01:18.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:18.978" level="INFO">${RESULT} = [{'time': 0.045104444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.045179319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:18.969" endtime="20201115 22:01:18.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.009" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:18.980" endtime="20201115 22:01:19.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.020" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.018" endtime="20201115 22:01:19.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.026" level="INFO">VALUE: [6.318999999997688e-06, 6.3050000000050566e-06, 6.30600000000453e-06, 6.318999999997688e-06, 6.305999999997591e-06, 6.3329999999972575e-06, 6.3329999999972575e-06, 6.304999999998118e-06, 6.333999999996731e-06, 6.30600000000453e-06, 6.3190000000046265e-06, 6.375000000002906e-06, 6.305999999997591e-06, 6.3190000000046265e-06, 6.346999999996827e-06, 6.305999999997591e-06, 6.318999999997688e-06, 6.291000000005487e-06, 6.319999999997161e-06, 6.3200000000041e-06, 6.3200000000041e-06, 6.262999999999408e-06, 6.3200000000041e-06, 6.318999999997688e-06, 6.30600000000453e-06, 6.291000000005487e-06, 6.305999999997591e-06, 6.3200000000041e-06, 6.318999999997688e-06, 6.30600000000453e-06, 6.3329999999972575e-06, 6.319999999997161e-06, 6.318999999997688e-06, 6.304999999998118e-06, 6.3200000000041e-06, 6.346999999996827e-06, 6.3050000000050566e-06, 6.3329999999972575e-06, 6.374999999995967e-06, 6.318999999997688e-06, 6.305999999997591e-06, 6.30600000000453e-06, 6.291999999998021e-06, 6.3190000000046265e-06, 6.249999999999312e-06, 6.3190000000046265e-06, 6.305999999997591e-06, 6.389000000002476e-06, 6.290999999998548e-06, 6.3200000000041e-06]</msg>
<status status="PASS" starttime="20201115 22:01:19.022" endtime="20201115 22:01:19.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.011" endtime="20201115 22:01:19.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.035" endtime="20201115 22:01:19.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.043" endtime="20201115 22:01:19.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.039" endtime="20201115 22:01:19.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.030" endtime="20201115 22:01:19.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.516" endtime="20201115 22:01:19.069"></status>
</kw>
<msg timestamp="20201115 22:01:19.070" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.094" endtime="20201115 22:01:19.110"></status>
</kw>
<msg timestamp="20201115 22:01:19.112" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.090" endtime="20201115 22:01:19.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.118" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.114" endtime="20201115 22:01:19.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.120" endtime="20201115 22:01:19.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.083" endtime="20201115 22:01:19.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.077" endtime="20201115 22:01:19.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.145" endtime="20201115 22:01:19.464"></status>
</kw>
<msg timestamp="20201115 22:01:19.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044138944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044145264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.141" endtime="20201115 22:01:19.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044138944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044145264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.475" endtime="20201115 22:01:19.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.494" endtime="20201115 22:01:19.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.133" endtime="20201115 22:01:19.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.128" endtime="20201115 22:01:19.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.514" level="INFO">${RESULT} = [{'time': 0.044145264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.319999999997161e-06, 'source_diff': 6.319999999997161e-06}, {'time': 0.044225347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:19.505" endtime="20201115 22:01:19.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.544" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:19.516" endtime="20201115 22:01:19.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.556" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.553" endtime="20201115 22:01:19.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.561" level="INFO">VALUE: [6.319999999997161e-06, 6.318999999997688e-06, 6.304999999998118e-06, 6.305999999997591e-06, 6.305999999997591e-06, 6.346999999996827e-06, 6.291999999998021e-06, 6.3200000000041e-06, 6.291000000005487e-06, 6.318999999997688e-06, 6.249999999999312e-06, 6.318999999997688e-06, 6.333999999996731e-06, 6.30600000000453e-06, 6.33400000000367e-06, 6.2779999999984515e-06, 6.30600000000453e-06, 6.3190000000046265e-06, 6.319999999997161e-06, 6.27800000000539e-06, 6.305999999997591e-06, 6.333999999996731e-06, 6.305999999997591e-06, 6.333000000004196e-06, 6.375000000002906e-06, 6.3200000000041e-06, 6.305999999997591e-06, 6.3190000000046265e-06, 6.304999999998118e-06, 6.305999999997591e-06, 6.29200000000496e-06, 6.262999999999408e-06, 6.305999999997591e-06, 6.304999999998118e-06, 6.3050000000050566e-06, 6.318999999997688e-06, 6.291000000005487e-06, 6.291999999998021e-06, 6.304999999998118e-06, 6.319999999997161e-06, 6.3050000000050566e-06, 6.304999999998118e-06, 6.333000000004196e-06, 6.360999999996397e-06, 6.305999999997591e-06, 6.304999999998118e-06, 6.290999999998548e-06, 6.304999999998118e-06, 6.318999999997688e-06, 6.33400000000367e-06]</msg>
<status status="PASS" starttime="20201115 22:01:19.558" endtime="20201115 22:01:19.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.546" endtime="20201115 22:01:19.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.570" endtime="20201115 22:01:19.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.579" endtime="20201115 22:01:19.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.575" endtime="20201115 22:01:19.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.566" endtime="20201115 22:01:19.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.071" endtime="20201115 22:01:19.605"></status>
</kw>
<msg timestamp="20201115 22:01:19.606" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.629" endtime="20201115 22:01:19.646"></status>
</kw>
<msg timestamp="20201115 22:01:19.648" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.626" endtime="20201115 22:01:19.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.654" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.650" endtime="20201115 22:01:19.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.656" endtime="20201115 22:01:19.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.618" endtime="20201115 22:01:19.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.613" endtime="20201115 22:01:19.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.680" endtime="20201115 22:01:20.021"></status>
</kw>
<msg timestamp="20201115 22:01:20.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043110444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043116764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.677" endtime="20201115 22:01:20.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043110444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043116764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.031" endtime="20201115 22:01:20.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.050" endtime="20201115 22:01:20.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.669" endtime="20201115 22:01:20.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.665" endtime="20201115 22:01:20.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.069" level="INFO">${RESULT} = [{'time': 0.043116764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.3200000000041e-06, 'source_diff': 6.3200000000041e-06}, {'time': 0.043199764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201115 22:01:20.060" endtime="20201115 22:01:20.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.102" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:20.071" endtime="20201115 22:01:20.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.113" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.111" endtime="20201115 22:01:20.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.119" level="INFO">VALUE: [6.3200000000041e-06, 6.30600000000453e-06, 6.304999999998118e-06, 6.291999999998021e-06, 6.333000000004196e-06, 6.291999999998021e-06, 6.3200000000041e-06, 6.30600000000453e-06, 6.319999999997161e-06, 6.3329999999972575e-06, 6.403000000002046e-06, 6.318999999997688e-06, 6.319999999997161e-06, 6.30600000000453e-06, 6.361000000003336e-06, 6.3200000000041e-06, 6.30600000000453e-06, 6.346999999996827e-06, 6.318999999997688e-06, 6.249999999999312e-06, 6.305999999997591e-06, 6.3329999999972575e-06, 6.29200000000496e-06, 6.291999999998021e-06, 6.3329999999972575e-06, 6.304999999998118e-06, 6.290999999998548e-06, 6.30600000000453e-06, 6.304999999998118e-06, 6.29200000000496e-06, 6.291999999998021e-06, 6.3329999999972575e-06, 6.3200000000041e-06, 6.319999999997161e-06, 6.3329999999972575e-06, 6.3190000000046265e-06, 6.305999999997591e-06, 6.291999999998021e-06, 6.3200000000041e-06, 6.27800000000539e-06, 6.333000000004196e-06, 6.304999999998118e-06, 6.347000000003766e-06, 6.304999999998118e-06, 6.304999999998118e-06, 6.346999999996827e-06, 6.318999999997688e-06, 6.34800000000324e-06, 6.291999999998021e-06, 6.290999999998548e-06]</msg>
<status status="PASS" starttime="20201115 22:01:20.115" endtime="20201115 22:01:20.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.104" endtime="20201115 22:01:20.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.128" endtime="20201115 22:01:20.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:20.137" endtime="20201115 22:01:20.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.132" endtime="20201115 22:01:20.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.124" endtime="20201115 22:01:20.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.607" endtime="20201115 22:01:20.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.393" endtime="20201115 22:01:20.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.391" endtime="20201115 22:01:20.163"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.168" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.192" endtime="20201115 22:01:20.209"></status>
</kw>
<msg timestamp="20201115 22:01:20.210" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.188" endtime="20201115 22:01:20.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.216" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.212" endtime="20201115 22:01:20.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.219" endtime="20201115 22:01:20.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.181" endtime="20201115 22:01:20.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.175" endtime="20201115 22:01:20.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.242" endtime="20201115 22:01:20.584"></status>
</kw>
<msg timestamp="20201115 22:01:20.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048456, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048462528, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:20.239" endtime="20201115 22:01:20.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048456, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048462528, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:20.593" endtime="20201115 22:01:20.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.612" endtime="20201115 22:01:20.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.232" endtime="20201115 22:01:20.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.227" endtime="20201115 22:01:20.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.632" level="INFO">${RESULT} = [{'time': 0.048462528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.048555653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:20.623" endtime="20201115 22:01:20.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.662" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:20.634" endtime="20201115 22:01:20.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.674" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.671" endtime="20201115 22:01:20.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.685" level="INFO">VALUE: [6.5279999999987015e-06, 6.5279999999987015e-06, 6.458000000000852e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.500000000006501e-06, 6.513999999999132e-06, 6.541999999998271e-06, 6.486999999999465e-06, 6.568999999997938e-06, 6.54200000000521e-06, 6.485999999999992e-06, 6.458000000000852e-06, 6.485999999999992e-06, 6.500000000006501e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.513999999999132e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.569999999997411e-06, 6.52800000000564e-06, 6.458999999993387e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.54200000000521e-06, 6.485999999999992e-06, 6.458000000000852e-06, 6.4729999999998955e-06, 6.526999999999228e-06, 6.513999999999132e-06, 6.512999999999658e-06, 6.52800000000564e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.5279999999987015e-06, 6.472000000000422e-06, 6.513999999999132e-06, 6.5279999999987015e-06, 6.5279999999987015e-06, 6.486999999999465e-06, 6.499999999999562e-06, 6.485999999999992e-06]</msg>
<status status="PASS" starttime="20201115 22:01:20.676" endtime="20201115 22:01:20.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.664" endtime="20201115 22:01:20.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.694" endtime="20201115 22:01:20.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:20.702" endtime="20201115 22:01:20.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.698" endtime="20201115 22:01:20.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.689" endtime="20201115 22:01:20.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.169" endtime="20201115 22:01:20.728"></status>
</kw>
<msg timestamp="20201115 22:01:20.729" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.752" endtime="20201115 22:01:20.769"></status>
</kw>
<msg timestamp="20201115 22:01:20.770" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.749" endtime="20201115 22:01:20.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.777" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.773" endtime="20201115 22:01:20.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.779" endtime="20201115 22:01:20.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.741" endtime="20201115 22:01:20.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.735" endtime="20201115 22:01:20.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.803" endtime="20201115 22:01:21.142"></status>
</kw>
<msg timestamp="20201115 22:01:21.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043459208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043465722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.799" endtime="20201115 22:01:21.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043459208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043465722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.152" endtime="20201115 22:01:21.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.171" endtime="20201115 22:01:21.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.792" endtime="20201115 22:01:21.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.787" endtime="20201115 22:01:21.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.190" level="INFO">${RESULT} = [{'time': 0.043465722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.043555083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:21.181" endtime="20201115 22:01:21.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.220" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:21.192" endtime="20201115 22:01:21.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.232" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.230" endtime="20201115 22:01:21.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.238" level="INFO">VALUE: [6.513999999999132e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.541999999998271e-06, 6.540999999998798e-06, 6.512999999999658e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.486999999999465e-06, 6.499999999999562e-06, 6.512999999999658e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.513999999999132e-06, 6.5140000000060705e-06, 6.499999999999562e-06, 6.569999999997411e-06, 6.431000000001186e-06, 6.541999999998271e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.554999999998368e-06, 6.486999999999465e-06, 6.5140000000060705e-06, 6.499999999999562e-06, 6.569999999997411e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.5140000000060705e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.555999999997841e-06, 6.499999999999562e-06, 6.472000000000422e-06, 6.457999999993913e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.5140000000060705e-06, 6.499999999999562e-06, 6.486999999999465e-06, 6.526999999999228e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.526999999999228e-06]</msg>
<status status="PASS" starttime="20201115 22:01:21.235" endtime="20201115 22:01:21.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.223" endtime="20201115 22:01:21.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.247" endtime="20201115 22:01:21.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.255" endtime="20201115 22:01:21.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.251" endtime="20201115 22:01:21.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.242" endtime="20201115 22:01:21.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.730" endtime="20201115 22:01:21.281"></status>
</kw>
<msg timestamp="20201115 22:01:21.281" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.305" endtime="20201115 22:01:21.322"></status>
</kw>
<msg timestamp="20201115 22:01:21.323" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.301" endtime="20201115 22:01:21.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.330" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.326" endtime="20201115 22:01:21.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.332" endtime="20201115 22:01:21.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.294" endtime="20201115 22:01:21.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.288" endtime="20201115 22:01:21.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.356" endtime="20201115 22:01:21.696"></status>
</kw>
<msg timestamp="20201115 22:01:21.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043182889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043189403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.353" endtime="20201115 22:01:21.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043182889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043189403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.705" endtime="20201115 22:01:21.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.725" endtime="20201115 22:01:21.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.345" endtime="20201115 22:01:21.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.340" endtime="20201115 22:01:21.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.744" level="INFO">${RESULT} = [{'time': 0.043189403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.043270306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:21.735" endtime="20201115 22:01:21.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.775" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:21.747" endtime="20201115 22:01:21.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.787" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.784" endtime="20201115 22:01:21.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.792" level="INFO">VALUE: [6.513999999999132e-06, 6.58400000000392e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.472000000000422e-06, 6.5279999999987015e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.5140000000060705e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.5140000000060705e-06, 6.458000000000852e-06, 6.512999999999658e-06, 6.500000000006501e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.472000000000422e-06, 6.513999999999132e-06, 6.512999999999658e-06, 6.540999999998798e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.485999999999992e-06, 6.5140000000060705e-06, 6.499999999999562e-06, 6.512999999999658e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.415999999995203e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.512999999999658e-06, 6.5969999999970774e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.5140000000060705e-06, 6.444000000001282e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.499999999999562e-06]</msg>
<status status="PASS" starttime="20201115 22:01:21.789" endtime="20201115 22:01:21.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.777" endtime="20201115 22:01:21.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.801" endtime="20201115 22:01:21.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.810" endtime="20201115 22:01:21.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.805" endtime="20201115 22:01:21.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.796" endtime="20201115 22:01:21.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.283" endtime="20201115 22:01:21.835"></status>
</kw>
<msg timestamp="20201115 22:01:21.836" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.859" endtime="20201115 22:01:21.877"></status>
</kw>
<msg timestamp="20201115 22:01:21.878" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.856" endtime="20201115 22:01:21.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.884" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.880" endtime="20201115 22:01:21.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.886" endtime="20201115 22:01:21.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.848" endtime="20201115 22:01:21.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.843" endtime="20201115 22:01:21.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.910" endtime="20201115 22:01:22.249"></status>
</kw>
<msg timestamp="20201115 22:01:22.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043270875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043277389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.907" endtime="20201115 22:01:22.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043270875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043277389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.259" endtime="20201115 22:01:22.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.278" endtime="20201115 22:01:22.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.899" endtime="20201115 22:01:22.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.895" endtime="20201115 22:01:22.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.298" level="INFO">${RESULT} = [{'time': 0.043277389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.043361111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:22.289" endtime="20201115 22:01:22.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.331" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:22.300" endtime="20201115 22:01:22.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.342" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.339" endtime="20201115 22:01:22.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.347" level="INFO">VALUE: [6.513999999999132e-06, 6.444000000001282e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.583000000004446e-06, 6.485999999999992e-06, 6.526999999999228e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.5140000000060705e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.554999999998368e-06, 6.472000000000422e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.458000000000852e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.555999999997841e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.5279999999987015e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.459000000000326e-06, 6.554999999998368e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.541999999998271e-06, 6.5140000000060705e-06, 6.513999999999132e-06, 6.583000000004446e-06, 6.499999999999562e-06, 6.568999999997938e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.512999999999658e-06, 6.513999999999132e-06, 6.485999999999992e-06]</msg>
<status status="PASS" starttime="20201115 22:01:22.344" endtime="20201115 22:01:22.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.333" endtime="20201115 22:01:22.350"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.356" endtime="20201115 22:01:22.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:22.365" endtime="20201115 22:01:22.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.360" endtime="20201115 22:01:22.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.352" endtime="20201115 22:01:22.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.837" endtime="20201115 22:01:22.390"></status>
</kw>
<msg timestamp="20201115 22:01:22.391" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.414" endtime="20201115 22:01:22.432"></status>
</kw>
<msg timestamp="20201115 22:01:22.433" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.411" endtime="20201115 22:01:22.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.439" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.435" endtime="20201115 22:01:22.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.442" endtime="20201115 22:01:22.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.403" endtime="20201115 22:01:22.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.397" endtime="20201115 22:01:22.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.465" endtime="20201115 22:01:22.779"></status>
</kw>
<msg timestamp="20201115 22:01:22.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043295764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043302278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.462" endtime="20201115 22:01:22.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043295764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043302278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.783" endtime="20201115 22:01:22.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.792" endtime="20201115 22:01:22.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.455" endtime="20201115 22:01:22.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.450" endtime="20201115 22:01:22.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.800" level="INFO">${RESULT} = [{'time': 0.043302278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.043391639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:22.796" endtime="20201115 22:01:22.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.815" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:22.801" endtime="20201115 22:01:22.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.820" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.819" endtime="20201115 22:01:22.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.823" level="INFO">VALUE: [6.513999999999132e-06, 6.5140000000060705e-06, 6.5690000000048765e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.416000000002142e-06, 6.485999999999992e-06, 6.526999999999228e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.5140000000060705e-06, 6.540999999998798e-06, 6.5140000000060705e-06, 6.458000000000852e-06, 6.431000000001186e-06, 6.500000000006501e-06, 6.512999999999658e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.512999999999658e-06, 6.513999999999132e-06, 6.5279999999987015e-06, 6.5140000000060705e-06, 6.485999999999992e-06, 6.527000000006167e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.459000000000326e-06, 6.541999999998271e-06, 6.5829999999975075e-06, 6.485999999999992e-06, 6.526999999999228e-06, 6.513999999999132e-06, 6.5829999999975075e-06, 6.459000000000326e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.5140000000060705e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.512999999999658e-06, 6.500000000006501e-06, 6.485999999999992e-06]</msg>
<status status="PASS" starttime="20201115 22:01:22.821" endtime="20201115 22:01:22.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.816" endtime="20201115 22:01:22.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.827" endtime="20201115 22:01:22.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:22.831" endtime="20201115 22:01:22.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.829" endtime="20201115 22:01:22.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.825" endtime="20201115 22:01:22.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.392" endtime="20201115 22:01:22.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.166" endtime="20201115 22:01:22.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.164" endtime="20201115 22:01:22.853"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.855" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.866" endtime="20201115 22:01:22.883"></status>
</kw>
<msg timestamp="20201115 22:01:22.884" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.864" endtime="20201115 22:01:22.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.890" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.886" endtime="20201115 22:01:22.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.892" endtime="20201115 22:01:22.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.861" endtime="20201115 22:01:22.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.858" endtime="20201115 22:01:22.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.917" endtime="20201115 22:01:23.258"></status>
</kw>
<msg timestamp="20201115 22:01:23.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027965931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027972653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.913" endtime="20201115 22:01:23.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027965931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027972653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.268" endtime="20201115 22:01:23.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.286" endtime="20201115 22:01:23.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.906" endtime="20201115 22:01:23.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.901" endtime="20201115 22:01:23.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.304" level="INFO">${RESULT} = [{'time': 0.027972653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.028065069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:23.295" endtime="20201115 22:01:23.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.336" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:23.306" endtime="20201115 22:01:23.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.347" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.345" endtime="20201115 22:01:23.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.353" level="INFO">VALUE: [6.722000000000672e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.7079999999976325e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.694000000001532e-06, 6.736000000000242e-06, 6.7369999999997154e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.762999999999908e-06, 6.7919999999985214e-06, 6.749999999999812e-06, 6.7230000000001455e-06, 6.651999999999353e-06, 6.722000000000672e-06, 6.735999999996772e-06, 6.736000000000242e-06, 6.679999999998493e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.735999999996772e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.7230000000001455e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.7230000000001455e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.7779999999989515e-06, 6.708000000001102e-06, 6.7919999999985214e-06, 6.7369999999997154e-06, 6.736000000000242e-06, 6.735999999993303e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.707999999994163e-06, 6.6519999999958834e-06]</msg>
<status status="PASS" starttime="20201115 22:01:23.350" endtime="20201115 22:01:23.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.338" endtime="20201115 22:01:23.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.362" endtime="20201115 22:01:23.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.370" endtime="20201115 22:01:23.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.366" endtime="20201115 22:01:23.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.357" endtime="20201115 22:01:23.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.855" endtime="20201115 22:01:23.396"></status>
</kw>
<msg timestamp="20201115 22:01:23.396" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.420" endtime="20201115 22:01:23.437"></status>
</kw>
<msg timestamp="20201115 22:01:23.439" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.416" endtime="20201115 22:01:23.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.446" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.441" endtime="20201115 22:01:23.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.448" endtime="20201115 22:01:23.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.409" endtime="20201115 22:01:23.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.403" endtime="20201115 22:01:23.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.472" endtime="20201115 22:01:23.813"></status>
</kw>
<msg timestamp="20201115 22:01:23.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042965903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042972625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.468" endtime="20201115 22:01:23.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042965903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042972625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.822" endtime="20201115 22:01:23.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.841" endtime="20201115 22:01:23.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.461" endtime="20201115 22:01:23.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.456" endtime="20201115 22:01:23.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.859" level="INFO">${RESULT} = [{'time': 0.042972625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.04306275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:23.850" endtime="20201115 22:01:23.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.891" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:23.861" endtime="20201115 22:01:23.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.902" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.900" endtime="20201115 22:01:23.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.907" level="INFO">VALUE: [6.722000000000672e-06, 6.721999999993733e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.721999999993733e-06, 6.749999999999812e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.709000000000576e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.709000000000576e-06, 6.749999999999812e-06, 6.7230000000001455e-06, 6.735999999993303e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.721999999993733e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.7230000000001455e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.749999999999812e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.762999999999908e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.7369999999997154e-06, 6.736000000000242e-06, 6.7779999999989515e-06, 6.7919999999985214e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.749999999999812e-06, 6.722000000000672e-06, 6.721999999993733e-06, 6.7779999999989515e-06]</msg>
<status status="PASS" starttime="20201115 22:01:23.904" endtime="20201115 22:01:23.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.893" endtime="20201115 22:01:23.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.916" endtime="20201115 22:01:23.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.925" endtime="20201115 22:01:23.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.920" endtime="20201115 22:01:23.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.912" endtime="20201115 22:01:23.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.398" endtime="20201115 22:01:23.950"></status>
</kw>
<msg timestamp="20201115 22:01:23.951" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.975" endtime="20201115 22:01:23.992"></status>
</kw>
<msg timestamp="20201115 22:01:23.993" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.971" endtime="20201115 22:01:23.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.000" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.996" endtime="20201115 22:01:24.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.002" endtime="20201115 22:01:24.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.963" endtime="20201115 22:01:24.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.958" endtime="20201115 22:01:24.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.026" endtime="20201115 22:01:24.365"></status>
</kw>
<msg timestamp="20201115 22:01:24.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043696889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043703681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.023" endtime="20201115 22:01:24.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043696889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043703681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.375" endtime="20201115 22:01:24.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.394" endtime="20201115 22:01:24.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.015" endtime="20201115 22:01:24.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.011" endtime="20201115 22:01:24.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:24.412" level="INFO">${RESULT} = [{'time': 0.043703681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.043795167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:24.402" endtime="20201115 22:01:24.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:24.445" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:24.414" endtime="20201115 22:01:24.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.456" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:01:24.454" endtime="20201115 22:01:24.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.462" level="INFO">VALUE: [6.7919999999985214e-06, 6.7230000000001455e-06, 6.680000000001962e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.652999999995357e-06, 6.638999999995787e-06, 6.709000000000576e-06, 6.667000000001866e-06, 6.695000000001006e-06, 6.722000000000672e-06, 6.7919999999985214e-06, 6.735999999993303e-06, 6.709000000000576e-06, 6.749999999999812e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.790999999999048e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.7369999999997154e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.7230000000001455e-06, 6.7230000000001455e-06, 6.666000000002392e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.805999999998091e-06, 6.749999999999812e-06, 6.749999999999812e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.695000000001006e-06, 6.721999999993733e-06, 6.722000000000672e-06, 6.665999999995453e-06, 6.736000000000242e-06, 6.749999999999812e-06]</msg>
<status status="PASS" starttime="20201115 22:01:24.458" endtime="20201115 22:01:24.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.447" endtime="20201115 22:01:24.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.471" endtime="20201115 22:01:24.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:24.479" endtime="20201115 22:01:24.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.475" endtime="20201115 22:01:24.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.466" endtime="20201115 22:01:24.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.952" endtime="20201115 22:01:24.505"></status>
</kw>
<msg timestamp="20201115 22:01:24.506" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.529" endtime="20201115 22:01:24.546"></status>
</kw>
<msg timestamp="20201115 22:01:24.547" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.526" endtime="20201115 22:01:24.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.554" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.550" endtime="20201115 22:01:24.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.556" endtime="20201115 22:01:24.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.518" endtime="20201115 22:01:24.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.513" endtime="20201115 22:01:24.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.580" endtime="20201115 22:01:24.932"></status>
</kw>
<msg timestamp="20201115 22:01:24.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043649153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043655931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.577" endtime="20201115 22:01:24.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043649153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043655931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.942" endtime="20201115 22:01:24.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.961" endtime="20201115 22:01:24.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.569" endtime="20201115 22:01:24.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.564" endtime="20201115 22:01:24.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:24.978" level="INFO">${RESULT} = [{'time': 0.043655931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.043750458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:24.969" endtime="20201115 22:01:24.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.009" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:24.980" endtime="20201115 22:01:25.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.022" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.018" endtime="20201115 22:01:25.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.027" level="INFO">VALUE: [6.7779999999989515e-06, 6.776999999999478e-06, 6.762999999999908e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.7779999999989515e-06, 6.749999999999812e-06, 6.7230000000001455e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.721999999993733e-06, 6.665999999995453e-06, 6.79200000000546e-06, 6.708000000001102e-06, 6.7779999999989515e-06, 6.7230000000001455e-06, 6.790999999999048e-06, 6.736000000000242e-06, 6.709000000000576e-06, 6.694000000001532e-06, 6.736000000000242e-06, 6.7919999999985214e-06, 6.763999999999382e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.749999999999812e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.708000000001102e-06, 6.7230000000001455e-06, 6.722000000000672e-06, 6.695000000001006e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.694000000001532e-06, 6.708000000001102e-06, 6.790999999999048e-06, 6.736000000000242e-06, 6.7230000000001455e-06, 6.708000000001102e-06, 6.790999999999048e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.749999999999812e-06, 6.7369999999997154e-06, 6.693999999994593e-06, 6.735999999993303e-06, 6.762999999999908e-06]</msg>
<status status="PASS" starttime="20201115 22:01:25.024" endtime="20201115 22:01:25.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.011" endtime="20201115 22:01:25.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.037" endtime="20201115 22:01:25.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.046" endtime="20201115 22:01:25.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.041" endtime="20201115 22:01:25.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.033" endtime="20201115 22:01:25.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.507" endtime="20201115 22:01:25.072"></status>
</kw>
<msg timestamp="20201115 22:01:25.072" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.095" endtime="20201115 22:01:25.113"></status>
</kw>
<msg timestamp="20201115 22:01:25.114" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.092" endtime="20201115 22:01:25.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.120" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.116" endtime="20201115 22:01:25.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.122" endtime="20201115 22:01:25.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.085" endtime="20201115 22:01:25.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.079" endtime="20201115 22:01:25.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.146" endtime="20201115 22:01:25.500"></status>
</kw>
<msg timestamp="20201115 22:01:25.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043010833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043017569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.143" endtime="20201115 22:01:25.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043010833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043017569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.510" endtime="20201115 22:01:25.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.529" endtime="20201115 22:01:25.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.135" endtime="20201115 22:01:25.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.131" endtime="20201115 22:01:25.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.547" level="INFO">${RESULT} = [{'time': 0.043017569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.043112931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:25.538" endtime="20201115 22:01:25.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.578" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:25.549" endtime="20201115 22:01:25.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.589" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.586" endtime="20201115 22:01:25.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.594" level="INFO">VALUE: [6.736000000000242e-06, 6.763999999999382e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.666999999994927e-06, 6.736000000000242e-06, 6.735999999993303e-06, 6.722000000000672e-06, 6.666999999994927e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.776999999999478e-06, 6.776999999999478e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.763999999999382e-06, 6.763999999999382e-06, 6.749999999999812e-06, 6.681000000001436e-06, 6.736000000000242e-06, 6.708000000001102e-06, 6.7230000000001455e-06, 6.736000000000242e-06, 6.749999999999812e-06, 6.721999999993733e-06, 6.736000000000242e-06, 6.708000000001102e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.666000000002392e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.763999999999382e-06, 6.722000000000672e-06, 6.7780000000058904e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.652000000002822e-06, 6.680000000001962e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.722000000000672e-06]</msg>
<status status="PASS" starttime="20201115 22:01:25.591" endtime="20201115 22:01:25.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.579" endtime="20201115 22:01:25.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.605" endtime="20201115 22:01:25.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.614" endtime="20201115 22:01:25.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.609" endtime="20201115 22:01:25.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.601" endtime="20201115 22:01:25.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.073" endtime="20201115 22:01:25.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.854" endtime="20201115 22:01:25.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.853" endtime="20201115 22:01:25.641"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.646" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.669" endtime="20201115 22:01:25.687"></status>
</kw>
<msg timestamp="20201115 22:01:25.688" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.666" endtime="20201115 22:01:25.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.695" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.690" endtime="20201115 22:01:25.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.697" endtime="20201115 22:01:25.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.658" endtime="20201115 22:01:25.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.652" endtime="20201115 22:01:25.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.722" endtime="20201115 22:01:26.074"></status>
</kw>
<msg timestamp="20201115 22:01:26.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048664778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048671681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.718" endtime="20201115 22:01:26.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048664778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048671681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.084" endtime="20201115 22:01:26.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.103" endtime="20201115 22:01:26.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.711" endtime="20201115 22:01:26.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.706" endtime="20201115 22:01:26.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:26.117" level="INFO">${RESULT} = [{'time': 0.048671681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.903000000002546e-06, 'source_diff': 6.903000000002546e-06}, {'time': 0.048783347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:26.112" endtime="20201115 22:01:26.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:26.131" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:26.118" endtime="20201115 22:01:26.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.136" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:26.135" endtime="20201115 22:01:26.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.140" level="INFO">VALUE: [6.903000000002546e-06, 6.929999999995273e-06, 6.929999999995273e-06, 6.931000000001686e-06, 6.902999999995607e-06, 6.930000000002212e-06, 6.874999999996467e-06, 6.902999999995607e-06, 6.916999999995177e-06, 6.917000000002116e-06, 6.916000000002642e-06, 6.931000000001686e-06, 6.916999999995177e-06, 6.917000000002116e-06, 6.916999999995177e-06, 6.916000000002642e-06, 6.944999999994317e-06, 6.903000000002546e-06, 6.931000000001686e-06, 6.931000000001686e-06, 6.917000000002116e-06, 6.902999999995607e-06, 6.903000000002546e-06, 6.930000000002212e-06, 6.930000000002212e-06, 6.916000000002642e-06, 6.917000000002116e-06, 6.972000000000922e-06, 6.944000000001782e-06, 6.903000000002546e-06, 6.916999999995177e-06, 6.917000000002116e-06, 6.944000000001782e-06, 6.917000000002116e-06, 6.917000000002116e-06, 6.916000000002642e-06, 6.902999999995607e-06, 6.915999999995703e-06, 6.917000000002116e-06, 6.917000000002116e-06, 6.931000000001686e-06, 6.915999999995703e-06, 6.916999999995177e-06, 6.930999999994747e-06, 6.902000000003072e-06, 6.916000000002642e-06, 6.917000000002116e-06, 6.916000000002642e-06, 6.916000000002642e-06, 6.888999999996037e-06]</msg>
<status status="PASS" starttime="20201115 22:01:26.137" endtime="20201115 22:01:26.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.132" endtime="20201115 22:01:26.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.144" endtime="20201115 22:01:26.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:26.148" endtime="20201115 22:01:26.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.146" endtime="20201115 22:01:26.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.142" endtime="20201115 22:01:26.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.647" endtime="20201115 22:01:26.170"></status>
</kw>
<msg timestamp="20201115 22:01:26.170" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.181" endtime="20201115 22:01:26.196"></status>
</kw>
<msg timestamp="20201115 22:01:26.197" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.179" endtime="20201115 22:01:26.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.199" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.198" endtime="20201115 22:01:26.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.201" endtime="20201115 22:01:26.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.176" endtime="20201115 22:01:26.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.173" endtime="20201115 22:01:26.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.212" endtime="20201115 22:01:26.550"></status>
</kw>
<msg timestamp="20201115 22:01:26.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025378889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025385806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.210" endtime="20201115 22:01:26.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025378889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025385806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.560" endtime="20201115 22:01:26.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.578" endtime="20201115 22:01:26.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.207" endtime="20201115 22:01:26.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.205" endtime="20201115 22:01:26.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:26.596" level="INFO">${RESULT} = [{'time': 0.025385806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9169999999986465e-06, 'source_diff': 6.9169999999986465e-06}, {'time': 0.02549375, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:26.587" endtime="20201115 22:01:26.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:26.627" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:26.598" endtime="20201115 22:01:26.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.639" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:26.636" endtime="20201115 22:01:26.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.644" level="INFO">VALUE: [6.9169999999986465e-06, 6.9169999999986465e-06, 6.9169999999986465e-06, 6.917000000002116e-06, 6.915999999999173e-06, 6.929999999998743e-06, 6.930999999998216e-06, 6.9029999999990765e-06, 6.930999999998216e-06, 6.929999999998743e-06, 6.931000000001686e-06, 6.847000000000797e-06, 6.929999999998743e-06, 6.915999999999173e-06, 6.901999999999603e-06, 6.9169999999986465e-06, 6.9029999999990765e-06, 6.929999999998743e-06, 6.931000000001686e-06, 6.929999999998743e-06, 6.9730000000003955e-06, 6.930000000002212e-06, 6.944000000001782e-06, 6.888999999999507e-06, 6.9719999999974525e-06, 6.917000000002116e-06, 6.945000000001256e-06, 6.944999999997786e-06, 6.929999999998743e-06, 6.972000000000922e-06, 6.903000000002546e-06, 6.931000000001686e-06, 6.943999999998313e-06, 6.9029999999990765e-06, 6.888999999999507e-06, 6.9029999999990765e-06, 6.917000000002116e-06, 6.929999999998743e-06, 6.915999999999173e-06, 6.929999999998743e-06, 6.930999999998216e-06, 6.874999999999937e-06, 6.917000000002116e-06, 6.931000000001686e-06, 7.000000000000062e-06, 6.888999999999507e-06, 6.915999999999173e-06, 6.945000000001256e-06, 6.917000000002116e-06, 6.917000000002116e-06]</msg>
<status status="PASS" starttime="20201115 22:01:26.641" endtime="20201115 22:01:26.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.629" endtime="20201115 22:01:26.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.653" endtime="20201115 22:01:26.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:26.665" endtime="20201115 22:01:26.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.661" endtime="20201115 22:01:26.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.648" endtime="20201115 22:01:26.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.170" endtime="20201115 22:01:26.691"></status>
</kw>
<msg timestamp="20201115 22:01:26.691" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.715" endtime="20201115 22:01:26.734"></status>
</kw>
<msg timestamp="20201115 22:01:26.735" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.711" endtime="20201115 22:01:26.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.742" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.737" endtime="20201115 22:01:26.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.744" endtime="20201115 22:01:26.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.704" endtime="20201115 22:01:26.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.698" endtime="20201115 22:01:26.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.768" endtime="20201115 22:01:27.108"></status>
</kw>
<msg timestamp="20201115 22:01:27.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043617014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043623958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.765" endtime="20201115 22:01:27.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043617014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043623958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.117" endtime="20201115 22:01:27.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.136" endtime="20201115 22:01:27.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.757" endtime="20201115 22:01:27.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.753" endtime="20201115 22:01:27.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:27.154" level="INFO">${RESULT} = [{'time': 0.043623958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.943999999994843e-06, 'source_diff': 6.943999999994843e-06}, {'time': 0.043732917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:27.145" endtime="20201115 22:01:27.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.185" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:27.156" endtime="20201115 22:01:27.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.196" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.194" endtime="20201115 22:01:27.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.202" level="INFO">VALUE: [6.943999999994843e-06, 6.945000000001256e-06, 6.986000000000492e-06, 6.930000000002212e-06, 6.929999999995273e-06, 6.944000000001782e-06, 6.889000000002976e-06, 6.903000000002546e-06, 6.986000000000492e-06, 6.917000000002116e-06, 6.903000000002546e-06, 6.945000000001256e-06, 6.917000000002116e-06, 6.943999999994843e-06, 7.000000000000062e-06, 6.917000000002116e-06, 6.903000000002546e-06, 6.889000000002976e-06, 6.917000000002116e-06, 6.930999999994747e-06, 6.916000000002642e-06, 6.930000000002212e-06, 6.931000000001686e-06, 6.915999999995703e-06, 6.930000000002212e-06, 6.930000000002212e-06, 6.929999999995273e-06, 6.944000000001782e-06, 6.944000000001782e-06, 6.931000000001686e-06, 6.903000000002546e-06, 6.916999999995177e-06, 6.931000000001686e-06, 6.931000000001686e-06, 6.917000000002116e-06, 6.930000000002212e-06, 6.986000000000492e-06, 6.874999999996467e-06, 6.915999999995703e-06, 6.930000000002212e-06, 6.9019999999961335e-06, 6.917000000002116e-06, 6.930000000002212e-06, 6.917000000002116e-06, 6.889000000002976e-06, 6.931000000001686e-06, 6.916999999995177e-06, 6.917000000002116e-06, 6.917000000002116e-06, 6.917000000002116e-06]</msg>
<status status="PASS" starttime="20201115 22:01:27.199" endtime="20201115 22:01:27.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.187" endtime="20201115 22:01:27.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.211" endtime="20201115 22:01:27.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.219" endtime="20201115 22:01:27.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.215" endtime="20201115 22:01:27.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.206" endtime="20201115 22:01:27.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.692" endtime="20201115 22:01:27.245"></status>
</kw>
<msg timestamp="20201115 22:01:27.245" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.270" endtime="20201115 22:01:27.289"></status>
</kw>
<msg timestamp="20201115 22:01:27.290" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.267" endtime="20201115 22:01:27.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.296" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.292" endtime="20201115 22:01:27.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.298" endtime="20201115 22:01:27.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.259" endtime="20201115 22:01:27.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.252" endtime="20201115 22:01:27.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.322" endtime="20201115 22:01:27.664"></status>
</kw>
<msg timestamp="20201115 22:01:27.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045049569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045056403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.319" endtime="20201115 22:01:27.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045049569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045056403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.673" endtime="20201115 22:01:27.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.692" endtime="20201115 22:01:27.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.312" endtime="20201115 22:01:27.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.307" endtime="20201115 22:01:27.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:27.710" level="INFO">${RESULT} = [{'time': 0.045056403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.83400000000417e-06, 'source_diff': 6.83400000000417e-06}, {'time': 0.045167444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:27.701" endtime="20201115 22:01:27.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.741" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:27.712" endtime="20201115 22:01:27.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.753" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.750" endtime="20201115 22:01:27.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.759" level="INFO">VALUE: [6.83400000000417e-06, 6.875000000003406e-06, 6.889000000002976e-06, 6.916999999995177e-06, 6.972000000000922e-06, 6.916999999995177e-06, 6.917000000002116e-06, 6.902999999995607e-06, 6.917000000002116e-06, 6.917000000002116e-06, 6.917000000002116e-06, 6.874999999996467e-06, 6.917000000002116e-06, 6.916999999995177e-06, 6.915999999995703e-06, 6.930000000002212e-06, 6.917000000002116e-06, 6.930000000002212e-06, 6.931000000001686e-06, 6.931000000001686e-06, 6.916999999995177e-06, 6.930000000002212e-06, 6.916000000002642e-06, 6.931000000001686e-06, 6.958000000001352e-06, 6.930999999994747e-06, 6.929999999995273e-06, 6.916999999995177e-06, 6.930999999994747e-06, 6.916999999995177e-06, 6.931000000001686e-06, 6.916000000002642e-06, 6.931000000001686e-06, 6.915999999995703e-06, 6.972000000000922e-06, 6.944000000001782e-06, 6.916999999995177e-06, 6.903000000002546e-06, 6.929999999995273e-06, 6.930999999994747e-06, 6.902999999995607e-06, 7.013000000000158e-06, 6.847999999996801e-06, 6.945000000001256e-06, 6.917000000002116e-06, 6.875000000003406e-06, 6.931000000001686e-06, 6.945000000001256e-06, 6.8880000000035024e-06, 6.917000000002116e-06]</msg>
<status status="PASS" starttime="20201115 22:01:27.755" endtime="20201115 22:01:27.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.743" endtime="20201115 22:01:27.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.768" endtime="20201115 22:01:27.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.777" endtime="20201115 22:01:27.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.773" endtime="20201115 22:01:27.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.763" endtime="20201115 22:01:27.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.246" endtime="20201115 22:01:27.803"></status>
</kw>
<msg timestamp="20201115 22:01:27.804" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.827" endtime="20201115 22:01:27.845"></status>
</kw>
<msg timestamp="20201115 22:01:27.846" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.824" endtime="20201115 22:01:27.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.853" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.848" endtime="20201115 22:01:27.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.855" endtime="20201115 22:01:27.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.816" endtime="20201115 22:01:27.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.810" endtime="20201115 22:01:27.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.880" endtime="20201115 22:01:28.221"></status>
</kw>
<msg timestamp="20201115 22:01:28.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043040722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043047625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.877" endtime="20201115 22:01:28.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043040722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043047625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.231" endtime="20201115 22:01:28.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.250" endtime="20201115 22:01:28.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.870" endtime="20201115 22:01:28.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.865" endtime="20201115 22:01:28.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.267" level="INFO">${RESULT} = [{'time': 0.043047625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.903000000002546e-06, 'source_diff': 6.903000000002546e-06}, {'time': 0.043159944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:28.258" endtime="20201115 22:01:28.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.298" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:28.269" endtime="20201115 22:01:28.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.309" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.307" endtime="20201115 22:01:28.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.315" level="INFO">VALUE: [6.903000000002546e-06, 6.958000000001352e-06, 6.943999999994843e-06, 6.916000000002642e-06, 6.944000000001782e-06, 6.931000000001686e-06, 6.917000000002116e-06, 6.930000000002212e-06, 6.944000000001782e-06, 6.931000000001686e-06, 6.930000000002212e-06, 6.931000000001686e-06, 6.915999999995703e-06, 6.902999999995607e-06, 6.903000000002546e-06, 6.931000000001686e-06, 6.917000000002116e-06, 6.917000000002116e-06, 6.903000000002546e-06, 7.000000000000062e-06, 6.917000000002116e-06, 6.943999999994843e-06, 6.929999999995273e-06, 6.889000000002976e-06, 6.903000000002546e-06, 6.916999999995177e-06, 6.944000000001782e-06, 6.888999999996037e-06, 6.972000000000922e-06, 6.930000000002212e-06, 6.917000000002116e-06, 6.888999999996037e-06, 6.916999999995177e-06, 6.902000000003072e-06, 6.930000000002212e-06, 6.930000000002212e-06, 6.958000000001352e-06, 6.931000000001686e-06, 6.943999999994843e-06, 6.986000000000492e-06, 6.931000000001686e-06, 6.930000000002212e-06, 6.931000000001686e-06, 6.903000000002546e-06, 6.917000000002116e-06, 6.902000000003072e-06, 6.929999999995273e-06, 6.916999999995177e-06, 6.916999999995177e-06, 6.930000000002212e-06]</msg>
<status status="PASS" starttime="20201115 22:01:28.311" endtime="20201115 22:01:28.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.300" endtime="20201115 22:01:28.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.324" endtime="20201115 22:01:28.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.332" endtime="20201115 22:01:28.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.328" endtime="20201115 22:01:28.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.319" endtime="20201115 22:01:28.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.805" endtime="20201115 22:01:28.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.643" endtime="20201115 22:01:28.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.642" endtime="20201115 22:01:28.359"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.364" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.387" endtime="20201115 22:01:28.406"></status>
</kw>
<msg timestamp="20201115 22:01:28.407" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.384" endtime="20201115 22:01:28.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.413" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.409" endtime="20201115 22:01:28.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.415" endtime="20201115 22:01:28.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.376" endtime="20201115 22:01:28.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.370" endtime="20201115 22:01:28.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.442" endtime="20201115 22:01:28.782"></status>
</kw>
<msg timestamp="20201115 22:01:28.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048336319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048343472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.438" endtime="20201115 22:01:28.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048336319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048343472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.792" endtime="20201115 22:01:28.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.811" endtime="20201115 22:01:28.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.429" endtime="20201115 22:01:28.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.424" endtime="20201115 22:01:28.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.829" level="INFO">${RESULT} = [{'time': 0.048343472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.152999999995857e-06, 'source_diff': 7.152999999995857e-06}, {'time': 0.048457569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:28.820" endtime="20201115 22:01:28.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.860" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:28.832" endtime="20201115 22:01:28.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.871" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.869" endtime="20201115 22:01:28.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.877" level="INFO">VALUE: [7.152999999995857e-06, 7.194000000002032e-06, 7.139000000003226e-06, 7.139000000003226e-06, 7.181000000001936e-06, 7.153000000002796e-06, 7.152999999995857e-06, 7.152999999995857e-06, 7.153000000002796e-06, 7.166000000002892e-06, 7.138999999996287e-06, 7.1380000000037525e-06, 7.167000000002366e-06, 7.139000000003226e-06, 7.166000000002892e-06, 7.165999999995953e-06, 7.139000000003226e-06, 7.139000000003226e-06, 7.152999999995857e-06, 7.179999999995523e-06, 7.139000000003226e-06, 7.153000000002796e-06, 7.139000000003226e-06, 7.124999999996717e-06, 7.111000000004086e-06, 7.125000000003656e-06, 7.153000000002796e-06, 7.153000000002796e-06, 7.139000000003226e-06, 7.139000000003226e-06, 7.1519999999963835e-06, 7.125000000003656e-06, 7.138999999996287e-06, 7.194000000002032e-06, 7.110999999997147e-06, 7.0969999999975775e-06, 7.152000000003322e-06, 7.152999999995857e-06, 7.139000000003226e-06, 7.139000000003226e-06, 7.153000000002796e-06, 7.153000000002796e-06, 7.152999999995857e-06, 7.153000000002796e-06, 7.139000000003226e-06, 7.138999999996287e-06, 7.166999999995427e-06, 7.139000000003226e-06, 7.166999999995427e-06, 7.138999999996287e-06]</msg>
<status status="PASS" starttime="20201115 22:01:28.874" endtime="20201115 22:01:28.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.862" endtime="20201115 22:01:28.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.886" endtime="20201115 22:01:28.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.894" endtime="20201115 22:01:28.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.890" endtime="20201115 22:01:28.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.881" endtime="20201115 22:01:28.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.365" endtime="20201115 22:01:28.920"></status>
</kw>
<msg timestamp="20201115 22:01:28.921" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.944" endtime="20201115 22:01:28.963"></status>
</kw>
<msg timestamp="20201115 22:01:28.964" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.941" endtime="20201115 22:01:28.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.971" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.966" endtime="20201115 22:01:28.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.974" endtime="20201115 22:01:28.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.933" endtime="20201115 22:01:28.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.927" endtime="20201115 22:01:28.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.997" endtime="20201115 22:01:29.341"></status>
</kw>
<msg timestamp="20201115 22:01:29.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042989625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042996764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.994" endtime="20201115 22:01:29.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042989625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042996764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.350" endtime="20201115 22:01:29.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.369" endtime="20201115 22:01:29.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.987" endtime="20201115 22:01:29.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.982" endtime="20201115 22:01:29.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.387" level="INFO">${RESULT} = [{'time': 0.042996764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.043118944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:29.377" endtime="20201115 22:01:29.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.417" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:29.389" endtime="20201115 22:01:29.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.428" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.426" endtime="20201115 22:01:29.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.434" level="INFO">VALUE: [7.139000000003226e-06, 7.1379999999968136e-06, 7.139000000003226e-06, 7.179999999995523e-06, 7.152999999995857e-06, 7.152000000003322e-06, 7.124999999996717e-06, 7.0969999999975775e-06, 7.1519999999963835e-06, 7.139000000003226e-06, 7.125000000003656e-06, 7.152000000003322e-06, 7.139000000003226e-06, 7.236000000000742e-06, 7.139000000003226e-06, 7.124999999996717e-06, 7.153000000002796e-06, 7.1519999999963835e-06, 7.139000000003226e-06, 7.138999999996287e-06, 7.152999999995857e-06, 7.153000000002796e-06, 7.1519999999963835e-06, 7.139000000003226e-06, 7.124999999996717e-06, 7.054999999998868e-06, 7.167000000002366e-06, 7.152000000003322e-06, 7.152999999995857e-06, 7.167000000002366e-06, 7.125000000003656e-06, 7.111000000004086e-06, 7.0829999999980076e-06, 7.167000000002366e-06, 7.153000000002796e-06, 7.152999999995857e-06, 7.124999999996717e-06, 7.153000000002796e-06, 7.153000000002796e-06, 7.138999999996287e-06, 7.153000000002796e-06, 7.152999999995857e-06, 7.125000000003656e-06, 7.139000000003226e-06, 7.138999999996287e-06, 7.139000000003226e-06, 7.181000000001936e-06, 7.125000000003656e-06, 7.138999999996287e-06, 7.139000000003226e-06]</msg>
<status status="PASS" starttime="20201115 22:01:29.430" endtime="20201115 22:01:29.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.419" endtime="20201115 22:01:29.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.443" endtime="20201115 22:01:29.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.451" endtime="20201115 22:01:29.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.447" endtime="20201115 22:01:29.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.438" endtime="20201115 22:01:29.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.922" endtime="20201115 22:01:29.473"></status>
</kw>
<msg timestamp="20201115 22:01:29.473" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.485" endtime="20201115 22:01:29.501"></status>
</kw>
<msg timestamp="20201115 22:01:29.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.483" endtime="20201115 22:01:29.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.505" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.503" endtime="20201115 22:01:29.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.506" endtime="20201115 22:01:29.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.479" endtime="20201115 22:01:29.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.477" endtime="20201115 22:01:29.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.517" endtime="20201115 22:01:29.833"></status>
</kw>
<msg timestamp="20201115 22:01:29.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025765722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025772875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.516" endtime="20201115 22:01:29.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025765722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025772875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.843" endtime="20201115 22:01:29.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.862" endtime="20201115 22:01:29.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.512" endtime="20201115 22:01:29.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.510" endtime="20201115 22:01:29.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.880" level="INFO">${RESULT} = [{'time': 0.025772875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.025888833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:29.870" endtime="20201115 22:01:29.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.910" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:29.882" endtime="20201115 22:01:29.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.921" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.919" endtime="20201115 22:01:29.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.927" level="INFO">VALUE: [7.1529999999993266e-06, 7.138999999999757e-06, 7.151999999999853e-06, 7.138999999999757e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.151999999999853e-06, 7.153000000002796e-06, 7.138999999999757e-06, 7.1529999999993266e-06, 7.166000000002892e-06, 7.2219999999977025e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.153000000002796e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.2230000000006456e-06, 7.138999999999757e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.138999999999757e-06, 7.151999999999853e-06, 7.2079999999981326e-06, 7.1529999999993266e-06, 7.138999999999757e-06, 7.1529999999993266e-06, 7.165999999999423e-06, 7.153000000002796e-06, 7.151999999999853e-06, 7.193999999998563e-06, 7.138999999999757e-06, 7.0969999999975775e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.110999999997147e-06, 7.138999999999757e-06, 7.138999999999757e-06, 7.097000000001047e-06, 7.138000000000283e-06, 7.180999999998466e-06, 7.1529999999993266e-06, 7.165999999999423e-06, 7.151999999999853e-06, 7.138999999999757e-06, 7.1529999999993266e-06, 7.166000000002892e-06, 7.153000000002796e-06]</msg>
<status status="PASS" starttime="20201115 22:01:29.924" endtime="20201115 22:01:29.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.912" endtime="20201115 22:01:29.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.936" endtime="20201115 22:01:29.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.944" endtime="20201115 22:01:29.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.940" endtime="20201115 22:01:29.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.931" endtime="20201115 22:01:29.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.474" endtime="20201115 22:01:29.970"></status>
</kw>
<msg timestamp="20201115 22:01:29.971" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.995" endtime="20201115 22:01:30.013"></status>
</kw>
<msg timestamp="20201115 22:01:30.014" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.991" endtime="20201115 22:01:30.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.021" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.017" endtime="20201115 22:01:30.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.023" endtime="20201115 22:01:30.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.984" endtime="20201115 22:01:30.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.978" endtime="20201115 22:01:30.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.047" endtime="20201115 22:01:30.385"></status>
</kw>
<msg timestamp="20201115 22:01:30.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043701028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043708167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.044" endtime="20201115 22:01:30.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043701028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043708167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.395" endtime="20201115 22:01:30.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.413" endtime="20201115 22:01:30.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.036" endtime="20201115 22:01:30.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.031" endtime="20201115 22:01:30.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.433" level="INFO">${RESULT} = [{'time': 0.043708167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.138999999996287e-06, 'source_diff': 7.138999999996287e-06}, {'time': 0.043823875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:30.424" endtime="20201115 22:01:30.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.463" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:30.435" endtime="20201115 22:01:30.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.474" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.472" endtime="20201115 22:01:30.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.480" level="INFO">VALUE: [7.138999999996287e-06, 7.124999999996717e-06, 7.139000000003226e-06, 7.097000000004516e-06, 7.139000000003226e-06, 7.236000000000742e-06, 7.139000000003226e-06, 7.138999999996287e-06, 7.153000000002796e-06, 7.138999999996287e-06, 7.180000000002462e-06, 7.153000000002796e-06, 7.110999999997147e-06, 7.152999999995857e-06, 7.139000000003226e-06, 7.181000000001936e-06, 7.125000000003656e-06, 7.1380000000037525e-06, 7.124999999996717e-06, 7.138999999996287e-06, 7.1519999999963835e-06, 7.165999999995953e-06, 7.139000000003226e-06, 7.153000000002796e-06, 7.152999999995857e-06, 7.124999999996717e-06, 7.152000000003322e-06, 7.097000000004516e-06, 7.153000000002796e-06, 7.139000000003226e-06, 7.153000000002796e-06, 7.110999999997147e-06, 7.167000000002366e-06, 7.152999999995857e-06, 7.124999999996717e-06, 7.138999999996287e-06, 7.153000000002796e-06, 7.153000000002796e-06, 7.111999999996621e-06, 7.194000000002032e-06, 7.138999999996287e-06, 7.139000000003226e-06, 7.124999999996717e-06, 7.111000000004086e-06, 7.124999999996717e-06, 7.138999999996287e-06, 7.125000000003656e-06, 7.166999999995427e-06, 7.068999999998438e-06, 7.153000000002796e-06]</msg>
<status status="PASS" starttime="20201115 22:01:30.477" endtime="20201115 22:01:30.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.465" endtime="20201115 22:01:30.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.489" endtime="20201115 22:01:30.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.498" endtime="20201115 22:01:30.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.494" endtime="20201115 22:01:30.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.484" endtime="20201115 22:01:30.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.972" endtime="20201115 22:01:30.524"></status>
</kw>
<msg timestamp="20201115 22:01:30.524" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.548" endtime="20201115 22:01:30.565"></status>
</kw>
<msg timestamp="20201115 22:01:30.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.544" endtime="20201115 22:01:30.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.573" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.569" endtime="20201115 22:01:30.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.575" endtime="20201115 22:01:30.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.537" endtime="20201115 22:01:30.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.531" endtime="20201115 22:01:30.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.599" endtime="20201115 22:01:30.940"></status>
</kw>
<msg timestamp="20201115 22:01:30.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04323925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043246389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:30.596" endtime="20201115 22:01:30.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04323925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043246389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:30.950" endtime="20201115 22:01:30.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.968" endtime="20201115 22:01:30.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.589" endtime="20201115 22:01:30.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.584" endtime="20201115 22:01:30.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.987" level="INFO">${RESULT} = [{'time': 0.043246389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.043357306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:30.978" endtime="20201115 22:01:30.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:31.018" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:30.989" endtime="20201115 22:01:31.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.029" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:31.027" endtime="20201115 22:01:31.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.035" level="INFO">VALUE: [7.139000000003226e-06, 7.138999999996287e-06, 7.0969999999975775e-06, 7.152999999995857e-06, 7.152999999995857e-06, 7.097999999997051e-06, 7.139000000003226e-06, 7.167000000002366e-06, 7.0969999999975775e-06, 7.138999999996287e-06, 7.1380000000037525e-06, 7.139000000003226e-06, 7.139000000003226e-06, 7.139000000003226e-06, 7.152999999995857e-06, 7.124999999996717e-06, 7.0829999999980076e-06, 7.165999999995953e-06, 7.180999999994997e-06, 7.139000000003226e-06, 7.167000000002366e-06, 7.139000000003226e-06, 7.111000000004086e-06, 7.153000000002796e-06, 7.153000000002796e-06, 7.167000000002366e-06, 7.139000000003226e-06, 7.139000000003226e-06, 7.1380000000037525e-06, 7.139000000003226e-06, 7.193999999995093e-06, 7.152000000003322e-06, 7.153000000002796e-06, 7.221999999994233e-06, 7.166999999995427e-06, 7.138999999996287e-06, 7.153000000002796e-06, 7.152999999995857e-06, 7.138999999996287e-06, 7.138999999996287e-06, 7.139000000003226e-06, 7.139000000003226e-06, 7.152000000003322e-06, 7.138999999996287e-06, 7.221999999994233e-06, 7.138999999996287e-06, 7.152000000003322e-06, 7.139000000003226e-06, 7.222000000001172e-06, 7.222000000001172e-06]</msg>
<status status="PASS" starttime="20201115 22:01:31.032" endtime="20201115 22:01:31.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.020" endtime="20201115 22:01:31.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.045" endtime="20201115 22:01:31.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:31.053" endtime="20201115 22:01:31.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.049" endtime="20201115 22:01:31.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.040" endtime="20201115 22:01:31.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.525" endtime="20201115 22:01:31.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.361" endtime="20201115 22:01:31.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.359" endtime="20201115 22:01:31.080"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.085" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.108" endtime="20201115 22:01:31.127"></status>
</kw>
<msg timestamp="20201115 22:01:31.128" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.105" endtime="20201115 22:01:31.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.134" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.130" endtime="20201115 22:01:31.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.137" endtime="20201115 22:01:31.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.097" endtime="20201115 22:01:31.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.092" endtime="20201115 22:01:31.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.160" endtime="20201115 22:01:31.504"></status>
</kw>
<msg timestamp="20201115 22:01:31.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048427, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048434319, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:31.157" endtime="20201115 22:01:31.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048427, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048434319, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:31.514" endtime="20201115 22:01:31.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.532" endtime="20201115 22:01:31.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.150" endtime="20201115 22:01:31.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.145" endtime="20201115 22:01:31.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:31.550" level="INFO">${RESULT} = [{'time': 0.048434319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.3190000000056266e-06, 'source_diff': 7.3190000000056266e-06}, {'time': 0.048556736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:31.541" endtime="20201115 22:01:31.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:31.580" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:31.552" endtime="20201115 22:01:31.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.592" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:31.589" endtime="20201115 22:01:31.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.602" level="INFO">VALUE: [7.3190000000056266e-06, 7.3330000000051965e-06, 7.3469999999978275e-06, 7.318999999998688e-06, 7.2779999999994516e-06, 7.417000000002616e-06, 7.3330000000051965e-06, 7.347000000004766e-06, 7.333999999997731e-06, 7.3469999999978275e-06, 7.2919999999990215e-06, 7.3469999999978275e-06, 7.3469999999978275e-06, 7.3330000000051965e-06, 7.389000000003476e-06, 7.319999999998161e-06, 7.347000000004766e-06, 7.333999999997731e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.3330000000051965e-06, 7.333999999997731e-06, 7.3330000000051965e-06, 7.347000000004766e-06, 7.374999999996967e-06, 7.416000000003142e-06, 7.3469999999978275e-06, 7.347000000004766e-06, 7.333999999997731e-06, 7.3330000000051965e-06, 7.3469999999978275e-06, 7.347999999997301e-06, 7.3469999999978275e-06, 7.3190000000056266e-06, 7.318999999998688e-06, 7.360999999997397e-06, 7.332999999998258e-06, 7.333999999997731e-06, 7.360999999997397e-06, 7.347000000004766e-06, 7.332999999998258e-06, 7.3469999999978275e-06, 7.3190000000056266e-06, 7.3330000000051965e-06, 7.347999999997301e-06, 7.361000000004336e-06, 7.3469999999978275e-06, 7.3469999999978275e-06, 7.332999999998258e-06, 7.360999999997397e-06]</msg>
<status status="PASS" starttime="20201115 22:01:31.594" endtime="20201115 22:01:31.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.582" endtime="20201115 22:01:31.605"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.611" endtime="20201115 22:01:31.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:31.620" endtime="20201115 22:01:31.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.615" endtime="20201115 22:01:31.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.607" endtime="20201115 22:01:31.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.086" endtime="20201115 22:01:31.645"></status>
</kw>
<msg timestamp="20201115 22:01:31.646" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.669" endtime="20201115 22:01:31.688"></status>
</kw>
<msg timestamp="20201115 22:01:31.689" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.666" endtime="20201115 22:01:31.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.695" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.691" endtime="20201115 22:01:31.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.697" endtime="20201115 22:01:31.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.658" endtime="20201115 22:01:31.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.653" endtime="20201115 22:01:31.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.721" endtime="20201115 22:01:32.061"></status>
</kw>
<msg timestamp="20201115 22:01:32.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042931042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042938361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.718" endtime="20201115 22:01:32.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042931042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042938361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.071" endtime="20201115 22:01:32.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.089" endtime="20201115 22:01:32.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.711" endtime="20201115 22:01:32.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.706" endtime="20201115 22:01:32.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:32.109" level="INFO">${RESULT} = [{'time': 0.042938361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.043064597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:32.099" endtime="20201115 22:01:32.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:32.139" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:32.111" endtime="20201115 22:01:32.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.151" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:32.148" endtime="20201115 22:01:32.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.156" level="INFO">VALUE: [7.318999999998688e-06, 7.389000000003476e-06, 7.318999999998688e-06, 7.304999999999118e-06, 7.3469999999978275e-06, 7.347999999997301e-06, 7.305999999998591e-06, 7.3469999999978275e-06, 7.263999999999882e-06, 7.347000000004766e-06, 7.347000000004766e-06, 7.318999999998688e-06, 7.332999999998258e-06, 7.3330000000051965e-06, 7.305999999998591e-06, 7.276999999999978e-06, 7.319999999998161e-06, 7.3469999999978275e-06, 7.3330000000051965e-06, 7.3469999999978275e-06, 7.263999999999882e-06, 7.347000000004766e-06, 7.347999999997301e-06, 7.333999999997731e-06, 7.318999999998688e-06, 7.34800000000424e-06, 7.3330000000051965e-06, 7.360999999997397e-06, 7.319999999998161e-06, 7.332999999998258e-06, 7.333999999997731e-06, 7.360999999997397e-06, 7.332999999998258e-06, 7.347999999997301e-06, 7.416999999995677e-06, 7.3330000000051965e-06, 7.375000000003906e-06, 7.332999999998258e-06, 7.360999999997397e-06, 7.3469999999978275e-06, 7.319999999998161e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.33400000000467e-06, 7.347000000004766e-06, 7.332999999998258e-06, 7.361000000004336e-06, 7.347999999997301e-06, 7.347000000004766e-06, 7.333999999997731e-06]</msg>
<status status="PASS" starttime="20201115 22:01:32.153" endtime="20201115 22:01:32.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.142" endtime="20201115 22:01:32.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.165" endtime="20201115 22:01:32.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.174" endtime="20201115 22:01:32.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.169" endtime="20201115 22:01:32.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.161" endtime="20201115 22:01:32.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.647" endtime="20201115 22:01:32.199"></status>
</kw>
<msg timestamp="20201115 22:01:32.200" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.223" endtime="20201115 22:01:32.243"></status>
</kw>
<msg timestamp="20201115 22:01:32.244" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.220" endtime="20201115 22:01:32.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.250" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.246" endtime="20201115 22:01:32.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.252" endtime="20201115 22:01:32.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.213" endtime="20201115 22:01:32.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.207" endtime="20201115 22:01:32.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.276" endtime="20201115 22:01:32.616"></status>
</kw>
<msg timestamp="20201115 22:01:32.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043140611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043147944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.273" endtime="20201115 22:01:32.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043140611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043147944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.626" endtime="20201115 22:01:32.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.644" endtime="20201115 22:01:32.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.265" endtime="20201115 22:01:32.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.261" endtime="20201115 22:01:32.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:32.663" level="INFO">${RESULT} = [{'time': 0.043147944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.043269764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:32.654" endtime="20201115 22:01:32.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:32.694" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:32.666" endtime="20201115 22:01:32.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.706" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:32.703" endtime="20201115 22:01:32.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.711" level="INFO">VALUE: [7.332999999998258e-06, 7.3200000000051e-06, 7.3469999999978275e-06, 7.34800000000424e-06, 7.347000000004766e-06, 7.361000000004336e-06, 7.360999999997397e-06, 7.3190000000056266e-06, 7.319999999998161e-06, 7.389000000003476e-06, 7.332999999998258e-06, 7.3469999999978275e-06, 7.304999999999118e-06, 7.305999999998591e-06, 7.3469999999978275e-06, 7.347000000004766e-06, 7.2779999999994516e-06, 7.360999999997397e-06, 7.360999999997397e-06, 7.333999999997731e-06, 7.3330000000051965e-06, 7.3469999999978275e-06, 7.319999999998161e-06, 7.361000000004336e-06, 7.3330000000051965e-06, 7.332999999998258e-06, 7.347000000004766e-06, 7.263999999999882e-06, 7.332999999998258e-06, 7.318999999998688e-06, 7.290999999999548e-06, 7.3190000000056266e-06, 7.3469999999978275e-06, 7.375000000003906e-06, 7.360999999997397e-06, 7.33400000000467e-06, 7.318999999998688e-06, 7.3469999999978275e-06, 7.347999999997301e-06, 7.2779999999994516e-06, 7.402999999996107e-06, 7.3330000000051965e-06, 7.332999999998258e-06, 7.347000000004766e-06, 7.332999999998258e-06, 7.305999999998591e-06, 7.333999999997731e-06, 7.3469999999978275e-06, 7.3469999999978275e-06, 7.33400000000467e-06]</msg>
<status status="PASS" starttime="20201115 22:01:32.708" endtime="20201115 22:01:32.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.696" endtime="20201115 22:01:32.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.720" endtime="20201115 22:01:32.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.729" endtime="20201115 22:01:32.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.724" endtime="20201115 22:01:32.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.716" endtime="20201115 22:01:32.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.201" endtime="20201115 22:01:32.755"></status>
</kw>
<msg timestamp="20201115 22:01:32.755" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.778" endtime="20201115 22:01:32.797"></status>
</kw>
<msg timestamp="20201115 22:01:32.798" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.775" endtime="20201115 22:01:32.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.805" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.801" endtime="20201115 22:01:32.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.807" endtime="20201115 22:01:32.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.768" endtime="20201115 22:01:32.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.762" endtime="20201115 22:01:32.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.831" endtime="20201115 22:01:33.150"></status>
</kw>
<msg timestamp="20201115 22:01:33.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043004208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043011528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.828" endtime="20201115 22:01:33.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043004208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043011528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.160" endtime="20201115 22:01:33.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.179" endtime="20201115 22:01:33.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.820" endtime="20201115 22:01:33.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.816" endtime="20201115 22:01:33.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:33.198" level="INFO">${RESULT} = [{'time': 0.043011528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.319999999998161e-06, 'source_diff': 7.319999999998161e-06}, {'time': 0.043143347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:33.189" endtime="20201115 22:01:33.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:33.229" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:33.200" endtime="20201115 22:01:33.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.240" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:33.238" endtime="20201115 22:01:33.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.245" level="INFO">VALUE: [7.319999999998161e-06, 7.304999999999118e-06, 7.332999999998258e-06, 7.318999999998688e-06, 7.3880000000040025e-06, 7.347000000004766e-06, 7.388999999996537e-06, 7.3330000000051965e-06, 7.332999999998258e-06, 7.319999999998161e-06, 7.361000000004336e-06, 7.374999999996967e-06, 7.33400000000467e-06, 7.318999999998688e-06, 7.402000000003572e-06, 7.3190000000056266e-06, 7.417000000002616e-06, 7.3469999999978275e-06, 7.36200000000381e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.33400000000467e-06, 7.332999999998258e-06, 7.360999999997397e-06, 7.347999999997301e-06, 7.333999999997731e-06, 7.332999999998258e-06, 7.347999999997301e-06, 7.3469999999978275e-06, 7.332999999998258e-06, 7.305999999998591e-06, 7.347999999997301e-06, 7.33400000000467e-06, 7.347000000004766e-06, 7.2919999999990215e-06, 7.332999999998258e-06, 7.3469999999978275e-06, 7.332999999998258e-06, 7.333999999997731e-06, 7.332999999998258e-06, 7.389000000003476e-06, 7.360999999997397e-06, 7.3469999999978275e-06, 7.360999999997397e-06, 7.276999999999978e-06, 7.250000000000312e-06, 7.3469999999978275e-06, 7.3469999999978275e-06, 7.3469999999978275e-06, 7.332999999998258e-06]</msg>
<status status="PASS" starttime="20201115 22:01:33.242" endtime="20201115 22:01:33.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.231" endtime="20201115 22:01:33.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.254" endtime="20201115 22:01:33.257"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:33.263" endtime="20201115 22:01:33.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.258" endtime="20201115 22:01:33.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.250" endtime="20201115 22:01:33.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.756" endtime="20201115 22:01:33.289"></status>
</kw>
<msg timestamp="20201115 22:01:33.289" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.313" endtime="20201115 22:01:33.332"></status>
</kw>
<msg timestamp="20201115 22:01:33.333" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.309" endtime="20201115 22:01:33.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.340" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.336" endtime="20201115 22:01:33.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.342" endtime="20201115 22:01:33.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.302" endtime="20201115 22:01:33.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.296" endtime="20201115 22:01:33.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.366" endtime="20201115 22:01:33.706"></status>
</kw>
<msg timestamp="20201115 22:01:33.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043194208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043201542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.363" endtime="20201115 22:01:33.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043194208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043201542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.716" endtime="20201115 22:01:33.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.735" endtime="20201115 22:01:33.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.355" endtime="20201115 22:01:33.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.350" endtime="20201115 22:01:33.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:33.756" level="INFO">${RESULT} = [{'time': 0.043201542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.33400000000467e-06, 'source_diff': 7.33400000000467e-06}, {'time': 0.043333556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:33.747" endtime="20201115 22:01:33.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:33.786" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:33.758" endtime="20201115 22:01:33.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.798" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:33.795" endtime="20201115 22:01:33.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.803" level="INFO">VALUE: [7.33400000000467e-06, 7.33400000000467e-06, 7.375000000003906e-06, 7.3469999999978275e-06, 7.347999999997301e-06, 7.332999999998258e-06, 7.360999999997397e-06, 7.3469999999978275e-06, 7.389000000003476e-06, 7.3469999999978275e-06, 7.34800000000424e-06, 7.333999999997731e-06, 7.375000000003906e-06, 7.318999999998688e-06, 7.3469999999978275e-06, 7.332999999998258e-06, 7.3469999999978275e-06, 7.3190000000056266e-06, 7.3469999999978275e-06, 7.2919999999990215e-06, 7.304999999999118e-06, 7.3190000000056266e-06, 7.333999999997731e-06, 7.360999999997397e-06, 7.34800000000424e-06, 7.333999999997731e-06, 7.332999999998258e-06, 7.33400000000467e-06, 7.3469999999978275e-06, 7.332999999998258e-06, 7.3469999999978275e-06, 7.333999999997731e-06, 7.360999999997397e-06, 7.360999999997397e-06, 7.332999999998258e-06, 7.3330000000051965e-06, 7.30600000000553e-06, 7.332999999998258e-06, 7.3200000000051e-06, 7.360999999997397e-06, 7.2779999999994516e-06, 7.347000000004766e-06, 7.3469999999978275e-06, 7.347000000004766e-06, 7.3469999999978275e-06, 7.3330000000051965e-06, 7.332999999998258e-06, 7.3469999999978275e-06, 7.360999999997397e-06, 7.319999999998161e-06]</msg>
<status status="PASS" starttime="20201115 22:01:33.800" endtime="20201115 22:01:33.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.788" endtime="20201115 22:01:33.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.812" endtime="20201115 22:01:33.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:33.821" endtime="20201115 22:01:33.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.816" endtime="20201115 22:01:33.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.808" endtime="20201115 22:01:33.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.290" endtime="20201115 22:01:33.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.083" endtime="20201115 22:01:33.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.081" endtime="20201115 22:01:33.847"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.852" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.876" endtime="20201115 22:01:33.895"></status>
</kw>
<msg timestamp="20201115 22:01:33.896" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.872" endtime="20201115 22:01:33.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.903" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.899" endtime="20201115 22:01:33.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.905" endtime="20201115 22:01:33.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.865" endtime="20201115 22:01:33.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.859" endtime="20201115 22:01:33.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.929" endtime="20201115 22:01:34.272"></status>
</kw>
<msg timestamp="20201115 22:01:34.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048579278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048586847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.926" endtime="20201115 22:01:34.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048579278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048586847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.282" endtime="20201115 22:01:34.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.301" endtime="20201115 22:01:34.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.919" endtime="20201115 22:01:34.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.914" endtime="20201115 22:01:34.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:34.318" level="INFO">${RESULT} = [{'time': 0.048586847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.569000000005877e-06, 'source_diff': 7.569000000005877e-06}, {'time': 0.048721667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:34.309" endtime="20201115 22:01:34.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:34.349" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:34.321" endtime="20201115 22:01:34.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.360" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:34.358" endtime="20201115 22:01:34.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.366" level="INFO">VALUE: [7.569000000005877e-06, 7.57000000000535e-06, 7.555999999998841e-06, 7.568999999998938e-06, 7.5830000000054465e-06, 7.568999999998938e-06, 7.569000000005877e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.5419999999992715e-06, 7.55600000000578e-06, 7.555999999998841e-06, 7.582999999998508e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.582999999998508e-06, 7.569999999998411e-06, 7.569999999998411e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 7.582999999998508e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.582999999998508e-06, 7.569999999998411e-06, 7.55600000000578e-06, 7.540999999999798e-06, 7.5969999999980775e-06, 7.5419999999992715e-06, 7.568999999998938e-06, 7.5280000000066405e-06, 7.582999999998508e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.5969999999980775e-06, 7.569999999998411e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.5830000000054465e-06, 7.569999999998411e-06]</msg>
<status status="PASS" starttime="20201115 22:01:34.363" endtime="20201115 22:01:34.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.351" endtime="20201115 22:01:34.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.375" endtime="20201115 22:01:34.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:34.383" endtime="20201115 22:01:34.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.379" endtime="20201115 22:01:34.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.370" endtime="20201115 22:01:34.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.853" endtime="20201115 22:01:34.409"></status>
</kw>
<msg timestamp="20201115 22:01:34.409" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.433" endtime="20201115 22:01:34.453"></status>
</kw>
<msg timestamp="20201115 22:01:34.454" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.429" endtime="20201115 22:01:34.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.461" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.456" endtime="20201115 22:01:34.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.463" endtime="20201115 22:01:34.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.422" endtime="20201115 22:01:34.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.416" endtime="20201115 22:01:34.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.487" endtime="20201115 22:01:34.827"></status>
</kw>
<msg timestamp="20201115 22:01:34.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043115958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043123514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.483" endtime="20201115 22:01:34.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043115958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043123514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.837" endtime="20201115 22:01:34.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.855" endtime="20201115 22:01:34.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.476" endtime="20201115 22:01:34.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.471" endtime="20201115 22:01:34.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:34.875" level="INFO">${RESULT} = [{'time': 0.043123514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.043261028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:34.865" endtime="20201115 22:01:34.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:34.905" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:34.877" endtime="20201115 22:01:34.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.916" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:34.914" endtime="20201115 22:01:34.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.922" level="INFO">VALUE: [7.555999999998841e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.55600000000578e-06, 7.5969999999980775e-06, 7.582999999998508e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.583999999997981e-06, 7.5969999999980775e-06, 7.569999999998411e-06, 7.513000000000658e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.555000000006307e-06, 7.569999999998411e-06, 7.583999999997981e-06, 7.582999999998508e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.611000000004586e-06, 7.554999999999368e-06, 7.555999999998841e-06, 7.568999999998938e-06, 7.5969999999980775e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.5419999999992715e-06, 7.582999999998508e-06, 7.555999999998841e-06, 7.486000000000992e-06, 7.5830000000054465e-06, 7.485999999994053e-06, 7.540999999999798e-06, 7.568999999998938e-06, 7.500000000000562e-06, 7.555999999998841e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.514000000000132e-06, 7.554999999999368e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.582999999998508e-06, 7.554999999999368e-06, 7.569999999998411e-06, 7.472000000001422e-06, 7.6109999999976474e-06, 7.582999999998508e-06]</msg>
<status status="PASS" starttime="20201115 22:01:34.919" endtime="20201115 22:01:34.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.907" endtime="20201115 22:01:34.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.931" endtime="20201115 22:01:34.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:34.939" endtime="20201115 22:01:34.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.935" endtime="20201115 22:01:34.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.926" endtime="20201115 22:01:34.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.411" endtime="20201115 22:01:34.965"></status>
</kw>
<msg timestamp="20201115 22:01:34.965" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.991" endtime="20201115 22:01:35.012"></status>
</kw>
<msg timestamp="20201115 22:01:35.013" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.986" endtime="20201115 22:01:35.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.019" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.015" endtime="20201115 22:01:35.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.021" endtime="20201115 22:01:35.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.979" endtime="20201115 22:01:35.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.973" endtime="20201115 22:01:35.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.045" endtime="20201115 22:01:35.386"></status>
</kw>
<msg timestamp="20201115 22:01:35.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045241583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045249181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.042" endtime="20201115 22:01:35.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045241583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045249181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.395" endtime="20201115 22:01:35.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.413" endtime="20201115 22:01:35.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.034" endtime="20201115 22:01:35.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.030" endtime="20201115 22:01:35.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:35.433" level="INFO">${RESULT} = [{'time': 0.045249181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.597999999997551e-06, 'source_diff': 7.597999999997551e-06}, {'time': 0.045381667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:35.424" endtime="20201115 22:01:35.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:35.463" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:35.435" endtime="20201115 22:01:35.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.474" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:35.472" endtime="20201115 22:01:35.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.480" level="INFO">VALUE: [7.597999999997551e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.5419999999992715e-06, 7.597000000005016e-06, 7.582999999998508e-06, 7.597000000005016e-06, 7.5830000000054465e-06, 7.540999999999798e-06, 7.554999999999368e-06, 7.527000000000228e-06, 7.555999999998841e-06, 7.540999999999798e-06, 7.555999999998841e-06, 7.514000000000132e-06, 7.5969999999980775e-06, 7.5419999999992715e-06, 7.6109999999976474e-06, 7.514000000000132e-06, 7.569000000005877e-06, 7.54200000000621e-06, 7.597999999997551e-06, 7.513000000000658e-06, 7.555999999998841e-06, 7.582999999998508e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.555999999998841e-06, 7.568999999998938e-06, 7.554999999999368e-06, 7.582999999998508e-06, 7.555999999998841e-06, 7.569999999998411e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.625000000004156e-06, 7.568999999998938e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.57000000000535e-06, 7.58400000000492e-06, 7.5419999999992715e-06, 7.568999999998938e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.568999999998938e-06, 7.597000000005016e-06, 7.583999999997981e-06, 7.5830000000054465e-06]</msg>
<status status="PASS" starttime="20201115 22:01:35.477" endtime="20201115 22:01:35.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.465" endtime="20201115 22:01:35.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.489" endtime="20201115 22:01:35.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:35.497" endtime="20201115 22:01:35.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.493" endtime="20201115 22:01:35.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.484" endtime="20201115 22:01:35.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.967" endtime="20201115 22:01:35.523"></status>
</kw>
<msg timestamp="20201115 22:01:35.524" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.548" endtime="20201115 22:01:35.567"></status>
</kw>
<msg timestamp="20201115 22:01:35.569" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.544" endtime="20201115 22:01:35.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.575" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.571" endtime="20201115 22:01:35.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.578" endtime="20201115 22:01:35.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.537" endtime="20201115 22:01:35.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.531" endtime="20201115 22:01:35.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.601" endtime="20201115 22:01:35.942"></status>
</kw>
<msg timestamp="20201115 22:01:35.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044392569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044400125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.598" endtime="20201115 22:01:35.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044392569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044400125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.951" endtime="20201115 22:01:35.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.969" endtime="20201115 22:01:35.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.591" endtime="20201115 22:01:35.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.586" endtime="20201115 22:01:35.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:35.991" level="INFO">${RESULT} = [{'time': 0.044400125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.04453575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:35.982" endtime="20201115 22:01:35.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:36.022" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:35.993" endtime="20201115 22:01:36.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.033" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:36.031" endtime="20201115 22:01:36.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.039" level="INFO">VALUE: [7.555999999998841e-06, 7.555999999998841e-06, 7.569999999998411e-06, 7.555999999998841e-06, 7.611000000004586e-06, 7.582999999998508e-06, 7.499999999993623e-06, 7.5419999999992715e-06, 7.569999999998411e-06, 7.527999999999702e-06, 7.583999999997981e-06, 7.541000000006737e-06, 7.500000000000562e-06, 7.555999999998841e-06, 7.54200000000621e-06, 7.569999999998411e-06, 7.582999999998508e-06, 7.500000000000562e-06, 7.582999999998508e-06, 7.568999999998938e-06, 7.554999999999368e-06, 7.568999999998938e-06, 7.611000000004586e-06, 7.569000000005877e-06, 7.568999999998938e-06, 7.582999999998508e-06, 7.554999999999368e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.582999999998508e-06, 7.527999999999702e-06, 7.554999999999368e-06, 7.568999999998938e-06, 7.554999999999368e-06, 7.597999999997551e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.59800000000449e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.540999999999798e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.555999999998841e-06]</msg>
<status status="PASS" starttime="20201115 22:01:36.036" endtime="20201115 22:01:36.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.024" endtime="20201115 22:01:36.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.049" endtime="20201115 22:01:36.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:36.057" endtime="20201115 22:01:36.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.053" endtime="20201115 22:01:36.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.044" endtime="20201115 22:01:36.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.525" endtime="20201115 22:01:36.083"></status>
</kw>
<msg timestamp="20201115 22:01:36.084" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.107" endtime="20201115 22:01:36.126"></status>
</kw>
<msg timestamp="20201115 22:01:36.128" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.104" endtime="20201115 22:01:36.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.134" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.130" endtime="20201115 22:01:36.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.136" endtime="20201115 22:01:36.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.096" endtime="20201115 22:01:36.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.090" endtime="20201115 22:01:36.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.160" endtime="20201115 22:01:36.457"></status>
</kw>
<msg timestamp="20201115 22:01:36.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043148333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043155889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:36.157" endtime="20201115 22:01:36.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043148333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043155889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:36.467" endtime="20201115 22:01:36.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.485" endtime="20201115 22:01:36.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.149" endtime="20201115 22:01:36.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.145" endtime="20201115 22:01:36.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:36.505" level="INFO">${RESULT} = [{'time': 0.043155889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.55600000000578e-06, 'source_diff': 7.55600000000578e-06}, {'time': 0.043290486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:36.495" endtime="20201115 22:01:36.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:36.535" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:36.507" endtime="20201115 22:01:36.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.546" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:36.544" endtime="20201115 22:01:36.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.552" level="INFO">VALUE: [7.55600000000578e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.5969999999980775e-06, 7.540999999999798e-06, 7.540999999999798e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 7.554999999999368e-06, 7.597000000005016e-06, 7.554999999999368e-06, 7.582999999998508e-06, 7.569999999998411e-06, 7.5419999999992715e-06, 7.554999999999368e-06, 7.568999999998938e-06, 7.54200000000621e-06, 7.582999999998508e-06, 7.5419999999992715e-06, 7.57000000000535e-06, 7.625000000004156e-06, 7.6109999999976474e-06, 7.555999999998841e-06, 7.57000000000535e-06, 7.569999999998411e-06, 7.554999999999368e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.5969999999980775e-06, 7.569999999998411e-06, 7.527999999999702e-06, 7.583999999997981e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.554999999999368e-06, 7.54200000000621e-06, 7.5280000000066405e-06, 7.5419999999992715e-06, 7.5830000000054465e-06, 7.568999999998938e-06, 7.555999999998841e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.555999999998841e-06, 7.568999999998938e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.569999999998411e-06]</msg>
<status status="PASS" starttime="20201115 22:01:36.548" endtime="20201115 22:01:36.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.537" endtime="20201115 22:01:36.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.562" endtime="20201115 22:01:36.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:36.570" endtime="20201115 22:01:36.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.566" endtime="20201115 22:01:36.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.557" endtime="20201115 22:01:36.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.085" endtime="20201115 22:01:36.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.850" endtime="20201115 22:01:36.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.848" endtime="20201115 22:01:36.596"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.602" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.625" endtime="20201115 22:01:36.645"></status>
</kw>
<msg timestamp="20201115 22:01:36.646" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.622" endtime="20201115 22:01:36.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.652" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.648" endtime="20201115 22:01:36.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.655" endtime="20201115 22:01:36.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.614" endtime="20201115 22:01:36.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.608" endtime="20201115 22:01:36.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.678" endtime="20201115 22:01:37.021"></status>
</kw>
<msg timestamp="20201115 22:01:37.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048468903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048476667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:36.675" endtime="20201115 22:01:37.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048468903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048476667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:37.031" endtime="20201115 22:01:37.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.050" endtime="20201115 22:01:37.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.668" endtime="20201115 22:01:37.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.663" endtime="20201115 22:01:37.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:37.068" level="INFO">${RESULT} = [{'time': 0.048476667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.048627125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:37.059" endtime="20201115 22:01:37.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:37.099" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:37.070" endtime="20201115 22:01:37.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.110" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:37.108" endtime="20201115 22:01:37.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.117" level="INFO">VALUE: [7.764000000000382e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.777999999999952e-06, 7.736000000001242e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.77800000000689e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.8200000000056e-06, 7.764000000000382e-06, 7.707999999995163e-06, 7.764000000000382e-06, 7.777000000000478e-06, 7.722000000001672e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.736000000001242e-06, 7.79200000000646e-06, 7.750000000000812e-06, 7.804999999999618e-06, 7.722000000001672e-06, 7.735999999994303e-06, 7.750000000000812e-06, 7.681000000002436e-06, 7.777999999999952e-06, 7.750000000000812e-06, 7.804999999999618e-06, 7.750000000000812e-06, 7.708000000002102e-06, 7.791999999999522e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.818999999999188e-06, 7.791999999999522e-06, 7.708000000002102e-06, 7.750000000000812e-06, 7.804999999999618e-06]</msg>
<status status="PASS" starttime="20201115 22:01:37.113" endtime="20201115 22:01:37.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.101" endtime="20201115 22:01:37.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.126" endtime="20201115 22:01:37.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:37.134" endtime="20201115 22:01:37.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.130" endtime="20201115 22:01:37.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.121" endtime="20201115 22:01:37.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.603" endtime="20201115 22:01:37.160"></status>
</kw>
<msg timestamp="20201115 22:01:37.161" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.184" endtime="20201115 22:01:37.203"></status>
</kw>
<msg timestamp="20201115 22:01:37.205" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.181" endtime="20201115 22:01:37.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.207" endtime="20201115 22:01:37.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.213" endtime="20201115 22:01:37.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.173" endtime="20201115 22:01:37.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.167" endtime="20201115 22:01:37.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.237" endtime="20201115 22:01:37.579"></status>
</kw>
<msg timestamp="20201115 22:01:37.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043196042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043203806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:37.234" endtime="20201115 22:01:37.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043196042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043203806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:37.588" endtime="20201115 22:01:37.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.607" endtime="20201115 22:01:37.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.226" endtime="20201115 22:01:37.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.222" endtime="20201115 22:01:37.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:37.626" level="INFO">${RESULT} = [{'time': 0.043203806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.043349458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:37.617" endtime="20201115 22:01:37.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:37.657" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:37.628" endtime="20201115 22:01:37.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.669" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:37.666" endtime="20201115 22:01:37.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.674" level="INFO">VALUE: [7.764000000000382e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.804999999999618e-06, 7.749999999993873e-06, 7.791000000000048e-06, 7.708000000002102e-06, 7.763000000000908e-06, 7.750000000000812e-06, 7.681000000002436e-06, 7.777000000000478e-06, 7.777999999999952e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.737000000000716e-06, 7.708999999994637e-06, 7.750000000000812e-06, 7.722000000001672e-06, 7.695000000002006e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.818999999999188e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.791999999999522e-06, 7.791999999999522e-06, 7.777000000000478e-06, 7.764000000000382e-06, 7.708000000002102e-06, 7.804999999999618e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.763000000000908e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.736000000001242e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.723000000001146e-06, 7.764000000000382e-06, 7.694000000002532e-06, 7.736000000001242e-06]</msg>
<status status="PASS" starttime="20201115 22:01:37.671" endtime="20201115 22:01:37.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.659" endtime="20201115 22:01:37.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.684" endtime="20201115 22:01:37.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:37.692" endtime="20201115 22:01:37.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.688" endtime="20201115 22:01:37.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.679" endtime="20201115 22:01:37.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.162" endtime="20201115 22:01:37.718"></status>
</kw>
<msg timestamp="20201115 22:01:37.718" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.742" endtime="20201115 22:01:37.762"></status>
</kw>
<msg timestamp="20201115 22:01:37.763" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.739" endtime="20201115 22:01:37.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.770" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.766" endtime="20201115 22:01:37.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.772" endtime="20201115 22:01:37.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.731" endtime="20201115 22:01:37.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.725" endtime="20201115 22:01:37.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.799" endtime="20201115 22:01:38.141"></status>
</kw>
<msg timestamp="20201115 22:01:38.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043814875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043822708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:37.796" endtime="20201115 22:01:38.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043814875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043822708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:38.150" endtime="20201115 22:01:38.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.169" endtime="20201115 22:01:38.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.788" endtime="20201115 22:01:38.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.783" endtime="20201115 22:01:38.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:38.191" level="INFO">${RESULT} = [{'time': 0.043822708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.043963986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:38.181" endtime="20201115 22:01:38.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:38.222" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:38.194" endtime="20201115 22:01:38.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.233" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:38.231" endtime="20201115 22:01:38.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.239" level="INFO">VALUE: [7.832999999998758e-06, 7.804999999999618e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.818999999999188e-06, 7.736000000001242e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.750000000000812e-06, 7.777999999999952e-06, 7.694000000002532e-06, 7.791999999999522e-06, 7.736000000001242e-06, 7.764000000000382e-06, 7.709000000001576e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.818999999999188e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.777999999999952e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.805999999999091e-06, 7.763999999993443e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.777999999999952e-06, 7.749999999993873e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.737000000000716e-06, 7.791000000000048e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.764000000000382e-06]</msg>
<status status="PASS" starttime="20201115 22:01:38.235" endtime="20201115 22:01:38.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.224" endtime="20201115 22:01:38.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.248" endtime="20201115 22:01:38.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:38.256" endtime="20201115 22:01:38.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.252" endtime="20201115 22:01:38.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.243" endtime="20201115 22:01:38.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.719" endtime="20201115 22:01:38.282"></status>
</kw>
<msg timestamp="20201115 22:01:38.282" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.306" endtime="20201115 22:01:38.326"></status>
</kw>
<msg timestamp="20201115 22:01:38.327" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.302" endtime="20201115 22:01:38.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.333" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.329" endtime="20201115 22:01:38.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.335" endtime="20201115 22:01:38.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.295" endtime="20201115 22:01:38.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.289" endtime="20201115 22:01:38.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.359" endtime="20201115 22:01:38.700"></status>
</kw>
<msg timestamp="20201115 22:01:38.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043351653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043359458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:38.356" endtime="20201115 22:01:38.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043351653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043359458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:38.710" endtime="20201115 22:01:38.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.729" endtime="20201115 22:01:38.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.348" endtime="20201115 22:01:38.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.344" endtime="20201115 22:01:38.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:38.748" level="INFO">${RESULT} = [{'time': 0.043359458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.804999999999618e-06, 'source_diff': 7.804999999999618e-06}, {'time': 0.043506528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:38.739" endtime="20201115 22:01:38.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:38.779" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:38.751" endtime="20201115 22:01:38.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.790" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:38.788" endtime="20201115 22:01:38.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.796" level="INFO">VALUE: [7.804999999999618e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.777000000000478e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.736000000001242e-06, 7.750000000000812e-06, 7.666000000003392e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.723000000001146e-06, 7.763000000000908e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.749999999993873e-06, 7.764000000000382e-06, 7.749999999993873e-06, 7.764000000000382e-06, 7.735999999994303e-06, 7.750000000000812e-06, 7.749999999993873e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.749999999993873e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.736000000001242e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.776999999993539e-06, 7.723000000001146e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.735999999994303e-06, 7.750000000000812e-06, 7.804999999999618e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.737000000000716e-06]</msg>
<status status="PASS" starttime="20201115 22:01:38.792" endtime="20201115 22:01:38.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.781" endtime="20201115 22:01:38.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.805" endtime="20201115 22:01:38.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:38.814" endtime="20201115 22:01:38.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.809" endtime="20201115 22:01:38.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.800" endtime="20201115 22:01:38.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.283" endtime="20201115 22:01:38.839"></status>
</kw>
<msg timestamp="20201115 22:01:38.840" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.863" endtime="20201115 22:01:38.884"></status>
</kw>
<msg timestamp="20201115 22:01:38.885" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.860" endtime="20201115 22:01:38.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.892" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.887" endtime="20201115 22:01:38.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.894" endtime="20201115 22:01:38.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.853" endtime="20201115 22:01:38.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.847" endtime="20201115 22:01:38.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.918" endtime="20201115 22:01:39.258"></status>
</kw>
<msg timestamp="20201115 22:01:39.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043592917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043600694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:38.915" endtime="20201115 22:01:39.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043592917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043600694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:39.268" endtime="20201115 22:01:39.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.286" endtime="20201115 22:01:39.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.907" endtime="20201115 22:01:39.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.902" endtime="20201115 22:01:39.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:39.306" level="INFO">${RESULT} = [{'time': 0.043600694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.777000000000478e-06, 'source_diff': 7.777000000000478e-06}, {'time': 0.043745069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:39.297" endtime="20201115 22:01:39.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:39.336" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:39.308" endtime="20201115 22:01:39.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.347" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:39.345" endtime="20201115 22:01:39.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.353" level="INFO">VALUE: [7.777000000000478e-06, 7.735999999994303e-06, 7.804999999999618e-06, 7.763999999993443e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.791999999999522e-06, 7.777000000000478e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.737000000000716e-06, 7.764000000000382e-06, 7.681000000002436e-06, 7.694000000002532e-06, 7.750000000000812e-06, 7.735999999994303e-06, 7.777000000000478e-06, 7.791999999999522e-06, 7.80600000000603e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.707999999995163e-06, 7.764000000000382e-06, 7.736000000001242e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.763000000000908e-06, 7.818999999999188e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.804999999999618e-06, 7.777999999999952e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.749999999993873e-06]</msg>
<status status="PASS" starttime="20201115 22:01:39.350" endtime="20201115 22:01:39.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.338" endtime="20201115 22:01:39.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.362" endtime="20201115 22:01:39.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:39.371" endtime="20201115 22:01:39.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.366" endtime="20201115 22:01:39.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.357" endtime="20201115 22:01:39.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.841" endtime="20201115 22:01:39.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.599" endtime="20201115 22:01:39.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.597" endtime="20201115 22:01:39.397"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.402" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.425" endtime="20201115 22:01:39.447"></status>
</kw>
<msg timestamp="20201115 22:01:39.448" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:39.422" endtime="20201115 22:01:39.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.454" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:39.450" endtime="20201115 22:01:39.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.457" endtime="20201115 22:01:39.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.415" endtime="20201115 22:01:39.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.409" endtime="20201115 22:01:39.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.481" endtime="20201115 22:01:39.824"></status>
</kw>
<msg timestamp="20201115 22:01:39.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048559653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048567639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:39.478" endtime="20201115 22:01:39.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048559653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048567639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:39.833" endtime="20201115 22:01:39.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.852" endtime="20201115 22:01:39.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.470" endtime="20201115 22:01:39.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.465" endtime="20201115 22:01:39.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:39.870" level="INFO">${RESULT} = [{'time': 0.048567639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.048719611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:39.861" endtime="20201115 22:01:39.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:39.900" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:39.872" endtime="20201115 22:01:39.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.911" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:39.909" endtime="20201115 22:01:39.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.917" level="INFO">VALUE: [7.986000000001492e-06, 8.000000000001062e-06, 7.973000000001396e-06, 7.972000000001922e-06, 7.957999999995413e-06, 8.000000000001062e-06, 7.972000000001922e-06, 7.986000000001492e-06, 7.986000000001492e-06, 7.985999999994553e-06, 7.985999999994553e-06, 7.957999999995413e-06, 7.986000000001492e-06, 8.000000000001062e-06, 7.973000000001396e-06, 7.986000000001492e-06, 7.931000000002686e-06, 8.000000000001062e-06, 7.986000000001492e-06, 8.000000000001062e-06, 7.985999999994553e-06, 7.957999999995413e-06, 7.985999999994553e-06, 8.014000000000632e-06, 7.986000000001492e-06, 7.972000000001922e-06, 8.000000000001062e-06, 8.014000000000632e-06, 7.986000000001492e-06, 7.987000000000966e-06, 7.972999999994457e-06, 7.959000000001826e-06, 7.972000000001922e-06, 7.986000000001492e-06, 7.972000000001922e-06, 7.972000000001922e-06, 7.916999999996177e-06, 7.972000000001922e-06, 8.000000000001062e-06, 8.000000000001062e-06, 7.958000000002352e-06, 7.958000000002352e-06, 7.986000000001492e-06, 7.971999999994983e-06, 7.985999999994553e-06, 7.973000000001396e-06, 7.957999999995413e-06, 7.944000000002782e-06, 8.028000000000202e-06, 8.000000000001062e-06]</msg>
<status status="PASS" starttime="20201115 22:01:39.914" endtime="20201115 22:01:39.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.902" endtime="20201115 22:01:39.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.926" endtime="20201115 22:01:39.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:39.934" endtime="20201115 22:01:39.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.930" endtime="20201115 22:01:39.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.921" endtime="20201115 22:01:39.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.403" endtime="20201115 22:01:39.960"></status>
</kw>
<msg timestamp="20201115 22:01:39.960" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.984" endtime="20201115 22:01:40.004"></status>
</kw>
<msg timestamp="20201115 22:01:40.005" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:39.980" endtime="20201115 22:01:40.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.013" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.008" endtime="20201115 22:01:40.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.015" endtime="20201115 22:01:40.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.973" endtime="20201115 22:01:40.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.967" endtime="20201115 22:01:40.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.039" endtime="20201115 22:01:40.380"></status>
</kw>
<msg timestamp="20201115 22:01:40.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043179722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043187694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:40.035" endtime="20201115 22:01:40.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043179722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043187694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:40.389" endtime="20201115 22:01:40.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.408" endtime="20201115 22:01:40.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.028" endtime="20201115 22:01:40.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.023" endtime="20201115 22:01:40.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:40.429" level="INFO">${RESULT} = [{'time': 0.043187694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.043342153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:40.420" endtime="20201115 22:01:40.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:40.459" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:40.431" endtime="20201115 22:01:40.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.471" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:40.468" endtime="20201115 22:01:40.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.476" level="INFO">VALUE: [7.972000000001922e-06, 7.972000000001922e-06, 7.986000000001492e-06, 7.986000000001492e-06, 7.985999999994553e-06, 7.985999999994553e-06, 7.999999999994123e-06, 7.972000000001922e-06, 7.957999999995413e-06, 7.986000000001492e-06, 7.958000000002352e-06, 7.985999999994553e-06, 7.972000000001922e-06, 7.986000000001492e-06, 7.943999999995843e-06, 8.000000000001062e-06, 7.945000000002256e-06, 7.986000000001492e-06, 7.986000000001492e-06, 7.986000000001492e-06, 7.902999999996607e-06, 7.972000000001922e-06, 8.027000000000728e-06, 7.945000000002256e-06, 7.986000000001492e-06, 7.986000000001492e-06, 7.957999999995413e-06, 8.000000000001062e-06, 7.972000000001922e-06, 7.972000000001922e-06, 7.986000000001492e-06, 8.000000000001062e-06, 7.987000000000966e-06, 7.957999999995413e-06, 8.014000000000632e-06, 7.972000000001922e-06, 8.027000000000728e-06, 7.985999999994553e-06, 7.986000000001492e-06, 7.973000000001396e-06, 7.972000000001922e-06, 8.000000000001062e-06, 7.972000000001922e-06, 7.972000000001922e-06, 7.985999999994553e-06, 7.971999999994983e-06, 7.985999999994553e-06, 7.986000000001492e-06, 8.000000000001062e-06, 7.972000000001922e-06]</msg>
<status status="PASS" starttime="20201115 22:01:40.473" endtime="20201115 22:01:40.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.461" endtime="20201115 22:01:40.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.485" endtime="20201115 22:01:40.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:40.494" endtime="20201115 22:01:40.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.489" endtime="20201115 22:01:40.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.481" endtime="20201115 22:01:40.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.961" endtime="20201115 22:01:40.519"></status>
</kw>
<msg timestamp="20201115 22:01:40.520" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.544" endtime="20201115 22:01:40.564"></status>
</kw>
<msg timestamp="20201115 22:01:40.566" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.540" endtime="20201115 22:01:40.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.572" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.568" endtime="20201115 22:01:40.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.574" endtime="20201115 22:01:40.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.532" endtime="20201115 22:01:40.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.526" endtime="20201115 22:01:40.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.598" endtime="20201115 22:01:40.937"></status>
</kw>
<msg timestamp="20201115 22:01:40.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043896917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043904889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:40.595" endtime="20201115 22:01:40.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043896917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043904889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:40.946" endtime="20201115 22:01:40.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.965" endtime="20201115 22:01:40.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.587" endtime="20201115 22:01:40.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.583" endtime="20201115 22:01:40.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:40.984" level="INFO">${RESULT} = [{'time': 0.043904889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.044061611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:40.975" endtime="20201115 22:01:40.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:41.015" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:40.986" endtime="20201115 22:01:41.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.026" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:41.023" endtime="20201115 22:01:41.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.031" level="INFO">VALUE: [7.972000000001922e-06, 7.972000000001922e-06, 7.917000000003116e-06, 8.055999999999341e-06, 8.000000000001062e-06, 8.000000000001062e-06, 7.986000000001492e-06, 7.972000000001922e-06, 7.971999999994983e-06, 8.041999999999772e-06, 8.014000000000632e-06, 7.985999999994553e-06, 7.973000000001396e-06, 7.985999999994553e-06, 7.957999999995413e-06, 8.013000000001158e-06, 7.987000000000966e-06, 7.972000000001922e-06, 7.972000000001922e-06, 7.986000000001492e-06, 7.972000000001922e-06, 7.972000000001922e-06, 7.986000000001492e-06, 7.987000000000966e-06, 7.985999999994553e-06, 7.972000000001922e-06, 7.971999999994983e-06, 7.986000000001492e-06, 7.972000000001922e-06, 7.986000000001492e-06, 8.000000000001062e-06, 7.972000000001922e-06, 8.000000000001062e-06, 7.986000000001492e-06, 7.972000000001922e-06, 7.972000000001922e-06, 8.028000000000202e-06, 8.000000000001062e-06, 7.986000000001492e-06, 7.972999999994457e-06, 7.973000000001396e-06, 7.957999999995413e-06, 7.971999999994983e-06, 7.957999999995413e-06, 8.01299999999422e-06, 7.971999999994983e-06, 7.917000000003116e-06, 8.014000000000632e-06, 7.972000000001922e-06, 7.972000000001922e-06]</msg>
<status status="PASS" starttime="20201115 22:01:41.028" endtime="20201115 22:01:41.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.016" endtime="20201115 22:01:41.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.040" endtime="20201115 22:01:41.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:41.049" endtime="20201115 22:01:41.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.044" endtime="20201115 22:01:41.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.036" endtime="20201115 22:01:41.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.521" endtime="20201115 22:01:41.074"></status>
</kw>
<msg timestamp="20201115 22:01:41.075" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.096" endtime="20201115 22:01:41.116"></status>
</kw>
<msg timestamp="20201115 22:01:41.116" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.095" endtime="20201115 22:01:41.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.119" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.117" endtime="20201115 22:01:41.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.120" endtime="20201115 22:01:41.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.088" endtime="20201115 22:01:41.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.082" endtime="20201115 22:01:41.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.131" endtime="20201115 22:01:41.460"></status>
</kw>
<msg timestamp="20201115 22:01:41.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039531764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039539722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:41.130" endtime="20201115 22:01:41.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039531764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039539722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:41.469" endtime="20201115 22:01:41.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.488" endtime="20201115 22:01:41.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.126" endtime="20201115 22:01:41.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.124" endtime="20201115 22:01:41.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:41.507" level="INFO">${RESULT} = [{'time': 0.039539722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.958000000002352e-06, 'source_diff': 7.958000000002352e-06}, {'time': 0.039697319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:41.498" endtime="20201115 22:01:41.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:41.537" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:41.509" endtime="20201115 22:01:41.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.548" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:41.546" endtime="20201115 22:01:41.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.554" level="INFO">VALUE: [7.958000000002352e-06, 7.972000000001922e-06, 8.000000000001062e-06, 7.972000000001922e-06, 7.971999999994983e-06, 7.972000000001922e-06, 7.931000000002686e-06, 7.972000000001922e-06, 8.028000000000202e-06, 7.985999999994553e-06, 7.986000000001492e-06, 8.028000000000202e-06, 7.943999999995843e-06, 7.986000000001492e-06, 7.973000000001396e-06, 7.973000000001396e-06, 7.986000000001492e-06, 7.986000000001492e-06, 8.028000000000202e-06, 8.000000000001062e-06, 7.986000000001492e-06, 8.014000000000632e-06, 7.972000000001922e-06, 7.986000000001492e-06, 7.985999999994553e-06, 7.999999999994123e-06, 7.986000000001492e-06, 7.973000000001396e-06, 8.028000000000202e-06, 7.972000000001922e-06, 7.986000000001492e-06, 7.972000000001922e-06, 7.972000000001922e-06, 8.000000000001062e-06, 7.972000000001922e-06, 7.987000000000966e-06, 7.972000000001922e-06, 7.957999999995413e-06, 7.943999999995843e-06, 8.000000000001062e-06, 7.972000000001922e-06, 7.971999999994983e-06, 8.014000000000632e-06, 7.945000000002256e-06, 7.943999999995843e-06, 7.971999999994983e-06, 7.971999999994983e-06, 7.929999999996273e-06, 7.986000000001492e-06, 7.987000000000966e-06]</msg>
<status status="PASS" starttime="20201115 22:01:41.551" endtime="20201115 22:01:41.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.539" endtime="20201115 22:01:41.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.563" endtime="20201115 22:01:41.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:41.572" endtime="20201115 22:01:41.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.568" endtime="20201115 22:01:41.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.558" endtime="20201115 22:01:41.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.077" endtime="20201115 22:01:41.598"></status>
</kw>
<msg timestamp="20201115 22:01:41.599" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.622" endtime="20201115 22:01:41.643"></status>
</kw>
<msg timestamp="20201115 22:01:41.644" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.619" endtime="20201115 22:01:41.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.651" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.646" endtime="20201115 22:01:41.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.653" endtime="20201115 22:01:41.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.611" endtime="20201115 22:01:41.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.605" endtime="20201115 22:01:41.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.677" endtime="20201115 22:01:42.017"></status>
</kw>
<msg timestamp="20201115 22:01:42.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043354458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043362431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:41.673" endtime="20201115 22:01:42.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043354458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043362431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:42.027" endtime="20201115 22:01:42.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.045" endtime="20201115 22:01:42.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.666" endtime="20201115 22:01:42.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.661" endtime="20201115 22:01:42.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:42.064" level="INFO">${RESULT} = [{'time': 0.043362431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.973000000001396e-06, 'source_diff': 7.973000000001396e-06}, {'time': 0.043515875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:42.055" endtime="20201115 22:01:42.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:42.095" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:42.066" endtime="20201115 22:01:42.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.106" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:42.104" endtime="20201115 22:01:42.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.112" level="INFO">VALUE: [7.973000000001396e-06, 8.014000000000632e-06, 7.972000000001922e-06, 7.986000000001492e-06, 7.959000000001826e-06, 7.986000000001492e-06, 8.000000000001062e-06, 7.987000000000966e-06, 7.971999999994983e-06, 7.971999999994983e-06, 7.986000000001492e-06, 7.986000000001492e-06, 7.985999999994553e-06, 8.000000000001062e-06, 7.972000000001922e-06, 7.971999999994983e-06, 7.972000000001922e-06, 7.972000000001922e-06, 7.986000000001492e-06, 7.985999999994553e-06, 8.000000000001062e-06, 7.971999999994983e-06, 8.014000000000632e-06, 7.986000000001492e-06, 7.944000000002782e-06, 7.971999999994983e-06, 8.014000000000632e-06, 7.972000000001922e-06, 7.986000000001492e-06, 7.986000000001492e-06, 7.987000000000966e-06, 7.986000000001492e-06, 7.986000000001492e-06, 8.027000000000728e-06, 7.972000000001922e-06, 7.986000000001492e-06, 7.972000000001922e-06, 7.958000000002352e-06, 8.000000000001062e-06, 7.944000000002782e-06, 7.986000000001492e-06, 7.986000000001492e-06, 7.930000000003212e-06, 7.971999999994983e-06, 8.055999999999341e-06, 7.987000000000966e-06, 7.999999999994123e-06, 7.958000000002352e-06, 7.973000000001396e-06, 7.972000000001922e-06]</msg>
<status status="PASS" starttime="20201115 22:01:42.109" endtime="20201115 22:01:42.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.097" endtime="20201115 22:01:42.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.122" endtime="20201115 22:01:42.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:42.130" endtime="20201115 22:01:42.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.126" endtime="20201115 22:01:42.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.117" endtime="20201115 22:01:42.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.600" endtime="20201115 22:01:42.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.400" endtime="20201115 22:01:42.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.398" endtime="20201115 22:01:42.157"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.162" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.185" endtime="20201115 22:01:42.207"></status>
</kw>
<msg timestamp="20201115 22:01:42.208" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.182" endtime="20201115 22:01:42.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.215" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.211" endtime="20201115 22:01:42.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.217" endtime="20201115 22:01:42.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.174" endtime="20201115 22:01:42.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.168" endtime="20201115 22:01:42.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.242" endtime="20201115 22:01:42.585"></status>
</kw>
<msg timestamp="20201115 22:01:42.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048635764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048643944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:42.239" endtime="20201115 22:01:42.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048635764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048643944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:42.595" endtime="20201115 22:01:42.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.613" endtime="20201115 22:01:42.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.231" endtime="20201115 22:01:42.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.226" endtime="20201115 22:01:42.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:42.631" level="INFO">${RESULT} = [{'time': 0.048643944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.180000000003462e-06, 'source_diff': 8.180000000003462e-06}, {'time': 0.048806083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:42.622" endtime="20201115 22:01:42.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:42.661" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:42.633" endtime="20201115 22:01:42.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.673" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:42.670" endtime="20201115 22:01:42.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.679" level="INFO">VALUE: [8.180000000003462e-06, 8.151999999997384e-06, 8.166000000003892e-06, 8.193999999996093e-06, 8.166000000003892e-06, 8.167000000003366e-06, 8.179999999996523e-06, 8.181000000002936e-06, 8.167000000003366e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.208999999995137e-06, 8.180999999995997e-06, 8.181000000002936e-06, 8.166000000003892e-06, 8.195000000002506e-06, 8.193999999996093e-06, 8.167000000003366e-06, 8.208000000002602e-06, 8.151999999997384e-06, 8.167000000003366e-06, 8.181000000002936e-06, 8.152000000004322e-06, 8.180999999995997e-06, 8.236000000001742e-06, 8.180999999995997e-06, 8.180000000003462e-06, 8.167000000003366e-06, 8.166999999996427e-06, 8.180999999995997e-06, 8.166000000003892e-06, 8.167000000003366e-06, 8.180999999995997e-06, 8.208999999995137e-06, 8.151999999997384e-06, 8.179999999996523e-06, 8.166999999996427e-06, 8.180999999995997e-06, 8.138999999997287e-06, 8.179999999996523e-06, 8.195000000002506e-06, 8.179999999996523e-06, 8.167000000003366e-06, 8.179999999996523e-06, 8.181000000002936e-06, 8.181000000002936e-06, 8.167000000003366e-06, 8.167000000003366e-06, 8.111999999997621e-06]</msg>
<status status="PASS" starttime="20201115 22:01:42.675" endtime="20201115 22:01:42.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.663" endtime="20201115 22:01:42.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.688" endtime="20201115 22:01:42.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:42.696" endtime="20201115 22:01:42.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.692" endtime="20201115 22:01:42.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.683" endtime="20201115 22:01:42.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.163" endtime="20201115 22:01:42.722"></status>
</kw>
<msg timestamp="20201115 22:01:42.722" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.746" endtime="20201115 22:01:42.768"></status>
</kw>
<msg timestamp="20201115 22:01:42.769" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.743" endtime="20201115 22:01:42.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.775" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.771" endtime="20201115 22:01:42.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.778" endtime="20201115 22:01:42.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.735" endtime="20201115 22:01:42.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.729" endtime="20201115 22:01:42.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.801" endtime="20201115 22:01:43.142"></status>
</kw>
<msg timestamp="20201115 22:01:43.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043441375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043449542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:42.798" endtime="20201115 22:01:43.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043441375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043449542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.151" endtime="20201115 22:01:43.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.170" endtime="20201115 22:01:43.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.791" endtime="20201115 22:01:43.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.786" endtime="20201115 22:01:43.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:43.189" level="INFO">${RESULT} = [{'time': 0.043449542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.167000000003366e-06, 'source_diff': 8.167000000003366e-06}, {'time': 0.043613569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:43.180" endtime="20201115 22:01:43.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:43.219" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:43.191" endtime="20201115 22:01:43.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.231" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:43.229" endtime="20201115 22:01:43.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.237" level="INFO">VALUE: [8.167000000003366e-06, 8.179999999996523e-06, 8.208000000002602e-06, 8.181000000002936e-06, 8.139000000004226e-06, 8.180999999995997e-06, 8.207999999995663e-06, 8.166999999996427e-06, 8.152999999996857e-06, 8.181000000002936e-06, 8.180000000003462e-06, 8.180999999995997e-06, 8.137999999997814e-06, 8.180999999995997e-06, 8.222000000002172e-06, 8.167000000003366e-06, 8.153000000003796e-06, 8.181000000002936e-06, 8.181000000002936e-06, 8.153000000003796e-06, 8.179999999996523e-06, 8.151999999997384e-06, 8.166999999996427e-06, 8.181000000002936e-06, 8.166999999996427e-06, 8.166999999996427e-06, 8.180000000003462e-06, 8.179999999996523e-06, 8.153000000003796e-06, 8.167000000003366e-06, 8.180000000003462e-06, 8.180000000003462e-06, 8.223000000001646e-06, 8.166999999996427e-06, 8.179999999996523e-06, 8.181000000002936e-06, 8.152999999996857e-06, 8.180999999995997e-06, 8.180000000003462e-06, 8.180999999995997e-06, 8.180999999995997e-06, 8.165999999996953e-06, 8.221999999995233e-06, 8.207999999995663e-06, 8.235999999994803e-06, 8.179999999996523e-06, 8.152999999996857e-06, 8.165999999996953e-06, 8.194000000003032e-06, 8.180999999995997e-06]</msg>
<status status="PASS" starttime="20201115 22:01:43.234" endtime="20201115 22:01:43.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.222" endtime="20201115 22:01:43.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.247" endtime="20201115 22:01:43.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:43.256" endtime="20201115 22:01:43.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.251" endtime="20201115 22:01:43.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.242" endtime="20201115 22:01:43.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.724" endtime="20201115 22:01:43.282"></status>
</kw>
<msg timestamp="20201115 22:01:43.282" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.306" endtime="20201115 22:01:43.327"></status>
</kw>
<msg timestamp="20201115 22:01:43.328" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.302" endtime="20201115 22:01:43.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.335" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.331" endtime="20201115 22:01:43.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.337" endtime="20201115 22:01:43.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.295" endtime="20201115 22:01:43.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.289" endtime="20201115 22:01:43.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.361" endtime="20201115 22:01:43.701"></status>
</kw>
<msg timestamp="20201115 22:01:43.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043476042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043484208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.357" endtime="20201115 22:01:43.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043476042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043484208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.710" endtime="20201115 22:01:43.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.729" endtime="20201115 22:01:43.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.350" endtime="20201115 22:01:43.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.345" endtime="20201115 22:01:43.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:43.748" level="INFO">${RESULT} = [{'time': 0.043484208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.166000000003892e-06, 'source_diff': 8.166000000003892e-06}, {'time': 0.043649292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:43.739" endtime="20201115 22:01:43.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:43.779" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:43.751" endtime="20201115 22:01:43.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.791" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:43.788" endtime="20201115 22:01:43.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.796" level="INFO">VALUE: [8.166000000003892e-06, 8.166999999996427e-06, 8.250000000001312e-06, 8.223000000001646e-06, 8.194999999995567e-06, 8.167000000003366e-06, 8.179999999996523e-06, 8.222000000002172e-06, 8.166999999996427e-06, 8.138999999997287e-06, 8.138999999997287e-06, 8.180999999995997e-06, 8.166999999996427e-06, 8.180000000003462e-06, 8.180999999995997e-06, 8.167000000003366e-06, 8.138999999997287e-06, 8.167000000003366e-06, 8.179999999996523e-06, 8.180000000003462e-06, 8.180999999995997e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.124999999997717e-06, 8.110999999998147e-06, 8.180999999995997e-06, 8.194000000003032e-06, 8.181000000002936e-06, 8.166000000003892e-06, 8.152000000004322e-06, 8.181000000002936e-06, 8.180000000003462e-06, 8.208000000002602e-06, 8.194000000003032e-06, 8.096999999998578e-06, 8.181000000002936e-06, 8.179999999996523e-06, 8.167000000003366e-06, 8.167000000003366e-06, 8.152999999996857e-06, 8.194999999995567e-06, 8.180999999995997e-06, 8.195000000002506e-06, 8.110999999998147e-06, 8.180000000003462e-06, 8.138999999997287e-06, 8.124999999997717e-06, 8.181000000002936e-06, 8.180000000003462e-06, 8.208000000002602e-06]</msg>
<status status="PASS" starttime="20201115 22:01:43.793" endtime="20201115 22:01:43.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.781" endtime="20201115 22:01:43.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.805" endtime="20201115 22:01:43.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:43.814" endtime="20201115 22:01:43.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.809" endtime="20201115 22:01:43.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.800" endtime="20201115 22:01:43.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.283" endtime="20201115 22:01:43.839"></status>
</kw>
<msg timestamp="20201115 22:01:43.840" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.863" endtime="20201115 22:01:43.885"></status>
</kw>
<msg timestamp="20201115 22:01:43.886" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.859" endtime="20201115 22:01:43.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.892" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.888" endtime="20201115 22:01:43.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.895" endtime="20201115 22:01:43.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.852" endtime="20201115 22:01:43.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.846" endtime="20201115 22:01:43.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.918" endtime="20201115 22:01:44.259"></status>
</kw>
<msg timestamp="20201115 22:01:44.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043142278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043150472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.915" endtime="20201115 22:01:44.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043142278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043150472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.268" endtime="20201115 22:01:44.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.288" endtime="20201115 22:01:44.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.908" endtime="20201115 22:01:44.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.903" endtime="20201115 22:01:44.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:44.308" level="INFO">${RESULT} = [{'time': 0.043150472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.043324917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:44.299" endtime="20201115 22:01:44.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:44.338" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:44.310" endtime="20201115 22:01:44.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.349" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:44.347" endtime="20201115 22:01:44.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.355" level="INFO">VALUE: [8.194000000003032e-06, 8.180999999995997e-06, 8.138999999997287e-06, 8.180999999995997e-06, 8.166000000003892e-06, 8.151999999997384e-06, 8.179999999996523e-06, 8.139000000004226e-06, 8.180999999995997e-06, 8.207999999995663e-06, 8.195000000002506e-06, 8.167000000003366e-06, 8.180000000003462e-06, 8.194000000003032e-06, 8.167000000003366e-06, 8.166999999996427e-06, 8.181000000002936e-06, 8.194000000003032e-06, 8.166999999996427e-06, 8.209000000002076e-06, 8.179999999996523e-06, 8.179999999996523e-06, 8.166999999996427e-06, 8.208000000002602e-06, 8.167000000003366e-06, 8.152999999996857e-06, 8.165999999996953e-06, 8.208000000002602e-06, 8.166999999996427e-06, 8.166999999996427e-06, 8.153000000003796e-06, 8.180000000003462e-06, 8.110999999998147e-06, 8.193999999996093e-06, 8.153000000003796e-06, 8.209000000002076e-06, 8.166999999996427e-06, 8.166000000003892e-06, 8.167000000003366e-06, 8.152999999996857e-06, 8.153000000003796e-06, 8.151999999997384e-06, 8.179999999996523e-06, 8.180999999995997e-06, 8.181000000002936e-06, 8.166999999996427e-06, 8.194000000003032e-06, 8.165999999996953e-06, 8.166999999996427e-06, 8.166999999996427e-06]</msg>
<status status="PASS" starttime="20201115 22:01:44.352" endtime="20201115 22:01:44.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.340" endtime="20201115 22:01:44.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.364" endtime="20201115 22:01:44.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.373" endtime="20201115 22:01:44.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.368" endtime="20201115 22:01:44.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.359" endtime="20201115 22:01:44.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.841" endtime="20201115 22:01:44.398"></status>
</kw>
<msg timestamp="20201115 22:01:44.399" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.422" endtime="20201115 22:01:44.444"></status>
</kw>
<msg timestamp="20201115 22:01:44.444" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.419" endtime="20201115 22:01:44.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.447" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.445" endtime="20201115 22:01:44.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.448" endtime="20201115 22:01:44.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.412" endtime="20201115 22:01:44.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.406" endtime="20201115 22:01:44.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.460" endtime="20201115 22:01:44.768"></status>
</kw>
<msg timestamp="20201115 22:01:44.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043791319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043799486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.458" endtime="20201115 22:01:44.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043791319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043799486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.778" endtime="20201115 22:01:44.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.796" endtime="20201115 22:01:44.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.455" endtime="20201115 22:01:44.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.452" endtime="20201115 22:01:44.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:44.818" level="INFO">${RESULT} = [{'time': 0.043799486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.166999999996427e-06, 'source_diff': 8.166999999996427e-06}, {'time': 0.043969, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:01:44.809" endtime="20201115 22:01:44.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:44.848" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:44.820" endtime="20201115 22:01:44.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.859" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:44.857" endtime="20201115 22:01:44.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.865" level="INFO">VALUE: [8.166999999996427e-06, 8.222000000002172e-06, 8.153000000003796e-06, 8.180000000003462e-06, 8.165999999996953e-06, 8.179999999996523e-06, 8.179999999996523e-06, 8.195000000002506e-06, 8.195000000002506e-06, 8.096999999998578e-06, 8.166999999996427e-06, 8.153000000003796e-06, 8.194000000003032e-06, 8.195000000002506e-06, 8.139000000004226e-06, 8.153000000003796e-06, 8.221999999995233e-06, 8.165999999996953e-06, 8.167000000003366e-06, 8.166000000003892e-06, 8.153000000003796e-06, 8.138999999997287e-06, 8.180999999995997e-06, 8.195000000002506e-06, 8.208000000002602e-06, 8.250000000001312e-06, 8.208000000002602e-06, 8.167000000003366e-06, 8.194000000003032e-06, 8.152999999996857e-06, 8.180000000003462e-06, 8.263999999993943e-06, 8.194000000003032e-06, 8.152999999996857e-06, 8.222000000002172e-06, 8.167000000003366e-06, 8.193999999996093e-06, 8.194999999995567e-06, 8.181000000002936e-06, 8.082999999999008e-06, 8.166999999996427e-06, 8.194000000003032e-06, 8.166999999996427e-06, 8.208000000002602e-06, 8.167000000003366e-06, 8.180999999995997e-06, 8.111999999997621e-06, 8.166000000003892e-06, 8.096999999998578e-06, 8.180000000003462e-06]</msg>
<status status="PASS" starttime="20201115 22:01:44.862" endtime="20201115 22:01:44.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.850" endtime="20201115 22:01:44.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.874" endtime="20201115 22:01:44.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.882" endtime="20201115 22:01:44.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.878" endtime="20201115 22:01:44.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.869" endtime="20201115 22:01:44.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.400" endtime="20201115 22:01:44.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.159" endtime="20201115 22:01:44.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.158" endtime="20201115 22:01:44.909"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.914" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.937" endtime="20201115 22:01:44.959"></status>
</kw>
<msg timestamp="20201115 22:01:44.960" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.934" endtime="20201115 22:01:44.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.966" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.962" endtime="20201115 22:01:44.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.969" endtime="20201115 22:01:44.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.926" endtime="20201115 22:01:44.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.920" endtime="20201115 22:01:44.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.993" endtime="20201115 22:01:45.337"></status>
</kw>
<msg timestamp="20201115 22:01:45.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048464903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048473347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.990" endtime="20201115 22:01:45.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048464903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048473347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.346" endtime="20201115 22:01:45.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.365" endtime="20201115 22:01:45.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.983" endtime="20201115 22:01:45.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.978" endtime="20201115 22:01:45.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:45.383" level="INFO">${RESULT} = [{'time': 0.048473347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.444000000003282e-06, 'source_diff': 8.444000000003282e-06}, {'time': 0.048649819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:45.374" endtime="20201115 22:01:45.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:45.413" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:45.385" endtime="20201115 22:01:45.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.425" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:45.422" endtime="20201115 22:01:45.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.430" level="INFO">VALUE: [8.444000000003282e-06, 8.374999999997967e-06, 8.403000000004046e-06, 8.430999999996247e-06, 8.402999999997107e-06, 8.388000000005003e-06, 8.402999999997107e-06, 8.374999999997967e-06, 8.388999999997537e-06, 8.388999999997537e-06, 8.388999999997537e-06, 8.416999999996677e-06, 8.389000000004476e-06, 8.388999999997537e-06, 8.431000000003186e-06, 8.430000000003712e-06, 8.389000000004476e-06, 8.388999999997537e-06, 8.388000000005003e-06, 8.388999999997537e-06, 8.388999999997537e-06, 8.388999999997537e-06, 8.402999999997107e-06, 8.403000000004046e-06, 8.389000000004476e-06, 8.403000000004046e-06, 8.387999999998064e-06, 8.333999999998731e-06, 8.374999999997967e-06, 8.388999999997537e-06, 8.389000000004476e-06, 8.401999999997634e-06, 8.402999999997107e-06, 8.374999999997967e-06, 8.402000000004572e-06, 8.374999999997967e-06, 8.388999999997537e-06, 8.360999999998397e-06, 8.374999999997967e-06, 8.416000000004142e-06, 8.429999999996773e-06, 8.388999999997537e-06, 8.444000000003282e-06, 8.389000000004476e-06, 8.388999999997537e-06, 8.401999999997634e-06, 8.388999999997537e-06, 8.402999999997107e-06, 8.389000000004476e-06, 8.388999999997537e-06]</msg>
<status status="PASS" starttime="20201115 22:01:45.427" endtime="20201115 22:01:45.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.415" endtime="20201115 22:01:45.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.439" endtime="20201115 22:01:45.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:45.447" endtime="20201115 22:01:45.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.443" endtime="20201115 22:01:45.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.434" endtime="20201115 22:01:45.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.915" endtime="20201115 22:01:45.473"></status>
</kw>
<msg timestamp="20201115 22:01:45.474" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.497" endtime="20201115 22:01:45.519"></status>
</kw>
<msg timestamp="20201115 22:01:45.520" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.494" endtime="20201115 22:01:45.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.527" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.522" endtime="20201115 22:01:45.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.529" endtime="20201115 22:01:45.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.486" endtime="20201115 22:01:45.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.480" endtime="20201115 22:01:45.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.553" endtime="20201115 22:01:45.893"></status>
</kw>
<msg timestamp="20201115 22:01:45.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043130542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043138931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.550" endtime="20201115 22:01:45.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043130542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043138931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.903" endtime="20201115 22:01:45.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.921" endtime="20201115 22:01:45.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.542" endtime="20201115 22:01:45.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.538" endtime="20201115 22:01:45.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:45.941" level="INFO">${RESULT} = [{'time': 0.043138931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.043314028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:45.931" endtime="20201115 22:01:45.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:45.971" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:45.943" endtime="20201115 22:01:45.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.983" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:45.980" endtime="20201115 22:01:45.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.988" level="INFO">VALUE: [8.388999999997537e-06, 8.402999999997107e-06, 8.403000000004046e-06, 8.431000000003186e-06, 8.387999999998064e-06, 8.444000000003282e-06, 8.318999999999688e-06, 8.374999999997967e-06, 8.347999999998301e-06, 8.402999999997107e-06, 8.402999999997107e-06, 8.416000000004142e-06, 8.402999999997107e-06, 8.401999999997634e-06, 8.375000000004906e-06, 8.374999999997967e-06, 8.402999999997107e-06, 8.347000000005766e-06, 8.429999999996773e-06, 8.429999999996773e-06, 8.375000000004906e-06, 8.360999999998397e-06, 8.457999999995913e-06, 8.375000000004906e-06, 8.374999999997967e-06, 8.388999999997537e-06, 8.402999999997107e-06, 8.389000000004476e-06, 8.457999999995913e-06, 8.389000000004476e-06, 8.388999999997537e-06, 8.402999999997107e-06, 8.431000000003186e-06, 8.374999999997967e-06, 8.415999999997203e-06, 8.333000000006197e-06, 8.389000000004476e-06, 8.360999999998397e-06, 8.443999999996343e-06, 8.347999999998301e-06, 8.402999999997107e-06, 8.416000000004142e-06, 8.415999999997203e-06, 8.403000000004046e-06, 8.416000000004142e-06, 8.375000000004906e-06, 8.388999999997537e-06, 8.402999999997107e-06, 8.388999999997537e-06, 8.388999999997537e-06]</msg>
<status status="PASS" starttime="20201115 22:01:45.985" endtime="20201115 22:01:45.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.973" endtime="20201115 22:01:45.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.997" endtime="20201115 22:01:46.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.006" endtime="20201115 22:01:46.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.001" endtime="20201115 22:01:46.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.993" endtime="20201115 22:01:46.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.475" endtime="20201115 22:01:46.032"></status>
</kw>
<msg timestamp="20201115 22:01:46.032" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.056" endtime="20201115 22:01:46.079"></status>
</kw>
<msg timestamp="20201115 22:01:46.080" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.052" endtime="20201115 22:01:46.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.087" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.083" endtime="20201115 22:01:46.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.089" endtime="20201115 22:01:46.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.045" endtime="20201115 22:01:46.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.039" endtime="20201115 22:01:46.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.113" endtime="20201115 22:01:46.453"></status>
</kw>
<msg timestamp="20201115 22:01:46.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044067653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044076056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.109" endtime="20201115 22:01:46.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044067653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044076056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.462" endtime="20201115 22:01:46.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.481" endtime="20201115 22:01:46.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.102" endtime="20201115 22:01:46.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.097" endtime="20201115 22:01:46.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:46.500" level="INFO">${RESULT} = [{'time': 0.044076056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.403000000004046e-06, 'source_diff': 8.403000000004046e-06}, {'time': 0.044258014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:46.491" endtime="20201115 22:01:46.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:46.531" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:46.502" endtime="20201115 22:01:46.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.542" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:46.539" endtime="20201115 22:01:46.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.547" level="INFO">VALUE: [8.403000000004046e-06, 8.402999999997107e-06, 8.388999999997537e-06, 8.333999999998731e-06, 8.389000000004476e-06, 8.374999999997967e-06, 8.388999999997537e-06, 8.416999999996677e-06, 8.402999999997107e-06, 8.388999999997537e-06, 8.402999999997107e-06, 8.403000000004046e-06, 8.388999999997537e-06, 8.360999999998397e-06, 8.402999999997107e-06, 8.374999999997967e-06, 8.389000000004476e-06, 8.416999999996677e-06, 8.387999999998064e-06, 8.388999999997537e-06, 8.388999999997537e-06, 8.402999999997107e-06, 8.388999999997537e-06, 8.374999999997967e-06, 8.388999999997537e-06, 8.332999999999258e-06, 8.445000000002756e-06, 8.403000000004046e-06, 8.389000000004476e-06, 8.429999999996773e-06, 8.388999999997537e-06, 8.375000000004906e-06, 8.346999999998828e-06, 8.333999999998731e-06, 8.388999999997537e-06, 8.346999999998828e-06, 8.374999999997967e-06, 8.401999999997634e-06, 8.360999999998397e-06, 8.387999999998064e-06, 8.415999999997203e-06, 8.473000000001896e-06, 8.457999999995913e-06, 8.403000000004046e-06, 8.416999999996677e-06, 8.444000000003282e-06, 8.374999999997967e-06, 8.457999999995913e-06, 8.389000000004476e-06, 8.403000000004046e-06]</msg>
<status status="PASS" starttime="20201115 22:01:46.544" endtime="20201115 22:01:46.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.532" endtime="20201115 22:01:46.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.556" endtime="20201115 22:01:46.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.565" endtime="20201115 22:01:46.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.560" endtime="20201115 22:01:46.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.552" endtime="20201115 22:01:46.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.033" endtime="20201115 22:01:46.591"></status>
</kw>
<msg timestamp="20201115 22:01:46.592" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.615" endtime="20201115 22:01:46.637"></status>
</kw>
<msg timestamp="20201115 22:01:46.638" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.612" endtime="20201115 22:01:46.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.645" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.641" endtime="20201115 22:01:46.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.647" endtime="20201115 22:01:46.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.604" endtime="20201115 22:01:46.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.598" endtime="20201115 22:01:46.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.671" endtime="20201115 22:01:47.011"></status>
</kw>
<msg timestamp="20201115 22:01:47.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043897681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043906097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.667" endtime="20201115 22:01:47.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043897681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043906097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.020" endtime="20201115 22:01:47.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.039" endtime="20201115 22:01:47.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.660" endtime="20201115 22:01:47.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.655" endtime="20201115 22:01:47.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:47.060" level="INFO">${RESULT} = [{'time': 0.043906097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.415999999997203e-06, 'source_diff': 8.415999999997203e-06}, {'time': 0.044080361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:47.051" endtime="20201115 22:01:47.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:47.091" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:47.062" endtime="20201115 22:01:47.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.102" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:47.099" endtime="20201115 22:01:47.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.107" level="INFO">VALUE: [8.415999999997203e-06, 8.402999999997107e-06, 8.374999999997967e-06, 8.402999999997107e-06, 8.401999999997634e-06, 8.389000000004476e-06, 8.402999999997107e-06, 8.430000000003712e-06, 8.402999999997107e-06, 8.388999999997537e-06, 8.389000000004476e-06, 8.374999999997967e-06, 8.374999999997967e-06, 8.402999999997107e-06, 8.374999999997967e-06, 8.443999999996343e-06, 8.389000000004476e-06, 8.389000000004476e-06, 8.444000000003282e-06, 8.388999999997537e-06, 8.375000000004906e-06, 8.430000000003712e-06, 8.360999999998397e-06, 8.402999999997107e-06, 8.388999999997537e-06, 8.389000000004476e-06, 8.360999999998397e-06, 8.360999999998397e-06, 8.375000000004906e-06, 8.375000000004906e-06, 8.417000000003616e-06, 8.403000000004046e-06, 8.388999999997537e-06, 8.374999999997967e-06, 8.389000000004476e-06, 8.361000000005336e-06, 8.375000000004906e-06, 8.375000000004906e-06, 8.430000000003712e-06, 8.375000000004906e-06, 8.402999999997107e-06, 8.416999999996677e-06, 8.402999999997107e-06, 8.401999999997634e-06, 8.388999999997537e-06, 8.332999999999258e-06, 8.389000000004476e-06, 8.443999999996343e-06, 8.361000000005336e-06, 8.388999999997537e-06]</msg>
<status status="PASS" starttime="20201115 22:01:47.104" endtime="20201115 22:01:47.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.092" endtime="20201115 22:01:47.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.121" endtime="20201115 22:01:47.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:47.129" endtime="20201115 22:01:47.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.125" endtime="20201115 22:01:47.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.116" endtime="20201115 22:01:47.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.593" endtime="20201115 22:01:47.155"></status>
</kw>
<msg timestamp="20201115 22:01:47.155" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.179" endtime="20201115 22:01:47.200"></status>
</kw>
<msg timestamp="20201115 22:01:47.202" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.175" endtime="20201115 22:01:47.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.208" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.204" endtime="20201115 22:01:47.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.210" endtime="20201115 22:01:47.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.168" endtime="20201115 22:01:47.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.162" endtime="20201115 22:01:47.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.234" endtime="20201115 22:01:47.575"></status>
</kw>
<msg timestamp="20201115 22:01:47.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043098597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043106986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.231" endtime="20201115 22:01:47.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043098597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043106986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.584" endtime="20201115 22:01:47.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.603" endtime="20201115 22:01:47.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.223" endtime="20201115 22:01:47.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.218" endtime="20201115 22:01:47.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:47.622" level="INFO">${RESULT} = [{'time': 0.043106986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.043291042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:47.613" endtime="20201115 22:01:47.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:47.653" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:47.624" endtime="20201115 22:01:47.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.664" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:47.662" endtime="20201115 22:01:47.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.669" level="INFO">VALUE: [8.388999999997537e-06, 8.375000000004906e-06, 8.458000000002852e-06, 8.403000000004046e-06, 8.360999999998397e-06, 8.361999999997871e-06, 8.401999999997634e-06, 8.387999999998064e-06, 8.332999999999258e-06, 8.416999999996677e-06, 8.388999999997537e-06, 8.401999999997634e-06, 8.389000000004476e-06, 8.387999999998064e-06, 8.415999999997203e-06, 8.374999999997967e-06, 8.403000000004046e-06, 8.389000000004476e-06, 8.389000000004476e-06, 8.417000000003616e-06, 8.403000000004046e-06, 8.388999999997537e-06, 8.374999999997967e-06, 8.402999999997107e-06, 8.402999999997107e-06, 8.389000000004476e-06, 8.402999999997107e-06, 8.403000000004046e-06, 8.403000000004046e-06, 8.388999999997537e-06, 8.403000000004046e-06, 8.347999999998301e-06, 8.389000000004476e-06, 8.389000000004476e-06, 8.333999999998731e-06, 8.305000000000118e-06, 8.374999999997967e-06, 8.388999999997537e-06, 8.388999999997537e-06, 8.333999999998731e-06, 8.387999999998064e-06, 8.403000000004046e-06, 8.431000000003186e-06, 8.403000000004046e-06, 8.402999999997107e-06, 8.415999999997203e-06, 8.444000000003282e-06, 8.443999999996343e-06, 8.431000000003186e-06, 8.444999999995817e-06]</msg>
<status status="PASS" starttime="20201115 22:01:47.666" endtime="20201115 22:01:47.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.655" endtime="20201115 22:01:47.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.679" endtime="20201115 22:01:47.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:47.688" endtime="20201115 22:01:47.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.683" endtime="20201115 22:01:47.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.675" endtime="20201115 22:01:47.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.157" endtime="20201115 22:01:47.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.911" endtime="20201115 22:01:47.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.910" endtime="20201115 22:01:47.714"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.719" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.744" endtime="20201115 22:01:47.767"></status>
</kw>
<msg timestamp="20201115 22:01:47.768" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.740" endtime="20201115 22:01:47.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.774" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.770" endtime="20201115 22:01:47.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.777" endtime="20201115 22:01:47.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.733" endtime="20201115 22:01:47.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.726" endtime="20201115 22:01:47.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.801" endtime="20201115 22:01:48.099"></status>
</kw>
<msg timestamp="20201115 22:01:48.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049572917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049581528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.797" endtime="20201115 22:01:48.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049572917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049581528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.109" endtime="20201115 22:01:48.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.128" endtime="20201115 22:01:48.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.790" endtime="20201115 22:01:48.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.785" endtime="20201115 22:01:48.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:48.146" level="INFO">${RESULT} = [{'time': 0.049581528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.049775333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:48.137" endtime="20201115 22:01:48.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:48.176" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:48.148" endtime="20201115 22:01:48.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.187" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:48.185" endtime="20201115 22:01:48.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.194" level="INFO">VALUE: [8.610999999998648e-06, 8.596999999999078e-06, 8.597999999998551e-06, 8.596999999999078e-06, 8.555000000000368e-06, 8.583999999998981e-06, 8.610999999998648e-06, 8.596999999999078e-06, 8.527000000001228e-06, 8.597000000006016e-06, 8.569999999999411e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.597999999998551e-06, 8.583000000006447e-06, 8.610999999998648e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.582999999999508e-06, 8.597999999998551e-06, 8.596999999999078e-06, 8.582999999999508e-06, 8.597999999998551e-06, 8.555999999999842e-06, 8.569999999999411e-06, 8.610999999998648e-06, 8.610999999998648e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.582999999999508e-06, 8.597000000006016e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.597000000006016e-06, 8.541000000000798e-06, 8.638999999997787e-06, 8.596999999999078e-06, 8.680999999996497e-06, 8.625000000005156e-06, 8.583999999998981e-06, 8.583999999998981e-06, 8.638999999997787e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.528000000000702e-06, 8.582999999999508e-06]</msg>
<status status="PASS" starttime="20201115 22:01:48.190" endtime="20201115 22:01:48.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.178" endtime="20201115 22:01:48.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.203" endtime="20201115 22:01:48.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.211" endtime="20201115 22:01:48.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.207" endtime="20201115 22:01:48.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.198" endtime="20201115 22:01:48.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.720" endtime="20201115 22:01:48.237"></status>
</kw>
<msg timestamp="20201115 22:01:48.237" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.261" endtime="20201115 22:01:48.283"></status>
</kw>
<msg timestamp="20201115 22:01:48.285" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.257" endtime="20201115 22:01:48.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.291" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.287" endtime="20201115 22:01:48.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.293" endtime="20201115 22:01:48.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.250" endtime="20201115 22:01:48.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.244" endtime="20201115 22:01:48.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.317" endtime="20201115 22:01:48.658"></status>
</kw>
<msg timestamp="20201115 22:01:48.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043435639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043444236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.314" endtime="20201115 22:01:48.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043435639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043444236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.667" endtime="20201115 22:01:48.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.686" endtime="20201115 22:01:48.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.306" endtime="20201115 22:01:48.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.301" endtime="20201115 22:01:48.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:48.705" level="INFO">${RESULT} = [{'time': 0.043444236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.043634097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:48.696" endtime="20201115 22:01:48.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:48.736" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:48.707" endtime="20201115 22:01:48.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.748" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:48.746" endtime="20201115 22:01:48.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.753" level="INFO">VALUE: [8.596999999999078e-06, 8.527999999993763e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.610999999998648e-06, 8.596999999999078e-06, 8.568999999999938e-06, 8.665999999997454e-06, 8.610999999998648e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.528000000000702e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.610999999998648e-06, 8.58400000000592e-06, 8.638999999997787e-06, 8.555000000000368e-06, 8.583999999998981e-06, 8.583999999998981e-06, 8.583999999998981e-06, 8.583000000006447e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.610999999998648e-06, 8.596999999999078e-06, 8.582999999999508e-06, 8.610999999998648e-06, 8.596999999999078e-06, 8.569999999999411e-06, 8.513000000001658e-06, 8.582999999999508e-06, 8.611000000005586e-06, 8.528000000000702e-06, 8.596999999999078e-06, 8.610999999998648e-06, 8.555000000000368e-06, 8.610999999998648e-06, 8.582999999999508e-06, 8.542000000000272e-06, 8.596999999999078e-06, 8.624999999998217e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.583000000006447e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.61200000000506e-06, 8.582999999999508e-06]</msg>
<status status="PASS" starttime="20201115 22:01:48.750" endtime="20201115 22:01:48.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.739" endtime="20201115 22:01:48.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.762" endtime="20201115 22:01:48.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.771" endtime="20201115 22:01:48.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.766" endtime="20201115 22:01:48.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.758" endtime="20201115 22:01:48.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.239" endtime="20201115 22:01:48.796"></status>
</kw>
<msg timestamp="20201115 22:01:48.797" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.820" endtime="20201115 22:01:48.843"></status>
</kw>
<msg timestamp="20201115 22:01:48.844" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.817" endtime="20201115 22:01:48.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.850" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.846" endtime="20201115 22:01:48.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.853" endtime="20201115 22:01:48.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.810" endtime="20201115 22:01:48.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.804" endtime="20201115 22:01:48.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.876" endtime="20201115 22:01:49.216"></status>
</kw>
<msg timestamp="20201115 22:01:49.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043337236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043345819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.873" endtime="20201115 22:01:49.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043337236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043345819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.226" endtime="20201115 22:01:49.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.244" endtime="20201115 22:01:49.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.866" endtime="20201115 22:01:49.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.861" endtime="20201115 22:01:49.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:49.266" level="INFO">${RESULT} = [{'time': 0.043345819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.043530903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:49.256" endtime="20201115 22:01:49.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:49.296" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:49.268" endtime="20201115 22:01:49.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.308" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:49.305" endtime="20201115 22:01:49.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.313" level="INFO">VALUE: [8.582999999999508e-06, 8.611000000005586e-06, 8.610999999998648e-06, 8.568999999999938e-06, 8.624999999998217e-06, 8.666000000004392e-06, 8.596999999999078e-06, 8.610999999998648e-06, 8.597999999998551e-06, 8.542000000000272e-06, 8.59800000000549e-06, 8.555999999999842e-06, 8.639000000004726e-06, 8.582999999999508e-06, 8.610999999998648e-06, 8.638999999997787e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.582999999999508e-06, 8.542000000000272e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.58400000000592e-06, 8.582999999999508e-06, 8.583999999998981e-06, 8.596999999999078e-06, 8.555999999999842e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.624999999998217e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.568999999999938e-06, 8.597000000006016e-06, 8.596999999999078e-06, 8.569999999999411e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.555000000000368e-06, 8.653000000004296e-06, 8.583999999998981e-06, 8.555000000000368e-06, 8.568999999999938e-06]</msg>
<status status="PASS" starttime="20201115 22:01:49.310" endtime="20201115 22:01:49.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.298" endtime="20201115 22:01:49.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.322" endtime="20201115 22:01:49.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:49.331" endtime="20201115 22:01:49.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.326" endtime="20201115 22:01:49.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.317" endtime="20201115 22:01:49.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.798" endtime="20201115 22:01:49.356"></status>
</kw>
<msg timestamp="20201115 22:01:49.357" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.380" endtime="20201115 22:01:49.403"></status>
</kw>
<msg timestamp="20201115 22:01:49.404" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.377" endtime="20201115 22:01:49.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.411" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.406" endtime="20201115 22:01:49.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.413" endtime="20201115 22:01:49.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.369" endtime="20201115 22:01:49.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.363" endtime="20201115 22:01:49.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.437" endtime="20201115 22:01:49.779"></status>
</kw>
<msg timestamp="20201115 22:01:49.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0432425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043251083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:49.433" endtime="20201115 22:01:49.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0432425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043251083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:49.788" endtime="20201115 22:01:49.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.807" endtime="20201115 22:01:49.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.426" endtime="20201115 22:01:49.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.421" endtime="20201115 22:01:49.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:49.827" level="INFO">${RESULT} = [{'time': 0.043251083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.043445111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:49.818" endtime="20201115 22:01:49.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:49.857" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:49.829" endtime="20201115 22:01:49.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.868" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:49.866" endtime="20201115 22:01:49.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.874" level="INFO">VALUE: [8.582999999999508e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.528000000000702e-06, 8.610999999998648e-06, 8.582999999999508e-06, 8.59800000000549e-06, 8.596999999999078e-06, 8.665999999997454e-06, 8.58400000000592e-06, 8.59800000000549e-06, 8.596999999999078e-06, 8.610999999998648e-06, 8.639000000004726e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.582999999999508e-06, 8.597999999998551e-06, 8.667000000003866e-06, 8.568999999999938e-06, 8.555999999999842e-06, 8.610999999998648e-06, 8.596999999999078e-06, 8.58400000000592e-06, 8.596999999999078e-06, 8.528000000000702e-06, 8.596999999999078e-06, 8.583999999998981e-06, 8.610999999998648e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.583999999998981e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.61200000000506e-06, 8.583999999998981e-06, 8.596999999999078e-06, 8.555000000000368e-06, 8.596999999999078e-06, 8.582999999999508e-06]</msg>
<status status="PASS" starttime="20201115 22:01:49.871" endtime="20201115 22:01:49.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.859" endtime="20201115 22:01:49.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.883" endtime="20201115 22:01:49.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:49.891" endtime="20201115 22:01:49.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.887" endtime="20201115 22:01:49.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.878" endtime="20201115 22:01:49.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.358" endtime="20201115 22:01:49.917"></status>
</kw>
<msg timestamp="20201115 22:01:49.918" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.941" endtime="20201115 22:01:49.963"></status>
</kw>
<msg timestamp="20201115 22:01:49.965" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.937" endtime="20201115 22:01:49.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.971" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.967" endtime="20201115 22:01:49.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.973" endtime="20201115 22:01:49.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.930" endtime="20201115 22:01:49.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.924" endtime="20201115 22:01:49.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.997" endtime="20201115 22:01:50.338"></status>
</kw>
<msg timestamp="20201115 22:01:50.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04315075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043159333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:49.994" endtime="20201115 22:01:50.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04315075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043159333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:50.348" endtime="20201115 22:01:50.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.367" endtime="20201115 22:01:50.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.986" endtime="20201115 22:01:50.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.981" endtime="20201115 22:01:50.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.386" level="INFO">${RESULT} = [{'time': 0.043159333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.043349417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:50.377" endtime="20201115 22:01:50.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:50.416" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:50.388" endtime="20201115 22:01:50.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.428" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:50.425" endtime="20201115 22:01:50.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.433" level="INFO">VALUE: [8.582999999999508e-06, 8.597999999998551e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.583999999998981e-06, 8.596999999999078e-06, 8.680000000003962e-06, 8.582999999999508e-06, 8.583000000006447e-06, 8.624999999998217e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.568999999999938e-06, 8.624999999998217e-06, 8.610999999998648e-06, 8.625000000005156e-06, 8.597999999998551e-06, 8.596999999999078e-06, 8.542000000000272e-06, 8.514000000001132e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.555999999999842e-06, 8.666999999996927e-06, 8.583999999998981e-06, 8.596999999999078e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.569999999999411e-06, 8.624999999998217e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.666000000004392e-06, 8.569999999999411e-06, 8.583999999998981e-06, 8.596999999999078e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.58400000000592e-06]</msg>
<status status="PASS" starttime="20201115 22:01:50.430" endtime="20201115 22:01:50.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.418" endtime="20201115 22:01:50.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.442" endtime="20201115 22:01:50.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.451" endtime="20201115 22:01:50.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.446" endtime="20201115 22:01:50.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.437" endtime="20201115 22:01:50.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.919" endtime="20201115 22:01:50.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.717" endtime="20201115 22:01:50.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.715" endtime="20201115 22:01:50.478"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.483" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.507" endtime="20201115 22:01:50.531"></status>
</kw>
<msg timestamp="20201115 22:01:50.532" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.504" endtime="20201115 22:01:50.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.538" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.534" endtime="20201115 22:01:50.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.540" endtime="20201115 22:01:50.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.496" endtime="20201115 22:01:50.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.490" endtime="20201115 22:01:50.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.565" endtime="20201115 22:01:50.921"></status>
</kw>
<msg timestamp="20201115 22:01:50.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050739708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050748528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.562" endtime="20201115 22:01:50.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050739708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050748528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.931" endtime="20201115 22:01:50.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.950" endtime="20201115 22:01:50.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.554" endtime="20201115 22:01:50.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.549" endtime="20201115 22:01:50.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.969" level="INFO">${RESULT} = [{'time': 0.050748528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.050951278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:50.959" endtime="20201115 22:01:50.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:51.001" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:50.971" endtime="20201115 22:01:51.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.013" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:51.010" endtime="20201115 22:01:51.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.018" level="INFO">VALUE: [8.819999999999661e-06, 8.819999999999661e-06, 8.791000000001048e-06, 8.889000000004976e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.805000000000618e-06, 8.804999999993679e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.819999999999661e-06, 8.804999999993679e-06, 8.819000000000188e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.791000000001048e-06, 8.750000000001812e-06, 8.790999999994109e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.860999999998898e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.846999999999328e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.832999999999758e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.832999999999758e-06, 8.833000000006697e-06, 8.819000000000188e-06, 8.805000000000618e-06, 8.805000000000618e-06, 8.805000000000618e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.806000000000092e-06]</msg>
<status status="PASS" starttime="20201115 22:01:51.015" endtime="20201115 22:01:51.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.003" endtime="20201115 22:01:51.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.028" endtime="20201115 22:01:51.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.037" endtime="20201115 22:01:51.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.032" endtime="20201115 22:01:51.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.023" endtime="20201115 22:01:51.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.484" endtime="20201115 22:01:51.063"></status>
</kw>
<msg timestamp="20201115 22:01:51.064" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.091" endtime="20201115 22:01:51.114"></status>
</kw>
<msg timestamp="20201115 22:01:51.115" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.085" endtime="20201115 22:01:51.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.123" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.118" endtime="20201115 22:01:51.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.125" endtime="20201115 22:01:51.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.077" endtime="20201115 22:01:51.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.071" endtime="20201115 22:01:51.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.151" endtime="20201115 22:01:51.502"></status>
</kw>
<msg timestamp="20201115 22:01:51.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047729583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047738361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.147" endtime="20201115 22:01:51.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047729583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047738361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.513" endtime="20201115 22:01:51.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.532" endtime="20201115 22:01:51.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.139" endtime="20201115 22:01:51.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.134" endtime="20201115 22:01:51.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:51.555" level="INFO">${RESULT} = [{'time': 0.047738361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.047940917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:51.546" endtime="20201115 22:01:51.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:51.587" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:51.558" endtime="20201115 22:01:51.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.599" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:51.597" endtime="20201115 22:01:51.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.605" level="INFO">VALUE: [8.778000000000952e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.832999999999758e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.791999999993583e-06, 8.792000000000522e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.833999999999231e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.792000000000522e-06, 8.819999999999661e-06, 8.819999999999661e-06, 8.846999999999328e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.750000000001812e-06, 8.832999999999758e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.806000000000092e-06, 8.887999999998564e-06, 8.792000000000522e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.888999999998037e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.832999999999758e-06, 8.860999999998898e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.750000000001812e-06, 8.819000000000188e-06, 8.832999999999758e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.819000000000188e-06, 8.805000000000618e-06, 8.888999999998037e-06]</msg>
<status status="PASS" starttime="20201115 22:01:51.602" endtime="20201115 22:01:51.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.589" endtime="20201115 22:01:51.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.615" endtime="20201115 22:01:51.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.624" endtime="20201115 22:01:51.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.619" endtime="20201115 22:01:51.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.610" endtime="20201115 22:01:51.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.065" endtime="20201115 22:01:51.650"></status>
</kw>
<msg timestamp="20201115 22:01:51.650" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.676" endtime="20201115 22:01:51.699"></status>
</kw>
<msg timestamp="20201115 22:01:51.701" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.671" endtime="20201115 22:01:51.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.708" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.703" endtime="20201115 22:01:51.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.710" endtime="20201115 22:01:51.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.664" endtime="20201115 22:01:51.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.657" endtime="20201115 22:01:51.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.735" endtime="20201115 22:01:52.096"></status>
</kw>
<msg timestamp="20201115 22:01:52.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045930611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045939417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.732" endtime="20201115 22:01:52.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045930611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045939417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.106" endtime="20201115 22:01:52.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.125" endtime="20201115 22:01:52.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.724" endtime="20201115 22:01:52.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.719" endtime="20201115 22:01:52.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.145" level="INFO">${RESULT} = [{'time': 0.045939417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.046134472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:52.136" endtime="20201115 22:01:52.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.177" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:52.148" endtime="20201115 22:01:52.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.189" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:52.187" endtime="20201115 22:01:52.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.195" level="INFO">VALUE: [8.806000000000092e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.860999999998898e-06, 8.805000000000618e-06, 8.860999999998898e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.805000000000618e-06, 8.750000000001812e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.832999999999758e-06, 8.819999999999661e-06, 8.736000000002242e-06, 8.819999999999661e-06, 8.875000000005406e-06, 8.874999999998467e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.874999999998467e-06, 8.819999999999661e-06, 8.791999999993583e-06, 8.875000000005406e-06, 8.806000000000092e-06, 8.737000000001716e-06, 8.763999999994443e-06, 8.819999999999661e-06, 8.833999999999231e-06, 8.847000000006267e-06, 8.875000000005406e-06, 8.806000000000092e-06, 8.888999999998037e-06, 8.819000000000188e-06, 8.846999999999328e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.792000000000522e-06, 8.819000000000188e-06, 8.819000000000188e-06]</msg>
<status status="PASS" starttime="20201115 22:01:52.191" endtime="20201115 22:01:52.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.179" endtime="20201115 22:01:52.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.204" endtime="20201115 22:01:52.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.213" endtime="20201115 22:01:52.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.209" endtime="20201115 22:01:52.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.199" endtime="20201115 22:01:52.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.652" endtime="20201115 22:01:52.240"></status>
</kw>
<msg timestamp="20201115 22:01:52.245" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.271" endtime="20201115 22:01:52.294"></status>
</kw>
<msg timestamp="20201115 22:01:52.295" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.267" endtime="20201115 22:01:52.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.302" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.298" endtime="20201115 22:01:52.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.304" endtime="20201115 22:01:52.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.259" endtime="20201115 22:01:52.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.253" endtime="20201115 22:01:52.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.329" endtime="20201115 22:01:52.692"></status>
</kw>
<msg timestamp="20201115 22:01:52.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051156875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051165708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.326" endtime="20201115 22:01:52.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051156875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051165708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.702" endtime="20201115 22:01:52.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.721" endtime="20201115 22:01:52.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.318" endtime="20201115 22:01:52.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.313" endtime="20201115 22:01:52.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.741" level="INFO">${RESULT} = [{'time': 0.051165708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.051372, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:01:52.732" endtime="20201115 22:01:52.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.773" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:52.744" endtime="20201115 22:01:52.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.785" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:52.783" endtime="20201115 22:01:52.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.791" level="INFO">VALUE: [8.832999999999758e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.860999999998898e-06, 8.833000000006697e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.791000000001048e-06, 8.832999999999758e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.860999999998898e-06, 8.833999999999231e-06, 8.805000000000618e-06, 8.763000000001908e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.805000000000618e-06, 8.832999999999758e-06, 8.805000000000618e-06, 8.819000000000188e-06, 8.875000000005406e-06, 8.846999999999328e-06, 8.888999999998037e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.805000000000618e-06, 8.847999999998801e-06, 8.833999999999231e-06, 8.832999999999758e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.750000000001812e-06, 8.875000000005406e-06, 8.832999999999758e-06, 8.791000000001048e-06]</msg>
<status status="PASS" starttime="20201115 22:01:52.788" endtime="20201115 22:01:52.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.775" endtime="20201115 22:01:52.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.801" endtime="20201115 22:01:52.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.810" endtime="20201115 22:01:52.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.806" endtime="20201115 22:01:52.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.796" endtime="20201115 22:01:52.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.247" endtime="20201115 22:01:52.837"></status>
</kw>
<msg timestamp="20201115 22:01:52.837" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.862" endtime="20201115 22:01:52.886"></status>
</kw>
<msg timestamp="20201115 22:01:52.887" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.858" endtime="20201115 22:01:52.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.894" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.890" endtime="20201115 22:01:52.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.897" endtime="20201115 22:01:52.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.851" endtime="20201115 22:01:52.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.844" endtime="20201115 22:01:52.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.922" endtime="20201115 22:01:53.284"></status>
</kw>
<msg timestamp="20201115 22:01:53.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045675736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045684542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.918" endtime="20201115 22:01:53.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045675736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045684542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.294" endtime="20201115 22:01:53.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.313" endtime="20201115 22:01:53.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.910" endtime="20201115 22:01:53.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.905" endtime="20201115 22:01:53.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:53.334" level="INFO">${RESULT} = [{'time': 0.045684542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.045892111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:53.324" endtime="20201115 22:01:53.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:53.366" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:53.336" endtime="20201115 22:01:53.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.377" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:53.375" endtime="20201115 22:01:53.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.383" level="INFO">VALUE: [8.806000000000092e-06, 8.805000000000618e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.804999999993679e-06, 8.805000000000618e-06, 8.833999999999231e-06, 8.860999999998898e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.805000000000618e-06, 8.791000000001048e-06, 8.874999999998467e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.832999999999758e-06, 8.791999999993583e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.860999999998898e-06, 8.806000000000092e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.819000000000188e-06, 8.832999999999758e-06, 8.791000000001048e-06, 8.819999999999661e-06, 8.804999999993679e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.790999999994109e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.805000000000618e-06, 8.819000000000188e-06, 8.805000000000618e-06, 8.819000000000188e-06, 8.819999999999661e-06]</msg>
<status status="PASS" starttime="20201115 22:01:53.380" endtime="20201115 22:01:53.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.367" endtime="20201115 22:01:53.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.393" endtime="20201115 22:01:53.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.402" endtime="20201115 22:01:53.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.398" endtime="20201115 22:01:53.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.388" endtime="20201115 22:01:53.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.839" endtime="20201115 22:01:53.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.481" endtime="20201115 22:01:53.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.479" endtime="20201115 22:01:53.430"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.435" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.459" endtime="20201115 22:01:53.484"></status>
</kw>
<msg timestamp="20201115 22:01:53.485" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.456" endtime="20201115 22:01:53.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.492" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.488" endtime="20201115 22:01:53.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.494" endtime="20201115 22:01:53.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.448" endtime="20201115 22:01:53.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.442" endtime="20201115 22:01:53.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.519" endtime="20201115 22:01:53.887"></status>
</kw>
<msg timestamp="20201115 22:01:53.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051366458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051375472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.516" endtime="20201115 22:01:53.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051366458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051375472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.897" endtime="20201115 22:01:53.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.916" endtime="20201115 22:01:53.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.508" endtime="20201115 22:01:53.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.503" endtime="20201115 22:01:53.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:53.935" level="INFO">${RESULT} = [{'time': 0.051375472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.051591097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:53.925" endtime="20201115 22:01:53.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:53.966" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:53.937" endtime="20201115 22:01:53.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.978" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:53.976" endtime="20201115 22:01:53.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.985" level="INFO">VALUE: [9.014000000001632e-06, 9.014000000001632e-06, 8.973000000002396e-06, 8.986000000002492e-06, 9.000000000002062e-06, 9.027000000001728e-06, 8.985999999995553e-06, 8.986000000002492e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.958000000003352e-06, 9.041000000001298e-06, 9.013999999994693e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.999999999995123e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.013999999994693e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.944000000003782e-06, 8.999999999995123e-06, 9.000000000002062e-06, 8.959000000002826e-06, 9.014000000001632e-06, 8.986000000002492e-06, 9.014000000001632e-06, 9.01299999999522e-06, 9.014000000001632e-06, 8.985999999995553e-06, 9.014000000001632e-06, 9.013000000002158e-06, 8.985999999995553e-06, 8.986000000002492e-06, 9.014000000001632e-06, 8.944000000003782e-06, 8.985999999995553e-06, 9.013999999994693e-06, 9.055000000000868e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.000000000002062e-06, 8.986000000002492e-06, 8.985999999995553e-06, 9.000000000002062e-06]</msg>
<status status="PASS" starttime="20201115 22:01:53.980" endtime="20201115 22:01:53.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.968" endtime="20201115 22:01:53.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.994" endtime="20201115 22:01:53.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.003" endtime="20201115 22:01:54.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.998" endtime="20201115 22:01:54.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.989" endtime="20201115 22:01:54.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.436" endtime="20201115 22:01:54.030"></status>
</kw>
<msg timestamp="20201115 22:01:54.030" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.055" endtime="20201115 22:01:54.079"></status>
</kw>
<msg timestamp="20201115 22:01:54.080" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.051" endtime="20201115 22:01:54.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.087" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.083" endtime="20201115 22:01:54.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.089" endtime="20201115 22:01:54.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.044" endtime="20201115 22:01:54.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.037" endtime="20201115 22:01:54.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.114" endtime="20201115 22:01:54.474"></status>
</kw>
<msg timestamp="20201115 22:01:54.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045452986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045462014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.111" endtime="20201115 22:01:54.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045452986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045462014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.479" endtime="20201115 22:01:54.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.487" endtime="20201115 22:01:54.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.103" endtime="20201115 22:01:54.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.098" endtime="20201115 22:01:54.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.497" level="INFO">${RESULT} = [{'time': 0.045462014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.045678681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:54.492" endtime="20201115 22:01:54.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.510" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:54.498" endtime="20201115 22:01:54.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.516" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:54.515" endtime="20201115 22:01:54.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.519" level="INFO">VALUE: [9.028000000001202e-06, 9.014000000001632e-06, 9.014000000001632e-06, 8.958999999995887e-06, 8.985999999995553e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.041000000001298e-06, 9.014000000001632e-06, 8.999999999995123e-06, 9.014000000001632e-06, 8.999999999995123e-06, 9.028000000001202e-06, 9.014000000001632e-06, 9.014000000001632e-06, 8.987000000001966e-06, 9.000000000002062e-06, 9.069000000000438e-06, 9.014000000001632e-06, 8.985999999995553e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.042000000000772e-06, 8.999999999995123e-06, 9.000000000002062e-06, 9.02699999999479e-06, 9.014000000001632e-06, 8.985999999995553e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.014000000001632e-06, 9.041000000001298e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.000000000002062e-06, 8.999999999995123e-06, 9.014000000001632e-06, 9.014000000001632e-06, 9.013999999994693e-06, 8.973000000002396e-06, 9.042000000000772e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.056000000000342e-06, 9.014000000001632e-06, 9.013999999994693e-06]</msg>
<status status="PASS" starttime="20201115 22:01:54.517" endtime="20201115 22:01:54.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.512" endtime="20201115 22:01:54.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.523" endtime="20201115 22:01:54.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.527" endtime="20201115 22:01:54.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.525" endtime="20201115 22:01:54.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.521" endtime="20201115 22:01:54.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.032" endtime="20201115 22:01:54.549"></status>
</kw>
<msg timestamp="20201115 22:01:54.549" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.561" endtime="20201115 22:01:54.582"></status>
</kw>
<msg timestamp="20201115 22:01:54.583" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.559" endtime="20201115 22:01:54.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.586" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.584" endtime="20201115 22:01:54.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.587" endtime="20201115 22:01:54.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.555" endtime="20201115 22:01:54.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.553" endtime="20201115 22:01:54.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.599" endtime="20201115 22:01:54.955"></status>
</kw>
<msg timestamp="20201115 22:01:54.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026016958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026025972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.597" endtime="20201115 22:01:54.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026016958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026025972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.965" endtime="20201115 22:01:54.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.984" endtime="20201115 22:01:54.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.593" endtime="20201115 22:01:54.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.591" endtime="20201115 22:01:54.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.004" level="INFO">${RESULT} = [{'time': 0.026025972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.026236167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:54.995" endtime="20201115 22:01:55.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:55.037" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:55.007" endtime="20201115 22:01:55.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.049" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:55.046" endtime="20201115 22:01:55.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.055" level="INFO">VALUE: [9.014000000001632e-06, 9.000000000002062e-06, 8.957999999999883e-06, 9.014000000001632e-06, 8.985999999999023e-06, 8.999999999998592e-06, 9.041000000001298e-06, 9.068999999996968e-06, 9.013000000002158e-06, 9.000000000002062e-06, 8.985999999999023e-06, 8.999999999998592e-06, 9.000000000002062e-06, 9.013999999998162e-06, 9.013999999998162e-06, 9.014000000001632e-06, 9.041000000001298e-06, 9.042000000000772e-06, 8.971999999999453e-06, 9.000000000002062e-06, 8.985999999999023e-06, 9.028000000001202e-06, 8.987000000001966e-06, 9.012999999998689e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.013999999994693e-06, 9.013000000002158e-06, 8.972000000002922e-06, 9.069000000000438e-06, 9.01299999999522e-06, 9.055000000000868e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.958000000003352e-06, 9.000000000002062e-06, 8.957999999996413e-06, 9.014000000001632e-06, 9.042000000000772e-06, 9.014000000001632e-06, 9.013999999994693e-06, 9.028000000001202e-06, 9.042000000000772e-06]</msg>
<status status="PASS" starttime="20201115 22:01:55.051" endtime="20201115 22:01:55.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.039" endtime="20201115 22:01:55.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.064" endtime="20201115 22:01:55.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.073" endtime="20201115 22:01:55.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.068" endtime="20201115 22:01:55.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.059" endtime="20201115 22:01:55.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.550" endtime="20201115 22:01:55.100"></status>
</kw>
<msg timestamp="20201115 22:01:55.100" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.125" endtime="20201115 22:01:55.149"></status>
</kw>
<msg timestamp="20201115 22:01:55.150" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.121" endtime="20201115 22:01:55.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.157" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.153" endtime="20201115 22:01:55.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.159" endtime="20201115 22:01:55.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.113" endtime="20201115 22:01:55.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.107" endtime="20201115 22:01:55.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.184" endtime="20201115 22:01:55.556"></status>
</kw>
<msg timestamp="20201115 22:01:55.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045415167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045424167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.181" endtime="20201115 22:01:55.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045415167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045424167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.566" endtime="20201115 22:01:55.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.586" endtime="20201115 22:01:55.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.173" endtime="20201115 22:01:55.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.168" endtime="20201115 22:01:55.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.606" level="INFO">${RESULT} = [{'time': 0.045424167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.000000000002062e-06, 'source_diff': 9.000000000002062e-06}, {'time': 0.045637069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:55.596" endtime="20201115 22:01:55.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:55.638" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:55.608" endtime="20201115 22:01:55.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.651" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:55.648" endtime="20201115 22:01:55.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.657" level="INFO">VALUE: [9.000000000002062e-06, 9.000000000002062e-06, 9.013999999994693e-06, 8.986000000002492e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.028000000001202e-06, 9.014000000001632e-06, 9.028000000001202e-06, 8.945000000003256e-06, 9.027999999994263e-06, 8.999999999995123e-06, 9.014000000001632e-06, 9.056000000000342e-06, 8.985999999995553e-06, 9.000000000002062e-06, 9.014000000001632e-06, 8.944000000003782e-06, 8.986000000002492e-06, 8.985999999995553e-06, 9.013999999994693e-06, 9.069000000000438e-06, 9.01299999999522e-06, 9.013000000002158e-06, 9.014000000001632e-06, 9.000000000002062e-06, 8.986000000002492e-06, 9.000000000002062e-06, 9.014000000001632e-06, 8.972000000002922e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.014000000001632e-06, 9.014000000001632e-06, 8.985999999995553e-06, 9.014000000001632e-06, 8.986000000002492e-06, 9.000000000002062e-06, 9.013999999994693e-06, 9.014000000001632e-06, 9.028000000001202e-06, 9.013999999994693e-06, 8.999999999995123e-06, 8.999999999995123e-06, 8.971999999995983e-06, 9.097999999999051e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.000000000002062e-06]</msg>
<status status="PASS" starttime="20201115 22:01:55.653" endtime="20201115 22:01:55.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.640" endtime="20201115 22:01:55.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.667" endtime="20201115 22:01:55.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.676" endtime="20201115 22:01:55.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.671" endtime="20201115 22:01:55.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.662" endtime="20201115 22:01:55.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.101" endtime="20201115 22:01:55.703"></status>
</kw>
<msg timestamp="20201115 22:01:55.704" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.730" endtime="20201115 22:01:55.755"></status>
</kw>
<msg timestamp="20201115 22:01:55.756" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.727" endtime="20201115 22:01:55.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.763" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.758" endtime="20201115 22:01:55.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.765" endtime="20201115 22:01:55.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.719" endtime="20201115 22:01:55.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.712" endtime="20201115 22:01:55.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.790" endtime="20201115 22:01:56.153"></status>
</kw>
<msg timestamp="20201115 22:01:56.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048512139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048521139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.786" endtime="20201115 22:01:56.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048512139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048521139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.163" endtime="20201115 22:01:56.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.181" endtime="20201115 22:01:56.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.779" endtime="20201115 22:01:56.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.774" endtime="20201115 22:01:56.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.203" level="INFO">${RESULT} = [{'time': 0.048521139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.999999999995123e-06, 'source_diff': 8.999999999995123e-06}, {'time': 0.048735722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:56.193" endtime="20201115 22:01:56.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.233" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:56.205" endtime="20201115 22:01:56.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.244" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:56.242" endtime="20201115 22:01:56.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.249" level="INFO">VALUE: [8.999999999995123e-06, 8.958000000003352e-06, 9.000000000002062e-06, 8.973000000002396e-06, 9.040999999994359e-06, 9.028000000001202e-06, 8.930999999996747e-06, 9.014000000001632e-06, 9.013999999994693e-06, 9.014000000001632e-06, 9.069999999999911e-06, 9.013000000002158e-06, 9.014000000001632e-06, 8.972999999995457e-06, 9.000000000002062e-06, 9.042000000000772e-06, 9.013999999994693e-06, 8.999999999995123e-06, 9.000000000002062e-06, 9.083999999999481e-06, 8.986000000002492e-06, 9.056000000000342e-06, 9.014000000001632e-06, 9.014000000001632e-06, 9.028000000001202e-06, 8.972999999995457e-06, 8.985999999995553e-06, 9.013999999994693e-06, 8.999999999995123e-06, 9.042000000000772e-06, 9.028000000001202e-06, 9.000000000002062e-06, 9.014000000001632e-06, 8.985999999995553e-06, 9.056000000000342e-06, 8.986000000002492e-06, 9.028000000001202e-06, 9.000000000002062e-06, 9.028000000001202e-06, 9.028000000001202e-06, 9.014000000001632e-06, 9.028000000001202e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.027999999994263e-06, 9.028000000001202e-06, 8.958000000003352e-06, 8.986000000002492e-06, 8.999999999995123e-06]</msg>
<status status="PASS" starttime="20201115 22:01:56.246" endtime="20201115 22:01:56.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.235" endtime="20201115 22:01:56.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.259" endtime="20201115 22:01:56.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.267" endtime="20201115 22:01:56.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.263" endtime="20201115 22:01:56.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.254" endtime="20201115 22:01:56.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.705" endtime="20201115 22:01:56.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.432" endtime="20201115 22:01:56.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.431" endtime="20201115 22:01:56.294"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.298" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.322" endtime="20201115 22:01:56.345"></status>
</kw>
<msg timestamp="20201115 22:01:56.347" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.318" endtime="20201115 22:01:56.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.353" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.349" endtime="20201115 22:01:56.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.355" endtime="20201115 22:01:56.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.311" endtime="20201115 22:01:56.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.305" endtime="20201115 22:01:56.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.379" endtime="20201115 22:01:56.721"></status>
</kw>
<msg timestamp="20201115 22:01:56.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048401417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048410653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.376" endtime="20201115 22:01:56.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048401417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048410653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.730" endtime="20201115 22:01:56.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.749" endtime="20201115 22:01:56.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.369" endtime="20201115 22:01:56.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.364" endtime="20201115 22:01:56.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.766" level="INFO">${RESULT} = [{'time': 0.048410653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.235999999995803e-06, 'source_diff': 9.235999999995803e-06}, {'time': 0.048642306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:56.757" endtime="20201115 22:01:56.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.796" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:56.768" endtime="20201115 22:01:56.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.809" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:56.806" endtime="20201115 22:01:56.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.814" level="INFO">VALUE: [9.235999999995803e-06, 9.237000000002216e-06, 9.179999999997523e-06, 9.250000000002312e-06, 9.236000000002742e-06, 9.236000000002742e-06, 9.208000000003602e-06, 9.221999999996233e-06, 9.221999999996233e-06, 9.195000000003506e-06, 9.250000000002312e-06, 9.235999999995803e-06, 9.236000000002742e-06, 9.249999999995373e-06, 9.236000000002742e-06, 9.208000000003602e-06, 9.222000000003172e-06, 9.250000000002312e-06, 9.237000000002216e-06, 9.222000000003172e-06, 9.207999999996663e-06, 9.222000000003172e-06, 9.235999999995803e-06, 9.249999999995373e-06, 9.221999999996233e-06, 9.222000000003172e-06, 9.292000000001022e-06, 9.208999999996137e-06, 9.207999999996663e-06, 9.236999999995277e-06, 9.235999999995803e-06, 9.236000000002742e-06, 9.236000000002742e-06, 9.236000000002742e-06, 9.264000000001882e-06, 9.195000000003506e-06, 9.223000000002646e-06, 9.236000000002742e-06, 9.207999999996663e-06, 9.249999999995373e-06, 9.221999999996233e-06, 9.235999999995803e-06, 9.221999999996233e-06, 9.237000000002216e-06, 9.235999999995803e-06, 9.222999999995707e-06, 9.278000000001452e-06, 9.223000000002646e-06, 9.222000000003172e-06, 9.207999999996663e-06]</msg>
<status status="PASS" starttime="20201115 22:01:56.811" endtime="20201115 22:01:56.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.798" endtime="20201115 22:01:56.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.823" endtime="20201115 22:01:56.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.832" endtime="20201115 22:01:56.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.827" endtime="20201115 22:01:56.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.819" endtime="20201115 22:01:56.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.299" endtime="20201115 22:01:56.857"></status>
</kw>
<msg timestamp="20201115 22:01:56.858" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.881" endtime="20201115 22:01:56.905"></status>
</kw>
<msg timestamp="20201115 22:01:56.907" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.878" endtime="20201115 22:01:56.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.914" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.909" endtime="20201115 22:01:56.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.916" endtime="20201115 22:01:56.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.870" endtime="20201115 22:01:56.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.865" endtime="20201115 22:01:56.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.939" endtime="20201115 22:01:57.299"></status>
</kw>
<msg timestamp="20201115 22:01:57.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042773931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042783097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.936" endtime="20201115 22:01:57.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042773931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042783097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.309" endtime="20201115 22:01:57.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.328" endtime="20201115 22:01:57.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.929" endtime="20201115 22:01:57.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.924" endtime="20201115 22:01:57.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.349" level="INFO">${RESULT} = [{'time': 0.042783097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.165999999997954e-06, 'source_diff': 9.165999999997954e-06}, {'time': 0.043004319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:57.339" endtime="20201115 22:01:57.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:57.380" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:57.351" endtime="20201115 22:01:57.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.392" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:57.390" endtime="20201115 22:01:57.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.398" level="INFO">VALUE: [9.165999999997954e-06, 9.235999999995803e-06, 9.221999999996233e-06, 9.209000000003076e-06, 9.237000000002216e-06, 9.250000000002312e-06, 9.250000000002312e-06, 9.236000000002742e-06, 9.181000000003936e-06, 9.236000000002742e-06, 9.236000000002742e-06, 9.222000000003172e-06, 9.221999999996233e-06, 9.153000000004796e-06, 9.222000000003172e-06, 9.236000000002742e-06, 9.250000000002312e-06, 9.208000000003602e-06, 9.180999999996997e-06, 9.152999999997857e-06, 9.221999999996233e-06, 9.207999999996663e-06, 9.222000000003172e-06, 9.207999999996663e-06, 9.292000000001022e-06, 9.223000000002646e-06, 9.236000000002742e-06, 9.250000000002312e-06, 9.250000000002312e-06, 9.221999999996233e-06, 9.236000000002742e-06, 9.249999999995373e-06, 9.222000000003172e-06, 9.236000000002742e-06, 9.235999999995803e-06, 9.222000000003172e-06, 9.235999999995803e-06, 9.222000000003172e-06, 9.194000000004032e-06, 9.223000000002646e-06, 9.221999999996233e-06, 9.152999999997857e-06, 9.208000000003602e-06, 9.223000000002646e-06, 9.291000000001548e-06, 9.223000000002646e-06, 9.221999999996233e-06, 9.249999999995373e-06, 9.235999999995803e-06, 9.221999999996233e-06]</msg>
<status status="PASS" starttime="20201115 22:01:57.395" endtime="20201115 22:01:57.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.382" endtime="20201115 22:01:57.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.408" endtime="20201115 22:01:57.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.417" endtime="20201115 22:01:57.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.412" endtime="20201115 22:01:57.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.403" endtime="20201115 22:01:57.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.859" endtime="20201115 22:01:57.443"></status>
</kw>
<msg timestamp="20201115 22:01:57.444" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.474" endtime="20201115 22:01:57.498"></status>
</kw>
<msg timestamp="20201115 22:01:57.499" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.465" endtime="20201115 22:01:57.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.506" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.501" endtime="20201115 22:01:57.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.508" endtime="20201115 22:01:57.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.457" endtime="20201115 22:01:57.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.451" endtime="20201115 22:01:57.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.533" endtime="20201115 22:01:57.886"></status>
</kw>
<msg timestamp="20201115 22:01:57.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050515097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050524347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.529" endtime="20201115 22:01:57.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050515097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050524347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.895" endtime="20201115 22:01:57.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.903" endtime="20201115 22:01:57.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.522" endtime="20201115 22:01:57.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.517" endtime="20201115 22:01:57.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.912" level="INFO">${RESULT} = [{'time': 0.050524347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.249999999995373e-06, 'source_diff': 9.249999999995373e-06}, {'time': 0.050752625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:57.908" endtime="20201115 22:01:57.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:57.925" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:57.913" endtime="20201115 22:01:57.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.931" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:57.930" endtime="20201115 22:01:57.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.933" level="INFO">VALUE: [9.249999999995373e-06, 9.222000000003172e-06, 9.264000000001882e-06, 9.249999999995373e-06, 9.223000000002646e-06, 9.249999999995373e-06, 9.236000000002742e-06, 9.264000000001882e-06, 9.235999999995803e-06, 9.236000000002742e-06, 9.207999999996663e-06, 9.236000000002742e-06, 9.306000000000592e-06, 9.208999999996137e-06, 9.235999999995803e-06, 9.235999999995803e-06, 9.193999999997093e-06, 9.236000000002742e-06, 9.207999999996663e-06, 9.236000000002742e-06, 9.221999999996233e-06, 9.236000000002742e-06, 9.223000000002646e-06, 9.236000000002742e-06, 9.235999999995803e-06, 9.235999999995803e-06, 9.250000000002312e-06, 9.250000000002312e-06, 9.236000000002742e-06, 9.236000000002742e-06, 9.221999999996233e-06, 9.222000000003172e-06, 9.208000000003602e-06, 9.236000000002742e-06, 9.291000000001548e-06, 9.207999999996663e-06, 9.235999999995803e-06, 9.250000000002312e-06, 9.236000000002742e-06, 9.235999999995803e-06, 9.235999999995803e-06, 9.249999999995373e-06, 9.250000000002312e-06, 9.222999999995707e-06, 9.236000000002742e-06, 9.208999999996137e-06, 9.209000000003076e-06, 9.221999999996233e-06, 9.194999999996567e-06, 9.235999999995803e-06]</msg>
<status status="PASS" starttime="20201115 22:01:57.932" endtime="20201115 22:01:57.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.926" endtime="20201115 22:01:57.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.938" endtime="20201115 22:01:57.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.942" endtime="20201115 22:01:57.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.940" endtime="20201115 22:01:57.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.935" endtime="20201115 22:01:57.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.445" endtime="20201115 22:01:57.963"></status>
</kw>
<msg timestamp="20201115 22:01:57.964" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.975" endtime="20201115 22:01:57.997"></status>
</kw>
<msg timestamp="20201115 22:01:57.998" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.973" endtime="20201115 22:01:57.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.001" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.999" endtime="20201115 22:01:58.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.002" endtime="20201115 22:01:58.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.970" endtime="20201115 22:01:58.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.967" endtime="20201115 22:01:58.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.013" endtime="20201115 22:01:58.338"></status>
</kw>
<msg timestamp="20201115 22:01:58.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026254708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026263931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.012" endtime="20201115 22:01:58.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026254708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026263931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.347" endtime="20201115 22:01:58.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.365" endtime="20201115 22:01:58.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.008" endtime="20201115 22:01:58.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.006" endtime="20201115 22:01:58.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.387" level="INFO">${RESULT} = [{'time': 0.026263931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.222999999999176e-06, 'source_diff': 9.222999999999176e-06}, {'time': 0.026486417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:58.378" endtime="20201115 22:01:58.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.417" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:58.389" endtime="20201115 22:01:58.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.428" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:58.426" endtime="20201115 22:01:58.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.434" level="INFO">VALUE: [9.222999999999176e-06, 9.181000000000467e-06, 9.235999999999273e-06, 9.236000000002742e-06, 9.305000000001118e-06, 9.222999999999176e-06, 9.152999999997857e-06, 9.208000000000133e-06, 9.235999999999273e-06, 9.237000000002216e-06, 9.179999999997523e-06, 9.319000000000688e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.195000000000036e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.222999999999176e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.235999999999273e-06, 9.223000000002646e-06, 9.222000000003172e-06, 9.222999999995707e-06, 9.221999999996233e-06, 9.278000000001452e-06, 9.235999999995803e-06, 9.181000000003936e-06, 9.194999999996567e-06, 9.221999999996233e-06, 9.194000000004032e-06, 9.222999999995707e-06, 9.236999999995277e-06, 9.194999999996567e-06, 9.221999999996233e-06, 9.236000000002742e-06, 9.208000000003602e-06, 9.222000000003172e-06, 9.236000000002742e-06, 9.249999999995373e-06, 9.236000000002742e-06, 9.221999999996233e-06, 9.208000000003602e-06, 9.236000000002742e-06, 9.223000000002646e-06, 9.221999999996233e-06, 9.235999999995803e-06, 9.250000000002312e-06, 9.222000000003172e-06]</msg>
<status status="PASS" starttime="20201115 22:01:58.431" endtime="20201115 22:01:58.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.419" endtime="20201115 22:01:58.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.444" endtime="20201115 22:01:58.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.452" endtime="20201115 22:01:58.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.448" endtime="20201115 22:01:58.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.439" endtime="20201115 22:01:58.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.964" endtime="20201115 22:01:58.478"></status>
</kw>
<msg timestamp="20201115 22:01:58.479" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.502" endtime="20201115 22:01:58.527"></status>
</kw>
<msg timestamp="20201115 22:01:58.528" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.498" endtime="20201115 22:01:58.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.535" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.531" endtime="20201115 22:01:58.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.537" endtime="20201115 22:01:58.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.491" endtime="20201115 22:01:58.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.485" endtime="20201115 22:01:58.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.561" endtime="20201115 22:01:58.902"></status>
</kw>
<msg timestamp="20201115 22:01:58.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043716875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043726111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.557" endtime="20201115 22:01:58.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043716875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043726111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.911" endtime="20201115 22:01:58.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.930" endtime="20201115 22:01:58.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.550" endtime="20201115 22:01:58.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.545" endtime="20201115 22:01:58.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.949" level="INFO">${RESULT} = [{'time': 0.043726111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.235999999995803e-06, 'source_diff': 9.235999999995803e-06}, {'time': 0.04394525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:58.940" endtime="20201115 22:01:58.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.980" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:58.951" endtime="20201115 22:01:58.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.991" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:58.989" endtime="20201115 22:01:58.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.996" level="INFO">VALUE: [9.235999999995803e-06, 9.249999999995373e-06, 9.223000000002646e-06, 9.236000000002742e-06, 9.250000000002312e-06, 9.222999999995707e-06, 9.166999999997427e-06, 9.250000000002312e-06, 9.194999999996567e-06, 9.236000000002742e-06, 9.250000000002312e-06, 9.263999999994943e-06, 9.237000000002216e-06, 9.236000000002742e-06, 9.221999999996233e-06, 9.223000000002646e-06, 9.209000000003076e-06, 9.236000000002742e-06, 9.250000000002312e-06, 9.209000000003076e-06, 9.222000000003172e-06, 9.209000000003076e-06, 9.235999999995803e-06, 9.235999999995803e-06, 9.223000000002646e-06, 9.249999999995373e-06, 9.208000000003602e-06, 9.292000000001022e-06, 9.222000000003172e-06, 9.165999999997954e-06, 9.222000000003172e-06, 9.235999999995803e-06, 9.292000000001022e-06, 9.221999999996233e-06, 9.235999999995803e-06, 9.208000000003602e-06, 9.320000000000161e-06, 9.222000000003172e-06, 9.249999999995373e-06, 9.222000000003172e-06, 9.222000000003172e-06, 9.209000000003076e-06, 9.278000000001452e-06, 9.222000000003172e-06, 9.222999999995707e-06, 9.193999999997093e-06, 9.222000000003172e-06, 9.223000000002646e-06, 9.236000000002742e-06, 9.222000000003172e-06]</msg>
<status status="PASS" starttime="20201115 22:01:58.993" endtime="20201115 22:01:58.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.982" endtime="20201115 22:01:58.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.006" endtime="20201115 22:01:59.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.015" endtime="20201115 22:01:59.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.010" endtime="20201115 22:01:59.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.001" endtime="20201115 22:01:59.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.480" endtime="20201115 22:01:59.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.296" endtime="20201115 22:01:59.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.294" endtime="20201115 22:01:59.041"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.046" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.070" endtime="20201115 22:01:59.094"></status>
</kw>
<msg timestamp="20201115 22:01:59.096" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.066" endtime="20201115 22:01:59.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.102" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.098" endtime="20201115 22:01:59.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.104" endtime="20201115 22:01:59.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.059" endtime="20201115 22:01:59.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.053" endtime="20201115 22:01:59.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.128" endtime="20201115 22:01:59.471"></status>
</kw>
<msg timestamp="20201115 22:01:59.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048667708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048677125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.125" endtime="20201115 22:01:59.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048667708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048677125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.481" endtime="20201115 22:01:59.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.499" endtime="20201115 22:01:59.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.118" endtime="20201115 22:01:59.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.113" endtime="20201115 22:01:59.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.517" level="INFO">${RESULT} = [{'time': 0.048677125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.417000000004616e-06, 'source_diff': 9.417000000004616e-06}, {'time': 0.048914097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:59.508" endtime="20201115 22:01:59.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.548" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:59.519" endtime="20201115 22:01:59.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.559" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:59.557" endtime="20201115 22:01:59.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.565" level="INFO">VALUE: [9.417000000004616e-06, 9.429999999997773e-06, 9.402999999998107e-06, 9.430000000004712e-06, 9.415999999998204e-06, 9.458000000003852e-06, 9.431000000004186e-06, 9.429999999997773e-06, 9.415999999998204e-06, 9.416999999997677e-06, 9.389000000005476e-06, 9.417000000004616e-06, 9.431000000004186e-06, 9.430999999997247e-06, 9.402000000005573e-06, 9.416000000005142e-06, 9.486000000002992e-06, 9.401999999998634e-06, 9.415999999998204e-06, 9.374999999998967e-06, 9.443999999997343e-06, 9.416999999997677e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.416000000005142e-06, 9.430000000004712e-06, 9.444999999996817e-06, 9.417000000004616e-06, 9.401999999998634e-06, 9.431000000004186e-06, 9.417000000004616e-06, 9.402999999998107e-06, 9.415999999998204e-06, 9.430999999997247e-06, 9.430999999997247e-06, 9.416999999997677e-06, 9.389000000005476e-06, 9.417000000004616e-06, 9.415999999998204e-06, 9.415999999998204e-06, 9.430999999997247e-06, 9.417000000004616e-06, 9.417000000004616e-06, 9.430999999997247e-06, 9.416999999997677e-06, 9.415999999998204e-06, 9.417000000004616e-06, 9.416999999997677e-06, 9.416999999997677e-06, 9.416999999997677e-06]</msg>
<status status="PASS" starttime="20201115 22:01:59.561" endtime="20201115 22:01:59.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.550" endtime="20201115 22:01:59.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.574" endtime="20201115 22:01:59.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.583" endtime="20201115 22:01:59.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.578" endtime="20201115 22:01:59.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.570" endtime="20201115 22:01:59.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.047" endtime="20201115 22:01:59.609"></status>
</kw>
<msg timestamp="20201115 22:01:59.609" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.633" endtime="20201115 22:01:59.657"></status>
</kw>
<msg timestamp="20201115 22:01:59.659" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.629" endtime="20201115 22:01:59.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.665" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.661" endtime="20201115 22:01:59.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.667" endtime="20201115 22:01:59.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.622" endtime="20201115 22:01:59.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.616" endtime="20201115 22:01:59.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.691" endtime="20201115 22:02:00.034"></status>
</kw>
<msg timestamp="20201115 22:02:00.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043371264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043380667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.688" endtime="20201115 22:02:00.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043371264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043380667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.043" endtime="20201115 22:02:00.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.062" endtime="20201115 22:02:00.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.680" endtime="20201115 22:02:00.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.676" endtime="20201115 22:02:00.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.081" level="INFO">${RESULT} = [{'time': 0.043380667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.043624083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:00.072" endtime="20201115 22:02:00.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.111" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:00.083" endtime="20201115 22:02:00.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.123" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:02:00.121" endtime="20201115 22:02:00.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.129" level="INFO">VALUE: [9.402999999998107e-06, 9.401999999998634e-06, 9.402999999998107e-06, 9.403000000005046e-06, 9.429999999997773e-06, 9.415999999998204e-06, 9.429999999997773e-06, 9.471999999996483e-06, 9.472999999995957e-06, 9.443999999997343e-06, 9.402999999998107e-06, 9.458999999996387e-06, 9.458000000003852e-06, 9.429999999997773e-06, 9.472999999995957e-06, 9.416999999997677e-06, 9.444000000004282e-06, 9.387999999999064e-06, 9.487000000002466e-06, 9.417000000004616e-06, 9.416999999997677e-06, 9.417000000004616e-06, 9.415999999998204e-06, 9.430999999997247e-06, 9.430000000004712e-06, 9.429999999997773e-06, 9.416999999997677e-06, 9.431000000004186e-06, 9.430999999997247e-06, 9.431000000004186e-06, 9.415999999998204e-06, 9.416999999997677e-06, 9.416999999997677e-06, 9.458000000003852e-06, 9.430999999997247e-06, 9.430000000004712e-06, 9.416999999997677e-06, 9.431000000004186e-06, 9.416999999997677e-06, 9.416999999997677e-06, 9.417000000004616e-06, 9.402999999998107e-06, 9.415999999998204e-06, 9.403000000005046e-06, 9.417000000004616e-06, 9.430999999997247e-06, 9.415999999998204e-06, 9.402999999998107e-06, 9.417000000004616e-06, 9.431000000004186e-06]</msg>
<status status="PASS" starttime="20201115 22:02:00.126" endtime="20201115 22:02:00.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.114" endtime="20201115 22:02:00.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.138" endtime="20201115 22:02:00.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.146" endtime="20201115 22:02:00.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.142" endtime="20201115 22:02:00.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.133" endtime="20201115 22:02:00.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.610" endtime="20201115 22:02:00.172"></status>
</kw>
<msg timestamp="20201115 22:02:00.173" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.196" endtime="20201115 22:02:00.221"></status>
</kw>
<msg timestamp="20201115 22:02:00.222" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.193" endtime="20201115 22:02:00.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.228" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.224" endtime="20201115 22:02:00.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.230" endtime="20201115 22:02:00.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.185" endtime="20201115 22:02:00.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.179" endtime="20201115 22:02:00.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.254" endtime="20201115 22:02:00.594"></status>
</kw>
<msg timestamp="20201115 22:02:00.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043212347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043221764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.251" endtime="20201115 22:02:00.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043212347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043221764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.603" endtime="20201115 22:02:00.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.621" endtime="20201115 22:02:00.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.243" endtime="20201115 22:02:00.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.239" endtime="20201115 22:02:00.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.643" level="INFO">${RESULT} = [{'time': 0.043221764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.417000000004616e-06, 'source_diff': 9.417000000004616e-06}, {'time': 0.043463931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:00.634" endtime="20201115 22:02:00.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.674" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:00.645" endtime="20201115 22:02:00.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.685" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:02:00.683" endtime="20201115 22:02:00.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.690" level="INFO">VALUE: [9.417000000004616e-06, 9.416999999997677e-06, 9.416999999997677e-06, 9.472000000003422e-06, 9.430999999997247e-06, 9.431000000004186e-06, 9.416999999997677e-06, 9.416999999997677e-06, 9.402999999998107e-06, 9.430000000004712e-06, 9.417000000004616e-06, 9.417000000004616e-06, 9.445000000003756e-06, 9.415999999998204e-06, 9.417000000004616e-06, 9.444000000004282e-06, 9.416999999997677e-06, 9.430999999997247e-06, 9.430999999997247e-06, 9.429999999997773e-06, 9.417000000004616e-06, 9.416999999997677e-06, 9.417000000004616e-06, 9.430999999997247e-06, 9.416999999997677e-06, 9.416999999997677e-06, 9.415999999998204e-06, 9.417000000004616e-06, 9.416999999997677e-06, 9.416999999997677e-06, 9.374999999998967e-06, 9.417000000004616e-06, 9.458999999996387e-06, 9.416999999997677e-06, 9.402999999998107e-06, 9.374999999998967e-06, 9.415999999998204e-06, 9.444000000004282e-06, 9.402999999998107e-06, 9.417000000004616e-06, 9.417000000004616e-06, 9.416999999997677e-06, 9.430000000004712e-06, 9.402999999998107e-06, 9.458999999996387e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.416999999997677e-06]</msg>
<status status="PASS" starttime="20201115 22:02:00.687" endtime="20201115 22:02:00.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.676" endtime="20201115 22:02:00.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.699" endtime="20201115 22:02:00.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.708" endtime="20201115 22:02:00.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.703" endtime="20201115 22:02:00.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.695" endtime="20201115 22:02:00.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.174" endtime="20201115 22:02:00.734"></status>
</kw>
<msg timestamp="20201115 22:02:00.734" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.758" endtime="20201115 22:02:00.783"></status>
</kw>
<msg timestamp="20201115 22:02:00.784" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.754" endtime="20201115 22:02:00.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.790" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.786" endtime="20201115 22:02:00.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.793" endtime="20201115 22:02:00.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.747" endtime="20201115 22:02:00.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.741" endtime="20201115 22:02:00.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.818" endtime="20201115 22:02:01.159"></status>
</kw>
<msg timestamp="20201115 22:02:01.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043936861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043946278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.814" endtime="20201115 22:02:01.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043936861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043946278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.169" endtime="20201115 22:02:01.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.188" endtime="20201115 22:02:01.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.806" endtime="20201115 22:02:01.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.801" endtime="20201115 22:02:01.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.207" level="INFO">${RESULT} = [{'time': 0.043946278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.416999999997677e-06, 'source_diff': 9.416999999997677e-06}, {'time': 0.044180542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:01.198" endtime="20201115 22:02:01.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:01.238" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:01.209" endtime="20201115 22:02:01.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.249" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:02:01.246" endtime="20201115 22:02:01.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.254" level="INFO">VALUE: [9.416999999997677e-06, 9.431000000004186e-06, 9.431000000004186e-06, 9.471999999996483e-06, 9.472000000003422e-06, 9.417000000004616e-06, 9.360999999999398e-06, 9.417000000004616e-06, 9.429999999997773e-06, 9.430000000004712e-06, 9.458000000003852e-06, 9.430999999997247e-06, 9.416999999997677e-06, 9.430999999997247e-06, 9.430999999997247e-06, 9.375000000005906e-06, 9.416999999997677e-06, 9.417000000004616e-06, 9.416999999997677e-06, 9.444000000004282e-06, 9.416999999997677e-06, 9.416000000005142e-06, 9.429999999997773e-06, 9.445000000003756e-06, 9.443999999997343e-06, 9.403000000005046e-06, 9.458000000003852e-06, 9.416999999997677e-06, 9.430000000004712e-06, 9.430000000004712e-06, 9.430999999997247e-06, 9.431000000004186e-06, 9.416000000005142e-06, 9.415999999998204e-06, 9.487000000002466e-06, 9.417000000004616e-06, 9.445000000003756e-06, 9.417000000004616e-06, 9.429999999997773e-06, 9.416999999997677e-06, 9.401999999998634e-06, 9.431000000004186e-06, 9.417000000004616e-06, 9.360999999999398e-06, 9.430999999997247e-06, 9.430000000004712e-06, 9.416999999997677e-06, 9.443999999997343e-06, 9.401999999998634e-06, 9.444999999996817e-06]</msg>
<status status="PASS" starttime="20201115 22:02:01.251" endtime="20201115 22:02:01.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.239" endtime="20201115 22:02:01.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.263" endtime="20201115 22:02:01.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:01.272" endtime="20201115 22:02:01.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.267" endtime="20201115 22:02:01.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.259" endtime="20201115 22:02:01.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.735" endtime="20201115 22:02:01.297"></status>
</kw>
<msg timestamp="20201115 22:02:01.298" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.321" endtime="20201115 22:02:01.345"></status>
</kw>
<msg timestamp="20201115 22:02:01.345" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.318" endtime="20201115 22:02:01.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.348" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.346" endtime="20201115 22:02:01.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.349" endtime="20201115 22:02:01.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.311" endtime="20201115 22:02:01.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.305" endtime="20201115 22:02:01.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.361" endtime="20201115 22:02:01.698"></status>
</kw>
<msg timestamp="20201115 22:02:01.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043236361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043245806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.359" endtime="20201115 22:02:01.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043236361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043245806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.708" endtime="20201115 22:02:01.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.727" endtime="20201115 22:02:01.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.356" endtime="20201115 22:02:01.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.353" endtime="20201115 22:02:01.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.746" level="INFO">${RESULT} = [{'time': 0.043245806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.444999999996817e-06, 'source_diff': 9.444999999996817e-06}, {'time': 0.043487347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:01.737" endtime="20201115 22:02:01.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:01.777" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:01.748" endtime="20201115 22:02:01.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.788" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:02:01.786" endtime="20201115 22:02:01.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.794" level="INFO">VALUE: [9.444999999996817e-06, 9.360999999999398e-06, 9.416999999997677e-06, 9.430999999997247e-06, 9.430999999997247e-06, 9.415999999998204e-06, 9.402999999998107e-06, 9.388999999998537e-06, 9.403000000005046e-06, 9.374999999998967e-06, 9.430999999997247e-06, 9.417000000004616e-06, 9.444999999996817e-06, 9.429999999997773e-06, 9.429999999997773e-06, 9.416999999997677e-06, 9.429999999997773e-06, 9.430999999997247e-06, 9.429999999997773e-06, 9.388999999998537e-06, 9.403000000005046e-06, 9.429999999997773e-06, 9.431000000004186e-06, 9.389000000005476e-06, 9.388999999998537e-06, 9.375000000005906e-06, 9.429999999997773e-06, 9.416999999997677e-06, 9.431000000004186e-06, 9.431000000004186e-06, 9.402999999998107e-06, 9.430999999997247e-06, 9.444000000004282e-06, 9.375000000005906e-06, 9.430000000004712e-06, 9.403000000005046e-06, 9.416999999997677e-06, 9.401999999998634e-06, 9.416999999997677e-06, 9.417000000004616e-06, 9.430999999997247e-06, 9.445000000003756e-06, 9.429999999997773e-06, 9.430000000004712e-06, 9.416999999997677e-06, 9.402999999998107e-06, 9.443999999997343e-06, 9.429999999997773e-06, 9.416999999997677e-06, 9.415999999998204e-06]</msg>
<status status="PASS" starttime="20201115 22:02:01.790" endtime="20201115 22:02:01.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.779" endtime="20201115 22:02:01.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.803" endtime="20201115 22:02:01.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:01.811" endtime="20201115 22:02:01.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.807" endtime="20201115 22:02:01.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.798" endtime="20201115 22:02:01.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.299" endtime="20201115 22:02:01.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.044" endtime="20201115 22:02:01.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.042" endtime="20201115 22:02:01.838"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.844" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.868" endtime="20201115 22:02:01.894"></status>
</kw>
<msg timestamp="20201115 22:02:01.895" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.865" endtime="20201115 22:02:01.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.901" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.897" endtime="20201115 22:02:01.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.903" endtime="20201115 22:02:01.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.857" endtime="20201115 22:02:01.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.851" endtime="20201115 22:02:01.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.928" endtime="20201115 22:02:02.270"></status>
</kw>
<msg timestamp="20201115 22:02:02.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050649986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050659639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.925" endtime="20201115 22:02:02.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050649986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050659639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.279" endtime="20201115 22:02:02.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.298" endtime="20201115 22:02:02.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.917" endtime="20201115 22:02:02.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.913" endtime="20201115 22:02:02.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.315" level="INFO">${RESULT} = [{'time': 0.050659639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.050910083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:02.306" endtime="20201115 22:02:02.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.346" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:02.317" endtime="20201115 22:02:02.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.357" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:02:02.355" endtime="20201115 22:02:02.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.363" level="INFO">VALUE: [9.652999999998357e-06, 9.638999999998787e-06, 9.666999999997927e-06, 9.652999999998357e-06, 9.638999999998787e-06, 9.653000000005296e-06, 9.638999999998787e-06, 9.652999999998357e-06, 9.624999999999218e-06, 9.637999999999314e-06, 9.625000000006156e-06, 9.652999999998357e-06, 9.639000000005726e-06, 9.638999999998787e-06, 9.652999999998357e-06, 9.652999999998357e-06, 9.639000000005726e-06, 9.667000000004866e-06, 9.638999999998787e-06, 9.653000000005296e-06, 9.638999999998787e-06, 9.610999999999648e-06, 9.679999999998024e-06, 9.638999999998787e-06, 9.652999999998357e-06, 9.680000000004962e-06, 9.639000000005726e-06, 9.652999999998357e-06, 9.610999999999648e-06, 9.610999999999648e-06, 9.666999999997927e-06, 9.651999999998884e-06, 9.597999999999551e-06, 9.638999999998787e-06, 9.652999999998357e-06, 9.652999999998357e-06, 9.638999999998787e-06, 9.624999999999218e-06, 9.638999999998787e-06, 9.583000000000508e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.652999999998357e-06, 9.653000000005296e-06, 9.652999999998357e-06, 9.653000000005296e-06, 9.638999999998787e-06, 9.653000000005296e-06, 9.652999999998357e-06, 9.665999999991515e-06]</msg>
<status status="PASS" starttime="20201115 22:02:02.359" endtime="20201115 22:02:02.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.348" endtime="20201115 22:02:02.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.372" endtime="20201115 22:02:02.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.380" endtime="20201115 22:02:02.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.376" endtime="20201115 22:02:02.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.367" endtime="20201115 22:02:02.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.845" endtime="20201115 22:02:02.406"></status>
</kw>
<msg timestamp="20201115 22:02:02.406" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.430" endtime="20201115 22:02:02.455"></status>
</kw>
<msg timestamp="20201115 22:02:02.456" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.426" endtime="20201115 22:02:02.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.464" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.459" endtime="20201115 22:02:02.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.466" endtime="20201115 22:02:02.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.419" endtime="20201115 22:02:02.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.413" endtime="20201115 22:02:02.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.490" endtime="20201115 22:02:02.830"></status>
</kw>
<msg timestamp="20201115 22:02:02.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043504694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043514333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.486" endtime="20201115 22:02:02.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043504694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043514333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.840" endtime="20201115 22:02:02.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.858" endtime="20201115 22:02:02.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.479" endtime="20201115 22:02:02.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.474" endtime="20201115 22:02:02.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.880" level="INFO">${RESULT} = [{'time': 0.043514333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.639000000005726e-06, 'source_diff': 9.639000000005726e-06}, {'time': 0.043761236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:02.871" endtime="20201115 22:02:02.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.983" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:02.882" endtime="20201115 22:02:02.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.994" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:02:02.992" endtime="20201115 22:02:02.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.999" level="INFO">VALUE: [9.639000000005726e-06, 9.624999999999218e-06, 9.624999999999218e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.707999999997163e-06, 9.638999999998787e-06, 9.624999999999218e-06, 9.638999999998787e-06, 9.624999999999218e-06, 9.652999999998357e-06, 9.652999999998357e-06, 9.638999999998787e-06, 9.639000000005726e-06, 9.666999999997927e-06, 9.639000000005726e-06, 9.652999999998357e-06, 9.624999999999218e-06, 9.638999999998787e-06, 9.652999999998357e-06, 9.597000000000078e-06, 9.735999999996303e-06, 9.624999999999218e-06, 9.652999999998357e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.665999999998454e-06, 9.680999999997497e-06, 9.652999999998357e-06, 9.652000000005823e-06, 9.583999999999981e-06, 9.638999999998787e-06, 9.652999999998357e-06, 9.652999999998357e-06, 9.680000000004962e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.624999999999218e-06, 9.638999999998787e-06, 9.624999999999218e-06, 9.665999999998454e-06, 9.624999999999218e-06, 9.651999999998884e-06, 9.639000000005726e-06, 9.695000000004006e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.638999999998787e-06]</msg>
<status status="PASS" starttime="20201115 22:02:02.996" endtime="20201115 22:02:03.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.985" endtime="20201115 22:02:03.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.009" endtime="20201115 22:02:03.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.017" endtime="20201115 22:02:03.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.013" endtime="20201115 22:02:03.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.004" endtime="20201115 22:02:03.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.407" endtime="20201115 22:02:03.043"></status>
</kw>
<msg timestamp="20201115 22:02:03.043" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.075" endtime="20201115 22:02:03.100"></status>
</kw>
<msg timestamp="20201115 22:02:03.102" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.063" endtime="20201115 22:02:03.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.108" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.104" endtime="20201115 22:02:03.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.110" endtime="20201115 22:02:03.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.056" endtime="20201115 22:02:03.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.050" endtime="20201115 22:02:03.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.134" endtime="20201115 22:02:03.475"></status>
</kw>
<msg timestamp="20201115 22:02:03.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051577306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051586931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.131" endtime="20201115 22:02:03.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051577306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051586931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.484" endtime="20201115 22:02:03.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.503" endtime="20201115 22:02:03.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.123" endtime="20201115 22:02:03.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.118" endtime="20201115 22:02:03.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:03.520" level="INFO">${RESULT} = [{'time': 0.051586931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.051835069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:03.511" endtime="20201115 22:02:03.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.551" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:03.522" endtime="20201115 22:02:03.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.562" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:02:03.560" endtime="20201115 22:02:03.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.568" level="INFO">VALUE: [9.624999999999218e-06, 9.624999999999218e-06, 9.639000000005726e-06, 9.665999999998454e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.665999999998454e-06, 9.652999999998357e-06, 9.679999999998024e-06, 9.666999999997927e-06, 9.624999999999218e-06, 9.638999999998787e-06, 9.666999999997927e-06, 9.638999999998787e-06, 9.624999999999218e-06, 9.667000000004866e-06, 9.653000000005296e-06, 9.666999999997927e-06, 9.638999999998787e-06, 9.652999999998357e-06, 9.638999999998787e-06, 9.666999999997927e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.652999999998357e-06, 9.652999999998357e-06, 9.625000000006156e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.639000000005726e-06, 9.639000000005726e-06, 9.708000000004102e-06, 9.653000000005296e-06, 9.637999999999314e-06, 9.652999999998357e-06, 9.666000000005393e-06, 9.639000000005726e-06, 9.624999999999218e-06, 9.652999999998357e-06, 9.693999999997593e-06, 9.582999999993569e-06, 9.624999999999218e-06, 9.638999999998787e-06, 9.667000000004866e-06, 9.651999999998884e-06, 9.652999999998357e-06, 9.666999999990988e-06, 9.638000000006253e-06, 9.679999999998024e-06]</msg>
<status status="PASS" starttime="20201115 22:02:03.564" endtime="20201115 22:02:03.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.553" endtime="20201115 22:02:03.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.577" endtime="20201115 22:02:03.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.585" endtime="20201115 22:02:03.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.581" endtime="20201115 22:02:03.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.572" endtime="20201115 22:02:03.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.044" endtime="20201115 22:02:03.611"></status>
</kw>
<msg timestamp="20201115 22:02:03.612" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.635" endtime="20201115 22:02:03.661"></status>
</kw>
<msg timestamp="20201115 22:02:03.663" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.632" endtime="20201115 22:02:03.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.669" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.665" endtime="20201115 22:02:03.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.671" endtime="20201115 22:02:03.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.624" endtime="20201115 22:02:03.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.618" endtime="20201115 22:02:03.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.695" endtime="20201115 22:02:04.037"></status>
</kw>
<msg timestamp="20201115 22:02:04.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045116833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045126458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.692" endtime="20201115 22:02:04.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045116833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045126458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.046" endtime="20201115 22:02:04.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.064" endtime="20201115 22:02:04.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.684" endtime="20201115 22:02:04.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.679" endtime="20201115 22:02:04.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.082" level="INFO">${RESULT} = [{'time': 0.045126458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.045373347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:04.073" endtime="20201115 22:02:04.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.113" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:04.084" endtime="20201115 22:02:04.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.124" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:02:04.122" endtime="20201115 22:02:04.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.130" level="INFO">VALUE: [9.624999999999218e-06, 9.610999999999648e-06, 9.693999999997593e-06, 9.680999999997497e-06, 9.666999999997927e-06, 9.638999999998787e-06, 9.624999999999218e-06, 9.651999999998884e-06, 9.652999999998357e-06, 9.624999999999218e-06, 9.652999999998357e-06, 9.610999999999648e-06, 9.665999999998454e-06, 9.652999999998357e-06, 9.653000000005296e-06, 9.624999999999218e-06, 9.652999999998357e-06, 9.611999999999121e-06, 9.624999999999218e-06, 9.637999999999314e-06, 9.638999999998787e-06, 9.624999999999218e-06, 9.708000000004102e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.708999999996637e-06, 9.639000000005726e-06, 9.639000000005726e-06, 9.651999999998884e-06, 9.666999999997927e-06, 9.624999999999218e-06, 9.638999999998787e-06, 9.651999999998884e-06, 9.610999999999648e-06, 9.651999999998884e-06, 9.652999999998357e-06, 9.679999999998024e-06, 9.665999999998454e-06, 9.638999999998787e-06, 9.653000000005296e-06, 9.638999999998787e-06, 9.637999999999314e-06, 9.652999999998357e-06, 9.667000000004866e-06, 9.652999999998357e-06, 9.666999999997927e-06, 9.638999999998787e-06, 9.652999999998357e-06, 9.637999999999314e-06]</msg>
<status status="PASS" starttime="20201115 22:02:04.126" endtime="20201115 22:02:04.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.115" endtime="20201115 22:02:04.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.139" endtime="20201115 22:02:04.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.148" endtime="20201115 22:02:04.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.143" endtime="20201115 22:02:04.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.135" endtime="20201115 22:02:04.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.613" endtime="20201115 22:02:04.173"></status>
</kw>
<msg timestamp="20201115 22:02:04.174" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.197" endtime="20201115 22:02:04.223"></status>
</kw>
<msg timestamp="20201115 22:02:04.224" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.194" endtime="20201115 22:02:04.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.231" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.227" endtime="20201115 22:02:04.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.233" endtime="20201115 22:02:04.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.187" endtime="20201115 22:02:04.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.181" endtime="20201115 22:02:04.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.258" endtime="20201115 22:02:04.599"></status>
</kw>
<msg timestamp="20201115 22:02:04.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043348708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043358333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.255" endtime="20201115 22:02:04.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043348708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043358333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.608" endtime="20201115 22:02:04.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.627" endtime="20201115 22:02:04.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.246" endtime="20201115 22:02:04.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.241" endtime="20201115 22:02:04.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.644" level="INFO">${RESULT} = [{'time': 0.043358333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.043605222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:04.635" endtime="20201115 22:02:04.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.675" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:04.647" endtime="20201115 22:02:04.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.681" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:02:04.680" endtime="20201115 22:02:04.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.683" level="INFO">VALUE: [9.624999999999218e-06, 9.624999999999218e-06, 9.666999999997927e-06, 9.652000000005823e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.624999999999218e-06, 9.624999999999218e-06, 9.624999999999218e-06, 9.651999999998884e-06, 9.666999999997927e-06, 9.624999999999218e-06, 9.638999999998787e-06, 9.666999999997927e-06, 9.624999999999218e-06, 9.624999999999218e-06, 9.583999999999981e-06, 9.597000000000078e-06, 9.639000000005726e-06, 9.652999999998357e-06, 9.624999999999218e-06, 9.638999999998787e-06, 9.652999999998357e-06, 9.666000000005393e-06, 9.624999999999218e-06, 9.665999999998454e-06, 9.639000000005726e-06, 9.723000000003146e-06, 9.624999999999218e-06, 9.638999999998787e-06, 9.624999999999218e-06, 9.652999999998357e-06, 9.638999999998787e-06, 9.610999999999648e-06, 9.638999999998787e-06, 9.652999999998357e-06, 9.638999999998787e-06, 9.624999999999218e-06, 9.680999999997497e-06, 9.638999999998787e-06, 9.667000000004866e-06, 9.624999999999218e-06, 9.624999999999218e-06, 9.652999999998357e-06, 9.653000000005296e-06, 9.679999999998024e-06, 9.652999999998357e-06, 9.638999999998787e-06, 9.665999999998454e-06, 9.652999999998357e-06]</msg>
<status status="PASS" starttime="20201115 22:02:04.682" endtime="20201115 22:02:04.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.676" endtime="20201115 22:02:04.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.688" endtime="20201115 22:02:04.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.692" endtime="20201115 22:02:04.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.690" endtime="20201115 22:02:04.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.686" endtime="20201115 22:02:04.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.175" endtime="20201115 22:02:04.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.841" endtime="20201115 22:02:04.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.839" endtime="20201115 22:02:04.714"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.716" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.727" endtime="20201115 22:02:04.751"></status>
</kw>
<msg timestamp="20201115 22:02:04.752" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.726" endtime="20201115 22:02:04.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.755" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.753" endtime="20201115 22:02:04.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.756" endtime="20201115 22:02:04.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.722" endtime="20201115 22:02:04.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.719" endtime="20201115 22:02:04.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.768" endtime="20201115 22:02:05.087"></status>
</kw>
<msg timestamp="20201115 22:02:05.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02811425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028124083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:04.765" endtime="20201115 22:02:05.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02811425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028124083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:05.097" endtime="20201115 22:02:05.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.115" endtime="20201115 22:02:05.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.762" endtime="20201115 22:02:05.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.760" endtime="20201115 22:02:05.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:05.133" level="INFO">${RESULT} = [{'time': 0.028124083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.833000000000758e-06, 'source_diff': 9.833000000000758e-06}, {'time': 0.028389417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:05.124" endtime="20201115 22:02:05.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:05.165" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:05.135" endtime="20201115 22:02:05.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.177" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:02:05.174" endtime="20201115 22:02:05.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.183" level="INFO">VALUE: [9.833000000000758e-06, 9.820000000000662e-06, 9.846999999996858e-06, 9.818999999997718e-06, 9.847000000000328e-06, 9.820000000000662e-06, 9.847999999999801e-06, 9.792000000001522e-06, 9.820000000000662e-06, 9.916999999998177e-06, 9.833000000000758e-06, 9.847999999999801e-06, 9.777999999995013e-06, 9.915999999998704e-06, 9.846999999993389e-06, 9.820000000000662e-06, 9.860999999999898e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.860999999999898e-06, 9.888999999999037e-06, 9.834000000000231e-06, 9.778000000001952e-06, 9.861999999999371e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.820000000000662e-06, 9.778000000001952e-06, 9.860999999999898e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.931000000004686e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.888999999999037e-06, 9.860999999999898e-06, 9.860999999999898e-06, 9.847000000000328e-06, 9.819000000001188e-06, 9.819000000001188e-06, 9.847000000000328e-06, 9.860999999999898e-06, 9.847999999999801e-06, 9.819000000001188e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.916999999998177e-06, 9.750000000002812e-06, 9.833000000000758e-06, 9.820000000000662e-06]</msg>
<status status="PASS" starttime="20201115 22:02:05.179" endtime="20201115 22:02:05.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.167" endtime="20201115 22:02:05.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.192" endtime="20201115 22:02:05.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.200" endtime="20201115 22:02:05.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.196" endtime="20201115 22:02:05.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.187" endtime="20201115 22:02:05.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.717" endtime="20201115 22:02:05.226"></status>
</kw>
<msg timestamp="20201115 22:02:05.227" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.250" endtime="20201115 22:02:05.276"></status>
</kw>
<msg timestamp="20201115 22:02:05.278" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.246" endtime="20201115 22:02:05.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.284" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.280" endtime="20201115 22:02:05.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.286" endtime="20201115 22:02:05.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.239" endtime="20201115 22:02:05.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.233" endtime="20201115 22:02:05.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.310" endtime="20201115 22:02:05.653"></status>
</kw>
<msg timestamp="20201115 22:02:05.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043733667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0437435, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:05.307" endtime="20201115 22:02:05.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043733667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0437435, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:05.662" endtime="20201115 22:02:05.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.681" endtime="20201115 22:02:05.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.299" endtime="20201115 22:02:05.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.294" endtime="20201115 22:02:05.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:05.698" level="INFO">${RESULT} = [{'time': 0.0437435, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.833000000000758e-06, 'source_diff': 9.833000000000758e-06}, {'time': 0.044010278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:05.689" endtime="20201115 22:02:05.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:05.729" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:05.700" endtime="20201115 22:02:05.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.741" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:02:05.738" endtime="20201115 22:02:05.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.746" level="INFO">VALUE: [9.833000000000758e-06, 9.834000000000231e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.860999999999898e-06, 9.778000000001952e-06, 9.916999999998177e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.902999999998607e-06, 9.818999999994249e-06, 9.860999999999898e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.819000000001188e-06, 9.79099999999511e-06, 9.820000000000662e-06, 9.847999999999801e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.860999999999898e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.834000000000231e-06, 9.819000000001188e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.820000000000662e-06, 9.887999999999564e-06, 9.834000000000231e-06, 9.860999999999898e-06, 9.888999999999037e-06, 9.860999999999898e-06, 9.916999999998177e-06, 9.833000000000758e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.860999999999898e-06, 9.792000000001522e-06, 9.847000000000328e-06, 9.902999999998607e-06, 9.861999999999371e-06, 9.860999999999898e-06, 9.847999999999801e-06, 9.833000000000758e-06, 9.860999999999898e-06, 9.834000000000231e-06, 9.902999999998607e-06, 9.847000000000328e-06, 9.847999999999801e-06]</msg>
<status status="PASS" starttime="20201115 22:02:05.743" endtime="20201115 22:02:05.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.732" endtime="20201115 22:02:05.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.755" endtime="20201115 22:02:05.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.764" endtime="20201115 22:02:05.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.759" endtime="20201115 22:02:05.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.751" endtime="20201115 22:02:05.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.228" endtime="20201115 22:02:05.789"></status>
</kw>
<msg timestamp="20201115 22:02:05.790" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.813" endtime="20201115 22:02:05.840"></status>
</kw>
<msg timestamp="20201115 22:02:05.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.810" endtime="20201115 22:02:05.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.847" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.843" endtime="20201115 22:02:05.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.849" endtime="20201115 22:02:05.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.803" endtime="20201115 22:02:05.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.797" endtime="20201115 22:02:05.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.873" endtime="20201115 22:02:06.215"></status>
</kw>
<msg timestamp="20201115 22:02:06.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043503319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043513153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.870" endtime="20201115 22:02:06.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043503319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043513153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.225" endtime="20201115 22:02:06.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.243" endtime="20201115 22:02:06.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.863" endtime="20201115 22:02:06.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.858" endtime="20201115 22:02:06.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.262" level="INFO">${RESULT} = [{'time': 0.043513153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.834000000000231e-06, 'source_diff': 9.834000000000231e-06}, {'time': 0.043774097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:06.253" endtime="20201115 22:02:06.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.294" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:06.265" endtime="20201115 22:02:06.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.305" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:02:06.302" endtime="20201115 22:02:06.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.310" level="INFO">VALUE: [9.834000000000231e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.860999999999898e-06, 9.847000000000328e-06, 9.834000000000231e-06, 9.847999999999801e-06, 9.834000000000231e-06, 9.79099999999511e-06, 9.847999999999801e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.820000000000662e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.832999999993819e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.791000000002048e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.860999999999898e-06, 9.820000000000662e-06, 9.846999999993389e-06, 9.847999999999801e-06, 9.860999999999898e-06, 9.820000000000662e-06, 9.930999999997747e-06, 9.888999999999037e-06, 9.847000000000328e-06, 9.888999999999037e-06, 9.834000000000231e-06, 9.820000000000662e-06, 9.888999999999037e-06, 9.820000000000662e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.834000000000231e-06, 9.847000000000328e-06, 9.847999999999801e-06, 9.847000000000328e-06]</msg>
<status status="PASS" starttime="20201115 22:02:06.307" endtime="20201115 22:02:06.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.295" endtime="20201115 22:02:06.313"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.319" endtime="20201115 22:02:06.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.328" endtime="20201115 22:02:06.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.323" endtime="20201115 22:02:06.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.315" endtime="20201115 22:02:06.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.791" endtime="20201115 22:02:06.353"></status>
</kw>
<msg timestamp="20201115 22:02:06.354" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.377" endtime="20201115 22:02:06.403"></status>
</kw>
<msg timestamp="20201115 22:02:06.405" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.374" endtime="20201115 22:02:06.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.411" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.407" endtime="20201115 22:02:06.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.413" endtime="20201115 22:02:06.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.366" endtime="20201115 22:02:06.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.361" endtime="20201115 22:02:06.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.437" endtime="20201115 22:02:06.778"></status>
</kw>
<msg timestamp="20201115 22:02:06.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043414889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043424736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.434" endtime="20201115 22:02:06.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043414889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043424736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.787" endtime="20201115 22:02:06.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.806" endtime="20201115 22:02:06.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.426" endtime="20201115 22:02:06.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.422" endtime="20201115 22:02:06.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.825" level="INFO">${RESULT} = [{'time': 0.043424736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.043686292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:06.816" endtime="20201115 22:02:06.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.856" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:06.827" endtime="20201115 22:02:06.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.867" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:02:06.864" endtime="20201115 22:02:06.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.872" level="INFO">VALUE: [9.847000000000328e-06, 9.834000000000231e-06, 9.834000000000231e-06, 9.847000000000328e-06, 9.819000000001188e-06, 9.804999999994679e-06, 9.860999999999898e-06, 9.902999999998607e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.834000000000231e-06, 9.818999999994249e-06, 9.833000000000758e-06, 9.874999999999468e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.819000000001188e-06, 9.902999999998607e-06, 9.860999999999898e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.834000000000231e-06, 9.805000000001618e-06, 9.819000000001188e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.791000000002048e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.860999999999898e-06, 9.832999999993819e-06, 9.847000000000328e-06, 9.819000000001188e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.847999999999801e-06, 9.847999999999801e-06, 9.847000000000328e-06, 9.805000000001618e-06, 9.834000000000231e-06, 9.874999999999468e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.861999999999371e-06, 9.833000000000758e-06, 9.833000000000758e-06]</msg>
<status status="PASS" starttime="20201115 22:02:06.869" endtime="20201115 22:02:06.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.857" endtime="20201115 22:02:06.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.881" endtime="20201115 22:02:06.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.890" endtime="20201115 22:02:06.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.885" endtime="20201115 22:02:06.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.877" endtime="20201115 22:02:06.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.355" endtime="20201115 22:02:06.915"></status>
</kw>
<msg timestamp="20201115 22:02:06.916" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.939" endtime="20201115 22:02:06.965"></status>
</kw>
<msg timestamp="20201115 22:02:06.966" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.936" endtime="20201115 22:02:06.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.973" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.969" endtime="20201115 22:02:06.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.975" endtime="20201115 22:02:06.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.929" endtime="20201115 22:02:06.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.923" endtime="20201115 22:02:06.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.999" endtime="20201115 22:02:07.340"></status>
</kw>
<msg timestamp="20201115 22:02:07.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043474556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043484389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.995" endtime="20201115 22:02:07.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043474556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043484389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.350" endtime="20201115 22:02:07.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.369" endtime="20201115 22:02:07.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.988" endtime="20201115 22:02:07.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.983" endtime="20201115 22:02:07.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:07.388" level="INFO">${RESULT} = [{'time': 0.043484389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.833000000000758e-06, 'source_diff': 9.833000000000758e-06}, {'time': 0.04374825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:07.379" endtime="20201115 22:02:07.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:07.421" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:07.390" endtime="20201115 22:02:07.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.432" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:02:07.430" endtime="20201115 22:02:07.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.438" level="INFO">VALUE: [9.833000000000758e-06, 9.833000000000758e-06, 9.902999999998607e-06, 9.805000000001618e-06, 9.833000000000758e-06, 9.820000000000662e-06, 9.860999999999898e-06, 9.834000000000231e-06, 9.847000000000328e-06, 9.860999999999898e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.860999999999898e-06, 9.847000000000328e-06, 9.846999999993389e-06, 9.834000000000231e-06, 9.805000000001618e-06, 9.833000000000758e-06, 9.804999999994679e-06, 9.833000000000758e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.847999999999801e-06, 9.833000000000758e-06, 9.860999999999898e-06, 9.834000000000231e-06, 9.819000000001188e-06, 9.763999999995443e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.874999999999468e-06, 9.847000000000328e-06, 9.860999999999898e-06, 9.847000000000328e-06, 9.901999999999134e-06, 9.847999999999801e-06, 9.861999999999371e-06, 9.846999999993389e-06, 9.903000000005546e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.819000000001188e-06, 9.833000000000758e-06, 9.820000000000662e-06, 9.861999999999371e-06, 9.861999999999371e-06, 9.847000000000328e-06]</msg>
<status status="PASS" starttime="20201115 22:02:07.435" endtime="20201115 22:02:07.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.423" endtime="20201115 22:02:07.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.447" endtime="20201115 22:02:07.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:07.455" endtime="20201115 22:02:07.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.451" endtime="20201115 22:02:07.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.442" endtime="20201115 22:02:07.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.917" endtime="20201115 22:02:07.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.715" endtime="20201115 22:02:07.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.714" endtime="20201115 22:02:07.482"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.487" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.510" endtime="20201115 22:02:07.537"></status>
</kw>
<msg timestamp="20201115 22:02:07.539" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.507" endtime="20201115 22:02:07.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.545" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.541" endtime="20201115 22:02:07.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.547" endtime="20201115 22:02:07.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.499" endtime="20201115 22:02:07.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.494" endtime="20201115 22:02:07.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.572" endtime="20201115 22:02:07.912"></status>
</kw>
<msg timestamp="20201115 22:02:07.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048558694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048568764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.568" endtime="20201115 22:02:07.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048558694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048568764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.921" endtime="20201115 22:02:07.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.940" endtime="20201115 22:02:07.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.561" endtime="20201115 22:02:07.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.556" endtime="20201115 22:02:07.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:07.959" level="INFO">${RESULT} = [{'time': 0.048568764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.048842139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:07.950" endtime="20201115 22:02:07.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:07.989" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:07.961" endtime="20201115 22:02:07.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.001" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:02:07.998" endtime="20201115 22:02:08.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.006" level="INFO">VALUE: [1.0070000000000912e-05, 1.0083000000001008e-05, 1.0069000000001438e-05, 1.0056000000001342e-05, 1.0083000000001008e-05, 1.0055000000001868e-05, 1.0083000000001008e-05, 1.0041999999994833e-05, 1.0070000000000912e-05, 1.0056000000001342e-05, 1.0138999999999287e-05, 9.986000000003492e-06, 1.0041000000002298e-05, 1.0069000000001438e-05, 1.0055000000001868e-05, 1.0069000000001438e-05, 1.0042000000001772e-05, 1.0069000000001438e-05, 1.0070000000000912e-05, 1.0056000000001342e-05, 1.0084000000000481e-05, 1.0055999999994403e-05, 1.0069000000001438e-05, 1.0056000000001342e-05, 1.0083000000001008e-05, 1.0056000000001342e-05, 1.0069000000001438e-05, 1.0027999999995263e-05, 1.0055000000001868e-05, 1.0055000000001868e-05, 1.004099999999536e-05, 1.0041000000002298e-05, 1.0083000000001008e-05, 1.0069999999993973e-05, 1.0041999999994833e-05, 1.0069999999993973e-05, 1.004099999999536e-05, 1.0124999999999718e-05, 1.0000000000003062e-05, 1.0056000000001342e-05, 1.0070000000000912e-05, 1.0070000000000912e-05, 1.0084000000000481e-05, 1.0069000000001438e-05, 1.0055000000001868e-05, 1.0069000000001438e-05, 1.0070000000000912e-05, 1.0041000000002298e-05, 1.0069000000001438e-05, 1.0055000000001868e-05]</msg>
<status status="PASS" starttime="20201115 22:02:08.003" endtime="20201115 22:02:08.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.991" endtime="20201115 22:02:08.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.015" endtime="20201115 22:02:08.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:08.023" endtime="20201115 22:02:08.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.019" endtime="20201115 22:02:08.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.010" endtime="20201115 22:02:08.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.488" endtime="20201115 22:02:08.049"></status>
</kw>
<msg timestamp="20201115 22:02:08.050" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.074" endtime="20201115 22:02:08.101"></status>
</kw>
<msg timestamp="20201115 22:02:08.102" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.071" endtime="20201115 22:02:08.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.113" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.104" endtime="20201115 22:02:08.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.116" endtime="20201115 22:02:08.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.063" endtime="20201115 22:02:08.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.057" endtime="20201115 22:02:08.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.127" endtime="20201115 22:02:08.451"></status>
</kw>
<msg timestamp="20201115 22:02:08.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044978847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044988917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.126" endtime="20201115 22:02:08.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044978847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044988917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.460" endtime="20201115 22:02:08.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.479" endtime="20201115 22:02:08.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.122" endtime="20201115 22:02:08.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.120" endtime="20201115 22:02:08.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:08.498" level="INFO">${RESULT} = [{'time': 0.044988917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.045261028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:08.489" endtime="20201115 22:02:08.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:08.528" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:08.500" endtime="20201115 22:02:08.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.540" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:02:08.537" endtime="20201115 22:02:08.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.545" level="INFO">VALUE: [1.0070000000000912e-05, 1.0084000000000481e-05, 1.0124999999999718e-05, 1.0041999999994833e-05, 1.0082999999994069e-05, 1.0056000000001342e-05, 1.0083000000001008e-05, 1.0056000000001342e-05, 1.0097000000000578e-05, 1.0042000000001772e-05, 1.0070000000000912e-05, 1.0056000000001342e-05, 1.0069000000001438e-05, 1.0056000000001342e-05, 1.0124999999999718e-05, 1.0055000000001868e-05, 9.985999999996553e-06, 1.0056000000001342e-05, 1.0070000000000912e-05, 1.0084000000000481e-05, 1.0000000000003062e-05, 1.0014000000002632e-05, 1.0138999999999287e-05, 1.0069000000001438e-05, 1.0041000000002298e-05, 1.0068999999994499e-05, 1.0097000000000578e-05, 1.0084000000000481e-05, 1.0069999999993973e-05, 1.0083000000001008e-05, 1.0083000000001008e-05, 1.0042000000001772e-05, 1.0014000000002632e-05, 1.0056000000001342e-05, 1.0070000000000912e-05, 1.0070000000000912e-05, 1.0055000000001868e-05, 1.0041000000002298e-05, 1.0055000000001868e-05, 9.999999999996123e-06, 1.0056000000001342e-05, 1.0055999999994403e-05, 1.0069000000001438e-05, 1.0083000000001008e-05, 1.0070000000000912e-05, 1.0070000000000912e-05, 1.0083000000001008e-05, 1.0055000000001868e-05, 1.0069000000001438e-05, 1.0153000000005796e-05]</msg>
<status status="PASS" starttime="20201115 22:02:08.542" endtime="20201115 22:02:08.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.530" endtime="20201115 22:02:08.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.554" endtime="20201115 22:02:08.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:08.563" endtime="20201115 22:02:08.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.558" endtime="20201115 22:02:08.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.549" endtime="20201115 22:02:08.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.051" endtime="20201115 22:02:08.588"></status>
</kw>
<msg timestamp="20201115 22:02:08.589" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.613" endtime="20201115 22:02:08.640"></status>
</kw>
<msg timestamp="20201115 22:02:08.641" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.609" endtime="20201115 22:02:08.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.647" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.643" endtime="20201115 22:02:08.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.650" endtime="20201115 22:02:08.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.601" endtime="20201115 22:02:08.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.596" endtime="20201115 22:02:08.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.673" endtime="20201115 22:02:09.015"></status>
</kw>
<msg timestamp="20201115 22:02:09.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043963361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043973403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.670" endtime="20201115 22:02:09.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043963361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043973403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.024" endtime="20201115 22:02:09.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.042" endtime="20201115 22:02:09.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.663" endtime="20201115 22:02:09.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.658" endtime="20201115 22:02:09.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:09.062" level="INFO">${RESULT} = [{'time': 0.043973403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0042000000001772e-05, 'source_diff': 1.0042000000001772e-05}, {'time': 0.044250306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:09.052" endtime="20201115 22:02:09.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:09.092" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:09.064" endtime="20201115 22:02:09.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.104" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:02:09.102" endtime="20201115 22:02:09.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.110" level="INFO">VALUE: [1.0042000000001772e-05, 1.0056000000001342e-05, 1.0027999999995263e-05, 1.0056000000001342e-05, 1.0056000000001342e-05, 1.0083000000001008e-05, 1.0084000000000481e-05, 1.0070000000000912e-05, 1.0041000000002298e-05, 1.0069000000001438e-05, 1.0041000000002298e-05, 1.0098000000000051e-05, 1.0069000000001438e-05, 1.0083000000001008e-05, 1.0098000000000051e-05, 1.0056000000001342e-05, 1.0056000000001342e-05, 1.0111000000000148e-05, 1.0069000000001438e-05, 1.0042000000001772e-05, 1.0069000000001438e-05, 1.0056000000001342e-05, 1.0055000000001868e-05, 1.0070000000000912e-05, 1.0070000000000912e-05, 1.0083000000001008e-05, 1.0056000000001342e-05, 1.0083000000001008e-05, 1.0070000000000912e-05, 1.0084000000000481e-05, 1.0055000000001868e-05, 1.0041000000002298e-05, 1.0069000000001438e-05, 1.0070000000000912e-05, 1.0070000000000912e-05, 1.0069000000001438e-05, 1.0070000000000912e-05, 1.0056000000001342e-05, 1.0069000000001438e-05, 1.0097000000000578e-05, 1.0070000000000912e-05, 1.0055000000001868e-05, 1.0069000000001438e-05, 1.0070000000000912e-05, 1.0069000000001438e-05, 1.0055000000001868e-05, 1.0069000000001438e-05, 1.0056000000001342e-05, 1.0055000000001868e-05, 1.0124999999999718e-05]</msg>
<status status="PASS" starttime="20201115 22:02:09.107" endtime="20201115 22:02:09.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.094" endtime="20201115 22:02:09.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.119" endtime="20201115 22:02:09.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:09.127" endtime="20201115 22:02:09.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.123" endtime="20201115 22:02:09.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.114" endtime="20201115 22:02:09.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.590" endtime="20201115 22:02:09.154"></status>
</kw>
<msg timestamp="20201115 22:02:09.154" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.178" endtime="20201115 22:02:09.205"></status>
</kw>
<msg timestamp="20201115 22:02:09.206" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.174" endtime="20201115 22:02:09.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.212" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.208" endtime="20201115 22:02:09.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.214" endtime="20201115 22:02:09.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.167" endtime="20201115 22:02:09.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.161" endtime="20201115 22:02:09.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.238" endtime="20201115 22:02:09.578"></status>
</kw>
<msg timestamp="20201115 22:02:09.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044274389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044284472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.235" endtime="20201115 22:02:09.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044274389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044284472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.587" endtime="20201115 22:02:09.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.606" endtime="20201115 22:02:09.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.227" endtime="20201115 22:02:09.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.223" endtime="20201115 22:02:09.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:09.625" level="INFO">${RESULT} = [{'time': 0.044284472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.044553667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:09.616" endtime="20201115 22:02:09.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:09.658" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:09.627" endtime="20201115 22:02:09.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.669" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:02:09.667" endtime="20201115 22:02:09.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.674" level="INFO">VALUE: [1.0083000000001008e-05, 1.0084000000000481e-05, 1.0070000000000912e-05, 1.0055000000001868e-05, 1.0069000000001438e-05, 1.0027999999995263e-05, 1.0069000000001438e-05, 1.0042000000001772e-05, 1.0070000000000912e-05, 1.0027999999995263e-05, 1.0124999999999718e-05, 1.0069000000001438e-05, 1.0083000000001008e-05, 1.0041000000002298e-05, 1.0098000000000051e-05, 1.0097000000000578e-05, 1.0068999999994499e-05, 1.0068999999994499e-05, 1.0041000000002298e-05, 1.0056000000001342e-05, 1.0111000000000148e-05, 1.0124999999999718e-05, 1.0084000000000481e-05, 1.0069000000001438e-05, 1.0055999999994403e-05, 1.0097000000000578e-05, 1.0069000000001438e-05, 1.0152999999998857e-05, 1.0069000000001438e-05, 1.0054999999994929e-05, 1.0054999999994929e-05, 1.0056000000001342e-05, 1.0056000000001342e-05, 1.0055000000001868e-05, 1.004099999999536e-05, 1.0056000000001342e-05, 1.0069000000001438e-05, 1.0111000000000148e-05, 1.0069000000001438e-05, 1.0083000000001008e-05, 1.004099999999536e-05, 1.0028000000002202e-05, 1.0055000000001868e-05, 1.0027000000002728e-05, 1.0070000000000912e-05, 9.986000000003492e-06, 1.0055000000001868e-05, 1.0068999999994499e-05, 1.0069000000001438e-05, 1.0041999999994833e-05]</msg>
<status status="PASS" starttime="20201115 22:02:09.671" endtime="20201115 22:02:09.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.660" endtime="20201115 22:02:09.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.684" endtime="20201115 22:02:09.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:09.693" endtime="20201115 22:02:09.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.688" endtime="20201115 22:02:09.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.679" endtime="20201115 22:02:09.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.155" endtime="20201115 22:02:09.718"></status>
</kw>
<msg timestamp="20201115 22:02:09.719" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.743" endtime="20201115 22:02:09.769"></status>
</kw>
<msg timestamp="20201115 22:02:09.770" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.739" endtime="20201115 22:02:09.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.776" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.772" endtime="20201115 22:02:09.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.778" endtime="20201115 22:02:09.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.732" endtime="20201115 22:02:09.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.726" endtime="20201115 22:02:09.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.802" endtime="20201115 22:02:10.144"></status>
</kw>
<msg timestamp="20201115 22:02:10.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043555472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043565528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.799" endtime="20201115 22:02:10.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043555472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043565528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.153" endtime="20201115 22:02:10.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.171" endtime="20201115 22:02:10.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.792" endtime="20201115 22:02:10.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.787" endtime="20201115 22:02:10.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:10.189" level="INFO">${RESULT} = [{'time': 0.043565528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0056000000001342e-05, 'source_diff': 1.0056000000001342e-05}, {'time': 0.043843056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:10.180" endtime="20201115 22:02:10.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:10.221" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:10.191" endtime="20201115 22:02:10.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.232" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:02:10.230" endtime="20201115 22:02:10.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.238" level="INFO">VALUE: [1.0056000000001342e-05, 1.0070000000000912e-05, 1.0124999999999718e-05, 1.0056000000001342e-05, 1.0083000000001008e-05, 1.0069000000001438e-05, 1.0056000000001342e-05, 1.0070000000000912e-05, 9.972000000003922e-06, 1.0137999999999814e-05, 1.0068999999994499e-05, 1.0070000000000912e-05, 1.0069000000001438e-05, 1.0138999999999287e-05, 1.0054999999994929e-05, 1.0054999999994929e-05, 1.0124999999999718e-05, 1.0042000000001772e-05, 1.0069000000001438e-05, 1.0069000000001438e-05, 1.0070000000000912e-05, 1.0041999999994833e-05, 1.0068999999994499e-05, 1.0055000000001868e-05, 1.0054999999994929e-05, 1.0055000000001868e-05, 1.0041000000002298e-05, 1.0083000000001008e-05, 1.0056000000001342e-05, 1.0056000000001342e-05, 1.0070000000000912e-05, 1.0083000000001008e-05, 1.0054999999994929e-05, 1.0056000000001342e-05, 1.0068999999994499e-05, 1.0042000000001772e-05, 1.0056000000001342e-05, 1.0055000000001868e-05, 1.0111000000000148e-05, 1.0068999999994499e-05, 1.002699999999579e-05, 1.0069000000001438e-05, 1.0056000000001342e-05, 1.0070000000000912e-05, 1.0084000000000481e-05, 1.0041000000002298e-05, 1.0083000000001008e-05, 1.0042000000001772e-05, 1.0042000000001772e-05, 1.0056000000001342e-05]</msg>
<status status="PASS" starttime="20201115 22:02:10.235" endtime="20201115 22:02:10.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.223" endtime="20201115 22:02:10.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.248" endtime="20201115 22:02:10.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:10.256" endtime="20201115 22:02:10.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.252" endtime="20201115 22:02:10.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.243" endtime="20201115 22:02:10.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.720" endtime="20201115 22:02:10.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.484" endtime="20201115 22:02:10.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.483" endtime="20201115 22:02:10.283"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.288" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.311" endtime="20201115 22:02:10.339"></status>
</kw>
<msg timestamp="20201115 22:02:10.340" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.308" endtime="20201115 22:02:10.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.346" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.342" endtime="20201115 22:02:10.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.348" endtime="20201115 22:02:10.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.300" endtime="20201115 22:02:10.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.294" endtime="20201115 22:02:10.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.372" endtime="20201115 22:02:10.713"></status>
</kw>
<msg timestamp="20201115 22:02:10.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048628181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048638444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.369" endtime="20201115 22:02:10.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048628181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048638444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.722" endtime="20201115 22:02:10.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.742" endtime="20201115 22:02:10.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.362" endtime="20201115 22:02:10.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.357" endtime="20201115 22:02:10.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:10.760" level="INFO">${RESULT} = [{'time': 0.048638444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0263000000003408e-05, 'source_diff': 1.0263000000003408e-05}, {'time': 0.048931667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:10.751" endtime="20201115 22:02:10.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:10.793" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:10.762" endtime="20201115 22:02:10.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.804" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:02:10.801" endtime="20201115 22:02:10.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.810" level="INFO">VALUE: [1.0263000000003408e-05, 1.0263999999995943e-05, 1.0263000000003408e-05, 1.0291000000002548e-05, 1.0250000000003312e-05, 1.0250000000003312e-05, 1.0305000000002118e-05, 1.0249999999996373e-05, 1.0264000000002882e-05, 1.0208999999997137e-05, 1.0264000000002882e-05, 1.0319000000001688e-05, 1.0263999999995943e-05, 1.0235999999996803e-05, 1.0264000000002882e-05, 1.0306000000001592e-05, 1.0250000000003312e-05, 1.0292000000002022e-05, 1.0264000000002882e-05, 1.0278000000002452e-05, 1.0264000000002882e-05, 1.0263999999995943e-05, 1.0306000000001592e-05, 1.0249999999996373e-05, 1.0264000000002882e-05, 1.0278000000002452e-05, 1.0278000000002452e-05, 1.0292000000002022e-05, 1.0235999999996803e-05, 1.0250000000003312e-05, 1.0250000000003312e-05, 1.0277999999995513e-05, 1.0249999999996373e-05, 1.0264000000002882e-05, 1.0235999999996803e-05, 1.0264000000002882e-05, 1.0249999999996373e-05, 1.0263999999995943e-05, 1.0319000000001688e-05, 1.0263999999995943e-05, 1.0263999999995943e-05, 1.0264000000002882e-05, 1.0193999999998093e-05, 1.0249999999996373e-05, 1.0264000000002882e-05, 1.0249999999996373e-05, 1.0264000000002882e-05, 1.0250000000003312e-05, 1.0235999999996803e-05, 1.026400000000982e-05]</msg>
<status status="PASS" starttime="20201115 22:02:10.806" endtime="20201115 22:02:10.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.794" endtime="20201115 22:02:10.813"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.819" endtime="20201115 22:02:10.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:10.828" endtime="20201115 22:02:10.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.824" endtime="20201115 22:02:10.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.815" endtime="20201115 22:02:10.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.289" endtime="20201115 22:02:10.854"></status>
</kw>
<msg timestamp="20201115 22:02:10.855" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.878" endtime="20201115 22:02:10.906"></status>
</kw>
<msg timestamp="20201115 22:02:10.907" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.875" endtime="20201115 22:02:10.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.913" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.909" endtime="20201115 22:02:10.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.916" endtime="20201115 22:02:10.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.867" endtime="20201115 22:02:10.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.861" endtime="20201115 22:02:10.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.939" endtime="20201115 22:02:11.282"></status>
</kw>
<msg timestamp="20201115 22:02:11.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043670958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043681153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.936" endtime="20201115 22:02:11.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043670958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043681153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.292" endtime="20201115 22:02:11.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.310" endtime="20201115 22:02:11.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.929" endtime="20201115 22:02:11.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.924" endtime="20201115 22:02:11.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:11.328" level="INFO">${RESULT} = [{'time': 0.043681153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0194999999997567e-05, 'source_diff': 1.0194999999997567e-05}, {'time': 0.043973333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:11.319" endtime="20201115 22:02:11.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:11.360" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:11.330" endtime="20201115 22:02:11.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.372" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:02:11.369" endtime="20201115 22:02:11.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.377" level="INFO">VALUE: [1.0194999999997567e-05, 1.0264000000002882e-05, 1.0249999999996373e-05, 1.0250000000003312e-05, 1.0250000000003312e-05, 1.0278000000002452e-05, 1.0278000000002452e-05, 1.0250000000003312e-05, 1.0264000000002882e-05, 1.0333000000001258e-05, 1.0250000000003312e-05, 1.0250000000003312e-05, 1.0235999999996803e-05, 1.0264000000002882e-05, 1.0264000000002882e-05, 1.0264000000002882e-05, 1.0250000000003312e-05, 1.0236000000003742e-05, 1.0222999999996707e-05, 1.0263999999995943e-05, 1.0264000000002882e-05, 1.0250000000003312e-05, 1.0249999999996373e-05, 1.0250000000003312e-05, 1.0278000000002452e-05, 1.0235999999996803e-05, 1.026299999999647e-05, 1.0194999999997567e-05, 1.0264000000002882e-05, 1.0263000000003408e-05, 1.0250000000003312e-05, 1.0263999999995943e-05, 1.0250000000003312e-05, 1.0249999999996373e-05, 1.0277000000002978e-05, 1.026299999999647e-05, 1.026299999999647e-05, 1.0263999999995943e-05, 1.027699999999604e-05, 1.0250000000003312e-05, 1.0264000000002882e-05, 1.0236000000003742e-05, 1.0222999999996707e-05, 1.0249999999996373e-05, 1.0235999999996803e-05, 1.0250000000003312e-05, 1.0249999999996373e-05, 1.0264000000002882e-05, 1.0249999999996373e-05, 1.0264000000002882e-05]</msg>
<status status="PASS" starttime="20201115 22:02:11.374" endtime="20201115 22:02:11.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.362" endtime="20201115 22:02:11.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.386" endtime="20201115 22:02:11.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:11.395" endtime="20201115 22:02:11.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.390" endtime="20201115 22:02:11.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.382" endtime="20201115 22:02:11.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.856" endtime="20201115 22:02:11.420"></status>
</kw>
<msg timestamp="20201115 22:02:11.421" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.444" endtime="20201115 22:02:11.470"></status>
</kw>
<msg timestamp="20201115 22:02:11.471" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.441" endtime="20201115 22:02:11.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.474" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.472" endtime="20201115 22:02:11.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.475" endtime="20201115 22:02:11.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.433" endtime="20201115 22:02:11.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.427" endtime="20201115 22:02:11.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.486" endtime="20201115 22:02:11.795"></status>
</kw>
<msg timestamp="20201115 22:02:11.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043212917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043223167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.484" endtime="20201115 22:02:11.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043212917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043223167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.805" endtime="20201115 22:02:11.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.823" endtime="20201115 22:02:11.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.481" endtime="20201115 22:02:11.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.479" endtime="20201115 22:02:11.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:11.842" level="INFO">${RESULT} = [{'time': 0.043223167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0249999999996373e-05, 'source_diff': 1.0249999999996373e-05}, {'time': 0.043508278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:11.832" endtime="20201115 22:02:11.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:11.875" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:11.844" endtime="20201115 22:02:11.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.886" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:02:11.884" endtime="20201115 22:02:11.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.892" level="INFO">VALUE: [1.0249999999996373e-05, 1.0277999999995513e-05, 1.0277000000002978e-05, 1.0292000000002022e-05, 1.0277999999995513e-05, 1.0250000000003312e-05, 1.0264000000002882e-05, 1.0264000000002882e-05, 1.0278000000002452e-05, 1.0250000000003312e-05, 1.0207999999997663e-05, 1.0236000000003742e-05, 1.0263999999995943e-05, 1.0249999999996373e-05, 1.026299999999647e-05, 1.0264000000002882e-05, 1.0250000000003312e-05, 1.0277000000002978e-05, 1.0264000000002882e-05, 1.0250000000003312e-05, 1.0249999999996373e-05, 1.0250000000003312e-05, 1.0264000000002882e-05, 1.0249999999996373e-05, 1.0263000000003408e-05, 1.0250000000003312e-05, 1.0208999999997137e-05, 1.0318999999994749e-05, 1.0277999999995513e-05, 1.0250000000003312e-05, 1.0250000000003312e-05, 1.0264000000002882e-05, 1.0250000000003312e-05, 1.0250000000003312e-05, 1.0292000000002022e-05, 1.0264000000002882e-05, 1.0236000000003742e-05, 1.0263999999995943e-05, 1.0320000000001162e-05, 1.0278000000002452e-05, 1.0278000000002452e-05, 1.0249999999996373e-05, 1.0236000000003742e-05, 1.0264000000002882e-05, 1.0250000000003312e-05, 1.0250000000003312e-05, 1.0235999999996803e-05, 1.0222999999996707e-05, 1.0250000000003312e-05, 1.0249999999996373e-05]</msg>
<status status="PASS" starttime="20201115 22:02:11.889" endtime="20201115 22:02:11.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.877" endtime="20201115 22:02:11.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.901" endtime="20201115 22:02:11.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:11.909" endtime="20201115 22:02:11.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.905" endtime="20201115 22:02:11.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.896" endtime="20201115 22:02:11.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.422" endtime="20201115 22:02:11.935"></status>
</kw>
<msg timestamp="20201115 22:02:11.935" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.959" endtime="20201115 22:02:11.986"></status>
</kw>
<msg timestamp="20201115 22:02:11.987" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.955" endtime="20201115 22:02:11.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.994" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.989" endtime="20201115 22:02:11.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.996" endtime="20201115 22:02:12.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.948" endtime="20201115 22:02:12.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.942" endtime="20201115 22:02:12.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.020" endtime="20201115 22:02:12.362"></status>
</kw>
<msg timestamp="20201115 22:02:12.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043171556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043181833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.016" endtime="20201115 22:02:12.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043171556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043181833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.371" endtime="20201115 22:02:12.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.391" endtime="20201115 22:02:12.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.009" endtime="20201115 22:02:12.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.004" endtime="20201115 22:02:12.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:12.409" level="INFO">${RESULT} = [{'time': 0.043181833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0277000000002978e-05, 'source_diff': 1.0277000000002978e-05}, {'time': 0.043464833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:12.399" endtime="20201115 22:02:12.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:12.440" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:12.411" endtime="20201115 22:02:12.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.452" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:02:12.449" endtime="20201115 22:02:12.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.458" level="INFO">VALUE: [1.0277000000002978e-05, 1.0250000000003312e-05, 1.0278000000002452e-05, 1.0319000000001688e-05, 1.0249999999996373e-05, 1.0263999999995943e-05, 1.0278000000002452e-05, 1.0264000000002882e-05, 1.0277999999995513e-05, 1.0249999999996373e-05, 1.0263999999995943e-05, 1.0222000000004172e-05, 1.0236000000003742e-05, 1.0195000000004506e-05, 1.0250000000003312e-05, 1.0264000000002882e-05, 1.0264000000002882e-05, 1.0237000000003216e-05, 1.0236000000003742e-05, 1.0334000000000731e-05, 1.0249999999996373e-05, 1.0250000000003312e-05, 1.0235999999996803e-05, 1.0277999999995513e-05, 1.0277999999995513e-05, 1.0209000000004076e-05, 1.0250000000003312e-05, 1.0249999999996373e-05, 1.026299999999647e-05, 1.0264000000002882e-05, 1.0278000000002452e-05, 1.0249999999996373e-05, 1.0236000000003742e-05, 1.0264000000002882e-05, 1.0221999999997233e-05, 1.0221999999997233e-05, 1.0250000000003312e-05, 1.0249999999996373e-05, 1.0264000000002882e-05, 1.0263999999995943e-05, 1.0264000000002882e-05, 1.0250000000003312e-05, 1.0264000000002882e-05, 1.0263999999995943e-05, 1.0264000000002882e-05, 1.0263999999995943e-05, 1.0263999999995943e-05, 1.0179999999998524e-05, 1.0263999999995943e-05, 1.0264000000002882e-05]</msg>
<status status="PASS" starttime="20201115 22:02:12.455" endtime="20201115 22:02:12.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.442" endtime="20201115 22:02:12.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.467" endtime="20201115 22:02:12.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:12.475" endtime="20201115 22:02:12.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.471" endtime="20201115 22:02:12.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.462" endtime="20201115 22:02:12.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.936" endtime="20201115 22:02:12.501"></status>
</kw>
<msg timestamp="20201115 22:02:12.502" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.525" endtime="20201115 22:02:12.552"></status>
</kw>
<msg timestamp="20201115 22:02:12.554" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.522" endtime="20201115 22:02:12.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.560" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.556" endtime="20201115 22:02:12.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.562" endtime="20201115 22:02:12.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.514" endtime="20201115 22:02:12.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.508" endtime="20201115 22:02:12.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.586" endtime="20201115 22:02:12.927"></status>
</kw>
<msg timestamp="20201115 22:02:12.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043346653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043356944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.583" endtime="20201115 22:02:12.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043346653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043356944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.937" endtime="20201115 22:02:12.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.955" endtime="20201115 22:02:12.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.575" endtime="20201115 22:02:12.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.571" endtime="20201115 22:02:12.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:12.973" level="INFO">${RESULT} = [{'time': 0.043356944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0291000000002548e-05, 'source_diff': 1.0291000000002548e-05}, {'time': 0.043638056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:12.964" endtime="20201115 22:02:12.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:13.004" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:12.975" endtime="20201115 22:02:13.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.016" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:02:13.013" endtime="20201115 22:02:13.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.021" level="INFO">VALUE: [1.0291000000002548e-05, 1.0264000000002882e-05, 1.0263999999995943e-05, 1.0236000000003742e-05, 1.0249999999996373e-05, 1.0263999999995943e-05, 1.027699999999604e-05, 1.0250000000003312e-05, 1.0263999999995943e-05, 1.0235999999996803e-05, 1.0250000000003312e-05, 1.026299999999647e-05, 1.0235999999996803e-05, 1.0263999999995943e-05, 1.0278000000002452e-05, 1.0291000000002548e-05, 1.0249999999996373e-05, 1.0319000000001688e-05, 1.0249999999996373e-05, 1.0264000000002882e-05, 1.0249999999996373e-05, 1.0249999999996373e-05, 1.0221999999997233e-05, 1.0250000000003312e-05, 1.0291000000002548e-05, 1.0236000000003742e-05, 1.0264000000002882e-05, 1.0264000000002882e-05, 1.0263999999995943e-05, 1.0249999999996373e-05, 1.0264000000002882e-05, 1.0236000000003742e-05, 1.0277999999995513e-05, 1.0264000000002882e-05, 1.0264000000002882e-05, 1.0264000000002882e-05, 1.0250000000003312e-05, 1.0221999999997233e-05, 1.0277999999995513e-05, 1.027699999999604e-05, 1.0236999999996277e-05, 1.026299999999647e-05, 1.0207999999997663e-05, 1.0236000000003742e-05, 1.0249999999996373e-05, 1.0264000000002882e-05, 1.026299999999647e-05, 1.0278000000002452e-05, 1.0263000000003408e-05, 1.0263000000003408e-05]</msg>
<status status="PASS" starttime="20201115 22:02:13.018" endtime="20201115 22:02:13.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.006" endtime="20201115 22:02:13.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.031" endtime="20201115 22:02:13.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:13.040" endtime="20201115 22:02:13.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.035" endtime="20201115 22:02:13.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.027" endtime="20201115 22:02:13.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.503" endtime="20201115 22:02:13.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.285" endtime="20201115 22:02:13.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.284" endtime="20201115 22:02:13.066"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.071" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.095" endtime="20201115 22:02:13.122"></status>
</kw>
<msg timestamp="20201115 22:02:13.124" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.091" endtime="20201115 22:02:13.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.130" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.126" endtime="20201115 22:02:13.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.132" endtime="20201115 22:02:13.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.084" endtime="20201115 22:02:13.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.078" endtime="20201115 22:02:13.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.162" endtime="20201115 22:02:13.504"></status>
</kw>
<msg timestamp="20201115 22:02:13.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048472139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048482625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.158" endtime="20201115 22:02:13.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048472139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048482625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.513" endtime="20201115 22:02:13.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.532" endtime="20201115 22:02:13.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.151" endtime="20201115 22:02:13.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.146" endtime="20201115 22:02:13.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:13.550" level="INFO">${RESULT} = [{'time': 0.048482625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0486000000003992e-05, 'source_diff': 1.0486000000003992e-05}, {'time': 0.048781778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:13.541" endtime="20201115 22:02:13.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:13.581" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:13.552" endtime="20201115 22:02:13.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.592" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:02:13.589" endtime="20201115 22:02:13.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.599" level="INFO">VALUE: [1.0486000000003992e-05, 1.0444999999997817e-05, 1.0499999999996623e-05, 1.0485999999997053e-05, 1.0485999999997053e-05, 1.0471999999997483e-05, 1.0486000000003992e-05, 1.0514000000003132e-05, 1.0457999999997913e-05, 1.0486000000003992e-05, 1.0486000000003992e-05, 1.0471999999997483e-05, 1.0472000000004422e-05, 1.0472999999996957e-05, 1.0402999999999107e-05, 1.0471999999997483e-05, 1.0485999999997053e-05, 1.0472999999996957e-05, 1.0514000000003132e-05, 1.0429999999998774e-05, 1.0472000000004422e-05, 1.0500000000003562e-05, 1.0486000000003992e-05, 1.0542000000002272e-05, 1.0472999999996957e-05, 1.0486000000003992e-05, 1.0471999999997483e-05, 1.0514000000003132e-05, 1.0471999999997483e-05, 1.0485999999997053e-05, 1.0499999999996623e-05, 1.0485999999997053e-05, 1.0429999999998774e-05, 1.0528000000002702e-05, 1.0472000000004422e-05, 1.0445000000004756e-05, 1.0499999999996623e-05, 1.0471999999997483e-05, 1.0443999999998343e-05, 1.0445000000004756e-05, 1.0471999999997483e-05, 1.0499999999996623e-05, 1.0486000000003992e-05, 1.0458000000004852e-05, 1.0458999999997387e-05, 1.0485999999997053e-05, 1.0500000000003562e-05, 1.0486000000003992e-05, 1.0486000000003992e-05, 1.0486000000003992e-05]</msg>
<status status="PASS" starttime="20201115 22:02:13.594" endtime="20201115 22:02:13.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.583" endtime="20201115 22:02:13.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.608" endtime="20201115 22:02:13.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:13.616" endtime="20201115 22:02:13.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.612" endtime="20201115 22:02:13.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.603" endtime="20201115 22:02:13.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.072" endtime="20201115 22:02:13.642"></status>
</kw>
<msg timestamp="20201115 22:02:13.642" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.666" endtime="20201115 22:02:13.694"></status>
</kw>
<msg timestamp="20201115 22:02:13.696" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.662" endtime="20201115 22:02:13.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.702" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.698" endtime="20201115 22:02:13.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.704" endtime="20201115 22:02:13.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.655" endtime="20201115 22:02:13.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.649" endtime="20201115 22:02:13.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.728" endtime="20201115 22:02:14.069"></status>
</kw>
<msg timestamp="20201115 22:02:14.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043255444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043265931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.725" endtime="20201115 22:02:14.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043255444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043265931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.079" endtime="20201115 22:02:14.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.097" endtime="20201115 22:02:14.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.717" endtime="20201115 22:02:14.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.713" endtime="20201115 22:02:14.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:14.115" level="INFO">${RESULT} = [{'time': 0.043265931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0487000000003466e-05, 'source_diff': 1.0487000000003466e-05}, {'time': 0.043562569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:14.106" endtime="20201115 22:02:14.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:14.148" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:14.117" endtime="20201115 22:02:14.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.159" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:02:14.157" endtime="20201115 22:02:14.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.165" level="INFO">VALUE: [1.0487000000003466e-05, 1.0472000000004422e-05, 1.0457999999997913e-05, 1.0485999999997053e-05, 1.0485999999997053e-05, 1.0471999999997483e-05, 1.0472000000004422e-05, 1.0542000000002272e-05, 1.0471999999997483e-05, 1.0487000000003466e-05, 1.0486000000003992e-05, 1.0542000000002272e-05, 1.0541999999995333e-05, 1.0500000000003562e-05, 1.0471999999997483e-05, 1.0513999999996193e-05, 1.0514000000003132e-05, 1.0513999999996193e-05, 1.0472000000004422e-05, 1.0471999999997483e-05, 1.0500000000003562e-05, 1.0444999999997817e-05, 1.0499999999996623e-05, 1.0458000000004852e-05, 1.0458000000004852e-05, 1.0458999999997387e-05, 1.0555999999994903e-05, 1.0457999999997913e-05, 1.0486000000003992e-05, 1.0471999999997483e-05, 1.0486000000003992e-05, 1.0472999999996957e-05, 1.0500000000003562e-05, 1.0499999999996623e-05, 1.0471999999997483e-05, 1.0485999999997053e-05, 1.0485999999997053e-05, 1.0458000000004852e-05, 1.0444999999997817e-05, 1.0445000000004756e-05, 1.0499999999996623e-05, 1.0457999999997913e-05, 1.0499999999996623e-05, 1.0486000000003992e-05, 1.0485999999997053e-05, 1.0500000000003562e-05, 1.0485999999997053e-05, 1.0457999999997913e-05, 1.0528000000002702e-05, 1.0471999999997483e-05]</msg>
<status status="PASS" starttime="20201115 22:02:14.161" endtime="20201115 22:02:14.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.150" endtime="20201115 22:02:14.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.174" endtime="20201115 22:02:14.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:14.183" endtime="20201115 22:02:14.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.179" endtime="20201115 22:02:14.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.169" endtime="20201115 22:02:14.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.643" endtime="20201115 22:02:14.209"></status>
</kw>
<msg timestamp="20201115 22:02:14.209" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.234" endtime="20201115 22:02:14.262"></status>
</kw>
<msg timestamp="20201115 22:02:14.263" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.230" endtime="20201115 22:02:14.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.269" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.265" endtime="20201115 22:02:14.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.272" endtime="20201115 22:02:14.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.223" endtime="20201115 22:02:14.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.216" endtime="20201115 22:02:14.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.296" endtime="20201115 22:02:14.639"></status>
</kw>
<msg timestamp="20201115 22:02:14.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043930847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043941319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.292" endtime="20201115 22:02:14.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043930847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043941319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.648" endtime="20201115 22:02:14.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.666" endtime="20201115 22:02:14.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.285" endtime="20201115 22:02:14.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.280" endtime="20201115 22:02:14.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:14.684" level="INFO">${RESULT} = [{'time': 0.043941319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0471999999997483e-05, 'source_diff': 1.0471999999997483e-05}, {'time': 0.044245889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:14.675" endtime="20201115 22:02:14.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:14.715" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:14.686" endtime="20201115 22:02:14.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.727" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:02:14.724" endtime="20201115 22:02:14.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.732" level="INFO">VALUE: [1.0471999999997483e-05, 1.0444999999997817e-05, 1.0472999999996957e-05, 1.0472000000004422e-05, 1.0471999999997483e-05, 1.0471999999997483e-05, 1.0568999999994999e-05, 1.0471999999997483e-05, 1.0457999999997913e-05, 1.0471999999997483e-05, 1.0459000000004326e-05, 1.0472999999996957e-05, 1.0471999999997483e-05, 1.0472000000004422e-05, 1.0499999999996623e-05, 1.0444999999997817e-05, 1.0458000000004852e-05, 1.0472000000004422e-05, 1.054099999999586e-05, 1.0430000000005712e-05, 1.0485999999997053e-05, 1.0499999999996623e-05, 1.0444000000005282e-05, 1.0471999999997483e-05, 1.0486000000003992e-05, 1.0486000000003992e-05, 1.0471999999997483e-05, 1.0443999999998343e-05, 1.0458000000004852e-05, 1.0472999999996957e-05, 1.0485999999997053e-05, 1.0471999999997483e-05, 1.0458000000004852e-05, 1.0471999999997483e-05, 1.0486999999996527e-05, 1.0486000000003992e-05, 1.0485999999997053e-05, 1.0472999999996957e-05, 1.0459000000004326e-05, 1.0459000000004326e-05, 1.0471999999997483e-05, 1.0485999999997053e-05, 1.0471999999997483e-05, 1.0457999999997913e-05, 1.0486000000003992e-05, 1.0472000000004422e-05, 1.0402999999999107e-05, 1.0487000000003466e-05, 1.0486000000003992e-05, 1.0485999999997053e-05]</msg>
<status status="PASS" starttime="20201115 22:02:14.729" endtime="20201115 22:02:14.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.717" endtime="20201115 22:02:14.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.741" endtime="20201115 22:02:14.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:14.751" endtime="20201115 22:02:14.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.745" endtime="20201115 22:02:14.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.737" endtime="20201115 22:02:14.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.211" endtime="20201115 22:02:14.778"></status>
</kw>
<msg timestamp="20201115 22:02:14.778" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.801" endtime="20201115 22:02:14.829"></status>
</kw>
<msg timestamp="20201115 22:02:14.830" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.798" endtime="20201115 22:02:14.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.837" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.833" endtime="20201115 22:02:14.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.839" endtime="20201115 22:02:14.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.791" endtime="20201115 22:02:14.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.785" endtime="20201115 22:02:14.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.863" endtime="20201115 22:02:15.168"></status>
</kw>
<msg timestamp="20201115 22:02:15.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043326319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043336833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.859" endtime="20201115 22:02:15.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043326319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043336833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.178" endtime="20201115 22:02:15.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.196" endtime="20201115 22:02:15.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.852" endtime="20201115 22:02:15.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.847" endtime="20201115 22:02:15.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:15.214" level="INFO">${RESULT} = [{'time': 0.043336833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0513999999996193e-05, 'source_diff': 1.0513999999996193e-05}, {'time': 0.043637208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:15.205" endtime="20201115 22:02:15.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:15.245" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:15.217" endtime="20201115 22:02:15.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.257" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:02:15.254" endtime="20201115 22:02:15.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.262" level="INFO">VALUE: [1.0513999999996193e-05, 1.0485999999997053e-05, 1.0471999999997483e-05, 1.0584000000000982e-05, 1.0486000000003992e-05, 1.0487000000003466e-05, 1.0472999999996957e-05, 1.0485999999997053e-05, 1.0471999999997483e-05, 1.0457999999997913e-05, 1.0457999999997913e-05, 1.0471999999997483e-05, 1.0472000000004422e-05, 1.0430999999998247e-05, 1.0514000000003132e-05, 1.0485999999997053e-05, 1.0471999999997483e-05, 1.0430999999998247e-05, 1.0472999999996957e-05, 1.0471999999997483e-05, 1.0499999999996623e-05, 1.0472999999996957e-05, 1.0499999999996623e-05, 1.0457999999997913e-05, 1.0500000000003562e-05, 1.0458999999997387e-05, 1.0485999999997053e-05, 1.0528000000002702e-05, 1.0486000000003992e-05, 1.0458000000004852e-05, 1.0444000000005282e-05, 1.0473000000003896e-05, 1.0473000000003896e-05, 1.0457999999997913e-05, 1.0486000000003992e-05, 1.0486999999996527e-05, 1.0471999999997483e-05, 1.0485999999997053e-05, 1.0471999999997483e-05, 1.0457999999997913e-05, 1.0486000000003992e-05, 1.0500000000003562e-05, 1.0471999999997483e-05, 1.0472999999996957e-05, 1.0486000000003992e-05, 1.0472999999996957e-05, 1.0443999999998343e-05, 1.0471999999997483e-05, 1.0457999999997913e-05, 1.0472000000004422e-05]</msg>
<status status="PASS" starttime="20201115 22:02:15.259" endtime="20201115 22:02:15.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.247" endtime="20201115 22:02:15.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.272" endtime="20201115 22:02:15.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:15.281" endtime="20201115 22:02:15.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.276" endtime="20201115 22:02:15.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.267" endtime="20201115 22:02:15.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.779" endtime="20201115 22:02:15.307"></status>
</kw>
<msg timestamp="20201115 22:02:15.308" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.333" endtime="20201115 22:02:15.361"></status>
</kw>
<msg timestamp="20201115 22:02:15.362" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.329" endtime="20201115 22:02:15.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.368" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.364" endtime="20201115 22:02:15.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.371" endtime="20201115 22:02:15.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.322" endtime="20201115 22:02:15.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.315" endtime="20201115 22:02:15.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.395" endtime="20201115 22:02:15.736"></status>
</kw>
<msg timestamp="20201115 22:02:15.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045637014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045647528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.391" endtime="20201115 22:02:15.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045637014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045647528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.745" endtime="20201115 22:02:15.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.764" endtime="20201115 22:02:15.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.384" endtime="20201115 22:02:15.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.379" endtime="20201115 22:02:15.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:15.781" level="INFO">${RESULT} = [{'time': 0.045647528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0514000000003132e-05, 'source_diff': 1.0514000000003132e-05}, {'time': 0.045952889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:15.772" endtime="20201115 22:02:15.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:15.812" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:15.784" endtime="20201115 22:02:15.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.823" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:02:15.821" endtime="20201115 22:02:15.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.829" level="INFO">VALUE: [1.0514000000003132e-05, 1.0485999999997053e-05, 1.0472000000004422e-05, 1.0472999999996957e-05, 1.0500000000003562e-05, 1.0471999999997483e-05, 1.0499999999996623e-05, 1.0473000000003896e-05, 1.0472999999996957e-05, 1.0458999999997387e-05, 1.0471999999997483e-05, 1.0485999999997053e-05, 1.0487000000003466e-05, 1.0485999999997053e-05, 1.0401999999999634e-05, 1.0458000000004852e-05, 1.0500000000003562e-05, 1.0457999999997913e-05, 1.0499999999996623e-05, 1.0471999999997483e-05, 1.0486000000003992e-05, 1.0499999999996623e-05, 1.0500000000003562e-05, 1.0513999999996193e-05, 1.0444999999997817e-05, 1.0471999999997483e-05, 1.0500000000003562e-05, 1.0472000000004422e-05, 1.0485999999997053e-05, 1.0472000000004422e-05, 1.0473000000003896e-05, 1.0513999999996193e-05, 1.0473000000003896e-05, 1.0457999999997913e-05, 1.0486000000003992e-05, 1.0457999999997913e-05, 1.0485999999997053e-05, 1.0486000000003992e-05, 1.0471999999997483e-05, 1.0500000000003562e-05, 1.0500000000003562e-05, 1.0457999999997913e-05, 1.0485999999997053e-05, 1.0485999999997053e-05, 1.0485999999997053e-05, 1.0472000000004422e-05, 1.0458999999997387e-05, 1.0473000000003896e-05, 1.0471999999997483e-05, 1.0570000000001412e-05]</msg>
<status status="PASS" starttime="20201115 22:02:15.826" endtime="20201115 22:02:15.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.814" endtime="20201115 22:02:15.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.839" endtime="20201115 22:02:15.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:15.847" endtime="20201115 22:02:15.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.843" endtime="20201115 22:02:15.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.834" endtime="20201115 22:02:15.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.309" endtime="20201115 22:02:15.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.069" endtime="20201115 22:02:15.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.067" endtime="20201115 22:02:15.874"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.879" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.902" endtime="20201115 22:02:15.933"></status>
</kw>
<msg timestamp="20201115 22:02:15.934" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.898" endtime="20201115 22:02:15.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.940" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.936" endtime="20201115 22:02:15.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.943" endtime="20201115 22:02:15.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.891" endtime="20201115 22:02:15.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.885" endtime="20201115 22:02:15.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.966" endtime="20201115 22:02:16.306"></status>
</kw>
<msg timestamp="20201115 22:02:16.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050547125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050557778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.963" endtime="20201115 22:02:16.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050547125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050557778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.316" endtime="20201115 22:02:16.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.335" endtime="20201115 22:02:16.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.956" endtime="20201115 22:02:16.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.951" endtime="20201115 22:02:16.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:16.354" level="INFO">${RESULT} = [{'time': 0.050557778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.050866347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:16.345" endtime="20201115 22:02:16.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:16.387" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:16.356" endtime="20201115 22:02:16.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.398" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:02:16.396" endtime="20201115 22:02:16.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.404" level="INFO">VALUE: [1.0652999999999357e-05, 1.0679999999999024e-05, 1.0666999999998927e-05, 1.0638000000000314e-05, 1.0708999999997637e-05, 1.0638999999999788e-05, 1.0680999999998497e-05, 1.0707999999998163e-05, 1.0666999999998927e-05, 1.0666999999998927e-05, 1.0667000000005866e-05, 1.0694999999998067e-05, 1.0679999999999024e-05, 1.0666999999998927e-05, 1.0624999999993279e-05, 1.0679999999999024e-05, 1.0679999999999024e-05, 1.0695000000005006e-05, 1.0652999999999357e-05, 1.0666999999998927e-05, 1.0652999999999357e-05, 1.0679999999999024e-05, 1.0694999999998067e-05, 1.0764000000003382e-05, 1.0680999999998497e-05, 1.0651999999999884e-05, 1.0680999999998497e-05, 1.0625000000000218e-05, 1.0666999999998927e-05, 1.0666999999998927e-05, 1.0666999999998927e-05, 1.0652999999999357e-05, 1.0667000000005866e-05, 1.0652999999999357e-05, 1.0708999999997637e-05, 1.0679999999999024e-05, 1.0611000000000648e-05, 1.0666999999998927e-05, 1.0666999999998927e-05, 1.0652999999999357e-05, 1.0651999999999884e-05, 1.0680999999998497e-05, 1.0667000000005866e-05, 1.0666999999991988e-05, 1.0667000000005866e-05, 1.0680999999998497e-05, 1.0680999999998497e-05, 1.061200000000706e-05, 1.0680999999998497e-05, 1.0652999999999357e-05]</msg>
<status status="PASS" starttime="20201115 22:02:16.400" endtime="20201115 22:02:16.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.389" endtime="20201115 22:02:16.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.414" endtime="20201115 22:02:16.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:16.422" endtime="20201115 22:02:16.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.418" endtime="20201115 22:02:16.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.409" endtime="20201115 22:02:16.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.880" endtime="20201115 22:02:16.448"></status>
</kw>
<msg timestamp="20201115 22:02:16.448" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.472" endtime="20201115 22:02:16.501"></status>
</kw>
<msg timestamp="20201115 22:02:16.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.468" endtime="20201115 22:02:16.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.509" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.505" endtime="20201115 22:02:16.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.511" endtime="20201115 22:02:16.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.461" endtime="20201115 22:02:16.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.455" endtime="20201115 22:02:16.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.537" endtime="20201115 22:02:16.877"></status>
</kw>
<msg timestamp="20201115 22:02:16.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043443431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043454097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.533" endtime="20201115 22:02:16.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043443431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043454097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.887" endtime="20201115 22:02:16.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.906" endtime="20201115 22:02:16.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.524" endtime="20201115 22:02:16.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.519" endtime="20201115 22:02:16.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:16.923" level="INFO">${RESULT} = [{'time': 0.043454097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0665999999999454e-05, 'source_diff': 1.0665999999999454e-05}, {'time': 0.043770806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:16.914" endtime="20201115 22:02:16.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:16.954" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:16.925" endtime="20201115 22:02:16.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.966" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:02:16.963" endtime="20201115 22:02:16.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.971" level="INFO">VALUE: [1.0665999999999454e-05, 1.0666999999998927e-05, 1.0695000000005006e-05, 1.0666999999998927e-05, 1.0709000000004576e-05, 1.0693999999998594e-05, 1.0666000000006393e-05, 1.0679999999999024e-05, 1.0666999999998927e-05, 1.0694999999998067e-05, 1.0666999999998927e-05, 1.0665999999999454e-05, 1.0652999999999357e-05, 1.0693999999998594e-05, 1.0680999999998497e-05, 1.0665999999999454e-05, 1.0665999999999454e-05, 1.0666999999998927e-05, 1.0651999999999884e-05, 1.0612000000000121e-05, 1.0679999999999024e-05, 1.0665999999999454e-05, 1.0665999999999454e-05, 1.0652999999999357e-05, 1.0693999999998594e-05, 1.0694999999998067e-05, 1.0665999999999454e-05, 1.0666999999998927e-05, 1.0693999999998594e-05, 1.0638999999999788e-05, 1.0665999999999454e-05, 1.0638999999999788e-05, 1.0681000000005436e-05, 1.0652999999999357e-05, 1.0652999999999357e-05, 1.0679999999999024e-05, 1.0693999999998594e-05, 1.0680999999998497e-05, 1.0652999999999357e-05, 1.0652999999999357e-05, 1.0694999999998067e-05, 1.0694999999998067e-05, 1.0693999999998594e-05, 1.0638000000000314e-05, 1.0680999999998497e-05, 1.0666000000006393e-05, 1.0652999999999357e-05, 1.0694999999998067e-05, 1.0679999999999024e-05, 1.0680999999998497e-05]</msg>
<status status="PASS" starttime="20201115 22:02:16.968" endtime="20201115 22:02:16.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.956" endtime="20201115 22:02:16.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.980" endtime="20201115 22:02:16.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:16.989" endtime="20201115 22:02:17.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.984" endtime="20201115 22:02:17.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.976" endtime="20201115 22:02:17.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.450" endtime="20201115 22:02:17.015"></status>
</kw>
<msg timestamp="20201115 22:02:17.015" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.038" endtime="20201115 22:02:17.067"></status>
</kw>
<msg timestamp="20201115 22:02:17.069" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.035" endtime="20201115 22:02:17.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.075" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.071" endtime="20201115 22:02:17.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.077" endtime="20201115 22:02:17.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.028" endtime="20201115 22:02:17.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.022" endtime="20201115 22:02:17.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.101" endtime="20201115 22:02:17.444"></status>
</kw>
<msg timestamp="20201115 22:02:17.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043770889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043781597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.098" endtime="20201115 22:02:17.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043770889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043781597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.453" endtime="20201115 22:02:17.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.472" endtime="20201115 22:02:17.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.090" endtime="20201115 22:02:17.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.086" endtime="20201115 22:02:17.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:17.491" level="INFO">${RESULT} = [{'time': 0.043781597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.044098625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:17.481" endtime="20201115 22:02:17.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:17.521" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:17.493" endtime="20201115 22:02:17.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.532" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:02:17.530" endtime="20201115 22:02:17.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.538" level="INFO">VALUE: [1.0707999999998163e-05, 1.0652999999999357e-05, 1.0694999999998067e-05, 1.0694999999998067e-05, 1.0680999999998497e-05, 1.0693999999998594e-05, 1.0680999999998497e-05, 1.0651999999999884e-05, 1.0666999999998927e-05, 1.0665999999999454e-05, 1.0679999999999024e-05, 1.0679999999999024e-05, 1.0693999999998594e-05, 1.0679999999999024e-05, 1.0665999999999454e-05, 1.0666999999998927e-05, 1.0666999999998927e-05, 1.0681000000005436e-05, 1.0625000000000218e-05, 1.0707999999998163e-05, 1.0679999999999024e-05, 1.0667000000005866e-05, 1.0680999999998497e-05, 1.0666999999998927e-05, 1.0681000000005436e-05, 1.0680999999998497e-05, 1.0638999999999788e-05, 1.0666999999998927e-05, 1.0693999999998594e-05, 1.0694999999998067e-05, 1.0667000000005866e-05, 1.0652999999999357e-05, 1.0652999999999357e-05, 1.0680999999998497e-05, 1.0680999999998497e-05, 1.0679999999999024e-05, 1.0638999999999788e-05, 1.0667000000005866e-05, 1.0651999999999884e-05, 1.0638999999999788e-05, 1.0667000000005866e-05, 1.0666999999998927e-05, 1.0667000000005866e-05, 1.0707999999998163e-05, 1.0666999999998927e-05, 1.0666999999998927e-05, 1.0694000000005532e-05, 1.0666999999998927e-05, 1.0679999999999024e-05, 1.0679999999999024e-05]</msg>
<status status="PASS" starttime="20201115 22:02:17.535" endtime="20201115 22:02:17.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.523" endtime="20201115 22:02:17.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.547" endtime="20201115 22:02:17.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:17.555" endtime="20201115 22:02:17.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.551" endtime="20201115 22:02:17.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.542" endtime="20201115 22:02:17.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.016" endtime="20201115 22:02:17.581"></status>
</kw>
<msg timestamp="20201115 22:02:17.582" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.605" endtime="20201115 22:02:17.634"></status>
</kw>
<msg timestamp="20201115 22:02:17.635" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.602" endtime="20201115 22:02:17.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.641" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.637" endtime="20201115 22:02:17.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.644" endtime="20201115 22:02:17.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.594" endtime="20201115 22:02:17.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.588" endtime="20201115 22:02:17.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.668" endtime="20201115 22:02:18.012"></status>
</kw>
<msg timestamp="20201115 22:02:18.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043459069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043469792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.664" endtime="20201115 22:02:18.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043459069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043469792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.021" endtime="20201115 22:02:18.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.040" endtime="20201115 22:02:18.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.657" endtime="20201115 22:02:18.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.652" endtime="20201115 22:02:18.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:18.058" level="INFO">${RESULT} = [{'time': 0.043469792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0722999999997207e-05, 'source_diff': 1.0722999999997207e-05}, {'time': 0.043777472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:18.049" endtime="20201115 22:02:18.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:18.089" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:18.060" endtime="20201115 22:02:18.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.100" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:02:18.098" endtime="20201115 22:02:18.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.106" level="INFO">VALUE: [1.0722999999997207e-05, 1.0638999999999788e-05, 1.0680999999998497e-05, 1.0666999999998927e-05, 1.0665999999999454e-05, 1.0666999999998927e-05, 1.0666999999998927e-05, 1.0652999999999357e-05, 1.0680999999998497e-05, 1.0666999999998927e-05, 1.0666999999998927e-05, 1.0665999999999454e-05, 1.0666999999998927e-05, 1.0681000000005436e-05, 1.0680999999998497e-05, 1.0666999999998927e-05, 1.0666999999998927e-05, 1.0652999999999357e-05, 1.0597000000001078e-05, 1.0625000000000218e-05, 1.0665999999999454e-05, 1.0723000000004146e-05, 1.0665999999999454e-05, 1.0693999999998594e-05, 1.0680999999998497e-05, 1.0695000000005006e-05, 1.0651999999999884e-05, 1.0666999999998927e-05, 1.0693999999998594e-05, 1.0665999999999454e-05, 1.0667000000005866e-05, 1.0652999999999357e-05, 1.0679999999999024e-05, 1.0681000000005436e-05, 1.0652999999999357e-05, 1.0652999999999357e-05, 1.0680999999998497e-05, 1.0666999999998927e-05, 1.0679999999999024e-05, 1.0680999999998497e-05, 1.0651999999999884e-05, 1.0666999999998927e-05, 1.0707999999998163e-05, 1.0679999999999024e-05, 1.0651999999999884e-05, 1.0638999999999788e-05, 1.0652999999999357e-05, 1.0666999999998927e-05, 1.0680999999998497e-05, 1.0652999999999357e-05]</msg>
<status status="PASS" starttime="20201115 22:02:18.103" endtime="20201115 22:02:18.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.091" endtime="20201115 22:02:18.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.115" endtime="20201115 22:02:18.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:18.124" endtime="20201115 22:02:18.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.119" endtime="20201115 22:02:18.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.110" endtime="20201115 22:02:18.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.583" endtime="20201115 22:02:18.150"></status>
</kw>
<msg timestamp="20201115 22:02:18.150" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.174" endtime="20201115 22:02:18.203"></status>
</kw>
<msg timestamp="20201115 22:02:18.204" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.170" endtime="20201115 22:02:18.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.210" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.206" endtime="20201115 22:02:18.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.213" endtime="20201115 22:02:18.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.163" endtime="20201115 22:02:18.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.157" endtime="20201115 22:02:18.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.237" endtime="20201115 22:02:18.561"></status>
</kw>
<msg timestamp="20201115 22:02:18.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043393083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04340375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:18.233" endtime="20201115 22:02:18.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043393083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04340375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:18.575" endtime="20201115 22:02:18.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.594" endtime="20201115 22:02:18.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.226" endtime="20201115 22:02:18.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.221" endtime="20201115 22:02:18.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:18.613" level="INFO">${RESULT} = [{'time': 0.04340375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0666999999998927e-05, 'source_diff': 1.0666999999998927e-05}, {'time': 0.043713569, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:18.604" endtime="20201115 22:02:18.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:18.646" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:02:18.615" endtime="20201115 22:02:18.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.657" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:02:18.655" endtime="20201115 22:02:18.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.663" level="INFO">VALUE: [1.0666999999998927e-05, 1.0693999999998594e-05, 1.0652999999999357e-05, 1.0694999999998067e-05, 1.0681000000005436e-05, 1.0666999999998927e-05, 1.0651999999999884e-05, 1.0722999999997207e-05, 1.0679999999999024e-05, 1.0680999999998497e-05, 1.0679999999999024e-05, 1.0666999999998927e-05, 1.0652999999999357e-05, 1.0680999999998497e-05, 1.0680999999998497e-05, 1.0666999999998927e-05, 1.0652999999999357e-05, 1.0625000000000218e-05, 1.0693999999998594e-05, 1.0693999999998594e-05, 1.0625000000000218e-05, 1.0679999999999024e-05, 1.0707999999998163e-05, 1.0667000000005866e-05, 1.0680999999998497e-05, 1.0651999999999884e-05, 1.0638999999999788e-05, 1.0667000000005866e-05, 1.0680999999998497e-05, 1.0680999999998497e-05, 1.0679999999999024e-05, 1.0666999999998927e-05, 1.0680999999998497e-05, 1.0679999999999024e-05, 1.0652999999999357e-05, 1.0680999999998497e-05, 1.0652999999999357e-05, 1.0694999999998067e-05, 1.0625000000000218e-05, 1.0708999999997637e-05, 1.0666999999998927e-05, 1.0693999999998594e-05, 1.0679999999999024e-05, 1.0680999999998497e-05, 1.0709000000004576e-05, 1.0666999999998927e-05, 1.0666999999998927e-05, 1.0693999999998594e-05, 1.0638000000000314e-05, 1.0708999999997637e-05]</msg>
<status status="PASS" starttime="20201115 22:02:18.660" endtime="20201115 22:02:18.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.648" endtime="20201115 22:02:18.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.672" endtime="20201115 22:02:18.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:18.681" endtime="20201115 22:02:18.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.676" endtime="20201115 22:02:18.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.667" endtime="20201115 22:02:18.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.151" endtime="20201115 22:02:18.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.876" endtime="20201115 22:02:18.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.875" endtime="20201115 22:02:18.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.221" endtime="20201115 22:02:18.707"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:18.718" endtime="20201115 22:02:18.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.714" endtime="20201115 22:02:18.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.711" endtime="20201115 22:02:18.742"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:09.088" endtime="20201115 22:02:18.743" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 21:59:51.674" endtime="20201115 22:02:18.758"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 21:59:47.868" endtime="20201115 22:02:18.807"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
