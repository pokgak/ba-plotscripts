<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201115 22:02:28.139" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.404" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:02:29.420" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:02:31.264" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:02:29.400" endtime="20201115 22:02:31.265"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.271" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:02:31.267" endtime="20201115 22:02:31.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.397" endtime="20201115 22:02:31.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:31.278" endtime="20201115 22:02:31.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.275" endtime="20201115 22:02:31.613"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.643" endtime="20201115 22:02:31.664"></status>
</kw>
<msg timestamp="20201115 22:02:31.665" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.640" endtime="20201115 22:02:31.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.672" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.668" endtime="20201115 22:02:31.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.679" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:31.675" endtime="20201115 22:02:31.680"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:31.634" endtime="20201115 22:02:31.682"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:31.628" endtime="20201115 22:02:31.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.625" endtime="20201115 22:02:31.685"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:31.693" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:31.692" endtime="20201115 22:02:31.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.687" endtime="20201115 22:02:31.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.623" endtime="20201115 22:02:31.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.621" endtime="20201115 22:02:31.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.697" endtime="20201115 22:02:31.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.618" endtime="20201115 22:02:31.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.704" endtime="20201115 22:02:31.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.614" endtime="20201115 22:02:31.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.393" endtime="20201115 22:02:31.711"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:31.729" endtime="20201115 22:02:31.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.725" endtime="20201115 22:02:31.753"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.789" endtime="20201115 22:02:31.809"></status>
</kw>
<msg timestamp="20201115 22:02:31.810" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.786" endtime="20201115 22:02:31.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.817" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.813" endtime="20201115 22:02:31.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.825" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:31.820" endtime="20201115 22:02:31.826"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:31.778" endtime="20201115 22:02:31.828"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:31.771" endtime="20201115 22:02:31.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.767" endtime="20201115 22:02:31.830"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:31.839" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:31.838" endtime="20201115 22:02:31.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.833" endtime="20201115 22:02:31.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.766" endtime="20201115 22:02:31.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.764" endtime="20201115 22:02:31.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.843" endtime="20201115 22:02:31.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.759" endtime="20201115 22:02:31.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.755" endtime="20201115 22:02:31.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.722" endtime="20201115 22:02:31.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.872" endtime="20201115 22:02:31.886"></status>
</kw>
<msg timestamp="20201115 22:02:31.887" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.868" endtime="20201115 22:02:31.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.894" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.890" endtime="20201115 22:02:31.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.896" endtime="20201115 22:02:31.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.861" endtime="20201115 22:02:31.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.855" endtime="20201115 22:02:31.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.918" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:02:31.915" endtime="20201115 22:02:31.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.923" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 22:02:31.920" endtime="20201115 22:02:31.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.909" endtime="20201115 22:02:31.925"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:02:31.712" endtime="20201115 22:02:31.928" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:02:28.410" endtime="20201115 22:02:31.939"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.084" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:02:32.099" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:02:34.030" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:02:32.080" endtime="20201115 22:02:34.032"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.037" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:02:34.034" endtime="20201115 22:02:34.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.077" endtime="20201115 22:02:34.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:34.044" endtime="20201115 22:02:34.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.041" endtime="20201115 22:02:34.372"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.401" endtime="20201115 22:02:34.424"></status>
</kw>
<msg timestamp="20201115 22:02:34.425" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201115 22:02:34.398" endtime="20201115 22:02:34.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.432" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201115 22:02:34.428" endtime="20201115 22:02:34.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.439" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:34.434" endtime="20201115 22:02:34.441"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:34.391" endtime="20201115 22:02:34.443"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:34.386" endtime="20201115 22:02:34.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.383" endtime="20201115 22:02:34.445"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:34.453" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:34.452" endtime="20201115 22:02:34.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.447" endtime="20201115 22:02:34.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.381" endtime="20201115 22:02:34.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.380" endtime="20201115 22:02:34.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.457" endtime="20201115 22:02:34.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.377" endtime="20201115 22:02:34.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.464" endtime="20201115 22:02:34.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.373" endtime="20201115 22:02:34.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.074" endtime="20201115 22:02:34.469"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:34.484" endtime="20201115 22:02:34.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.480" endtime="20201115 22:02:34.507"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.540" endtime="20201115 22:02:34.559"></status>
</kw>
<msg timestamp="20201115 22:02:34.561" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.537" endtime="20201115 22:02:34.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.567" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.563" endtime="20201115 22:02:34.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.574" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:34.569" endtime="20201115 22:02:34.574"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:34.530" endtime="20201115 22:02:34.576"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:34.523" endtime="20201115 22:02:34.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.521" endtime="20201115 22:02:34.579"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:34.586" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:34.585" endtime="20201115 22:02:34.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.580" endtime="20201115 22:02:34.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.519" endtime="20201115 22:02:34.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.517" endtime="20201115 22:02:34.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.653" endtime="20201115 22:02:34.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.513" endtime="20201115 22:02:34.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.509" endtime="20201115 22:02:34.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.477" endtime="20201115 22:02:34.661"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:02:34.666" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.686" endtime="20201115 22:02:34.699"></status>
</kw>
<msg timestamp="20201115 22:02:34.700" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.682" endtime="20201115 22:02:34.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.706" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.702" endtime="20201115 22:02:34.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.709" endtime="20201115 22:02:34.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.675" endtime="20201115 22:02:34.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.670" endtime="20201115 22:02:34.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.732" endtime="20201115 22:02:35.066"></status>
</kw>
<msg timestamp="20201115 22:02:35.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.192723236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.19273575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:34.729" endtime="20201115 22:02:35.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.192723236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.19273575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:35.073" endtime="20201115 22:02:35.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.086" endtime="20201115 22:02:35.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.722" endtime="20201115 22:02:35.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.717" endtime="20201115 22:02:35.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:35.103" level="INFO">${RESULT} = [{'time': 0.19273575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.251400000001901e-05, 'source_diff': 1.251400000001901e-05}, {'time': 0.192751403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:35.095" endtime="20201115 22:02:35.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:35.133" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:35.115" endtime="20201115 22:02:35.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.145" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:02:35.142" endtime="20201115 22:02:35.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.150" level="INFO">VALUE: [1.251400000001901e-05, 7.874999999990528e-06, 5.027000000018544e-06, 1.1889000000014915e-05, 1.5166000000010893e-05, 1.1277000000003978e-05, 4.931000000013563e-06, 1.4569999999991534e-05, 3.1530000000057345e-06, 1.4402999999996169e-05, 1.0402999999992169e-05, 1.1305000000016996e-05, 3.8189999999882485e-06, 7.861000000025653e-06, 1.5444000000003344e-05, 3.985999999983614e-06, 2.7220000000105493e-06, 1.2305999999989714e-05, 6.2640000000058205e-06, 4.596999999995077e-06, 7.499999999993623e-06, 1.0874999999993529e-05, 1.3569000000018816e-05, 7.306000000012469e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201115 22:02:35.147" endtime="20201115 22:02:35.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.135" endtime="20201115 22:02:35.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.159" endtime="20201115 22:02:35.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:35.168" endtime="20201115 22:02:35.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.164" endtime="20201115 22:02:35.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.154" endtime="20201115 22:02:35.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.667" endtime="20201115 22:02:35.194"></status>
</kw>
<msg timestamp="20201115 22:02:35.195" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.216" endtime="20201115 22:02:35.230"></status>
</kw>
<msg timestamp="20201115 22:02:35.232" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.213" endtime="20201115 22:02:35.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.238" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.234" endtime="20201115 22:02:35.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.240" endtime="20201115 22:02:35.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.205" endtime="20201115 22:02:35.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.200" endtime="20201115 22:02:35.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.252" endtime="20201115 22:02:35.539"></status>
</kw>
<msg timestamp="20201115 22:02:35.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039031653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039043472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.250" endtime="20201115 22:02:35.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039031653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039043472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.546" endtime="20201115 22:02:35.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.559" endtime="20201115 22:02:35.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.246" endtime="20201115 22:02:35.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.244" endtime="20201115 22:02:35.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:35.576" level="INFO">${RESULT} = [{'time': 0.039043472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1819000000003188e-05, 'source_diff': 1.1819000000003188e-05}, {'time': 0.039059958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:35.568" endtime="20201115 22:02:35.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:35.597" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:35.579" endtime="20201115 22:02:35.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.608" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:02:35.605" endtime="20201115 22:02:35.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.613" level="INFO">VALUE: [1.1819000000003188e-05, 2.7219999999966715e-06, 5.027000000004667e-06, 7.931000000002686e-06, 6.638000000003252e-06, 4.59800000000149e-06, 1.2097000000002578e-05, 1.2735999999999303e-05, 1.1889000000001038e-05, 5.221999999999172e-06, 1.2513999999998193e-05, 1.3541999999998333e-05, 1.5430000000003774e-05, 2.7359999999962414e-06, 1.5223000000001707e-05, 6.2639999999988816e-06, 9.638999999998787e-06, 1.2735999999999303e-05, 1.1513999999997193e-05, 1.4611000000004648e-05, 7.486000000000992e-06, 1.1264000000003882e-05, 1.2112000000001621e-05, 1.4597000000005078e-05, 1.4403000000003108e-05]</msg>
<status status="PASS" starttime="20201115 22:02:35.610" endtime="20201115 22:02:35.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.599" endtime="20201115 22:02:35.617"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.624" endtime="20201115 22:02:35.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:35.632" endtime="20201115 22:02:35.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.628" endtime="20201115 22:02:35.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.619" endtime="20201115 22:02:35.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.196" endtime="20201115 22:02:35.659"></status>
</kw>
<msg timestamp="20201115 22:02:35.659" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.680" endtime="20201115 22:02:35.694"></status>
</kw>
<msg timestamp="20201115 22:02:35.695" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.677" endtime="20201115 22:02:35.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.701" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.697" endtime="20201115 22:02:35.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.704" endtime="20201115 22:02:35.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.669" endtime="20201115 22:02:35.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.664" endtime="20201115 22:02:35.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.729" endtime="20201115 22:02:36.072"></status>
</kw>
<msg timestamp="20201115 22:02:36.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038696917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038708181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.725" endtime="20201115 22:02:36.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038696917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038708181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.079" endtime="20201115 22:02:36.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.093" endtime="20201115 22:02:36.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.718" endtime="20201115 22:02:36.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.713" endtime="20201115 22:02:36.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:36.111" level="INFO">${RESULT} = [{'time': 0.038708181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1264000000003882e-05, 'source_diff': 1.1264000000003882e-05}, {'time': 0.038724903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:36.102" endtime="20201115 22:02:36.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:36.131" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:36.114" endtime="20201115 22:02:36.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.143" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:02:36.140" endtime="20201115 22:02:36.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.148" level="INFO">VALUE: [1.1264000000003882e-05, 8.792000000000522e-06, 1.2708000000000164e-05, 1.2527999999997763e-05, 1.5181000000002998e-05, 7.945000000002256e-06, 8.347999999998301e-06, 1.2500000000005562e-05, 1.1263999999996943e-05, 1.1471999999998483e-05, 1.0847000000001328e-05, 1.1889000000001038e-05, 1.459699999999814e-05, 1.4445000000001817e-05, 1.0209000000004076e-05, 1.4167000000002428e-05, 2.9719999999969215e-06, 6.055999999997341e-06, 1.5237000000001277e-05, 8.152999999996857e-06, 1.0388000000000064e-05, 1.3986000000000554e-05, 5.027999999997201e-06, 3.347000000000766e-06, 7.931000000002686e-06]</msg>
<status status="PASS" starttime="20201115 22:02:36.145" endtime="20201115 22:02:36.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.133" endtime="20201115 22:02:36.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.158" endtime="20201115 22:02:36.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:36.167" endtime="20201115 22:02:36.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.162" endtime="20201115 22:02:36.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.153" endtime="20201115 22:02:36.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.660" endtime="20201115 22:02:36.193"></status>
</kw>
<msg timestamp="20201115 22:02:36.194" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.216" endtime="20201115 22:02:36.230"></status>
</kw>
<msg timestamp="20201115 22:02:36.232" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.213" endtime="20201115 22:02:36.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.238" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.234" endtime="20201115 22:02:36.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.241" endtime="20201115 22:02:36.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.204" endtime="20201115 22:02:36.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.198" endtime="20201115 22:02:36.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.265" endtime="20201115 22:02:36.606"></status>
</kw>
<msg timestamp="20201115 22:02:36.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040441847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040450833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.262" endtime="20201115 22:02:36.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040441847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040450833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.613" endtime="20201115 22:02:36.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.626" endtime="20201115 22:02:36.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.254" endtime="20201115 22:02:36.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.249" endtime="20201115 22:02:36.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:36.643" level="INFO">${RESULT} = [{'time': 0.040450833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.985999999995553e-06, 'source_diff': 8.985999999995553e-06}, {'time': 0.040471056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:36.635" endtime="20201115 22:02:36.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:36.663" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:36.646" endtime="20201115 22:02:36.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.674" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:02:36.672" endtime="20201115 22:02:36.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.679" level="INFO">VALUE: [8.985999999995553e-06, 1.5000000000001124e-05, 1.2985999999999553e-05, 8.764000000001382e-06, 5.167000000000366e-06, 3.77800000000289e-06, 1.0207999999997663e-05, 1.1263999999996943e-05, 1.2319000000003688e-05, 1.0583000000001508e-05, 1.4431000000002248e-05, 1.4180000000002524e-05, 8.332999999999258e-06, 2.7220000000036104e-06, 6.694999999994067e-06, 1.480499999999968e-05, 2.51400000000207e-06, 4.791999999996521e-06, 1.4181000000001998e-05, 3.9720000000048605e-06, 1.0028000000002202e-05, 4.389000000000476e-06, 1.3138999999995349e-05, 1.2721999999999734e-05, 2.9310000000046244e-06]</msg>
<status status="PASS" starttime="20201115 22:02:36.676" endtime="20201115 22:02:36.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.665" endtime="20201115 22:02:36.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.689" endtime="20201115 22:02:36.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:36.698" endtime="20201115 22:02:36.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.693" endtime="20201115 22:02:36.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.684" endtime="20201115 22:02:36.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.195" endtime="20201115 22:02:36.724"></status>
</kw>
<msg timestamp="20201115 22:02:36.724" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.748" endtime="20201115 22:02:36.763"></status>
</kw>
<msg timestamp="20201115 22:02:36.764" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.742" endtime="20201115 22:02:36.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.771" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.767" endtime="20201115 22:02:36.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.773" endtime="20201115 22:02:36.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.734" endtime="20201115 22:02:36.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.729" endtime="20201115 22:02:36.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.798" endtime="20201115 22:02:37.121"></status>
</kw>
<msg timestamp="20201115 22:02:37.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042219583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042225236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.794" endtime="20201115 22:02:37.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042219583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042225236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.128" endtime="20201115 22:02:37.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.141" endtime="20201115 22:02:37.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.786" endtime="20201115 22:02:37.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.781" endtime="20201115 22:02:37.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:37.157" level="INFO">${RESULT} = [{'time': 0.042225236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.042244208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:37.150" endtime="20201115 22:02:37.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:37.176" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:37.160" endtime="20201115 22:02:37.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.186" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:02:37.184" endtime="20201115 22:02:37.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.191" level="INFO">VALUE: [5.653000000001296e-06, 1.104099999999636e-05, 1.4374999999997029e-05, 4.555000000003306e-06, 1.2735999999999303e-05, 1.2528000000004702e-05, 1.2305000000004118e-05, 6.874999999996467e-06, 1.0221999999997233e-05, 1.3347000000003828e-05, 1.1472000000005422e-05, 6.888999999996037e-06, 3.3889999999994758e-06, 8.791000000001048e-06, 1.2708000000000164e-05, 1.3569999999997473e-05, 5.638999999994787e-06, 1.354099999999886e-05, 6.319999999997161e-06, 3.347000000000766e-06, 4.790999999997048e-06, 1.358299999999757e-05, 1.3763999999999443e-05, 3.347000000000766e-06, 1.0014000000002632e-05]</msg>
<status status="PASS" starttime="20201115 22:02:37.189" endtime="20201115 22:02:37.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.178" endtime="20201115 22:02:37.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.200" endtime="20201115 22:02:37.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.209" endtime="20201115 22:02:37.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.204" endtime="20201115 22:02:37.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.196" endtime="20201115 22:02:37.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.726" endtime="20201115 22:02:37.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.663" endtime="20201115 22:02:37.235"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.246" endtime="20201115 22:02:37.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.242" endtime="20201115 22:02:37.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.239" endtime="20201115 22:02:37.271"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:02:34.471" endtime="20201115 22:02:37.272" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.293" endtime="20201115 22:02:37.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.289" endtime="20201115 22:02:37.317"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.352" endtime="20201115 22:02:37.370"></status>
</kw>
<msg timestamp="20201115 22:02:37.372" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.347" endtime="20201115 22:02:37.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.378" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.374" endtime="20201115 22:02:37.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.385" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:37.380" endtime="20201115 22:02:37.386"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:37.340" endtime="20201115 22:02:37.387"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:37.333" endtime="20201115 22:02:37.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.330" endtime="20201115 22:02:37.390"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:37.398" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:37.396" endtime="20201115 22:02:37.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.392" endtime="20201115 22:02:37.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.328" endtime="20201115 22:02:37.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.327" endtime="20201115 22:02:37.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.402" endtime="20201115 22:02:37.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.323" endtime="20201115 22:02:37.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.318" endtime="20201115 22:02:37.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.286" endtime="20201115 22:02:37.410"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:02:37.415" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.436" endtime="20201115 22:02:37.451"></status>
</kw>
<msg timestamp="20201115 22:02:37.452" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.432" endtime="20201115 22:02:37.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.458" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.454" endtime="20201115 22:02:37.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.461" endtime="20201115 22:02:37.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.425" endtime="20201115 22:02:37.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.420" endtime="20201115 22:02:37.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.484" endtime="20201115 22:02:37.842"></status>
</kw>
<msg timestamp="20201115 22:02:37.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134826389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134828042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.481" endtime="20201115 22:02:37.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134826389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134828042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.852" endtime="20201115 22:02:37.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.871" endtime="20201115 22:02:37.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.474" endtime="20201115 22:02:37.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.469" endtime="20201115 22:02:37.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:37.889" level="INFO">${RESULT} = [{'time': 0.134828042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6530000000181122e-06, 'source_diff': 1.6530000000181122e-06}, {'time': 0.134833389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:37.879" endtime="20201115 22:02:37.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:37.924" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:37.891" endtime="20201115 22:02:37.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.934" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:02:37.932" endtime="20201115 22:02:37.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.940" level="INFO">VALUE: [1.6530000000181122e-06, 1.6529999999903566e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.651999999990883e-06, 1.6529999999903566e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6250000000050946e-06, 1.6529999999903566e-06, 1.6669999999829876e-06, 1.6670000000107432e-06, 1.651999999990883e-06, 1.6389999999977256e-06, 1.6809999999756187e-06, 1.6670000000107432e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.610999999984708e-06, 1.624999999977339e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.637999999998252e-06, 1.6530000000181122e-06, 1.6389999999977256e-06, 1.6529999999903566e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6660000000112696e-06, 1.624999999977339e-06, 1.6660000000112696e-06, 1.7230000000090229e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6660000000112696e-06, 1.6389999999977256e-06, 1.6670000000107432e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999903566e-06, 1.6669999999829876e-06, 1.6530000000181122e-06, 1.6389999999977256e-06, 1.6529999999903566e-06, 1.6380000000260075e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201115 22:02:37.937" endtime="20201115 22:02:37.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.926" endtime="20201115 22:02:37.943"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.949" endtime="20201115 22:02:37.952"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.958" endtime="20201115 22:02:37.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.954" endtime="20201115 22:02:37.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.945" endtime="20201115 22:02:37.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.416" endtime="20201115 22:02:37.984"></status>
</kw>
<msg timestamp="20201115 22:02:37.984" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.005" endtime="20201115 22:02:38.021"></status>
</kw>
<msg timestamp="20201115 22:02:38.022" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.002" endtime="20201115 22:02:38.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.028" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.024" endtime="20201115 22:02:38.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.031" endtime="20201115 22:02:38.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.994" endtime="20201115 22:02:38.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.989" endtime="20201115 22:02:38.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.056" endtime="20201115 22:02:38.396"></status>
</kw>
<msg timestamp="20201115 22:02:38.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039151028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039152681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.053" endtime="20201115 22:02:38.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039151028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039152681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.407" endtime="20201115 22:02:38.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.426" endtime="20201115 22:02:38.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.045" endtime="20201115 22:02:38.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.040" endtime="20201115 22:02:38.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:38.444" level="INFO">${RESULT} = [{'time': 0.039152681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6530000000042344e-06, 'source_diff': 1.6530000000042344e-06}, {'time': 0.039169472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:38.435" endtime="20201115 22:02:38.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:38.476" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:38.446" endtime="20201115 22:02:38.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.487" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:02:38.484" endtime="20201115 22:02:38.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.492" level="INFO">VALUE: [1.6530000000042344e-06, 1.6529999999972955e-06, 1.6669999999968654e-06, 1.6670000000038043e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.582999999999446e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6249999999981557e-06, 1.6809999999964353e-06, 1.6660000000043307e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6660000000043307e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.5979999999984895e-06]</msg>
<status status="PASS" starttime="20201115 22:02:38.489" endtime="20201115 22:02:38.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.478" endtime="20201115 22:02:38.495"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.502" endtime="20201115 22:02:38.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:38.511" endtime="20201115 22:02:38.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.506" endtime="20201115 22:02:38.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.497" endtime="20201115 22:02:38.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.985" endtime="20201115 22:02:38.536"></status>
</kw>
<msg timestamp="20201115 22:02:38.537" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.557" endtime="20201115 22:02:38.572"></status>
</kw>
<msg timestamp="20201115 22:02:38.573" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.553" endtime="20201115 22:02:38.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.579" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.575" endtime="20201115 22:02:38.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.582" endtime="20201115 22:02:38.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.546" endtime="20201115 22:02:38.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.541" endtime="20201115 22:02:38.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.605" endtime="20201115 22:02:38.950"></status>
</kw>
<msg timestamp="20201115 22:02:38.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037846847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037848486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.602" endtime="20201115 22:02:38.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037846847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037848486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.959" endtime="20201115 22:02:38.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.979" endtime="20201115 22:02:38.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.595" endtime="20201115 22:02:38.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.590" endtime="20201115 22:02:38.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:38.996" level="INFO">${RESULT} = [{'time': 0.037848486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.037857181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:38.987" endtime="20201115 22:02:38.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:39.028" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:38.998" endtime="20201115 22:02:39.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.040" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:02:39.036" endtime="20201115 22:02:39.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.045" level="INFO">VALUE: [1.6389999999977256e-06, 1.6669999999968654e-06, 1.6380000000051909e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6810000000033742e-06, 1.6519999999978219e-06, 1.6530000000042344e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6520000000047608e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.637999999998252e-06, 1.6250000000050946e-06, 1.6519999999978219e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.5700000000062886e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6670000000038043e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6520000000047608e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6530000000042344e-06]</msg>
<status status="PASS" starttime="20201115 22:02:39.042" endtime="20201115 22:02:39.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.030" endtime="20201115 22:02:39.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.055" endtime="20201115 22:02:39.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:39.064" endtime="20201115 22:02:39.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.059" endtime="20201115 22:02:39.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.050" endtime="20201115 22:02:39.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.538" endtime="20201115 22:02:39.091"></status>
</kw>
<msg timestamp="20201115 22:02:39.091" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.111" endtime="20201115 22:02:39.126"></status>
</kw>
<msg timestamp="20201115 22:02:39.127" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.108" endtime="20201115 22:02:39.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.134" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.129" endtime="20201115 22:02:39.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.136" endtime="20201115 22:02:39.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.101" endtime="20201115 22:02:39.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.096" endtime="20201115 22:02:39.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.160" endtime="20201115 22:02:39.502"></status>
</kw>
<msg timestamp="20201115 22:02:39.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039081569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039083208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.156" endtime="20201115 22:02:39.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039081569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039083208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.512" endtime="20201115 22:02:39.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.532" endtime="20201115 22:02:39.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.149" endtime="20201115 22:02:39.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.144" endtime="20201115 22:02:39.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:39.550" level="INFO">${RESULT} = [{'time': 0.039083208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6390000000046645e-06, 'source_diff': 1.6390000000046645e-06}, {'time': 0.039086875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:39.540" endtime="20201115 22:02:39.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:39.581" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:39.552" endtime="20201115 22:02:39.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.591" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:02:39.589" endtime="20201115 22:02:39.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.597" level="INFO">VALUE: [1.6390000000046645e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.637999999998252e-06, 1.6669999999968654e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.582999999999446e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6659999999973918e-06, 1.6529999999972955e-06, 1.6670000000038043e-06, 1.6519999999978219e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6660000000043307e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.568999999999876e-06, 1.6670000000038043e-06]</msg>
<status status="PASS" starttime="20201115 22:02:39.594" endtime="20201115 22:02:39.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.583" endtime="20201115 22:02:39.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.607" endtime="20201115 22:02:39.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:39.617" endtime="20201115 22:02:39.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.612" endtime="20201115 22:02:39.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.602" endtime="20201115 22:02:39.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.092" endtime="20201115 22:02:39.643"></status>
</kw>
<msg timestamp="20201115 22:02:39.643" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.663" endtime="20201115 22:02:39.678"></status>
</kw>
<msg timestamp="20201115 22:02:39.679" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.660" endtime="20201115 22:02:39.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.686" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.682" endtime="20201115 22:02:39.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.688" endtime="20201115 22:02:39.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.653" endtime="20201115 22:02:39.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.648" endtime="20201115 22:02:39.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.712" endtime="20201115 22:02:40.072"></status>
</kw>
<msg timestamp="20201115 22:02:40.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038683528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038685167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.708" endtime="20201115 22:02:40.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038683528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038685167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.082" endtime="20201115 22:02:40.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.099" endtime="20201115 22:02:40.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.701" endtime="20201115 22:02:40.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.696" endtime="20201115 22:02:40.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:40.108" level="INFO">${RESULT} = [{'time': 0.038685167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.038690708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:40.104" endtime="20201115 22:02:40.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:40.129" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:40.109" endtime="20201115 22:02:40.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.134" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:02:40.133" endtime="20201115 22:02:40.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.137" level="INFO">VALUE: [1.6389999999977256e-06, 1.6519999999978219e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.637999999998252e-06, 1.5970000000059548e-06, 1.6659999999973918e-06, 1.6529999999972955e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.5969999999990159e-06, 1.6940000000034705e-06, 1.6519999999978219e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6939999999965316e-06, 1.6530000000042344e-06, 1.6800000000039006e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6520000000047608e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6519999999978219e-06]</msg>
<status status="PASS" starttime="20201115 22:02:40.135" endtime="20201115 22:02:40.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.130" endtime="20201115 22:02:40.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.147" endtime="20201115 22:02:40.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:40.151" endtime="20201115 22:02:40.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.149" endtime="20201115 22:02:40.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.144" endtime="20201115 22:02:40.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.644" endtime="20201115 22:02:40.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.412" endtime="20201115 22:02:40.172"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:40.178" endtime="20201115 22:02:40.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.176" endtime="20201115 22:02:40.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.174" endtime="20201115 22:02:40.199"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:02:37.279" endtime="20201115 22:02:40.200" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:40.220" endtime="20201115 22:02:40.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.216" endtime="20201115 22:02:40.243"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.277" endtime="20201115 22:02:40.295"></status>
</kw>
<msg timestamp="20201115 22:02:40.296" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.274" endtime="20201115 22:02:40.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.303" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.299" endtime="20201115 22:02:40.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.309" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:40.305" endtime="20201115 22:02:40.310"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:40.266" endtime="20201115 22:02:40.312"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:40.260" endtime="20201115 22:02:40.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.257" endtime="20201115 22:02:40.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:40.322" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:40.321" endtime="20201115 22:02:40.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.316" endtime="20201115 22:02:40.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.255" endtime="20201115 22:02:40.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.253" endtime="20201115 22:02:40.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.326" endtime="20201115 22:02:40.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.249" endtime="20201115 22:02:40.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.245" endtime="20201115 22:02:40.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.213" endtime="20201115 22:02:40.333"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.341" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.366" endtime="20201115 22:02:40.383"></status>
</kw>
<msg timestamp="20201115 22:02:40.384" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.363" endtime="20201115 22:02:40.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.390" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.386" endtime="20201115 22:02:40.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.392" endtime="20201115 22:02:40.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.353" endtime="20201115 22:02:40.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.347" endtime="20201115 22:02:40.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.417" endtime="20201115 22:02:40.775"></status>
</kw>
<msg timestamp="20201115 22:02:40.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140129208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140133736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.414" endtime="20201115 22:02:40.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140129208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140133736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.784" endtime="20201115 22:02:40.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.803" endtime="20201115 22:02:40.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.406" endtime="20201115 22:02:40.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.401" endtime="20201115 22:02:40.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:40.821" level="INFO">${RESULT} = [{'time': 0.140133736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.140207736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:40.812" endtime="20201115 22:02:40.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:40.852" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:40.823" endtime="20201115 22:02:40.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.863" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:02:40.861" endtime="20201115 22:02:40.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.869" level="INFO">VALUE: [4.52800000000364e-06, 4.541999999996271e-06, 4.541000000024553e-06, 4.540999999996798e-06, 4.541999999996271e-06, 4.527000000004167e-06, 4.514000000011009e-06, 4.541999999996271e-06, 4.527000000004167e-06, 4.541999999996271e-06, 4.555000000017184e-06, 4.52800000000364e-06, 4.513999999983254e-06, 4.542000000024027e-06, 4.527999999975885e-06, 4.541999999996271e-06, 4.52800000000364e-06, 4.541999999996271e-06, 4.541999999996271e-06, 4.527999999975885e-06, 4.514000000011009e-06, 4.527000000004167e-06, 4.514000000011009e-06, 4.52800000000364e-06, 4.542000000024027e-06, 4.499999999990623e-06, 4.52800000000364e-06, 4.540999999996798e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.541999999996271e-06, 4.541999999996271e-06, 4.541999999996271e-06, 4.514000000011009e-06, 4.554999999989429e-06, 4.570000000009289e-06, 4.555999999988902e-06, 4.52800000000364e-06, 4.527000000004167e-06, 4.542000000024027e-06, 4.485999999997992e-06, 4.499999999990623e-06, 4.540999999996798e-06, 4.527000000004167e-06, 4.485999999997992e-06, 4.541999999996271e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.555000000017184e-06]</msg>
<status status="PASS" starttime="20201115 22:02:40.865" endtime="20201115 22:02:40.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.854" endtime="20201115 22:02:40.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.878" endtime="20201115 22:02:40.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:40.886" endtime="20201115 22:02:40.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.882" endtime="20201115 22:02:40.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.873" endtime="20201115 22:02:40.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.342" endtime="20201115 22:02:40.913"></status>
</kw>
<msg timestamp="20201115 22:02:40.913" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.937" endtime="20201115 22:02:40.953"></status>
</kw>
<msg timestamp="20201115 22:02:40.954" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.933" endtime="20201115 22:02:40.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.961" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.956" endtime="20201115 22:02:40.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.963" endtime="20201115 22:02:40.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.926" endtime="20201115 22:02:40.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.920" endtime="20201115 22:02:40.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.988" endtime="20201115 22:02:41.333"></status>
</kw>
<msg timestamp="20201115 22:02:41.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043548181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043552708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.985" endtime="20201115 22:02:41.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043548181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043552708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.343" endtime="20201115 22:02:41.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.362" endtime="20201115 22:02:41.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.978" endtime="20201115 22:02:41.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.973" endtime="20201115 22:02:41.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:41.379" level="INFO">${RESULT} = [{'time': 0.043552708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.527000000004167e-06, 'source_diff': 4.527000000004167e-06}, {'time': 0.043624222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:41.370" endtime="20201115 22:02:41.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:41.410" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:41.382" endtime="20201115 22:02:41.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.421" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:02:41.419" endtime="20201115 22:02:41.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.427" level="INFO">VALUE: [4.527000000004167e-06, 4.540999999996798e-06, 4.51400000000407e-06, 4.527000000004167e-06, 4.527000000004167e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.57000000000235e-06, 4.569000000002876e-06, 4.55600000000278e-06, 4.513999999997131e-06, 4.527999999996701e-06, 4.568999999995937e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.527999999996701e-06, 4.527000000004167e-06, 4.540999999996798e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.513999999997131e-06, 4.540999999996798e-06, 4.555999999995841e-06, 4.485999999997992e-06, 4.513999999997131e-06, 4.527000000004167e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.526999999997228e-06, 4.540999999996798e-06, 4.540999999996798e-06, 4.471999999998422e-06, 4.541999999996271e-06, 4.54200000000321e-06, 4.540999999996798e-06, 4.5410000000037365e-06, 4.54200000000321e-06, 4.54200000000321e-06, 4.527999999996701e-06, 4.541999999996271e-06, 4.5000000000045e-06, 4.555000000003306e-06, 4.52800000000364e-06, 4.54200000000321e-06, 4.471999999998422e-06, 4.54200000000321e-06, 4.568999999995937e-06, 4.597000000002016e-06, 4.52800000000364e-06]</msg>
<status status="PASS" starttime="20201115 22:02:41.424" endtime="20201115 22:02:41.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.412" endtime="20201115 22:02:41.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.437" endtime="20201115 22:02:41.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:41.445" endtime="20201115 22:02:41.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.441" endtime="20201115 22:02:41.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.431" endtime="20201115 22:02:41.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.914" endtime="20201115 22:02:41.471"></status>
</kw>
<msg timestamp="20201115 22:02:41.471" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.495" endtime="20201115 22:02:41.511"></status>
</kw>
<msg timestamp="20201115 22:02:41.512" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.491" endtime="20201115 22:02:41.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.518" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.514" endtime="20201115 22:02:41.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.520" endtime="20201115 22:02:41.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.484" endtime="20201115 22:02:41.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.478" endtime="20201115 22:02:41.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.546" endtime="20201115 22:02:41.889"></status>
</kw>
<msg timestamp="20201115 22:02:41.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042700292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042704806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.542" endtime="20201115 22:02:41.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042700292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042704806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.899" endtime="20201115 22:02:41.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.917" endtime="20201115 22:02:41.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.533" endtime="20201115 22:02:41.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.529" endtime="20201115 22:02:41.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:41.935" level="INFO">${RESULT} = [{'time': 0.042704806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.042769014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:41.926" endtime="20201115 22:02:41.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:41.966" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:41.937" endtime="20201115 22:02:41.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.977" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:02:41.975" endtime="20201115 22:02:41.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.982" level="INFO">VALUE: [4.513999999997131e-06, 4.51400000000407e-06, 4.527999999996701e-06, 4.527999999996701e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.52800000000364e-06, 4.54200000000321e-06, 4.54200000000321e-06, 4.513000000004597e-06, 4.555000000003306e-06, 4.54200000000321e-06, 4.555000000003306e-06, 4.569000000002876e-06, 4.541999999996271e-06, 4.54200000000321e-06, 4.55600000000278e-06, 4.5410000000037365e-06, 4.54200000000321e-06, 4.541999999996271e-06, 4.555000000003306e-06, 4.445000000005694e-06, 4.4860000000049305e-06, 4.485999999997992e-06, 4.52800000000364e-06, 4.541999999996271e-06, 4.527999999996701e-06, 4.513999999997131e-06, 4.52800000000364e-06, 4.540999999996798e-06, 4.513999999997131e-06, 4.540999999996798e-06, 4.5410000000037365e-06, 4.52800000000364e-06, 4.51400000000407e-06, 4.541999999996271e-06, 4.541999999996271e-06, 4.513999999997131e-06, 4.527999999996701e-06, 4.527000000004167e-06, 4.541999999996271e-06, 4.5410000000037365e-06, 4.540999999996798e-06, 4.52800000000364e-06, 4.54200000000321e-06, 4.512999999997658e-06, 4.54200000000321e-06, 4.52800000000364e-06, 4.541999999996271e-06, 4.52800000000364e-06]</msg>
<status status="PASS" starttime="20201115 22:02:41.979" endtime="20201115 22:02:41.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.968" endtime="20201115 22:02:41.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.992" endtime="20201115 22:02:41.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.001" endtime="20201115 22:02:42.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.996" endtime="20201115 22:02:42.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.987" endtime="20201115 22:02:42.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.472" endtime="20201115 22:02:42.026"></status>
</kw>
<msg timestamp="20201115 22:02:42.027" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.050" endtime="20201115 22:02:42.066"></status>
</kw>
<msg timestamp="20201115 22:02:42.067" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.047" endtime="20201115 22:02:42.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.074" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.070" endtime="20201115 22:02:42.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.076" endtime="20201115 22:02:42.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.039" endtime="20201115 22:02:42.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.034" endtime="20201115 22:02:42.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.100" endtime="20201115 22:02:42.445"></status>
</kw>
<msg timestamp="20201115 22:02:42.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042663181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042667722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.096" endtime="20201115 22:02:42.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042663181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042667722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.455" endtime="20201115 22:02:42.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.474" endtime="20201115 22:02:42.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.089" endtime="20201115 22:02:42.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.084" endtime="20201115 22:02:42.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:42.491" level="INFO">${RESULT} = [{'time': 0.042667722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.540999999996798e-06, 'source_diff': 4.540999999996798e-06}, {'time': 0.042740472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:42.482" endtime="20201115 22:02:42.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.524" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:42.494" endtime="20201115 22:02:42.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.536" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:02:42.533" endtime="20201115 22:02:42.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.541" level="INFO">VALUE: [4.540999999996798e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.540999999996798e-06, 4.527999999996701e-06, 4.583000000002446e-06, 4.55600000000278e-06, 4.54200000000321e-06, 4.513999999997131e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.526999999997228e-06, 4.54200000000321e-06, 4.527999999996701e-06, 4.51400000000407e-06, 4.54200000000321e-06, 4.597000000002016e-06, 4.540999999996798e-06, 4.597000000002016e-06, 4.52800000000364e-06, 4.54200000000321e-06, 4.513999999997131e-06, 4.5549999999963675e-06, 4.5410000000037365e-06, 4.568999999995937e-06, 4.527999999996701e-06, 4.526999999997228e-06, 4.513000000004597e-06, 4.527000000004167e-06, 4.513999999997131e-06, 4.526999999997228e-06, 4.54200000000321e-06, 4.52800000000364e-06, 4.54200000000321e-06, 4.555000000003306e-06, 4.527999999996701e-06, 4.540999999996798e-06, 4.610999999994647e-06, 4.540999999996798e-06, 4.54200000000321e-06, 4.52800000000364e-06, 4.569000000002876e-06, 4.555000000003306e-06, 4.54200000000321e-06, 4.51400000000407e-06, 4.485999999997992e-06, 4.52800000000364e-06, 4.52800000000364e-06]</msg>
<status status="PASS" starttime="20201115 22:02:42.538" endtime="20201115 22:02:42.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.526" endtime="20201115 22:02:42.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.551" endtime="20201115 22:02:42.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.559" endtime="20201115 22:02:42.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.555" endtime="20201115 22:02:42.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.546" endtime="20201115 22:02:42.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.028" endtime="20201115 22:02:42.585"></status>
</kw>
<msg timestamp="20201115 22:02:42.585" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.609" endtime="20201115 22:02:42.624"></status>
</kw>
<msg timestamp="20201115 22:02:42.625" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.605" endtime="20201115 22:02:42.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.632" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.628" endtime="20201115 22:02:42.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.634" endtime="20201115 22:02:42.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.598" endtime="20201115 22:02:42.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.592" endtime="20201115 22:02:42.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.658" endtime="20201115 22:02:43.000"></status>
</kw>
<msg timestamp="20201115 22:02:43.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042631014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042635556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.654" endtime="20201115 22:02:43.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042631014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042635556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.010" endtime="20201115 22:02:43.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.029" endtime="20201115 22:02:43.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.647" endtime="20201115 22:02:43.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.642" endtime="20201115 22:02:43.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:43.046" level="INFO">${RESULT} = [{'time': 0.042635556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.042701847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:43.037" endtime="20201115 22:02:43.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:43.078" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:43.048" endtime="20201115 22:02:43.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.090" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:02:43.087" endtime="20201115 22:02:43.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.095" level="INFO">VALUE: [4.541999999996271e-06, 4.5410000000037365e-06, 4.4999999999975615e-06, 4.527999999996701e-06, 4.52800000000364e-06, 4.5410000000037365e-06, 4.541999999996271e-06, 4.52800000000364e-06, 4.5410000000037365e-06, 4.513999999997131e-06, 4.513999999997131e-06, 4.5410000000037365e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.541999999996271e-06, 4.487000000004404e-06, 4.527999999996701e-06, 4.513999999997131e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.55600000000278e-06, 4.527999999996701e-06, 4.485999999997992e-06, 4.473000000004834e-06, 4.4999999999975615e-06, 4.52800000000364e-06, 4.527999999996701e-06, 4.5549999999963675e-06, 4.527000000004167e-06, 4.527999999996701e-06, 4.513999999997131e-06, 4.5000000000045e-06, 4.54200000000321e-06, 4.513999999997131e-06, 4.5410000000037365e-06, 4.51400000000407e-06, 4.513999999997131e-06, 4.52800000000364e-06, 4.513999999997131e-06, 4.5549999999963675e-06, 4.52800000000364e-06, 4.459000000005264e-06, 4.54200000000321e-06, 4.54200000000321e-06, 4.5549999999963675e-06, 4.52800000000364e-06, 4.54200000000321e-06, 4.541999999996271e-06, 4.5410000000037365e-06, 4.555000000003306e-06]</msg>
<status status="PASS" starttime="20201115 22:02:43.092" endtime="20201115 22:02:43.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.080" endtime="20201115 22:02:43.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.105" endtime="20201115 22:02:43.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.113" endtime="20201115 22:02:43.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.109" endtime="20201115 22:02:43.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.100" endtime="20201115 22:02:43.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.587" endtime="20201115 22:02:43.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.338" endtime="20201115 22:02:43.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.336" endtime="20201115 22:02:43.140"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.145" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.168" endtime="20201115 22:02:43.184"></status>
</kw>
<msg timestamp="20201115 22:02:43.186" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.165" endtime="20201115 22:02:43.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.192" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.188" endtime="20201115 22:02:43.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.195" endtime="20201115 22:02:43.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.157" endtime="20201115 22:02:43.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.151" endtime="20201115 22:02:43.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.220" endtime="20201115 22:02:43.523"></status>
</kw>
<msg timestamp="20201115 22:02:43.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047910264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047914931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.216" endtime="20201115 22:02:43.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047910264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047914931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.528" endtime="20201115 22:02:43.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.536" endtime="20201115 22:02:43.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.209" endtime="20201115 22:02:43.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.204" endtime="20201115 22:02:43.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:43.544" level="INFO">${RESULT} = [{'time': 0.047914931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.047983347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:43.540" endtime="20201115 22:02:43.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:43.559" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:43.545" endtime="20201115 22:02:43.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.564" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:02:43.563" endtime="20201115 22:02:43.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.567" level="INFO">VALUE: [4.666999999999866e-06, 4.679999999999962e-06, 4.707999999999102e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.708000000006041e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.694000000006471e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.7499999999978115e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.652000000000822e-06, 4.597000000002016e-06, 4.59800000000149e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.665999999993453e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.652000000000822e-06, 4.652000000000822e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.611000000001586e-06, 4.666000000000392e-06, 4.638000000001252e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.638999999993787e-06, 4.666999999999866e-06, 4.652999999993357e-06, 4.651999999993883e-06]</msg>
<status status="PASS" starttime="20201115 22:02:43.565" endtime="20201115 22:02:43.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.559" endtime="20201115 22:02:43.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.571" endtime="20201115 22:02:43.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.575" endtime="20201115 22:02:43.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.573" endtime="20201115 22:02:43.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.569" endtime="20201115 22:02:43.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.146" endtime="20201115 22:02:43.597"></status>
</kw>
<msg timestamp="20201115 22:02:43.597" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.608" endtime="20201115 22:02:43.622"></status>
</kw>
<msg timestamp="20201115 22:02:43.622" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.606" endtime="20201115 22:02:43.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.625" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.623" endtime="20201115 22:02:43.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.626" endtime="20201115 22:02:43.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.603" endtime="20201115 22:02:43.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.600" endtime="20201115 22:02:43.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.638" endtime="20201115 22:02:43.979"></status>
</kw>
<msg timestamp="20201115 22:02:43.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024881806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024886458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.636" endtime="20201115 22:02:43.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024881806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024886458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.988" endtime="20201115 22:02:44.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.008" endtime="20201115 22:02:44.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.633" endtime="20201115 22:02:44.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.631" endtime="20201115 22:02:44.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:44.025" level="INFO">${RESULT} = [{'time': 0.024886458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.024959875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:44.016" endtime="20201115 22:02:44.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:44.057" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:44.027" endtime="20201115 22:02:44.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.069" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:02:44.067" endtime="20201115 22:02:44.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.075" level="INFO">VALUE: [4.652000000000822e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.651999999997353e-06, 4.666000000000392e-06, 4.708000000002571e-06, 4.639000000000726e-06, 4.6249999999976865e-06, 4.680999999999436e-06, 4.666000000000392e-06, 4.679999999999962e-06, 4.652000000000822e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.596999999998547e-06, 4.680999999999436e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.6389999999972564e-06, 4.652999999996826e-06, 4.653000000000296e-06, 4.652999999996826e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.625000000001156e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.651999999997353e-06, 4.693999999999532e-06, 4.652000000000822e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.652999999996826e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.666000000000392e-06]</msg>
<status status="PASS" starttime="20201115 22:02:44.071" endtime="20201115 22:02:44.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.060" endtime="20201115 22:02:44.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.084" endtime="20201115 22:02:44.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:44.092" endtime="20201115 22:02:44.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.087" endtime="20201115 22:02:44.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.079" endtime="20201115 22:02:44.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.597" endtime="20201115 22:02:44.118"></status>
</kw>
<msg timestamp="20201115 22:02:44.118" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.142" endtime="20201115 22:02:44.158"></status>
</kw>
<msg timestamp="20201115 22:02:44.159" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.138" endtime="20201115 22:02:44.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.166" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.162" endtime="20201115 22:02:44.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.168" endtime="20201115 22:02:44.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.131" endtime="20201115 22:02:44.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.125" endtime="20201115 22:02:44.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.192" endtime="20201115 22:02:44.534"></status>
</kw>
<msg timestamp="20201115 22:02:44.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042874014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042878667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.188" endtime="20201115 22:02:44.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042874014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042878667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.543" endtime="20201115 22:02:44.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.562" endtime="20201115 22:02:44.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.181" endtime="20201115 22:02:44.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.176" endtime="20201115 22:02:44.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:44.580" level="INFO">${RESULT} = [{'time': 0.042878667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.042951042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:44.571" endtime="20201115 22:02:44.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:44.614" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:44.583" endtime="20201115 22:02:44.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.625" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:02:44.623" endtime="20201115 22:02:44.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.631" level="INFO">VALUE: [4.653000000000296e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.652000000000822e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.652999999993357e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.680999999999436e-06, 4.652000000000822e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.61200000000106e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.707999999999102e-06, 4.666000000000392e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.666000000000392e-06, 4.680999999999436e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.638000000001252e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.611000000001586e-06, 4.652000000000822e-06, 4.637999999994313e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.639000000000726e-06]</msg>
<status status="PASS" starttime="20201115 22:02:44.627" endtime="20201115 22:02:44.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.616" endtime="20201115 22:02:44.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.640" endtime="20201115 22:02:44.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:44.648" endtime="20201115 22:02:44.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.644" endtime="20201115 22:02:44.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.635" endtime="20201115 22:02:44.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.119" endtime="20201115 22:02:44.674"></status>
</kw>
<msg timestamp="20201115 22:02:44.674" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.697" endtime="20201115 22:02:44.713"></status>
</kw>
<msg timestamp="20201115 22:02:44.715" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.694" endtime="20201115 22:02:44.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.721" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.717" endtime="20201115 22:02:44.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.723" endtime="20201115 22:02:44.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.687" endtime="20201115 22:02:44.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.681" endtime="20201115 22:02:44.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.747" endtime="20201115 22:02:45.090"></status>
</kw>
<msg timestamp="20201115 22:02:45.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043069917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043074542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.744" endtime="20201115 22:02:45.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043069917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043074542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.100" endtime="20201115 22:02:45.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.119" endtime="20201115 22:02:45.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.737" endtime="20201115 22:02:45.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.732" endtime="20201115 22:02:45.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:45.137" level="INFO">${RESULT} = [{'time': 0.043074542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.043154819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:45.128" endtime="20201115 22:02:45.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:45.168" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:45.139" endtime="20201115 22:02:45.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.180" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:02:45.177" endtime="20201115 22:02:45.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.186" level="INFO">VALUE: [4.625000000001156e-06, 4.651999999993883e-06, 4.666000000000392e-06, 4.680999999999436e-06, 4.721999999998672e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.625000000001156e-06, 4.666000000000392e-06, 4.639000000000726e-06, 4.680999999999436e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.652999999993357e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.6949999999990055e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.722000000005611e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.651999999993883e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.652000000000822e-06, 4.625000000001156e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.638000000001252e-06, 4.666999999999866e-06, 4.7499999999978115e-06, 4.652000000000822e-06, 4.611000000001586e-06, 4.666999999999866e-06, 4.652000000000822e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201115 22:02:45.183" endtime="20201115 22:02:45.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.170" endtime="20201115 22:02:45.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.195" endtime="20201115 22:02:45.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:45.203" endtime="20201115 22:02:45.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.199" endtime="20201115 22:02:45.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.190" endtime="20201115 22:02:45.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.675" endtime="20201115 22:02:45.229"></status>
</kw>
<msg timestamp="20201115 22:02:45.230" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.253" endtime="20201115 22:02:45.270"></status>
</kw>
<msg timestamp="20201115 22:02:45.271" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.249" endtime="20201115 22:02:45.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.277" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.273" endtime="20201115 22:02:45.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.280" endtime="20201115 22:02:45.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.242" endtime="20201115 22:02:45.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.236" endtime="20201115 22:02:45.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.305" endtime="20201115 22:02:45.648"></status>
</kw>
<msg timestamp="20201115 22:02:45.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042576056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042580653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.301" endtime="20201115 22:02:45.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042576056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042580653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.664" endtime="20201115 22:02:45.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.683" endtime="20201115 22:02:45.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.294" endtime="20201115 22:02:45.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.289" endtime="20201115 22:02:45.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:45.701" level="INFO">${RESULT} = [{'time': 0.042580653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.042656597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:45.692" endtime="20201115 22:02:45.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:45.732" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:45.703" endtime="20201115 22:02:45.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.744" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:02:45.741" endtime="20201115 22:02:45.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.749" level="INFO">VALUE: [4.597000000002016e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.666000000000392e-06, 4.638999999993787e-06, 4.625000000001156e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.652000000000822e-06, 4.639000000000726e-06, 4.667000000006805e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.652999999993357e-06, 4.666000000000392e-06, 4.652999999993357e-06, 4.652000000000822e-06, 4.6810000000063745e-06, 4.666000000000392e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.707999999999102e-06, 4.639000000000726e-06, 4.666000000000392e-06, 4.666000000000392e-06, 4.693999999999532e-06, 4.666999999999866e-06, 4.651999999993883e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.597000000002016e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.6949999999990055e-06, 4.653000000000296e-06, 4.625000000001156e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201115 22:02:45.746" endtime="20201115 22:02:45.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.734" endtime="20201115 22:02:45.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.759" endtime="20201115 22:02:45.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:45.768" endtime="20201115 22:02:45.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.763" endtime="20201115 22:02:45.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.755" endtime="20201115 22:02:45.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.231" endtime="20201115 22:02:45.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.143" endtime="20201115 22:02:45.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.141" endtime="20201115 22:02:45.794"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.799" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.823" endtime="20201115 22:02:45.839"></status>
</kw>
<msg timestamp="20201115 22:02:45.840" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.819" endtime="20201115 22:02:45.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.847" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.843" endtime="20201115 22:02:45.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.849" endtime="20201115 22:02:45.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.812" endtime="20201115 22:02:45.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.806" endtime="20201115 22:02:45.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.874" endtime="20201115 22:02:46.216"></status>
</kw>
<msg timestamp="20201115 22:02:46.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048141181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048146625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.870" endtime="20201115 22:02:46.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048141181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048146625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.225" endtime="20201115 22:02:46.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.244" endtime="20201115 22:02:46.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.863" endtime="20201115 22:02:46.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.858" endtime="20201115 22:02:46.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:46.262" level="INFO">${RESULT} = [{'time': 0.048146625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.048220639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:46.253" endtime="20201115 22:02:46.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:46.293" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:46.264" endtime="20201115 22:02:46.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.305" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:02:46.302" endtime="20201115 22:02:46.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.312" level="INFO">VALUE: [5.444000000000282e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.541999999997271e-06, 5.444000000000282e-06, 5.485999999998992e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.541999999997271e-06, 5.485999999998992e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.52800000000464e-06, 5.485999999998992e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.472999999998895e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.472999999998895e-06, 5.485999999998992e-06, 5.472999999998895e-06, 5.485999999998992e-06, 5.444000000000282e-06, 5.486000000005931e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.4589999999993255e-06]</msg>
<status status="PASS" starttime="20201115 22:02:46.307" endtime="20201115 22:02:46.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.295" endtime="20201115 22:02:46.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.321" endtime="20201115 22:02:46.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:46.331" endtime="20201115 22:02:46.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.326" endtime="20201115 22:02:46.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.317" endtime="20201115 22:02:46.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.801" endtime="20201115 22:02:46.356"></status>
</kw>
<msg timestamp="20201115 22:02:46.357" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.380" endtime="20201115 22:02:46.397"></status>
</kw>
<msg timestamp="20201115 22:02:46.398" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.377" endtime="20201115 22:02:46.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.405" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.401" endtime="20201115 22:02:46.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.408" endtime="20201115 22:02:46.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.369" endtime="20201115 22:02:46.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.364" endtime="20201115 22:02:46.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.432" endtime="20201115 22:02:46.775"></status>
</kw>
<msg timestamp="20201115 22:02:46.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042720208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042725667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.428" endtime="20201115 22:02:46.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042720208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042725667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.784" endtime="20201115 22:02:46.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.803" endtime="20201115 22:02:46.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.421" endtime="20201115 22:02:46.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.416" endtime="20201115 22:02:46.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:46.821" level="INFO">${RESULT} = [{'time': 0.042725667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4589999999993255e-06, 'source_diff': 5.4589999999993255e-06}, {'time': 0.042808847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:46.812" endtime="20201115 22:02:46.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:46.854" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:46.823" endtime="20201115 22:02:46.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.865" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:02:46.863" endtime="20201115 22:02:46.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.871" level="INFO">VALUE: [5.4589999999993255e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.527000000005167e-06, 5.554999999997368e-06, 5.471999999999422e-06, 5.417000000000616e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.444999999999756e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.485999999998992e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.486999999998465e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.444000000000282e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.472999999998895e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.444000000000282e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.402000000001572e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.471999999999422e-06, 5.486000000005931e-06, 5.415999999994203e-06, 5.51400000000507e-06, 5.471999999999422e-06]</msg>
<status status="PASS" starttime="20201115 22:02:46.867" endtime="20201115 22:02:46.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.856" endtime="20201115 22:02:46.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.879" endtime="20201115 22:02:46.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:46.884" endtime="20201115 22:02:46.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.882" endtime="20201115 22:02:46.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.875" endtime="20201115 22:02:46.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.358" endtime="20201115 22:02:46.905"></status>
</kw>
<msg timestamp="20201115 22:02:46.906" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.917" endtime="20201115 22:02:46.931"></status>
</kw>
<msg timestamp="20201115 22:02:46.932" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.915" endtime="20201115 22:02:46.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.935" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.933" endtime="20201115 22:02:46.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.936" endtime="20201115 22:02:46.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.912" endtime="20201115 22:02:46.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.909" endtime="20201115 22:02:46.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.947" endtime="20201115 22:02:47.264"></status>
</kw>
<msg timestamp="20201115 22:02:47.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025207264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025212722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.945" endtime="20201115 22:02:47.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025207264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025212722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.274" endtime="20201115 22:02:47.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.293" endtime="20201115 22:02:47.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.942" endtime="20201115 22:02:47.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.940" endtime="20201115 22:02:47.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:47.310" level="INFO">${RESULT} = [{'time': 0.025212722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.025298639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:47.301" endtime="20201115 22:02:47.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:47.342" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:47.313" endtime="20201115 22:02:47.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.353" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:02:47.351" endtime="20201115 22:02:47.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.359" level="INFO">VALUE: [5.457999999999852e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.5139999999981315e-06, 5.472000000002891e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.499999999998562e-06, 5.417000000000616e-06, 5.415999999997673e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.472000000002891e-06, 5.430000000000712e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.528000000001171e-06, 5.471999999999422e-06, 5.416999999997146e-06, 5.457999999999852e-06, 5.403000000001046e-06, 5.402999999997576e-06, 5.457999999999852e-06, 5.472999999998895e-06, 5.485999999998992e-06, 5.457999999999852e-06, 5.472999999998895e-06, 5.471999999999422e-06, 5.444000000000282e-06, 5.430000000000712e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.499999999998562e-06, 5.471999999999422e-06, 5.416999999997146e-06, 5.430000000000712e-06, 5.5139999999981315e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.472000000002891e-06, 5.485999999998992e-06, 5.4589999999993255e-06, 5.444999999999756e-06, 5.471999999999422e-06, 5.402999999997576e-06, 5.471999999999422e-06, 5.472999999998895e-06, 5.472000000002891e-06]</msg>
<status status="PASS" starttime="20201115 22:02:47.356" endtime="20201115 22:02:47.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.344" endtime="20201115 22:02:47.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.369" endtime="20201115 22:02:47.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:47.377" endtime="20201115 22:02:47.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.373" endtime="20201115 22:02:47.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.364" endtime="20201115 22:02:47.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.906" endtime="20201115 22:02:47.404"></status>
</kw>
<msg timestamp="20201115 22:02:47.405" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.429" endtime="20201115 22:02:47.446"></status>
</kw>
<msg timestamp="20201115 22:02:47.447" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.425" endtime="20201115 22:02:47.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.454" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.449" endtime="20201115 22:02:47.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.456" endtime="20201115 22:02:47.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.418" endtime="20201115 22:02:47.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.412" endtime="20201115 22:02:47.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.480" endtime="20201115 22:02:47.822"></status>
</kw>
<msg timestamp="20201115 22:02:47.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043695653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043701125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.476" endtime="20201115 22:02:47.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043695653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043701125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.832" endtime="20201115 22:02:47.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.851" endtime="20201115 22:02:47.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.469" endtime="20201115 22:02:47.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.464" endtime="20201115 22:02:47.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:47.869" level="INFO">${RESULT} = [{'time': 0.043701125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.043774528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:47.859" endtime="20201115 22:02:47.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:47.900" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:47.871" endtime="20201115 22:02:47.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.911" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:02:47.909" endtime="20201115 22:02:47.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.916" level="INFO">VALUE: [5.471999999999422e-06, 5.4589999999993255e-06, 5.486999999998465e-06, 5.472999999998895e-06, 5.472999999998895e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.485999999998992e-06, 5.416000000001142e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.472000000006361e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.375000000001906e-06, 5.444000000000282e-06, 5.472999999998895e-06, 5.471999999999422e-06, 5.472999999998895e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.471999999999422e-06, 5.431000000000186e-06, 5.4589999999993255e-06, 5.472000000006361e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.4589999999993255e-06, 5.472000000006361e-06, 5.472999999998895e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.51400000000507e-06, 5.403000000001046e-06, 5.471999999999422e-06, 5.472000000006361e-06, 5.471999999999422e-06, 5.5000000000055005e-06, 5.471999999999422e-06, 5.486999999998465e-06, 5.485999999998992e-06]</msg>
<status status="PASS" starttime="20201115 22:02:47.913" endtime="20201115 22:02:47.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.902" endtime="20201115 22:02:47.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.925" endtime="20201115 22:02:47.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:47.935" endtime="20201115 22:02:47.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.930" endtime="20201115 22:02:47.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.921" endtime="20201115 22:02:47.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.406" endtime="20201115 22:02:47.960"></status>
</kw>
<msg timestamp="20201115 22:02:47.961" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.986" endtime="20201115 22:02:48.003"></status>
</kw>
<msg timestamp="20201115 22:02:48.004" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.982" endtime="20201115 22:02:48.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.010" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.006" endtime="20201115 22:02:48.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.013" endtime="20201115 22:02:48.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.975" endtime="20201115 22:02:48.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.967" endtime="20201115 22:02:48.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.036" endtime="20201115 22:02:48.378"></status>
</kw>
<msg timestamp="20201115 22:02:48.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044397264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04440275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:48.033" endtime="20201115 22:02:48.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044397264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04440275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:48.388" endtime="20201115 22:02:48.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.407" endtime="20201115 22:02:48.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.025" endtime="20201115 22:02:48.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.021" endtime="20201115 22:02:48.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.425" level="INFO">${RESULT} = [{'time': 0.04440275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.044480514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:48.416" endtime="20201115 22:02:48.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:48.456" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:48.427" endtime="20201115 22:02:48.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.467" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:02:48.465" endtime="20201115 22:02:48.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.473" level="INFO">VALUE: [5.485999999998992e-06, 5.471999999999422e-06, 5.459000000006264e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.4589999999993255e-06, 5.540999999997798e-06, 5.444000000000282e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.472000000006361e-06, 5.472999999998895e-06, 5.444999999999756e-06, 5.486999999998465e-06, 5.473000000005834e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.417000000000616e-06, 5.402999999994107e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.472999999998895e-06, 5.444999999999756e-06, 5.431000000000186e-06, 5.444999999999756e-06, 5.457999999999852e-06, 5.4589999999993255e-06, 5.472999999998895e-06, 5.4589999999993255e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.472999999998895e-06, 5.472000000006361e-06, 5.471999999999422e-06, 5.416000000001142e-06, 5.444000000000282e-06]</msg>
<status status="PASS" starttime="20201115 22:02:48.470" endtime="20201115 22:02:48.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.458" endtime="20201115 22:02:48.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.483" endtime="20201115 22:02:48.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.491" endtime="20201115 22:02:48.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.487" endtime="20201115 22:02:48.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.478" endtime="20201115 22:02:48.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.962" endtime="20201115 22:02:48.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.797" endtime="20201115 22:02:48.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.795" endtime="20201115 22:02:48.518"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.523" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.546" endtime="20201115 22:02:48.564"></status>
</kw>
<msg timestamp="20201115 22:02:48.565" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.543" endtime="20201115 22:02:48.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.572" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.568" endtime="20201115 22:02:48.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.574" endtime="20201115 22:02:48.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.535" endtime="20201115 22:02:48.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.529" endtime="20201115 22:02:48.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.598" endtime="20201115 22:02:48.942"></status>
</kw>
<msg timestamp="20201115 22:02:48.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049626583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049632861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.595" endtime="20201115 22:02:48.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049626583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049632861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.952" endtime="20201115 22:02:48.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.971" endtime="20201115 22:02:48.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.587" endtime="20201115 22:02:48.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.583" endtime="20201115 22:02:48.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.989" level="INFO">${RESULT} = [{'time': 0.049632861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.049723097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:48.980" endtime="20201115 22:02:48.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:49.022" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:48.991" endtime="20201115 22:02:49.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.033" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:49.031" endtime="20201115 22:02:49.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.040" level="INFO">VALUE: [6.2779999999984515e-06, 6.290999999998548e-06, 6.291999999998021e-06, 6.30600000000453e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.2779999999984515e-06, 6.290999999998548e-06, 6.291999999998021e-06, 6.276999999998978e-06, 6.2639999999988816e-06, 6.277000000005917e-06, 6.2640000000058205e-06, 6.291999999998021e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.277000000005917e-06, 6.2639999999988816e-06, 6.291999999998021e-06, 6.291999999998021e-06, 6.305999999997591e-06, 6.2639999999988816e-06, 6.276999999998978e-06, 6.249999999999312e-06, 6.2640000000058205e-06, 6.194000000001032e-06, 6.2779999999984515e-06, 6.249999999999312e-06, 6.277000000005917e-06, 6.2639999999988816e-06, 6.27800000000539e-06, 6.318999999997688e-06, 6.27800000000539e-06, 6.305999999997591e-06, 6.333999999996731e-06, 6.291999999998021e-06, 6.291999999998021e-06, 6.249999999999312e-06, 6.304999999998118e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.27800000000539e-06, 6.249999999999312e-06, 6.235999999999742e-06, 6.2779999999984515e-06, 6.2639999999988816e-06]</msg>
<status status="PASS" starttime="20201115 22:02:49.036" endtime="20201115 22:02:49.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.024" endtime="20201115 22:02:49.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.049" endtime="20201115 22:02:49.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:49.057" endtime="20201115 22:02:49.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.053" endtime="20201115 22:02:49.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.044" endtime="20201115 22:02:49.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.524" endtime="20201115 22:02:49.083"></status>
</kw>
<msg timestamp="20201115 22:02:49.083" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.107" endtime="20201115 22:02:49.124"></status>
</kw>
<msg timestamp="20201115 22:02:49.125" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.103" endtime="20201115 22:02:49.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.131" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.127" endtime="20201115 22:02:49.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.134" endtime="20201115 22:02:49.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.096" endtime="20201115 22:02:49.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.090" endtime="20201115 22:02:49.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.159" endtime="20201115 22:02:49.503"></status>
</kw>
<msg timestamp="20201115 22:02:49.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043130556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043136847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.156" endtime="20201115 22:02:49.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043130556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043136847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.513" endtime="20201115 22:02:49.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.532" endtime="20201115 22:02:49.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.147" endtime="20201115 22:02:49.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.142" endtime="20201115 22:02:49.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:49.550" level="INFO">${RESULT} = [{'time': 0.043136847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.043216917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:49.540" endtime="20201115 22:02:49.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:49.580" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:49.552" endtime="20201115 22:02:49.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.592" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:49.590" endtime="20201115 22:02:49.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.598" level="INFO">VALUE: [6.290999999998548e-06, 6.291999999998021e-06, 6.249999999999312e-06, 6.291000000005487e-06, 6.2779999999984515e-06, 6.291999999998021e-06, 6.2639999999988816e-06, 6.2779999999984515e-06, 6.3190000000046265e-06, 6.249999999999312e-06, 6.291999999998021e-06, 6.27800000000539e-06, 6.2640000000058205e-06, 6.3200000000041e-06, 6.2779999999984515e-06, 6.27800000000539e-06, 6.222000000000172e-06, 6.29200000000496e-06, 6.2639999999988816e-06, 6.2779999999984515e-06, 6.2640000000058205e-06, 6.276999999998978e-06, 6.291000000005487e-06, 6.262999999999408e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.27800000000539e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.29200000000496e-06, 6.2779999999984515e-06, 6.221999999993233e-06, 6.291999999998021e-06, 6.262999999999408e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.30600000000453e-06, 6.290999999998548e-06, 6.276999999998978e-06, 6.305999999997591e-06, 6.276999999998978e-06, 6.304999999998118e-06, 6.27800000000539e-06, 6.291999999998021e-06, 6.2779999999984515e-06, 6.222000000000172e-06, 6.3050000000050566e-06]</msg>
<status status="PASS" starttime="20201115 22:02:49.595" endtime="20201115 22:02:49.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.583" endtime="20201115 22:02:49.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.607" endtime="20201115 22:02:49.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:49.615" endtime="20201115 22:02:49.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.611" endtime="20201115 22:02:49.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.602" endtime="20201115 22:02:49.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.084" endtime="20201115 22:02:49.641"></status>
</kw>
<msg timestamp="20201115 22:02:49.641" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.665" endtime="20201115 22:02:49.682"></status>
</kw>
<msg timestamp="20201115 22:02:49.683" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.661" endtime="20201115 22:02:49.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.690" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.686" endtime="20201115 22:02:49.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.692" endtime="20201115 22:02:49.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.654" endtime="20201115 22:02:49.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.648" endtime="20201115 22:02:49.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.716" endtime="20201115 22:02:50.060"></status>
</kw>
<msg timestamp="20201115 22:02:50.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042692903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042699125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.713" endtime="20201115 22:02:50.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042692903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042699125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.070" endtime="20201115 22:02:50.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.089" endtime="20201115 22:02:50.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.705" endtime="20201115 22:02:50.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.701" endtime="20201115 22:02:50.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:50.107" level="INFO">${RESULT} = [{'time': 0.042699125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.042779806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:50.098" endtime="20201115 22:02:50.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:50.139" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:50.110" endtime="20201115 22:02:50.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.150" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:50.148" endtime="20201115 22:02:50.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.155" level="INFO">VALUE: [6.222000000000172e-06, 6.305999999997591e-06, 6.291999999998021e-06, 6.195000000000506e-06, 6.2639999999988816e-06, 6.2779999999984515e-06, 6.276999999998978e-06, 6.27800000000539e-06, 6.33400000000367e-06, 6.2639999999988816e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.195000000000506e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.2779999999984515e-06, 6.2779999999984515e-06, 6.318999999997688e-06, 6.333000000004196e-06, 6.2640000000058205e-06, 6.2640000000058205e-06, 6.2779999999984515e-06, 6.291999999998021e-06, 6.2779999999984515e-06, 6.27800000000539e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.291999999998021e-06, 6.2779999999984515e-06, 6.291000000005487e-06, 6.249999999999312e-06, 6.2779999999984515e-06, 6.2640000000058205e-06, 6.2639999999988816e-06, 6.291000000005487e-06, 6.2639999999988816e-06, 6.2779999999984515e-06, 6.262999999999408e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.262999999999408e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.2640000000058205e-06, 6.222000000000172e-06, 6.347000000003766e-06]</msg>
<status status="PASS" starttime="20201115 22:02:50.152" endtime="20201115 22:02:50.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.141" endtime="20201115 22:02:50.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.164" endtime="20201115 22:02:50.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.173" endtime="20201115 22:02:50.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.168" endtime="20201115 22:02:50.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.160" endtime="20201115 22:02:50.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.643" endtime="20201115 22:02:50.199"></status>
</kw>
<msg timestamp="20201115 22:02:50.199" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.223" endtime="20201115 22:02:50.239"></status>
</kw>
<msg timestamp="20201115 22:02:50.240" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.219" endtime="20201115 22:02:50.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.247" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.243" endtime="20201115 22:02:50.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.249" endtime="20201115 22:02:50.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.212" endtime="20201115 22:02:50.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.206" endtime="20201115 22:02:50.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.273" endtime="20201115 22:02:50.576"></status>
</kw>
<msg timestamp="20201115 22:02:50.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042850431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042856722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.269" endtime="20201115 22:02:50.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042850431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042856722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.586" endtime="20201115 22:02:50.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.606" endtime="20201115 22:02:50.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.262" endtime="20201115 22:02:50.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.257" endtime="20201115 22:02:50.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:50.624" level="INFO">${RESULT} = [{'time': 0.042856722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.042940028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:50.614" endtime="20201115 22:02:50.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:50.654" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:50.626" endtime="20201115 22:02:50.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.666" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:50.663" endtime="20201115 22:02:50.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.671" level="INFO">VALUE: [6.290999999998548e-06, 6.2779999999984515e-06, 6.249999999999312e-06, 6.2640000000058205e-06, 6.208000000000602e-06, 6.2779999999984515e-06, 6.2779999999984515e-06, 6.3200000000041e-06, 6.2779999999984515e-06, 6.3050000000050566e-06, 6.27800000000539e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.2640000000058205e-06, 6.3329999999972575e-06, 6.2640000000058205e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.2779999999984515e-06, 6.33400000000367e-06, 6.2639999999988816e-06, 6.291999999998021e-06, 6.2639999999988816e-06, 6.27800000000539e-06, 6.290999999998548e-06, 6.291999999998021e-06, 6.361000000003336e-06, 6.2639999999988816e-06, 6.30600000000453e-06, 6.2779999999984515e-06, 6.235999999999742e-06, 6.2090000000000756e-06, 6.3329999999972575e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.304999999998118e-06, 6.2779999999984515e-06, 6.347000000003766e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.2090000000000756e-06, 6.276999999998978e-06, 6.3200000000041e-06, 6.290999999998548e-06, 6.304999999998118e-06, 6.2639999999988816e-06, 6.347000000003766e-06, 6.2639999999988816e-06, 6.2639999999988816e-06]</msg>
<status status="PASS" starttime="20201115 22:02:50.668" endtime="20201115 22:02:50.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.656" endtime="20201115 22:02:50.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.680" endtime="20201115 22:02:50.683"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.689" endtime="20201115 22:02:50.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.684" endtime="20201115 22:02:50.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.676" endtime="20201115 22:02:50.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.200" endtime="20201115 22:02:50.714"></status>
</kw>
<msg timestamp="20201115 22:02:50.715" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.739" endtime="20201115 22:02:50.756"></status>
</kw>
<msg timestamp="20201115 22:02:50.757" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.735" endtime="20201115 22:02:50.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.763" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.759" endtime="20201115 22:02:50.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.766" endtime="20201115 22:02:50.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.728" endtime="20201115 22:02:50.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.722" endtime="20201115 22:02:50.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.789" endtime="20201115 22:02:51.133"></status>
</kw>
<msg timestamp="20201115 22:02:51.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043649625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043655889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.786" endtime="20201115 22:02:51.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043649625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043655889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.149" endtime="20201115 22:02:51.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.168" endtime="20201115 22:02:51.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.779" endtime="20201115 22:02:51.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.774" endtime="20201115 22:02:51.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:51.188" level="INFO">${RESULT} = [{'time': 0.043655889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2640000000058205e-06, 'source_diff': 6.2640000000058205e-06}, {'time': 0.043737153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:51.179" endtime="20201115 22:02:51.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:51.221" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:51.190" endtime="20201115 22:02:51.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.232" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:51.230" endtime="20201115 22:02:51.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.238" level="INFO">VALUE: [6.2640000000058205e-06, 6.2639999999988816e-06, 6.291999999998021e-06, 6.2779999999984515e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.291999999998021e-06, 6.2640000000058205e-06, 6.2779999999984515e-06, 6.276999999998978e-06, 6.262999999999408e-06, 6.2639999999988816e-06, 6.291999999998021e-06, 6.3200000000041e-06, 6.276999999998978e-06, 6.290999999998548e-06, 6.2639999999988816e-06, 6.2779999999984515e-06, 6.290999999998548e-06, 6.2640000000058205e-06, 6.291999999998021e-06, 6.2779999999984515e-06, 6.208000000000602e-06, 6.290999999998548e-06, 6.2090000000000756e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.223000000006584e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.291999999998021e-06, 6.222000000000172e-06, 6.304999999998118e-06, 6.222000000000172e-06, 6.249999999999312e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.249999999999312e-06, 6.27800000000539e-06, 6.2779999999984515e-06, 6.2639999999988816e-06, 6.2639999999988816e-06]</msg>
<status status="PASS" starttime="20201115 22:02:51.234" endtime="20201115 22:02:51.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.223" endtime="20201115 22:02:51.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.247" endtime="20201115 22:02:51.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:51.255" endtime="20201115 22:02:51.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.251" endtime="20201115 22:02:51.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.242" endtime="20201115 22:02:51.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.716" endtime="20201115 22:02:51.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.520" endtime="20201115 22:02:51.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.519" endtime="20201115 22:02:51.282"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.287" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.310" endtime="20201115 22:02:51.327"></status>
</kw>
<msg timestamp="20201115 22:02:51.329" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.306" endtime="20201115 22:02:51.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.335" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.331" endtime="20201115 22:02:51.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.337" endtime="20201115 22:02:51.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.299" endtime="20201115 22:02:51.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.293" endtime="20201115 22:02:51.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.362" endtime="20201115 22:02:51.714"></status>
</kw>
<msg timestamp="20201115 22:02:51.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048186875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048193972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.358" endtime="20201115 22:02:51.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048186875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048193972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.723" endtime="20201115 22:02:51.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.743" endtime="20201115 22:02:51.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.351" endtime="20201115 22:02:51.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.346" endtime="20201115 22:02:51.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:51.762" level="INFO">${RESULT} = [{'time': 0.048193972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.097000000004516e-06, 'source_diff': 7.097000000004516e-06}, {'time': 0.048285333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:51.753" endtime="20201115 22:02:51.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:51.793" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:51.765" endtime="20201115 22:02:51.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.804" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:02:51.802" endtime="20201115 22:02:51.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.810" level="INFO">VALUE: [7.097000000004516e-06, 7.0829999999980076e-06, 7.111000000004086e-06, 7.05600000000528e-06, 7.0829999999980076e-06, 7.0829999999980076e-06, 7.0419999999987715e-06, 7.07000000000485e-06, 7.0830000000049465e-06, 7.0829999999980076e-06, 7.08400000000442e-06, 7.068999999998438e-06, 7.0829999999980076e-06, 7.07000000000485e-06, 7.069999999997911e-06, 7.0830000000049465e-06, 7.054999999998868e-06, 7.125000000003656e-06, 7.0830000000049465e-06, 7.111999999996621e-06, 7.05600000000528e-06, 7.083999999997481e-06, 7.08400000000442e-06, 7.055999999998341e-06, 7.083999999997481e-06, 7.0829999999980076e-06, 7.111999999996621e-06, 7.040999999999298e-06, 7.0279999999992016e-06, 7.07000000000485e-06, 7.068999999998438e-06, 7.0690000000053765e-06, 7.068999999998438e-06, 7.0829999999980076e-06, 7.040999999999298e-06, 7.07000000000485e-06, 7.125000000003656e-06, 7.055000000005807e-06, 7.111000000004086e-06, 7.0830000000049465e-06, 7.0829999999980076e-06, 7.068999999998438e-06, 7.068999999998438e-06, 7.0829999999980076e-06, 1.663899999999885e-05, 7.0419999999987715e-06, 7.068999999998438e-06, 7.068999999998438e-06, 7.083999999997481e-06, 7.054999999998868e-06]</msg>
<status status="PASS" starttime="20201115 22:02:51.807" endtime="20201115 22:02:51.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.795" endtime="20201115 22:02:51.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.819" endtime="20201115 22:02:51.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:51.827" endtime="20201115 22:02:51.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.823" endtime="20201115 22:02:51.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.814" endtime="20201115 22:02:51.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.288" endtime="20201115 22:02:51.853"></status>
</kw>
<msg timestamp="20201115 22:02:51.853" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.877" endtime="20201115 22:02:51.895"></status>
</kw>
<msg timestamp="20201115 22:02:51.896" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.873" endtime="20201115 22:02:51.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.903" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.898" endtime="20201115 22:02:51.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.906" endtime="20201115 22:02:51.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.866" endtime="20201115 22:02:51.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.860" endtime="20201115 22:02:51.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.929" endtime="20201115 22:02:52.274"></status>
</kw>
<msg timestamp="20201115 22:02:52.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042558583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042565667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.926" endtime="20201115 22:02:52.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042558583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042565667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.284" endtime="20201115 22:02:52.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.303" endtime="20201115 22:02:52.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.919" endtime="20201115 22:02:52.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.914" endtime="20201115 22:02:52.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.322" level="INFO">${RESULT} = [{'time': 0.042565667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.08400000000442e-06, 'source_diff': 7.08400000000442e-06}, {'time': 0.042662042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:52.313" endtime="20201115 22:02:52.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.353" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:52.325" endtime="20201115 22:02:52.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.364" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:02:52.362" endtime="20201115 22:02:52.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.370" level="INFO">VALUE: [7.08400000000442e-06, 7.069999999997911e-06, 7.0830000000049465e-06, 7.069999999997911e-06, 7.054999999998868e-06, 7.0969999999975775e-06, 7.069999999997911e-06, 7.069999999997911e-06, 7.0829999999980076e-06, 7.110999999997147e-06, 7.054999999998868e-06, 7.054999999998868e-06, 7.097000000004516e-06, 7.0830000000049465e-06, 7.068999999998438e-06, 7.07000000000485e-06, 7.05600000000528e-06, 7.054999999998868e-06, 7.068999999998438e-06, 7.0829999999980076e-06, 7.055999999998341e-06, 7.0829999999980076e-06, 7.0829999999980076e-06, 7.0829999999980076e-06, 7.069999999997911e-06, 7.097000000004516e-06, 7.08400000000442e-06, 7.068999999998438e-06, 7.0830000000049465e-06, 7.000000000000062e-06, 7.0830000000049465e-06, 7.055999999998341e-06, 7.0829999999980076e-06, 7.139000000003226e-06, 7.0279999999992016e-06, 7.068999999998438e-06, 7.068999999998438e-06, 7.055999999998341e-06, 7.0969999999975775e-06, 7.125000000003656e-06, 7.0690000000053765e-06, 7.068999999998438e-06, 7.055999999998341e-06, 7.0690000000053765e-06, 7.0690000000053765e-06, 7.0969999999975775e-06, 7.068999999998438e-06, 7.07000000000485e-06, 7.068999999998438e-06, 7.069999999997911e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.367" endtime="20201115 22:02:52.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.355" endtime="20201115 22:02:52.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.379" endtime="20201115 22:02:52.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.387" endtime="20201115 22:02:52.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.383" endtime="20201115 22:02:52.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.374" endtime="20201115 22:02:52.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.855" endtime="20201115 22:02:52.413"></status>
</kw>
<msg timestamp="20201115 22:02:52.414" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.438" endtime="20201115 22:02:52.455"></status>
</kw>
<msg timestamp="20201115 22:02:52.457" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.434" endtime="20201115 22:02:52.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.463" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.459" endtime="20201115 22:02:52.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.465" endtime="20201115 22:02:52.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.426" endtime="20201115 22:02:52.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.421" endtime="20201115 22:02:52.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.490" endtime="20201115 22:02:52.833"></status>
</kw>
<msg timestamp="20201115 22:02:52.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043775208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043782292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.486" endtime="20201115 22:02:52.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043775208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043782292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.843" endtime="20201115 22:02:52.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.862" endtime="20201115 22:02:52.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.478" endtime="20201115 22:02:52.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.474" endtime="20201115 22:02:52.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.881" level="INFO">${RESULT} = [{'time': 0.043782292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.083999999997481e-06, 'source_diff': 7.083999999997481e-06}, {'time': 0.043871139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:52.872" endtime="20201115 22:02:52.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.912" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:52.883" endtime="20201115 22:02:52.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.923" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:02:52.920" endtime="20201115 22:02:52.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.928" level="INFO">VALUE: [7.083999999997481e-06, 7.05600000000528e-06, 7.054999999998868e-06, 7.083999999997481e-06, 7.0690000000053765e-06, 7.055999999998341e-06, 7.07000000000485e-06, 7.167000000002366e-06, 7.04200000000571e-06, 7.0690000000053765e-06, 7.07000000000485e-06, 7.069999999997911e-06, 7.138999999996287e-06, 7.069999999997911e-06, 7.068999999998438e-06, 7.0829999999980076e-06, 7.0830000000049465e-06, 7.055999999998341e-06, 7.013999999999632e-06, 7.097999999997051e-06, 7.083999999997481e-06, 7.124999999996717e-06, 7.08400000000442e-06, 7.0419999999987715e-06, 7.069999999997911e-06, 7.0419999999987715e-06, 7.07000000000485e-06, 7.055000000005807e-06, 7.0829999999980076e-06, 7.0829999999980076e-06, 7.0690000000053765e-06, 7.0829999999980076e-06, 7.0829999999980076e-06, 7.0830000000049465e-06, 7.09800000000399e-06, 7.083999999997481e-06, 7.054999999998868e-06, 7.0830000000049465e-06, 7.054999999998868e-06, 7.0830000000049465e-06, 7.054999999998868e-06, 7.08400000000442e-06, 7.083999999997481e-06, 7.07000000000485e-06, 7.083999999997481e-06, 7.068999999998438e-06, 7.0690000000053765e-06, 7.0829999999980076e-06, 7.0969999999975775e-06, 7.0829999999980076e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.925" endtime="20201115 22:02:52.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.914" endtime="20201115 22:02:52.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.937" endtime="20201115 22:02:52.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.946" endtime="20201115 22:02:52.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.941" endtime="20201115 22:02:52.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.933" endtime="20201115 22:02:52.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.415" endtime="20201115 22:02:52.971"></status>
</kw>
<msg timestamp="20201115 22:02:52.972" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.996" endtime="20201115 22:02:53.013"></status>
</kw>
<msg timestamp="20201115 22:02:53.014" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.992" endtime="20201115 22:02:53.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.020" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.016" endtime="20201115 22:02:53.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.023" endtime="20201115 22:02:53.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.985" endtime="20201115 22:02:53.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.979" endtime="20201115 22:02:53.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.046" endtime="20201115 22:02:53.391"></status>
</kw>
<msg timestamp="20201115 22:02:53.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043380056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043387125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.043" endtime="20201115 22:02:53.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043380056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043387125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.400" endtime="20201115 22:02:53.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.419" endtime="20201115 22:02:53.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.036" endtime="20201115 22:02:53.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.031" endtime="20201115 22:02:53.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:53.439" level="INFO">${RESULT} = [{'time': 0.043387125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.043474139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:53.429" endtime="20201115 22:02:53.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:53.472" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:53.441" endtime="20201115 22:02:53.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.483" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:02:53.481" endtime="20201115 22:02:53.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.488" level="INFO">VALUE: [7.068999999998438e-06, 7.05600000000528e-06, 7.0829999999980076e-06, 7.0690000000053765e-06, 7.0969999999975775e-06, 7.068999999998438e-06, 7.068999999998438e-06, 7.0829999999980076e-06, 7.0830000000049465e-06, 7.054999999998868e-06, 7.0829999999980076e-06, 7.0969999999975775e-06, 7.055999999998341e-06, 7.083999999997481e-06, 7.0829999999980076e-06, 7.07000000000485e-06, 7.0829999999980076e-06, 7.068999999998438e-06, 7.08400000000442e-06, 7.054999999998868e-06, 7.07000000000485e-06, 7.0829999999980076e-06, 7.0830000000049465e-06, 7.068999999998438e-06, 7.068999999998438e-06, 7.068999999998438e-06, 7.055999999998341e-06, 7.07000000000485e-06, 7.068999999998438e-06, 7.054999999998868e-06, 7.0829999999980076e-06, 7.0830000000049465e-06, 7.069999999997911e-06, 7.097999999997051e-06, 7.0829999999980076e-06, 7.0829999999980076e-06, 7.0690000000053765e-06, 7.097000000004516e-06, 7.0279999999992016e-06, 7.083999999997481e-06, 7.0419999999987715e-06, 7.0829999999980076e-06, 7.097999999997051e-06, 7.0830000000049465e-06, 7.068999999998438e-06, 7.0969999999975775e-06, 7.138999999996287e-06, 7.097999999997051e-06, 7.097999999997051e-06, 7.054999999998868e-06]</msg>
<status status="PASS" starttime="20201115 22:02:53.485" endtime="20201115 22:02:53.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.474" endtime="20201115 22:02:53.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.497" endtime="20201115 22:02:53.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:53.507" endtime="20201115 22:02:53.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.502" endtime="20201115 22:02:53.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.493" endtime="20201115 22:02:53.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.974" endtime="20201115 22:02:53.533"></status>
</kw>
<msg timestamp="20201115 22:02:53.533" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.558" endtime="20201115 22:02:53.576"></status>
</kw>
<msg timestamp="20201115 22:02:53.578" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.555" endtime="20201115 22:02:53.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.580" endtime="20201115 22:02:53.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.586" endtime="20201115 22:02:53.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.547" endtime="20201115 22:02:53.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.541" endtime="20201115 22:02:53.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.610" endtime="20201115 22:02:53.935"></status>
</kw>
<msg timestamp="20201115 22:02:53.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045379806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045386903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.607" endtime="20201115 22:02:53.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045379806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045386903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.944" endtime="20201115 22:02:53.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.963" endtime="20201115 22:02:53.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.599" endtime="20201115 22:02:53.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.595" endtime="20201115 22:02:53.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:53.981" level="INFO">${RESULT} = [{'time': 0.045386903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.045483486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:53.972" endtime="20201115 22:02:53.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.013" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:53.983" endtime="20201115 22:02:54.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.024" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:02:54.022" endtime="20201115 22:02:54.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.030" level="INFO">VALUE: [7.0969999999975775e-06, 7.0419999999987715e-06, 7.069999999997911e-06, 7.0829999999980076e-06, 7.0419999999987715e-06, 7.054999999998868e-06, 7.0829999999980076e-06, 7.08400000000442e-06, 7.08400000000442e-06, 7.125000000003656e-06, 7.068999999998438e-06, 7.068999999998438e-06, 7.0690000000053765e-06, 7.097000000004516e-06, 7.0829999999980076e-06, 7.069999999997911e-06, 7.0829999999980076e-06, 7.08400000000442e-06, 7.0279999999992016e-06, 7.069999999997911e-06, 7.097000000004516e-06, 7.0829999999980076e-06, 7.083999999997481e-06, 7.069999999997911e-06, 7.0829999999980076e-06, 7.0829999999980076e-06, 7.068999999998438e-06, 7.125000000003656e-06, 7.054999999998868e-06, 7.068999999998438e-06, 7.068999999998438e-06, 7.069999999997911e-06, 7.068999999998438e-06, 7.0690000000053765e-06, 7.1380000000037525e-06, 7.0830000000049465e-06, 7.068999999998438e-06, 7.0830000000049465e-06, 7.083999999997481e-06, 7.068999999998438e-06, 7.152000000003322e-06, 7.0830000000049465e-06, 7.0829999999980076e-06, 7.069999999997911e-06, 7.139000000003226e-06, 7.0419999999987715e-06, 7.068999999998438e-06, 7.08400000000442e-06, 7.069999999997911e-06, 7.0279999999992016e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.027" endtime="20201115 22:02:54.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.015" endtime="20201115 22:02:54.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.040" endtime="20201115 22:02:54.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.048" endtime="20201115 22:02:54.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.044" endtime="20201115 22:02:54.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.035" endtime="20201115 22:02:54.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.535" endtime="20201115 22:02:54.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.284" endtime="20201115 22:02:54.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.282" endtime="20201115 22:02:54.075"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.079" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.103" endtime="20201115 22:02:54.120"></status>
</kw>
<msg timestamp="20201115 22:02:54.122" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.099" endtime="20201115 22:02:54.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.128" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.124" endtime="20201115 22:02:54.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.130" endtime="20201115 22:02:54.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.092" endtime="20201115 22:02:54.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.086" endtime="20201115 22:02:54.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.154" endtime="20201115 22:02:54.499"></status>
</kw>
<msg timestamp="20201115 22:02:54.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048410931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048418806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.151" endtime="20201115 22:02:54.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048410931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048418806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.509" endtime="20201115 22:02:54.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.528" endtime="20201115 22:02:54.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.143" endtime="20201115 22:02:54.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.138" endtime="20201115 22:02:54.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.545" level="INFO">${RESULT} = [{'time': 0.048418806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.875000000004406e-06, 'source_diff': 7.875000000004406e-06}, {'time': 0.048519042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:54.536" endtime="20201115 22:02:54.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.578" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:54.547" endtime="20201115 22:02:54.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.590" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:54.587" endtime="20201115 22:02:54.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.596" level="INFO">VALUE: [7.875000000004406e-06, 7.860999999997897e-06, 7.957999999995413e-06, 7.861000000004836e-06, 7.875000000004406e-06, 7.819999999998661e-06, 7.874999999997467e-06, 7.903000000003546e-06, 7.889000000003976e-06, 7.86200000000431e-06, 7.889000000003976e-06, 7.888999999997037e-06, 7.875000000004406e-06, 7.874999999997467e-06, 7.931000000002686e-06, 7.874999999997467e-06, 7.875000000004406e-06, 7.861000000004836e-06, 7.874999999997467e-06, 7.888999999997037e-06, 7.875000000004406e-06, 7.846999999998328e-06, 7.875000000004406e-06, 7.874999999997467e-06, 7.875000000004406e-06, 7.875000000004406e-06, 7.860999999997897e-06, 7.861000000004836e-06, 7.875000000004406e-06, 7.958000000002352e-06, 7.958000000002352e-06, 7.861999999997371e-06, 7.861000000004836e-06, 7.860999999997897e-06, 7.888999999997037e-06, 7.860999999997897e-06, 7.889000000003976e-06, 7.888999999997037e-06, 7.847000000005266e-06, 7.916999999996177e-06, 7.875000000004406e-06, 7.887999999997564e-06, 7.903000000003546e-06, 7.875000000004406e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.944999999995317e-06, 7.902999999996607e-06, 7.860999999997897e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.592" endtime="20201115 22:02:54.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.580" endtime="20201115 22:02:54.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.605" endtime="20201115 22:02:54.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.614" endtime="20201115 22:02:54.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.609" endtime="20201115 22:02:54.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.601" endtime="20201115 22:02:54.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.081" endtime="20201115 22:02:54.639"></status>
</kw>
<msg timestamp="20201115 22:02:54.640" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.663" endtime="20201115 22:02:54.682"></status>
</kw>
<msg timestamp="20201115 22:02:54.683" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.660" endtime="20201115 22:02:54.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.689" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.685" endtime="20201115 22:02:54.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.692" endtime="20201115 22:02:54.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.653" endtime="20201115 22:02:54.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.647" endtime="20201115 22:02:54.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.715" endtime="20201115 22:02:55.060"></status>
</kw>
<msg timestamp="20201115 22:02:55.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042931486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042939347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.712" endtime="20201115 22:02:55.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042931486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042939347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.069" endtime="20201115 22:02:55.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.088" endtime="20201115 22:02:55.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.705" endtime="20201115 22:02:55.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.700" endtime="20201115 22:02:55.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:55.106" level="INFO">${RESULT} = [{'time': 0.042939347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.861000000004836e-06, 'source_diff': 7.861000000004836e-06}, {'time': 0.04303625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:55.097" endtime="20201115 22:02:55.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:55.138" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:55.108" endtime="20201115 22:02:55.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.150" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:55.148" endtime="20201115 22:02:55.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.156" level="INFO">VALUE: [7.861000000004836e-06, 7.874999999997467e-06, 7.903000000003546e-06, 7.957999999995413e-06, 7.860999999997897e-06, 7.874999999997467e-06, 7.875000000004406e-06, 7.888999999997037e-06, 7.889000000003976e-06, 7.889000000003976e-06, 7.861000000004836e-06, 7.889000000003976e-06, 7.889000000003976e-06, 7.875000000004406e-06, 7.903000000003546e-06, 7.791999999999522e-06, 7.832999999998758e-06, 7.889000000003976e-06, 7.847999999997801e-06, 7.889000000003976e-06, 7.888999999997037e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.930000000003212e-06, 7.875000000004406e-06, 7.819999999998661e-06, 7.875000000004406e-06, 7.832999999998758e-06, 7.902999999996607e-06, 7.888999999997037e-06, 7.874999999997467e-06, 7.902999999996607e-06, 7.889000000003976e-06, 7.874999999997467e-06, 7.875000000004406e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.860999999997897e-06, 7.888999999997037e-06, 7.874999999997467e-06, 7.929999999996273e-06, 7.916000000003642e-06, 7.861000000004836e-06, 7.875000000004406e-06, 7.875000000004406e-06, 7.861000000004836e-06, 7.861000000004836e-06, 7.875000000004406e-06, 7.846999999998328e-06, 7.889000000003976e-06]</msg>
<status status="PASS" starttime="20201115 22:02:55.153" endtime="20201115 22:02:55.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.141" endtime="20201115 22:02:55.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.165" endtime="20201115 22:02:55.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.173" endtime="20201115 22:02:55.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.169" endtime="20201115 22:02:55.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.160" endtime="20201115 22:02:55.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.641" endtime="20201115 22:02:55.199"></status>
</kw>
<msg timestamp="20201115 22:02:55.199" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.223" endtime="20201115 22:02:55.240"></status>
</kw>
<msg timestamp="20201115 22:02:55.241" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.219" endtime="20201115 22:02:55.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.247" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.243" endtime="20201115 22:02:55.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.250" endtime="20201115 22:02:55.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.212" endtime="20201115 22:02:55.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.206" endtime="20201115 22:02:55.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.274" endtime="20201115 22:02:55.617"></status>
</kw>
<msg timestamp="20201115 22:02:55.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043166861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04317475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:55.270" endtime="20201115 22:02:55.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043166861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04317475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:55.627" endtime="20201115 22:02:55.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.646" endtime="20201115 22:02:55.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.263" endtime="20201115 22:02:55.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.258" endtime="20201115 22:02:55.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:55.664" level="INFO">${RESULT} = [{'time': 0.04317475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.888999999997037e-06, 'source_diff': 7.888999999997037e-06}, {'time': 0.043274778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:55.655" endtime="20201115 22:02:55.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:55.698" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:55.667" endtime="20201115 22:02:55.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.709" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:55.707" endtime="20201115 22:02:55.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.715" level="INFO">VALUE: [7.888999999997037e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.861999999997371e-06, 7.888999999997037e-06, 7.874999999997467e-06, 7.875000000004406e-06, 7.874999999997467e-06, 7.860999999997897e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.818999999999188e-06, 7.874999999997467e-06, 7.860999999997897e-06, 7.887999999997564e-06, 7.889000000003976e-06, 7.888999999997037e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.888999999997037e-06, 7.875000000004406e-06, 7.874999999997467e-06, 7.875000000004406e-06, 7.889000000003976e-06, 7.888999999997037e-06, 7.888999999997037e-06, 7.889000000003976e-06, 7.874999999997467e-06, 7.888999999997037e-06, 7.888999999997037e-06, 7.875000000004406e-06, 7.861000000004836e-06, 7.874999999997467e-06, 7.832999999998758e-06, 7.874999999997467e-06, 7.888999999997037e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.888999999997037e-06, 7.902999999996607e-06, 7.875000000004406e-06, 7.860999999997897e-06, 7.874999999997467e-06, 7.875000000004406e-06, 7.875000000004406e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.84800000000474e-06]</msg>
<status status="PASS" starttime="20201115 22:02:55.712" endtime="20201115 22:02:55.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.700" endtime="20201115 22:02:55.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.724" endtime="20201115 22:02:55.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.733" endtime="20201115 22:02:55.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.728" endtime="20201115 22:02:55.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.719" endtime="20201115 22:02:55.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.201" endtime="20201115 22:02:55.759"></status>
</kw>
<msg timestamp="20201115 22:02:55.759" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.782" endtime="20201115 22:02:55.800"></status>
</kw>
<msg timestamp="20201115 22:02:55.801" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.779" endtime="20201115 22:02:55.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.808" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.803" endtime="20201115 22:02:55.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.810" endtime="20201115 22:02:55.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.772" endtime="20201115 22:02:55.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.766" endtime="20201115 22:02:55.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.834" endtime="20201115 22:02:56.177"></status>
</kw>
<msg timestamp="20201115 22:02:56.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042714236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042722097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.830" endtime="20201115 22:02:56.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042714236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042722097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.187" endtime="20201115 22:02:56.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.207" endtime="20201115 22:02:56.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.823" endtime="20201115 22:02:56.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.818" endtime="20201115 22:02:56.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.225" level="INFO">${RESULT} = [{'time': 0.042722097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.042822958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:56.216" endtime="20201115 22:02:56.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.257" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:56.228" endtime="20201115 22:02:56.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.269" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:56.266" endtime="20201115 22:02:56.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.275" level="INFO">VALUE: [7.860999999997897e-06, 7.889000000003976e-06, 7.958000000002352e-06, 7.861000000004836e-06, 7.874999999997467e-06, 7.818999999999188e-06, 7.888999999997037e-06, 7.875000000004406e-06, 7.889000000003976e-06, 7.901999999997134e-06, 7.930999999995747e-06, 7.888999999997037e-06, 7.889000000003976e-06, 7.959000000001826e-06, 7.930999999995747e-06, 7.903000000003546e-06, 7.888000000004503e-06, 7.902999999996607e-06, 7.958000000002352e-06, 7.888999999997037e-06, 7.902999999996607e-06, 7.957999999995413e-06, 7.903000000003546e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.861000000004836e-06, 7.875000000004406e-06, 7.889000000003976e-06, 7.889000000003976e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.889000000003976e-06, 7.889000000003976e-06, 7.888999999997037e-06, 7.972000000001922e-06, 7.888999999997037e-06, 7.861999999997371e-06, 7.875000000004406e-06, 7.860999999997897e-06, 7.875000000004406e-06, 7.889000000003976e-06, 7.804999999999618e-06, 7.916999999996177e-06, 7.861999999997371e-06, 7.874999999997467e-06, 7.917000000003116e-06, 7.861000000004836e-06, 7.846999999998328e-06, 7.888999999997037e-06, 7.874999999997467e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.272" endtime="20201115 22:02:56.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.259" endtime="20201115 22:02:56.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.284" endtime="20201115 22:02:56.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.292" endtime="20201115 22:02:56.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.288" endtime="20201115 22:02:56.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.279" endtime="20201115 22:02:56.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.760" endtime="20201115 22:02:56.318"></status>
</kw>
<msg timestamp="20201115 22:02:56.319" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.342" endtime="20201115 22:02:56.359"></status>
</kw>
<msg timestamp="20201115 22:02:56.360" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.338" endtime="20201115 22:02:56.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.367" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.363" endtime="20201115 22:02:56.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.369" endtime="20201115 22:02:56.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.331" endtime="20201115 22:02:56.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.325" endtime="20201115 22:02:56.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.393" endtime="20201115 22:02:56.737"></status>
</kw>
<msg timestamp="20201115 22:02:56.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042579167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042587042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.389" endtime="20201115 22:02:56.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042579167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042587042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.747" endtime="20201115 22:02:56.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.767" endtime="20201115 22:02:56.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.382" endtime="20201115 22:02:56.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.377" endtime="20201115 22:02:56.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.785" level="INFO">${RESULT} = [{'time': 0.042587042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.042689597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:56.775" endtime="20201115 22:02:56.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.816" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:56.787" endtime="20201115 22:02:56.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.827" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:56.825" endtime="20201115 22:02:56.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.833" level="INFO">VALUE: [7.874999999997467e-06, 7.903000000003546e-06, 7.889000000003976e-06, 7.875000000004406e-06, 7.888000000004503e-06, 7.930999999995747e-06, 7.875000000004406e-06, 7.846999999998328e-06, 7.875000000004406e-06, 7.860999999997897e-06, 7.875000000004406e-06, 7.846999999998328e-06, 7.874999999997467e-06, 7.958999999994887e-06, 7.930000000003212e-06, 7.875000000004406e-06, 7.875000000004406e-06, 7.874999999997467e-06, 7.860999999997897e-06, 7.903000000003546e-06, 7.875000000004406e-06, 7.832999999998758e-06, 7.916999999996177e-06, 7.874999999997467e-06, 7.902999999996607e-06, 7.903000000003546e-06, 7.875000000004406e-06, 7.860999999997897e-06, 7.847000000005266e-06, 7.818999999999188e-06, 7.874999999997467e-06, 7.889000000003976e-06, 7.860999999997897e-06, 7.889000000003976e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.888999999997037e-06, 7.889000000003976e-06, 7.889000000003976e-06, 7.916999999996177e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.888999999997037e-06, 7.959000000001826e-06, 7.887999999997564e-06, 7.819999999998661e-06, 7.901999999997134e-06, 7.917000000003116e-06, 7.874999999997467e-06, 7.860999999997897e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.829" endtime="20201115 22:02:56.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.818" endtime="20201115 22:02:56.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.843" endtime="20201115 22:02:56.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.851" endtime="20201115 22:02:56.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.847" endtime="20201115 22:02:56.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.838" endtime="20201115 22:02:56.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.320" endtime="20201115 22:02:56.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.077" endtime="20201115 22:02:56.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.075" endtime="20201115 22:02:56.878"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.883" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.906" endtime="20201115 22:02:56.924"></status>
</kw>
<msg timestamp="20201115 22:02:56.925" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.903" endtime="20201115 22:02:56.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.931" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.927" endtime="20201115 22:02:56.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.934" endtime="20201115 22:02:56.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.896" endtime="20201115 22:02:56.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.890" endtime="20201115 22:02:56.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.958" endtime="20201115 22:02:57.266"></status>
</kw>
<msg timestamp="20201115 22:02:57.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048288458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048297125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.955" endtime="20201115 22:02:57.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048288458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048297125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.271" endtime="20201115 22:02:57.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.279" endtime="20201115 22:02:57.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.948" endtime="20201115 22:02:57.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.943" endtime="20201115 22:02:57.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.287" level="INFO">${RESULT} = [{'time': 0.048297125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.667000000003866e-06, 'source_diff': 8.667000000003866e-06}, {'time': 0.048412028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:57.283" endtime="20201115 22:02:57.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:57.301" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:57.288" endtime="20201115 22:02:57.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.309" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:57.307" endtime="20201115 22:02:57.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.316" level="INFO">VALUE: [8.667000000003866e-06, 8.709000000002576e-06, 8.680999999996497e-06, 8.764000000001382e-06, 8.679999999997023e-06, 8.750000000001812e-06, 8.680999999996497e-06, 8.681000000003436e-06, 8.721999999995733e-06, 8.694000000003532e-06, 8.611000000005586e-06, 8.694000000003532e-06, 8.679999999997023e-06, 8.679999999997023e-06, 8.679999999997023e-06, 8.709000000002576e-06, 8.708000000003102e-06, 8.680999999996497e-06, 8.681000000003436e-06, 8.708000000003102e-06, 8.652999999997357e-06, 8.694000000003532e-06, 8.679999999997023e-06, 8.681000000003436e-06, 8.679999999997023e-06, 8.679999999997023e-06, 8.679999999997023e-06, 8.722000000002672e-06, 8.680999999996497e-06, 8.694999999996067e-06, 8.681000000003436e-06, 8.695000000003006e-06, 8.679999999997023e-06, 8.709000000002576e-06, 8.695000000003006e-06, 8.610999999998648e-06, 8.666999999996927e-06, 8.681000000003436e-06, 8.638000000005253e-06, 8.667000000003866e-06, 8.736000000002242e-06, 8.681000000003436e-06, 8.709000000002576e-06, 8.679999999997023e-06, 8.680000000003962e-06, 8.695000000003006e-06, 8.694999999996067e-06, 8.667000000003866e-06, 8.693999999996593e-06, 8.694999999996067e-06]</msg>
<status status="PASS" starttime="20201115 22:02:57.311" endtime="20201115 22:02:57.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.302" endtime="20201115 22:02:57.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.325" endtime="20201115 22:02:57.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.333" endtime="20201115 22:02:57.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.329" endtime="20201115 22:02:57.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.320" endtime="20201115 22:02:57.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.884" endtime="20201115 22:02:57.359"></status>
</kw>
<msg timestamp="20201115 22:02:57.359" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.383" endtime="20201115 22:02:57.401"></status>
</kw>
<msg timestamp="20201115 22:02:57.402" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.379" endtime="20201115 22:02:57.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.409" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.405" endtime="20201115 22:02:57.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.412" endtime="20201115 22:02:57.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.372" endtime="20201115 22:02:57.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.366" endtime="20201115 22:02:57.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.436" endtime="20201115 22:02:57.779"></status>
</kw>
<msg timestamp="20201115 22:02:57.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042702153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042710806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.432" endtime="20201115 22:02:57.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042702153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042710806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.788" endtime="20201115 22:02:57.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.807" endtime="20201115 22:02:57.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.425" endtime="20201115 22:02:57.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.420" endtime="20201115 22:02:57.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.825" level="INFO">${RESULT} = [{'time': 0.042710806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.652999999997357e-06, 'source_diff': 8.652999999997357e-06}, {'time': 0.042825486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:57.816" endtime="20201115 22:02:57.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:57.856" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:57.827" endtime="20201115 22:02:57.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.868" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:57.865" endtime="20201115 22:02:57.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.873" level="INFO">VALUE: [8.652999999997357e-06, 8.694000000003532e-06, 8.694000000003532e-06, 8.681000000003436e-06, 8.680999999996497e-06, 8.693999999996593e-06, 8.693999999996593e-06, 8.681000000003436e-06, 8.679999999997023e-06, 8.681000000003436e-06, 8.693999999996593e-06, 8.708000000003102e-06, 8.681000000003436e-06, 8.722000000002672e-06, 8.693999999996593e-06, 8.693999999996593e-06, 8.709000000002576e-06, 8.709000000002576e-06, 8.694000000003532e-06, 8.693999999996593e-06, 8.665999999997454e-06, 8.707999999996163e-06, 8.653000000004296e-06, 8.708999999995637e-06, 8.695000000003006e-06, 8.694999999996067e-06, 8.694999999996067e-06, 8.693999999996593e-06, 8.679999999997023e-06, 8.679999999997023e-06, 8.680000000003962e-06, 8.694000000003532e-06, 8.736000000002242e-06, 8.667000000003866e-06, 8.695000000003006e-06, 8.679999999997023e-06, 8.680000000003962e-06, 8.680000000003962e-06, 8.665999999997454e-06, 8.708999999995637e-06, 8.679999999997023e-06, 8.679999999997023e-06, 8.695000000003006e-06, 8.679999999997023e-06, 8.680999999996497e-06, 8.695000000003006e-06, 8.651999999997884e-06, 8.639000000004726e-06, 8.681000000003436e-06, 8.708999999995637e-06]</msg>
<status status="PASS" starttime="20201115 22:02:57.870" endtime="20201115 22:02:57.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.858" endtime="20201115 22:02:57.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.883" endtime="20201115 22:02:57.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.895" endtime="20201115 22:02:57.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.891" endtime="20201115 22:02:57.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.878" endtime="20201115 22:02:57.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.361" endtime="20201115 22:02:57.921"></status>
</kw>
<msg timestamp="20201115 22:02:57.921" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.946" endtime="20201115 22:02:57.964"></status>
</kw>
<msg timestamp="20201115 22:02:57.965" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.941" endtime="20201115 22:02:57.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.972" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.967" endtime="20201115 22:02:57.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.974" endtime="20201115 22:02:57.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.934" endtime="20201115 22:02:57.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.928" endtime="20201115 22:02:57.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.998" endtime="20201115 22:02:58.341"></status>
</kw>
<msg timestamp="20201115 22:02:58.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043944847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043953556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.994" endtime="20201115 22:02:58.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043944847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043953556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.351" endtime="20201115 22:02:58.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.370" endtime="20201115 22:02:58.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.987" endtime="20201115 22:02:58.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.982" endtime="20201115 22:02:58.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.388" level="INFO">${RESULT} = [{'time': 0.043953556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.708999999995637e-06, 'source_diff': 8.708999999995637e-06}, {'time': 0.044058417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:58.379" endtime="20201115 22:02:58.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.418" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:58.390" endtime="20201115 22:02:58.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.430" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:58.427" endtime="20201115 22:02:58.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.435" level="INFO">VALUE: [8.708999999995637e-06, 8.667000000003866e-06, 8.680999999996497e-06, 8.708000000003102e-06, 8.763999999994443e-06, 8.709000000002576e-06, 8.694000000003532e-06, 8.679999999997023e-06, 8.61200000000506e-06, 8.694000000003532e-06, 8.667000000003866e-06, 8.680000000003962e-06, 8.653000000004296e-06, 8.666999999996927e-06, 8.707999999996163e-06, 8.679999999997023e-06, 8.695000000003006e-06, 8.680000000003962e-06, 8.680999999996497e-06, 8.681000000003436e-06, 8.695000000003006e-06, 8.681000000003436e-06, 8.680999999996497e-06, 8.666000000004392e-06, 8.764000000001382e-06, 8.695000000003006e-06, 8.693999999996593e-06, 8.680999999996497e-06, 8.680999999996497e-06, 8.695000000003006e-06, 8.681000000003436e-06, 8.681000000003436e-06, 8.666999999996927e-06, 8.708000000003102e-06, 8.680000000003962e-06, 8.679999999997023e-06, 8.653000000004296e-06, 8.665999999997454e-06, 8.694000000003532e-06, 8.667000000003866e-06, 8.680000000003962e-06, 8.694000000003532e-06, 8.680999999996497e-06, 8.667000000003866e-06, 8.708999999995637e-06, 8.694999999996067e-06, 8.708999999995637e-06, 8.695000000003006e-06, 8.681000000003436e-06, 8.722000000002672e-06]</msg>
<status status="PASS" starttime="20201115 22:02:58.432" endtime="20201115 22:02:58.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.420" endtime="20201115 22:02:58.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.444" endtime="20201115 22:02:58.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.453" endtime="20201115 22:02:58.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.448" endtime="20201115 22:02:58.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.439" endtime="20201115 22:02:58.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.923" endtime="20201115 22:02:58.479"></status>
</kw>
<msg timestamp="20201115 22:02:58.479" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.505" endtime="20201115 22:02:58.523"></status>
</kw>
<msg timestamp="20201115 22:02:58.524" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.501" endtime="20201115 22:02:58.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.531" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.526" endtime="20201115 22:02:58.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.533" endtime="20201115 22:02:58.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.494" endtime="20201115 22:02:58.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.486" endtime="20201115 22:02:58.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.557" endtime="20201115 22:02:58.900"></status>
</kw>
<msg timestamp="20201115 22:02:58.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045517667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045526333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.553" endtime="20201115 22:02:58.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045517667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045526333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.910" endtime="20201115 22:02:58.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.929" endtime="20201115 22:02:58.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.546" endtime="20201115 22:02:58.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.541" endtime="20201115 22:02:58.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.946" level="INFO">${RESULT} = [{'time': 0.045526333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.666000000004392e-06, 'source_diff': 8.666000000004392e-06}, {'time': 0.045633292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:58.937" endtime="20201115 22:02:58.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.977" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:58.948" endtime="20201115 22:02:58.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.989" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:58.986" endtime="20201115 22:02:58.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.994" level="INFO">VALUE: [8.666000000004392e-06, 8.680999999996497e-06, 8.695000000003006e-06, 8.708000000003102e-06, 8.680999999996497e-06, 8.694000000003532e-06, 8.693999999996593e-06, 8.680999999996497e-06, 8.679999999997023e-06, 8.693999999996593e-06, 8.681000000003436e-06, 8.625000000005156e-06, 8.695000000003006e-06, 8.666999999996927e-06, 8.695000000003006e-06, 8.693999999996593e-06, 8.667000000003866e-06, 8.694999999996067e-06, 8.694999999996067e-06, 8.694000000003532e-06, 8.722000000002672e-06, 8.681000000003436e-06, 8.680000000003962e-06, 8.679999999997023e-06, 8.707999999996163e-06, 8.680999999996497e-06, 8.709000000002576e-06, 8.764000000001382e-06, 8.667000000003866e-06, 8.680000000003962e-06, 8.693999999996593e-06, 8.721999999995733e-06, 8.694999999996067e-06, 8.681000000003436e-06, 8.666999999996927e-06, 8.707999999996163e-06, 8.624999999998217e-06, 8.694999999996067e-06, 8.721999999995733e-06, 8.681000000003436e-06, 8.611999999998121e-06, 8.679999999997023e-06, 8.694999999996067e-06, 8.694999999996067e-06, 8.694000000003532e-06, 8.707999999996163e-06, 8.694000000003532e-06, 8.693999999996593e-06, 8.694000000003532e-06, 8.680000000003962e-06]</msg>
<status status="PASS" starttime="20201115 22:02:58.991" endtime="20201115 22:02:58.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.979" endtime="20201115 22:02:58.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.003" endtime="20201115 22:02:59.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.013" endtime="20201115 22:02:59.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.008" endtime="20201115 22:02:59.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.998" endtime="20201115 22:02:59.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.481" endtime="20201115 22:02:59.038"></status>
</kw>
<msg timestamp="20201115 22:02:59.039" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.063" endtime="20201115 22:02:59.081"></status>
</kw>
<msg timestamp="20201115 22:02:59.082" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.059" endtime="20201115 22:02:59.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.088" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.084" endtime="20201115 22:02:59.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.091" endtime="20201115 22:02:59.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.052" endtime="20201115 22:02:59.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.046" endtime="20201115 22:02:59.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.117" endtime="20201115 22:02:59.459"></status>
</kw>
<msg timestamp="20201115 22:02:59.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043052222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043060903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.113" endtime="20201115 22:02:59.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043052222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043060903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.468" endtime="20201115 22:02:59.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.487" endtime="20201115 22:02:59.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.106" endtime="20201115 22:02:59.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.101" endtime="20201115 22:02:59.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.505" level="INFO">${RESULT} = [{'time': 0.043060903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.680999999996497e-06, 'source_diff': 8.680999999996497e-06}, {'time': 0.043166625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:59.496" endtime="20201115 22:02:59.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.536" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:02:59.507" endtime="20201115 22:02:59.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.547" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:59.545" endtime="20201115 22:02:59.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.552" level="INFO">VALUE: [8.680999999996497e-06, 8.652999999997357e-06, 8.680999999996497e-06, 8.681000000003436e-06, 8.624999999998217e-06, 8.680000000003962e-06, 8.639000000004726e-06, 8.708000000003102e-06, 8.667000000003866e-06, 8.610999999998648e-06, 8.667000000003866e-06, 8.694000000003532e-06, 8.679999999997023e-06, 8.680000000003962e-06, 8.680000000003962e-06, 8.679999999997023e-06, 8.694999999996067e-06, 8.680000000003962e-06, 8.722000000002672e-06, 8.679999999997023e-06, 8.694000000003532e-06, 8.680000000003962e-06, 8.694999999996067e-06, 8.695000000003006e-06, 8.680999999996497e-06, 8.709000000002576e-06, 8.694000000003532e-06, 8.707999999996163e-06, 8.667000000003866e-06, 8.652999999997357e-06, 8.679999999997023e-06, 8.708000000003102e-06, 8.667000000003866e-06, 8.693999999996593e-06, 8.694000000003532e-06, 8.722000000002672e-06, 8.695000000003006e-06, 8.694999999996067e-06, 8.667000000003866e-06, 8.680999999996497e-06, 8.679999999997023e-06, 8.694000000003532e-06, 8.680000000003962e-06, 8.708000000003102e-06, 8.694000000003532e-06, 8.652000000004822e-06, 8.694999999996067e-06, 8.707999999996163e-06, 8.680000000003962e-06, 8.665999999997454e-06]</msg>
<status status="PASS" starttime="20201115 22:02:59.549" endtime="20201115 22:02:59.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.538" endtime="20201115 22:02:59.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.562" endtime="20201115 22:02:59.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.571" endtime="20201115 22:02:59.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.566" endtime="20201115 22:02:59.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.557" endtime="20201115 22:02:59.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.040" endtime="20201115 22:02:59.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.881" endtime="20201115 22:02:59.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.879" endtime="20201115 22:02:59.597"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.602" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.626" endtime="20201115 22:02:59.644"></status>
</kw>
<msg timestamp="20201115 22:02:59.645" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.622" endtime="20201115 22:02:59.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.652" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.647" endtime="20201115 22:02:59.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.654" endtime="20201115 22:02:59.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.615" endtime="20201115 22:02:59.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.609" endtime="20201115 22:02:59.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.679" endtime="20201115 22:03:00.023"></status>
</kw>
<msg timestamp="20201115 22:03:00.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04855825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048567681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:59.676" endtime="20201115 22:03:00.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04855825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048567681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:00.032" endtime="20201115 22:03:00.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.051" endtime="20201115 22:03:00.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.667" endtime="20201115 22:03:00.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.662" endtime="20201115 22:03:00.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.069" level="INFO">${RESULT} = [{'time': 0.048567681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.431000000004186e-06, 'source_diff': 9.431000000004186e-06}, {'time': 0.048684931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:00.059" endtime="20201115 22:03:00.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.099" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:00.071" endtime="20201115 22:03:00.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.110" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:03:00.108" endtime="20201115 22:03:00.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.117" level="INFO">VALUE: [9.431000000004186e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.472000000003422e-06, 9.499999999995623e-06, 9.486000000002992e-06, 9.416999999997677e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.472000000003422e-06, 9.542000000001272e-06, 9.472000000003422e-06, 9.500000000002562e-06, 9.487000000002466e-06, 9.471999999996483e-06, 9.472000000003422e-06, 9.499999999995623e-06, 9.528000000001702e-06, 9.499999999995623e-06, 9.430999999997247e-06, 9.485999999996053e-06, 9.500000000002562e-06, 9.457999999996913e-06, 9.471999999996483e-06, 9.485999999996053e-06, 9.500000000002562e-06, 9.527000000002228e-06, 9.499999999995623e-06, 9.499999999995623e-06, 9.472000000003422e-06, 9.472000000003422e-06, 9.527999999994763e-06, 9.471999999996483e-06, 9.457999999996913e-06, 9.500000000002562e-06, 9.471999999996483e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.499999999995623e-06, 9.514000000002132e-06, 9.500000000002562e-06, 9.499999999995623e-06, 9.514000000002132e-06, 9.499999999995623e-06, 9.457999999996913e-06, 9.499999999995623e-06, 9.486000000002992e-06]</msg>
<status status="PASS" starttime="20201115 22:03:00.113" endtime="20201115 22:03:00.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.101" endtime="20201115 22:03:00.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.126" endtime="20201115 22:03:00.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:00.134" endtime="20201115 22:03:00.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.130" endtime="20201115 22:03:00.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.121" endtime="20201115 22:03:00.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.603" endtime="20201115 22:03:00.160"></status>
</kw>
<msg timestamp="20201115 22:03:00.160" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.184" endtime="20201115 22:03:00.202"></status>
</kw>
<msg timestamp="20201115 22:03:00.203" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.180" endtime="20201115 22:03:00.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.210" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.206" endtime="20201115 22:03:00.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.212" endtime="20201115 22:03:00.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.173" endtime="20201115 22:03:00.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.167" endtime="20201115 22:03:00.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.236" endtime="20201115 22:03:00.583"></status>
</kw>
<msg timestamp="20201115 22:03:00.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042897236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042906722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.232" endtime="20201115 22:03:00.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042897236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042906722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.592" endtime="20201115 22:03:00.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.611" endtime="20201115 22:03:00.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.225" endtime="20201115 22:03:00.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.220" endtime="20201115 22:03:00.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.628" level="INFO">${RESULT} = [{'time': 0.042906722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.486000000002992e-06, 'source_diff': 9.486000000002992e-06}, {'time': 0.043026653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:00.619" endtime="20201115 22:03:00.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.659" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:00.631" endtime="20201115 22:03:00.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.671" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:03:00.669" endtime="20201115 22:03:00.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.676" level="INFO">VALUE: [9.486000000002992e-06, 9.485999999996053e-06, 9.486000000002992e-06, 9.457999999996913e-06, 9.513999999995193e-06, 9.514000000002132e-06, 9.542000000001272e-06, 9.499999999995623e-06, 9.499999999995623e-06, 9.514000000002132e-06, 9.458999999996387e-06, 9.487000000002466e-06, 9.486000000002992e-06, 9.499999999995623e-06, 9.499999999995623e-06, 9.513999999995193e-06, 9.471999999996483e-06, 9.499999999995623e-06, 9.499999999995623e-06, 9.528000000001702e-06, 9.445000000003756e-06, 9.499999999995623e-06, 9.499999999995623e-06, 9.514000000002132e-06, 9.487000000002466e-06, 9.486000000002992e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.513999999995193e-06, 9.500000000002562e-06, 9.500000000002562e-06, 9.445000000003756e-06, 9.485999999996053e-06, 9.486000000002992e-06, 9.499999999995623e-06, 9.486000000002992e-06, 9.487000000002466e-06, 9.485999999996053e-06, 9.499999999995623e-06, 9.485999999996053e-06, 9.499999999995623e-06, 9.485999999996053e-06, 9.528000000001702e-06, 9.486000000002992e-06, 9.528000000001702e-06, 9.513999999995193e-06, 9.485999999996053e-06, 9.499999999995623e-06, 9.485999999996053e-06, 9.485999999996053e-06]</msg>
<status status="PASS" starttime="20201115 22:03:00.673" endtime="20201115 22:03:00.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.662" endtime="20201115 22:03:00.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.685" endtime="20201115 22:03:00.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:00.694" endtime="20201115 22:03:00.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.689" endtime="20201115 22:03:00.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.681" endtime="20201115 22:03:00.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.161" endtime="20201115 22:03:00.720"></status>
</kw>
<msg timestamp="20201115 22:03:00.720" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.744" endtime="20201115 22:03:00.762"></status>
</kw>
<msg timestamp="20201115 22:03:00.763" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.740" endtime="20201115 22:03:00.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.770" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.766" endtime="20201115 22:03:00.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.772" endtime="20201115 22:03:00.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.733" endtime="20201115 22:03:00.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.727" endtime="20201115 22:03:00.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.798" endtime="20201115 22:03:01.122"></status>
</kw>
<msg timestamp="20201115 22:03:01.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043156181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043165681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.794" endtime="20201115 22:03:01.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043156181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043165681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.132" endtime="20201115 22:03:01.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.150" endtime="20201115 22:03:01.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.786" endtime="20201115 22:03:01.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.781" endtime="20201115 22:03:01.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.168" level="INFO">${RESULT} = [{'time': 0.043165681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.499999999995623e-06, 'source_diff': 9.499999999995623e-06}, {'time': 0.043289583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:01.159" endtime="20201115 22:03:01.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.199" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:01.171" endtime="20201115 22:03:01.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.211" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:03:01.208" endtime="20201115 22:03:01.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.216" level="INFO">VALUE: [9.499999999995623e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.513999999995193e-06, 9.52699999999529e-06, 9.513000000002658e-06, 9.513000000002658e-06, 9.487000000002466e-06, 9.500000000002562e-06, 9.472000000003422e-06, 9.485999999996053e-06, 9.500000000002562e-06, 9.486000000002992e-06, 9.472000000003422e-06, 9.458000000003852e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.472000000003422e-06, 9.500000000002562e-06, 9.471999999996483e-06, 9.486000000002992e-06, 9.486000000002992e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.570000000000412e-06, 9.444999999996817e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.499999999995623e-06, 9.429999999997773e-06, 9.500000000002562e-06, 9.528000000001702e-06, 9.500000000002562e-06, 9.430999999997247e-06, 9.486000000002992e-06, 9.471999999996483e-06, 9.471999999996483e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.487000000002466e-06, 9.486000000002992e-06, 9.486000000002992e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.570000000000412e-06, 9.513999999995193e-06, 9.500000000002562e-06, 9.500000000002562e-06, 9.486000000002992e-06]</msg>
<status status="PASS" starttime="20201115 22:03:01.213" endtime="20201115 22:03:01.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.201" endtime="20201115 22:03:01.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.226" endtime="20201115 22:03:01.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.235" endtime="20201115 22:03:01.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.230" endtime="20201115 22:03:01.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.221" endtime="20201115 22:03:01.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.721" endtime="20201115 22:03:01.260"></status>
</kw>
<msg timestamp="20201115 22:03:01.261" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.284" endtime="20201115 22:03:01.303"></status>
</kw>
<msg timestamp="20201115 22:03:01.304" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.281" endtime="20201115 22:03:01.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.311" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.307" endtime="20201115 22:03:01.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.313" endtime="20201115 22:03:01.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.273" endtime="20201115 22:03:01.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.267" endtime="20201115 22:03:01.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.337" endtime="20201115 22:03:01.685"></status>
</kw>
<msg timestamp="20201115 22:03:01.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042941889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042951417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.334" endtime="20201115 22:03:01.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042941889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042951417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.696" endtime="20201115 22:03:01.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.718" endtime="20201115 22:03:01.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.326" endtime="20201115 22:03:01.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.321" endtime="20201115 22:03:01.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.741" level="INFO">${RESULT} = [{'time': 0.042951417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.043072986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:01.731" endtime="20201115 22:03:01.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.772" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:01.743" endtime="20201115 22:03:01.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.783" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:03:01.781" endtime="20201115 22:03:01.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.789" level="INFO">VALUE: [9.528000000001702e-06, 9.486000000002992e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.499999999995623e-06, 9.486000000002992e-06, 9.458999999996387e-06, 9.471999999996483e-06, 9.486999999995527e-06, 9.500000000002562e-06, 9.500000000002562e-06, 9.445000000003756e-06, 9.499999999995623e-06, 9.500000000002562e-06, 9.499999999995623e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.52699999999529e-06, 9.514000000002132e-06, 9.500000000002562e-06, 9.513999999995193e-06, 9.471999999996483e-06, 9.486999999995527e-06, 9.429999999997773e-06, 9.528000000001702e-06, 9.485999999996053e-06, 9.430999999997247e-06, 9.499999999995623e-06, 9.514000000002132e-06, 9.485999999996053e-06, 9.500000000002562e-06, 9.459000000003326e-06, 9.485999999996053e-06, 9.486000000002992e-06, 9.471999999996483e-06, 9.473000000002896e-06, 9.528000000001702e-06, 9.429999999997773e-06, 9.471999999996483e-06, 9.499999999995623e-06, 9.52699999999529e-06, 9.514000000002132e-06, 9.486000000002992e-06, 9.514000000002132e-06, 9.485999999996053e-06, 9.486000000002992e-06, 9.485999999996053e-06, 9.555000000001368e-06, 9.500000000002562e-06, 9.542000000001272e-06]</msg>
<status status="PASS" starttime="20201115 22:03:01.786" endtime="20201115 22:03:01.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.774" endtime="20201115 22:03:01.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.798" endtime="20201115 22:03:01.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.807" endtime="20201115 22:03:01.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.803" endtime="20201115 22:03:01.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.793" endtime="20201115 22:03:01.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.262" endtime="20201115 22:03:01.834"></status>
</kw>
<msg timestamp="20201115 22:03:01.834" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.857" endtime="20201115 22:03:01.877"></status>
</kw>
<msg timestamp="20201115 22:03:01.878" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.854" endtime="20201115 22:03:01.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.884" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.880" endtime="20201115 22:03:01.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.887" endtime="20201115 22:03:01.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.847" endtime="20201115 22:03:01.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.841" endtime="20201115 22:03:01.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.910" endtime="20201115 22:03:02.265"></status>
</kw>
<msg timestamp="20201115 22:03:02.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043782, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043791486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:01.907" endtime="20201115 22:03:02.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043782, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043791486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:02.275" endtime="20201115 22:03:02.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.294" endtime="20201115 22:03:02.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.900" endtime="20201115 22:03:02.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.895" endtime="20201115 22:03:02.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:02.313" level="INFO">${RESULT} = [{'time': 0.043791486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.485999999996053e-06, 'source_diff': 9.485999999996053e-06}, {'time': 0.043916625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:02.304" endtime="20201115 22:03:02.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.344" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:02.315" endtime="20201115 22:03:02.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.355" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:03:02.353" endtime="20201115 22:03:02.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.360" level="INFO">VALUE: [9.485999999996053e-06, 9.486000000002992e-06, 9.556000000000842e-06, 9.500000000002562e-06, 9.500000000002562e-06, 9.528000000001702e-06, 9.473000000002896e-06, 9.486000000002992e-06, 9.485999999996053e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.499999999995623e-06, 9.473000000002896e-06, 9.486000000002992e-06, 9.486000000002992e-06, 9.431000000004186e-06, 9.513999999995193e-06, 9.444000000004282e-06, 9.457999999996913e-06, 9.443999999997343e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.500000000002562e-06, 9.513999999995193e-06, 9.499999999995623e-06, 9.542000000001272e-06, 9.500000000002562e-06, 9.472000000003422e-06, 9.499999999995623e-06, 9.486000000002992e-06, 9.487000000002466e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.486000000002992e-06, 9.528000000001702e-06, 9.486000000002992e-06, 9.485999999996053e-06, 9.485999999996053e-06, 9.485999999996053e-06, 9.471999999996483e-06, 9.486000000002992e-06, 9.486000000002992e-06, 9.541999999994333e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.499999999995623e-06, 9.499999999995623e-06, 9.485999999996053e-06, 9.528000000001702e-06, 9.485999999996053e-06]</msg>
<status status="PASS" starttime="20201115 22:03:02.357" endtime="20201115 22:03:02.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.346" endtime="20201115 22:03:02.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.369" endtime="20201115 22:03:02.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.378" endtime="20201115 22:03:02.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.373" endtime="20201115 22:03:02.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.365" endtime="20201115 22:03:02.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.835" endtime="20201115 22:03:02.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.600" endtime="20201115 22:03:02.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.598" endtime="20201115 22:03:02.405"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.410" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.433" endtime="20201115 22:03:02.452"></status>
</kw>
<msg timestamp="20201115 22:03:02.454" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.430" endtime="20201115 22:03:02.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.460" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.456" endtime="20201115 22:03:02.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.462" endtime="20201115 22:03:02.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.422" endtime="20201115 22:03:02.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.416" endtime="20201115 22:03:02.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.487" endtime="20201115 22:03:02.845"></status>
</kw>
<msg timestamp="20201115 22:03:02.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048558431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048568736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.483" endtime="20201115 22:03:02.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048558431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048568736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.855" endtime="20201115 22:03:02.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.874" endtime="20201115 22:03:02.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.476" endtime="20201115 22:03:02.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.471" endtime="20201115 22:03:02.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:02.892" level="INFO">${RESULT} = [{'time': 0.048568736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0305000000002118e-05, 'source_diff': 1.0305000000002118e-05}, {'time': 0.048704722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:02.883" endtime="20201115 22:03:02.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.923" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:02.894" endtime="20201115 22:03:02.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.934" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:03:02.932" endtime="20201115 22:03:02.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.939" level="INFO">VALUE: [1.0305000000002118e-05, 1.0305000000002118e-05, 1.0306000000001592e-05, 1.0278000000002452e-05, 1.029099999999561e-05, 1.0333000000001258e-05, 1.0277999999995513e-05, 1.0291999999995083e-05, 1.0304999999995179e-05, 1.0277000000002978e-05, 1.0305000000002118e-05, 1.0277000000002978e-05, 1.0292000000002022e-05, 1.0292000000002022e-05, 1.0250000000003312e-05, 1.0291000000002548e-05, 1.0291000000002548e-05, 1.0306000000001592e-05, 1.0305999999994653e-05, 1.0304999999995179e-05, 1.0333000000001258e-05, 1.0292000000002022e-05, 1.0334000000000731e-05, 1.0236000000003742e-05, 1.0306000000001592e-05, 1.0306000000001592e-05, 1.0304999999995179e-05, 1.0306000000001592e-05, 1.0291000000002548e-05, 1.0236000000003742e-05, 1.0292000000002022e-05, 1.0306000000001592e-05, 1.0333000000001258e-05, 1.0320000000001162e-05, 1.0305000000002118e-05, 1.0306000000001592e-05, 1.0292000000002022e-05, 1.0292000000002022e-05, 1.0333000000001258e-05, 1.0305999999994653e-05, 1.0292000000002022e-05, 1.0319999999994223e-05, 1.0320000000001162e-05, 1.0305000000002118e-05, 1.0306000000001592e-05, 1.0277999999995513e-05, 1.0292000000002022e-05, 1.0292000000002022e-05, 1.0292000000002022e-05, 1.0305999999994653e-05]</msg>
<status status="PASS" starttime="20201115 22:03:02.936" endtime="20201115 22:03:02.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.925" endtime="20201115 22:03:02.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.948" endtime="20201115 22:03:02.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.957" endtime="20201115 22:03:02.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.952" endtime="20201115 22:03:02.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.944" endtime="20201115 22:03:02.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.411" endtime="20201115 22:03:02.983"></status>
</kw>
<msg timestamp="20201115 22:03:02.983" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.007" endtime="20201115 22:03:03.025"></status>
</kw>
<msg timestamp="20201115 22:03:03.027" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.003" endtime="20201115 22:03:03.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.034" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.029" endtime="20201115 22:03:03.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.036" endtime="20201115 22:03:03.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.996" endtime="20201115 22:03:03.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.990" endtime="20201115 22:03:03.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.060" endtime="20201115 22:03:03.414"></status>
</kw>
<msg timestamp="20201115 22:03:03.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043306847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043317139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.056" endtime="20201115 22:03:03.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043306847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043317139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.423" endtime="20201115 22:03:03.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.442" endtime="20201115 22:03:03.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.049" endtime="20201115 22:03:03.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.044" endtime="20201115 22:03:03.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.461" level="INFO">${RESULT} = [{'time': 0.043317139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0291999999995083e-05, 'source_diff': 1.0291999999995083e-05}, {'time': 0.043453542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:03.452" endtime="20201115 22:03:03.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.492" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:03.463" endtime="20201115 22:03:03.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.503" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:03:03.500" endtime="20201115 22:03:03.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.508" level="INFO">VALUE: [1.0291999999995083e-05, 1.0305999999994653e-05, 1.0278000000002452e-05, 1.0332999999994319e-05, 1.0292000000002022e-05, 1.0333000000001258e-05, 1.0278000000002452e-05, 1.0278000000002452e-05, 1.0306000000001592e-05, 1.0319000000001688e-05, 1.0291999999995083e-05, 1.0292000000002022e-05, 1.0263999999995943e-05, 1.0306000000001592e-05, 1.0305000000002118e-05, 1.0277000000002978e-05, 1.0292000000002022e-05, 1.0235999999996803e-05, 1.0292000000002022e-05, 1.0306000000001592e-05, 1.0249999999996373e-05, 1.0320000000001162e-05, 1.0292000000002022e-05, 1.0263999999995943e-05, 1.0374999999999968e-05, 1.0292000000002022e-05, 1.0306000000001592e-05, 1.0292000000002022e-05, 1.0278000000002452e-05, 1.0221999999997233e-05, 1.0347000000000828e-05, 1.0291999999995083e-05, 1.0291000000002548e-05, 1.0221999999997233e-05, 1.0305000000002118e-05, 1.0291000000002548e-05, 1.0291999999995083e-05, 1.0291000000002548e-05, 1.0306000000001592e-05, 1.0334000000000731e-05, 1.0304999999995179e-05, 1.0333000000001258e-05, 1.0305000000002118e-05, 1.0304999999995179e-05, 1.0291000000002548e-05, 1.0332999999994319e-05, 1.0222000000004172e-05, 1.0306000000001592e-05, 1.0277999999995513e-05, 1.0347000000000828e-05]</msg>
<status status="PASS" starttime="20201115 22:03:03.505" endtime="20201115 22:03:03.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.493" endtime="20201115 22:03:03.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.517" endtime="20201115 22:03:03.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.526" endtime="20201115 22:03:03.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.521" endtime="20201115 22:03:03.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.513" endtime="20201115 22:03:03.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.984" endtime="20201115 22:03:03.551"></status>
</kw>
<msg timestamp="20201115 22:03:03.552" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.576" endtime="20201115 22:03:03.595"></status>
</kw>
<msg timestamp="20201115 22:03:03.596" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.572" endtime="20201115 22:03:03.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.603" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.598" endtime="20201115 22:03:03.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.605" endtime="20201115 22:03:03.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.564" endtime="20201115 22:03:03.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.559" endtime="20201115 22:03:03.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.629" endtime="20201115 22:03:03.985"></status>
</kw>
<msg timestamp="20201115 22:03:03.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043651472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043661778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.625" endtime="20201115 22:03:03.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043651472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043661778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.994" endtime="20201115 22:03:04.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.013" endtime="20201115 22:03:04.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.618" endtime="20201115 22:03:04.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.613" endtime="20201115 22:03:04.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.032" level="INFO">${RESULT} = [{'time': 0.043661778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0306000000001592e-05, 'source_diff': 1.0306000000001592e-05}, {'time': 0.043787111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:04.023" endtime="20201115 22:03:04.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.063" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:04.034" endtime="20201115 22:03:04.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.074" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:03:04.072" endtime="20201115 22:03:04.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.080" level="INFO">VALUE: [1.0306000000001592e-05, 1.0291999999995083e-05, 1.0249999999996373e-05, 1.0292000000002022e-05, 1.0292000000002022e-05, 1.0388999999999537e-05, 1.0292000000002022e-05, 1.0306000000001592e-05, 1.029099999999561e-05, 1.0292000000002022e-05, 1.0319000000001688e-05, 1.0291000000002548e-05, 1.0291000000002548e-05, 1.0292000000002022e-05, 1.0291999999995083e-05, 1.0277999999995513e-05, 1.0236000000003742e-05, 1.0333000000001258e-05, 1.0320000000001162e-05, 1.029099999999561e-05, 1.0292000000002022e-05, 1.0291999999995083e-05, 1.0306000000001592e-05, 1.0291999999995083e-05, 1.0292000000002022e-05, 1.0278000000002452e-05, 1.0306000000001592e-05, 1.0332999999994319e-05, 1.0305000000002118e-05, 1.0319999999994223e-05, 1.0319000000001688e-05, 1.0306000000001592e-05, 1.0292000000002022e-05, 1.0374999999999968e-05, 1.0264000000002882e-05, 1.029099999999561e-05, 1.0347000000000828e-05, 1.0305999999994653e-05, 1.0306000000001592e-05, 1.0306000000001592e-05, 1.0291999999995083e-05, 1.0305000000002118e-05, 1.0319999999994223e-05, 1.0278000000002452e-05, 1.0292000000002022e-05, 1.0292000000002022e-05, 1.0347000000000828e-05, 1.0347000000000828e-05, 1.0221999999997233e-05, 1.0277999999995513e-05]</msg>
<status status="PASS" starttime="20201115 22:03:04.076" endtime="20201115 22:03:04.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.065" endtime="20201115 22:03:04.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.089" endtime="20201115 22:03:04.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.097" endtime="20201115 22:03:04.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.093" endtime="20201115 22:03:04.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.084" endtime="20201115 22:03:04.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.553" endtime="20201115 22:03:04.123"></status>
</kw>
<msg timestamp="20201115 22:03:04.124" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.148" endtime="20201115 22:03:04.167"></status>
</kw>
<msg timestamp="20201115 22:03:04.168" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.144" endtime="20201115 22:03:04.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.175" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.171" endtime="20201115 22:03:04.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.177" endtime="20201115 22:03:04.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.137" endtime="20201115 22:03:04.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.131" endtime="20201115 22:03:04.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.201" endtime="20201115 22:03:04.500"></status>
</kw>
<msg timestamp="20201115 22:03:04.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043997139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044007444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.197" endtime="20201115 22:03:04.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043997139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044007444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.509" endtime="20201115 22:03:04.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.528" endtime="20201115 22:03:04.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.190" endtime="20201115 22:03:04.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.185" endtime="20201115 22:03:04.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.547" level="INFO">${RESULT} = [{'time': 0.044007444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0305000000002118e-05, 'source_diff': 1.0305000000002118e-05}, {'time': 0.044139472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:04.538" endtime="20201115 22:03:04.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.578" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:04.549" endtime="20201115 22:03:04.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.589" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:03:04.586" endtime="20201115 22:03:04.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.594" level="INFO">VALUE: [1.0305000000002118e-05, 1.0305000000002118e-05, 1.0374999999999968e-05, 1.0306000000001592e-05, 1.0277000000002978e-05, 1.0305999999994653e-05, 1.0278000000002452e-05, 1.029099999999561e-05, 1.0305999999994653e-05, 1.029099999999561e-05, 1.0236000000003742e-05, 1.0306000000001592e-05, 1.0305000000002118e-05, 1.0292000000002022e-05, 1.0305000000002118e-05, 1.0292000000002022e-05, 1.0306000000001592e-05, 1.0278000000002452e-05, 1.0291000000002548e-05, 1.0306000000001592e-05, 1.0305999999994653e-05, 1.0318999999994749e-05, 1.0305000000002118e-05, 1.0249999999996373e-05, 1.0306000000001592e-05, 1.0306000000001592e-05, 1.0291999999995083e-05, 1.0361000000000398e-05, 1.0222000000004172e-05, 1.0263999999995943e-05, 1.0305000000002118e-05, 1.0292000000002022e-05, 1.0306000000001592e-05, 1.0374999999999968e-05, 1.0306000000001592e-05, 1.0292000000002022e-05, 1.0319000000001688e-05, 1.0304999999995179e-05, 1.0291000000002548e-05, 1.0291999999995083e-05, 1.0292000000002022e-05, 1.0292000000002022e-05, 1.027699999999604e-05, 1.0319000000001688e-05, 1.0304999999995179e-05, 1.0292000000002022e-05, 1.0361000000000398e-05, 1.0304999999995179e-05, 1.0306000000001592e-05, 1.0291999999995083e-05]</msg>
<status status="PASS" starttime="20201115 22:03:04.591" endtime="20201115 22:03:04.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.579" endtime="20201115 22:03:04.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.603" endtime="20201115 22:03:04.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.613" endtime="20201115 22:03:04.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.608" endtime="20201115 22:03:04.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.599" endtime="20201115 22:03:04.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.125" endtime="20201115 22:03:04.638"></status>
</kw>
<msg timestamp="20201115 22:03:04.639" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.662" endtime="20201115 22:03:04.682"></status>
</kw>
<msg timestamp="20201115 22:03:04.683" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.659" endtime="20201115 22:03:04.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.689" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.685" endtime="20201115 22:03:04.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.692" endtime="20201115 22:03:04.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.652" endtime="20201115 22:03:04.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.646" endtime="20201115 22:03:04.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.715" endtime="20201115 22:03:05.059"></status>
</kw>
<msg timestamp="20201115 22:03:05.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0432475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043257806, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:04.712" endtime="20201115 22:03:05.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0432475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043257806, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:05.068" endtime="20201115 22:03:05.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.087" endtime="20201115 22:03:05.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.705" endtime="20201115 22:03:05.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.700" endtime="20201115 22:03:05.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.108" level="INFO">${RESULT} = [{'time': 0.043257806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0306000000001592e-05, 'source_diff': 1.0306000000001592e-05}, {'time': 0.043390875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:05.099" endtime="20201115 22:03:05.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.139" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:05.110" endtime="20201115 22:03:05.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.150" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:03:05.148" endtime="20201115 22:03:05.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.156" level="INFO">VALUE: [1.0306000000001592e-05, 1.0319000000001688e-05, 1.0292000000002022e-05, 1.0305000000002118e-05, 1.0319000000001688e-05, 1.0292000000002022e-05, 1.0304999999995179e-05, 1.0292000000002022e-05, 1.0292000000002022e-05, 1.0291999999995083e-05, 1.0306000000001592e-05, 1.0291999999995083e-05, 1.0306000000001592e-05, 1.0278000000002452e-05, 1.0306000000001592e-05, 1.0319000000001688e-05, 1.0263999999995943e-05, 1.0305999999994653e-05, 1.0292000000002022e-05, 1.0291000000002548e-05, 1.0292000000002022e-05, 1.0222000000004172e-05, 1.0348000000000301e-05, 1.0319000000001688e-05, 1.0306000000001592e-05, 1.0360999999993459e-05, 1.0306000000001592e-05, 1.0333000000001258e-05, 1.0305999999994653e-05, 1.0278000000002452e-05, 1.0278000000002452e-05, 1.0305999999994653e-05, 1.0278000000002452e-05, 1.0305999999994653e-05, 1.0361000000000398e-05, 1.0292000000002022e-05, 1.029099999999561e-05, 1.0291999999995083e-05, 1.0291999999995083e-05, 1.0361000000000398e-05, 1.029099999999561e-05, 1.0222000000004172e-05, 1.0292000000002022e-05, 1.0277999999995513e-05, 1.0292000000002022e-05, 1.0306000000001592e-05, 1.0306000000001592e-05, 1.0306000000001592e-05, 1.0305000000002118e-05, 1.0319000000001688e-05]</msg>
<status status="PASS" starttime="20201115 22:03:05.152" endtime="20201115 22:03:05.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.141" endtime="20201115 22:03:05.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.165" endtime="20201115 22:03:05.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.174" endtime="20201115 22:03:05.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.169" endtime="20201115 22:03:05.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.161" endtime="20201115 22:03:05.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.640" endtime="20201115 22:03:05.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.407" endtime="20201115 22:03:05.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.405" endtime="20201115 22:03:05.200"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.205" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.229" endtime="20201115 22:03:05.250"></status>
</kw>
<msg timestamp="20201115 22:03:05.251" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.225" endtime="20201115 22:03:05.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.257" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.253" endtime="20201115 22:03:05.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.259" endtime="20201115 22:03:05.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.218" endtime="20201115 22:03:05.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.212" endtime="20201115 22:03:05.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.283" endtime="20201115 22:03:05.626"></status>
</kw>
<msg timestamp="20201115 22:03:05.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048771972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048783083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.280" endtime="20201115 22:03:05.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048771972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048783083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.636" endtime="20201115 22:03:05.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.654" endtime="20201115 22:03:05.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.272" endtime="20201115 22:03:05.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.268" endtime="20201115 22:03:05.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.672" level="INFO">${RESULT} = [{'time': 0.048783083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1111000000001148e-05, 'source_diff': 1.1111000000001148e-05}, {'time': 0.0489255, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:05.663" endtime="20201115 22:03:05.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.703" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:05.674" endtime="20201115 22:03:05.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.714" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:03:05.712" endtime="20201115 22:03:05.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.720" level="INFO">VALUE: [1.1111000000001148e-05, 1.1055999999995403e-05, 1.1097000000001578e-05, 1.1096999999994639e-05, 1.1111000000001148e-05, 1.105499999999593e-05, 1.1152999999999857e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1125000000000718e-05, 1.1125000000000718e-05, 1.1111000000001148e-05, 1.1096999999994639e-05, 1.1139000000000288e-05, 1.1056000000002342e-05, 1.1111000000001148e-05, 1.1110999999994209e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.1152999999999857e-05, 1.1125000000000718e-05, 1.1097000000001578e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.1111000000001148e-05, 1.1110999999994209e-05, 1.1084000000001482e-05, 1.1139000000000288e-05, 1.1096999999994639e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.102699999999679e-05, 1.1112000000000621e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.1068999999995499e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.1110999999994209e-05, 1.1125000000000718e-05, 1.1097999999994113e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.1098000000001051e-05]</msg>
<status status="PASS" starttime="20201115 22:03:05.716" endtime="20201115 22:03:05.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.705" endtime="20201115 22:03:05.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.730" endtime="20201115 22:03:05.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.738" endtime="20201115 22:03:05.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.734" endtime="20201115 22:03:05.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.725" endtime="20201115 22:03:05.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.207" endtime="20201115 22:03:05.764"></status>
</kw>
<msg timestamp="20201115 22:03:05.764" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.788" endtime="20201115 22:03:05.808"></status>
</kw>
<msg timestamp="20201115 22:03:05.809" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.784" endtime="20201115 22:03:05.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.815" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.811" endtime="20201115 22:03:05.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.818" endtime="20201115 22:03:05.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.777" endtime="20201115 22:03:05.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.771" endtime="20201115 22:03:05.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.841" endtime="20201115 22:03:06.186"></status>
</kw>
<msg timestamp="20201115 22:03:06.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042924125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042935194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.838" endtime="20201115 22:03:06.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042924125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042935194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.195" endtime="20201115 22:03:06.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.214" endtime="20201115 22:03:06.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.831" endtime="20201115 22:03:06.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.826" endtime="20201115 22:03:06.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.233" level="INFO">${RESULT} = [{'time': 0.042935194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1069000000002438e-05, 'source_diff': 1.1069000000002438e-05}, {'time': 0.043083042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:06.224" endtime="20201115 22:03:06.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.264" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:06.235" endtime="20201115 22:03:06.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.281" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:03:06.279" endtime="20201115 22:03:06.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.287" level="INFO">VALUE: [1.1069000000002438e-05, 1.1084000000001482e-05, 1.1096999999994639e-05, 1.1070000000001912e-05, 1.1041999999995833e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.1111000000001148e-05, 1.1096999999994639e-05, 1.1097000000001578e-05, 1.1083000000002008e-05, 1.1139000000000288e-05, 1.1083000000002008e-05, 1.1111000000001148e-05, 1.1125000000000718e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.1165999999999954e-05, 1.1180999999998997e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1084000000001482e-05, 1.1098000000001051e-05, 1.1041000000003298e-05, 1.1112000000000621e-05, 1.1125000000000718e-05, 1.1096999999994639e-05, 1.1096999999994639e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1084000000001482e-05, 1.1028000000003202e-05, 1.1125000000000718e-05, 1.1097000000001578e-05, 1.1125000000000718e-05, 1.1098000000001051e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1139000000000288e-05, 1.1110999999994209e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1112000000000621e-05]</msg>
<status status="PASS" starttime="20201115 22:03:06.283" endtime="20201115 22:03:06.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.272" endtime="20201115 22:03:06.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.296" endtime="20201115 22:03:06.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.304" endtime="20201115 22:03:06.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.300" endtime="20201115 22:03:06.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.291" endtime="20201115 22:03:06.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.765" endtime="20201115 22:03:06.330"></status>
</kw>
<msg timestamp="20201115 22:03:06.331" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.354" endtime="20201115 22:03:06.374"></status>
</kw>
<msg timestamp="20201115 22:03:06.375" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.351" endtime="20201115 22:03:06.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.382" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.377" endtime="20201115 22:03:06.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.384" endtime="20201115 22:03:06.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.343" endtime="20201115 22:03:06.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.337" endtime="20201115 22:03:06.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.408" endtime="20201115 22:03:06.750"></status>
</kw>
<msg timestamp="20201115 22:03:06.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043085139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043096236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.404" endtime="20201115 22:03:06.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043085139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043096236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.759" endtime="20201115 22:03:06.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.778" endtime="20201115 22:03:06.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.397" endtime="20201115 22:03:06.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.392" endtime="20201115 22:03:06.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.798" level="INFO">${RESULT} = [{'time': 0.043096236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1097000000001578e-05, 'source_diff': 1.1097000000001578e-05}, {'time': 0.043241167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:06.788" endtime="20201115 22:03:06.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.829" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:06.800" endtime="20201115 22:03:06.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.840" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:03:06.838" endtime="20201115 22:03:06.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.845" level="INFO">VALUE: [1.1097000000001578e-05, 1.1013999999996693e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.1041999999995833e-05, 1.1167000000006366e-05, 1.1110999999994209e-05, 1.1056000000002342e-05, 1.1111000000001148e-05, 1.1112000000000621e-05, 1.1111000000001148e-05, 1.1096999999994639e-05, 1.1096999999994639e-05, 1.1152000000000384e-05, 1.1111000000001148e-05, 1.1110999999994209e-05, 1.1098000000001051e-05, 1.1097000000001578e-05, 1.1152999999999857e-05, 1.1083000000002008e-05, 1.1055000000002868e-05, 1.1097000000001578e-05, 1.1084000000001482e-05, 1.1084000000001482e-05, 1.1096999999994639e-05, 1.1042000000002772e-05, 1.1112000000000621e-05, 1.1110999999994209e-05, 1.1097000000001578e-05, 1.1096999999994639e-05, 1.1180999999998997e-05, 1.1098000000001051e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.1110999999994209e-05, 1.1042000000002772e-05, 1.1111000000001148e-05, 1.1084000000001482e-05, 1.1111000000001148e-05, 1.1084000000001482e-05, 1.1098000000001051e-05, 1.1125000000000718e-05, 1.1097000000001578e-05, 1.1152999999999857e-05, 1.1097000000001578e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.1125000000000718e-05]</msg>
<status status="PASS" starttime="20201115 22:03:06.842" endtime="20201115 22:03:06.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.831" endtime="20201115 22:03:06.848"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.855" endtime="20201115 22:03:06.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.863" endtime="20201115 22:03:06.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.859" endtime="20201115 22:03:06.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.850" endtime="20201115 22:03:06.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.332" endtime="20201115 22:03:06.889"></status>
</kw>
<msg timestamp="20201115 22:03:06.889" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.913" endtime="20201115 22:03:06.932"></status>
</kw>
<msg timestamp="20201115 22:03:06.933" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.909" endtime="20201115 22:03:06.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.939" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.935" endtime="20201115 22:03:06.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.942" endtime="20201115 22:03:06.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.902" endtime="20201115 22:03:06.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.896" endtime="20201115 22:03:06.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.966" endtime="20201115 22:03:07.309"></status>
</kw>
<msg timestamp="20201115 22:03:07.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042807917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042819042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.962" endtime="20201115 22:03:07.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042807917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042819042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.318" endtime="20201115 22:03:07.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.337" endtime="20201115 22:03:07.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.955" endtime="20201115 22:03:07.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.950" endtime="20201115 22:03:07.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.358" level="INFO">${RESULT} = [{'time': 0.042819042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1125000000000718e-05, 'source_diff': 1.1125000000000718e-05}, {'time': 0.042958056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:07.349" endtime="20201115 22:03:07.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.389" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:07.361" endtime="20201115 22:03:07.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.400" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:03:07.398" endtime="20201115 22:03:07.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.406" level="INFO">VALUE: [1.1125000000000718e-05, 1.1098000000001051e-05, 1.1097000000001578e-05, 1.1096999999994639e-05, 1.1097000000001578e-05, 1.1125000000000718e-05, 1.1110999999994209e-05, 1.1111000000001148e-05, 1.1069000000002438e-05, 1.1056000000002342e-05, 1.1111000000001148e-05, 1.1055000000002868e-05, 1.1111000000001148e-05, 1.1083000000002008e-05, 1.1083999999994543e-05, 1.1096999999994639e-05, 1.1165999999999954e-05, 1.1098000000001051e-05, 1.104099999999636e-05, 1.1056000000002342e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1125000000000718e-05, 1.1125000000000718e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.1112000000000621e-05, 1.1179999999999524e-05, 1.1097999999994113e-05, 1.1069000000002438e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.1180999999998997e-05, 1.1097000000001578e-05, 1.1138000000000814e-05, 1.1083000000002008e-05, 1.1111000000001148e-05, 1.1084000000001482e-05, 1.1110999999994209e-05, 1.1111000000001148e-05, 1.1069000000002438e-05, 1.1111000000001148e-05, 1.1014000000003632e-05, 1.1125000000000718e-05, 1.1097000000001578e-05, 1.1111000000001148e-05, 1.1084000000001482e-05, 1.1084000000001482e-05, 1.1084000000001482e-05, 1.1098000000001051e-05]</msg>
<status status="PASS" starttime="20201115 22:03:07.403" endtime="20201115 22:03:07.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.391" endtime="20201115 22:03:07.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.415" endtime="20201115 22:03:07.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.423" endtime="20201115 22:03:07.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.419" endtime="20201115 22:03:07.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.410" endtime="20201115 22:03:07.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.890" endtime="20201115 22:03:07.449"></status>
</kw>
<msg timestamp="20201115 22:03:07.450" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.473" endtime="20201115 22:03:07.492"></status>
</kw>
<msg timestamp="20201115 22:03:07.494" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.469" endtime="20201115 22:03:07.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.500" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.496" endtime="20201115 22:03:07.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.502" endtime="20201115 22:03:07.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.462" endtime="20201115 22:03:07.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.456" endtime="20201115 22:03:07.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.526" endtime="20201115 22:03:07.842"></status>
</kw>
<msg timestamp="20201115 22:03:07.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043016569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043027611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.522" endtime="20201115 22:03:07.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043016569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043027611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.852" endtime="20201115 22:03:07.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.871" endtime="20201115 22:03:07.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.515" endtime="20201115 22:03:07.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.510" endtime="20201115 22:03:07.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.890" level="INFO">${RESULT} = [{'time': 0.043027611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1042000000002772e-05, 'source_diff': 1.1042000000002772e-05}, {'time': 0.043165264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:07.881" endtime="20201115 22:03:07.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.921" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:07.892" endtime="20201115 22:03:07.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.932" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:03:07.930" endtime="20201115 22:03:07.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.937" level="INFO">VALUE: [1.1042000000002772e-05, 1.1097000000001578e-05, 1.1111000000001148e-05, 1.1055000000002868e-05, 1.1056000000002342e-05, 1.1111000000001148e-05, 1.1096999999994639e-05, 1.1098000000001051e-05, 1.1097000000001578e-05, 1.1125000000000718e-05, 1.1125000000000718e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1111000000001148e-05, 1.1125000000000718e-05, 1.1082999999995069e-05, 1.1069000000002438e-05, 1.1111000000001148e-05, 1.1124999999993779e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.1124999999993779e-05, 1.1097000000001578e-05, 1.1083000000002008e-05, 1.1096999999994639e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1082999999995069e-05, 1.1139000000000288e-05, 1.1083000000002008e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.1055999999995403e-05, 1.1110999999994209e-05, 1.1082999999995069e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.105499999999593e-05, 1.1125000000000718e-05, 1.1083000000002008e-05, 1.1096999999994639e-05, 1.1111000000001148e-05, 1.1125000000000718e-05, 1.1084000000001482e-05, 1.1124999999993779e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.1111000000001148e-05, 1.1098000000001051e-05]</msg>
<status status="PASS" starttime="20201115 22:03:07.934" endtime="20201115 22:03:07.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.923" endtime="20201115 22:03:07.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.946" endtime="20201115 22:03:07.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.955" endtime="20201115 22:03:07.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.951" endtime="20201115 22:03:07.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.942" endtime="20201115 22:03:07.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.451" endtime="20201115 22:03:07.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.203" endtime="20201115 22:03:07.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.201" endtime="20201115 22:03:07.982"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.987" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.010" endtime="20201115 22:03:08.032"></status>
</kw>
<msg timestamp="20201115 22:03:08.033" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.007" endtime="20201115 22:03:08.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.039" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.035" endtime="20201115 22:03:08.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.042" endtime="20201115 22:03:08.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.999" endtime="20201115 22:03:08.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.993" endtime="20201115 22:03:08.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.066" endtime="20201115 22:03:08.409"></status>
</kw>
<msg timestamp="20201115 22:03:08.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04921925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049231167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:08.063" endtime="20201115 22:03:08.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04921925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049231167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:08.418" endtime="20201115 22:03:08.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.437" endtime="20201115 22:03:08.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.056" endtime="20201115 22:03:08.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.051" endtime="20201115 22:03:08.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:08.455" level="INFO">${RESULT} = [{'time': 0.049231167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1917000000000177e-05, 'source_diff': 1.1917000000000177e-05}, {'time': 0.049379611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:08.446" endtime="20201115 22:03:08.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:08.485" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:08.457" endtime="20201115 22:03:08.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.497" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:03:08.494" endtime="20201115 22:03:08.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.502" level="INFO">VALUE: [1.1917000000000177e-05, 1.1917000000000177e-05, 1.1916000000000704e-05, 1.1916000000000704e-05, 1.1917000000000177e-05, 1.1930999999999747e-05, 1.1930999999999747e-05, 1.1902999999993669e-05, 1.1917000000000177e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1957999999999414e-05, 1.1875000000001468e-05, 1.1917000000000177e-05, 1.1917000000000177e-05, 1.1917000000000177e-05, 1.1917000000000177e-05, 1.1903000000000608e-05, 1.1915999999993765e-05, 1.1902000000001134e-05, 1.1917000000000177e-05, 1.1903000000000608e-05, 1.1916000000000704e-05, 1.1930000000000274e-05, 1.1888000000001564e-05, 1.1861000000001898e-05, 1.1957999999999414e-05, 1.1903000000000608e-05, 1.1957999999999414e-05, 1.1888000000001564e-05, 1.1860999999994959e-05, 1.1889000000001038e-05, 1.1917000000000177e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1931000000006686e-05, 1.1902000000001134e-05, 1.1903000000000608e-05, 1.1916000000000704e-05, 1.1917000000000177e-05, 1.1888000000001564e-05, 1.1917000000000177e-05, 1.1861000000001898e-05, 1.1902000000001134e-05, 1.1916000000000704e-05, 1.1971999999998983e-05, 1.1846999999995389e-05, 1.1846999999995389e-05, 1.1902000000001134e-05, 1.1903000000000608e-05]</msg>
<status status="PASS" starttime="20201115 22:03:08.499" endtime="20201115 22:03:08.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.487" endtime="20201115 22:03:08.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.511" endtime="20201115 22:03:08.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:08.519" endtime="20201115 22:03:08.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.515" endtime="20201115 22:03:08.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.506" endtime="20201115 22:03:08.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.988" endtime="20201115 22:03:08.545"></status>
</kw>
<msg timestamp="20201115 22:03:08.546" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.569" endtime="20201115 22:03:08.589"></status>
</kw>
<msg timestamp="20201115 22:03:08.591" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.565" endtime="20201115 22:03:08.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.597" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.593" endtime="20201115 22:03:08.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.600" endtime="20201115 22:03:08.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.558" endtime="20201115 22:03:08.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.552" endtime="20201115 22:03:08.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.624" endtime="20201115 22:03:08.966"></status>
</kw>
<msg timestamp="20201115 22:03:08.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042919125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042931056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.620" endtime="20201115 22:03:08.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042919125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042931056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.975" endtime="20201115 22:03:08.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.994" endtime="20201115 22:03:08.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.613" endtime="20201115 22:03:09.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.608" endtime="20201115 22:03:09.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.013" level="INFO">${RESULT} = [{'time': 0.042931056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1930999999999747e-05, 'source_diff': 1.1930999999999747e-05}, {'time': 0.043079889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:09.004" endtime="20201115 22:03:09.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.044" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:09.015" endtime="20201115 22:03:09.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.055" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:03:09.053" endtime="20201115 22:03:09.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.061" level="INFO">VALUE: [1.1930999999999747e-05, 1.1917000000000177e-05, 1.1902000000001134e-05, 1.1860999999994959e-05, 1.1889000000001038e-05, 1.1916000000000704e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1902000000001134e-05, 1.1917000000000177e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1930000000000274e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1943999999999844e-05, 1.1930999999999747e-05, 1.1917000000000177e-05, 1.1916000000000704e-05, 1.1917000000000177e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1902000000001134e-05, 1.1917000000000177e-05, 1.1930000000000274e-05, 1.1861000000001898e-05, 1.1903000000000608e-05, 1.1902000000001134e-05, 1.1889000000001038e-05, 1.1875000000001468e-05, 1.1917000000000177e-05, 1.1875000000001468e-05, 1.1943999999999844e-05, 1.1902000000001134e-05, 1.1930999999999747e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.1917000000000177e-05, 1.1903000000000608e-05, 1.1916000000000704e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1847000000002328e-05, 1.1903000000000608e-05, 1.1916000000000704e-05]</msg>
<status status="PASS" starttime="20201115 22:03:09.058" endtime="20201115 22:03:09.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.046" endtime="20201115 22:03:09.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.071" endtime="20201115 22:03:09.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.080" endtime="20201115 22:03:09.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.075" endtime="20201115 22:03:09.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.066" endtime="20201115 22:03:09.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.547" endtime="20201115 22:03:09.105"></status>
</kw>
<msg timestamp="20201115 22:03:09.106" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.130" endtime="20201115 22:03:09.150"></status>
</kw>
<msg timestamp="20201115 22:03:09.151" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.127" endtime="20201115 22:03:09.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.158" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.154" endtime="20201115 22:03:09.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.160" endtime="20201115 22:03:09.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.119" endtime="20201115 22:03:09.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.113" endtime="20201115 22:03:09.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.184" endtime="20201115 22:03:09.526"></status>
</kw>
<msg timestamp="20201115 22:03:09.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043787542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043799458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.180" endtime="20201115 22:03:09.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043787542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043799458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.535" endtime="20201115 22:03:09.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.554" endtime="20201115 22:03:09.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.173" endtime="20201115 22:03:09.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.168" endtime="20201115 22:03:09.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.575" level="INFO">${RESULT} = [{'time': 0.043799458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1916000000000704e-05, 'source_diff': 1.1916000000000704e-05}, {'time': 0.04394725, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:03:09.566" endtime="20201115 22:03:09.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.606" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:09.577" endtime="20201115 22:03:09.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.617" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:03:09.615" endtime="20201115 22:03:09.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.622" level="INFO">VALUE: [1.1916000000000704e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1957999999999414e-05, 1.1930000000000274e-05, 1.1903000000000608e-05, 1.1875000000001468e-05, 1.1930999999999747e-05, 1.1916000000000704e-05, 1.1903000000000608e-05, 1.1930000000000274e-05, 1.1917000000000177e-05, 1.1902999999993669e-05, 1.1917000000000177e-05, 1.1889000000001038e-05, 1.1902000000001134e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1902000000001134e-05, 1.1917000000000177e-05, 1.1846999999995389e-05, 1.1930999999999747e-05, 1.1917000000000177e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1916000000000704e-05, 1.1887999999994625e-05, 1.1917000000000177e-05, 1.1930000000000274e-05, 1.1889000000001038e-05, 1.1875000000001468e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1930999999999747e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1915999999993765e-05, 1.1902000000001134e-05, 1.1944999999999317e-05, 1.1902000000001134e-05, 1.1846999999995389e-05, 1.1874999999994529e-05, 1.1930000000000274e-05, 1.1916000000000704e-05, 1.1930999999999747e-05, 1.1930000000000274e-05, 1.1917000000000177e-05]</msg>
<status status="PASS" starttime="20201115 22:03:09.619" endtime="20201115 22:03:09.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.608" endtime="20201115 22:03:09.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.631" endtime="20201115 22:03:09.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.641" endtime="20201115 22:03:09.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.635" endtime="20201115 22:03:09.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.627" endtime="20201115 22:03:09.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.107" endtime="20201115 22:03:09.666"></status>
</kw>
<msg timestamp="20201115 22:03:09.667" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.690" endtime="20201115 22:03:09.710"></status>
</kw>
<msg timestamp="20201115 22:03:09.711" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.687" endtime="20201115 22:03:09.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.717" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.713" endtime="20201115 22:03:09.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.720" endtime="20201115 22:03:09.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.679" endtime="20201115 22:03:09.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.674" endtime="20201115 22:03:09.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.744" endtime="20201115 22:03:10.087"></status>
</kw>
<msg timestamp="20201115 22:03:10.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042965167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042977097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.741" endtime="20201115 22:03:10.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042965167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042977097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.096" endtime="20201115 22:03:10.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.115" endtime="20201115 22:03:10.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.733" endtime="20201115 22:03:10.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.728" endtime="20201115 22:03:10.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.135" level="INFO">${RESULT} = [{'time': 0.042977097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1930000000000274e-05, 'source_diff': 1.1930000000000274e-05}, {'time': 0.043126403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:10.126" endtime="20201115 22:03:10.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.166" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:10.137" endtime="20201115 22:03:10.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.177" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:03:10.174" endtime="20201115 22:03:10.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.182" level="INFO">VALUE: [1.1930000000000274e-05, 1.1958999999998887e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1888999999994099e-05, 1.1917000000000177e-05, 1.1916000000000704e-05, 1.1887999999994625e-05, 1.1903000000000608e-05, 1.1930999999999747e-05, 1.1916000000000704e-05, 1.1957999999999414e-05, 1.1903000000000608e-05, 1.1930999999999747e-05, 1.1930999999999747e-05, 1.1917000000000177e-05, 1.1917000000000177e-05, 1.1902000000001134e-05, 1.1903000000000608e-05, 1.1930999999999747e-05, 1.1915999999993765e-05, 1.1930999999999747e-05, 1.1916000000000704e-05, 1.1903000000000608e-05, 1.1916000000000704e-05, 1.1985999999998553e-05, 1.1930999999999747e-05, 1.1930000000000274e-05, 1.1917000000000177e-05, 1.1903000000000608e-05, 1.1916000000000704e-05, 1.1917000000000177e-05, 1.1889000000001038e-05, 1.1916000000000704e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1888999999994099e-05, 1.1973000000005396e-05, 1.1888999999994099e-05, 1.1930999999999747e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1971999999998983e-05, 1.1875000000001468e-05, 1.1916000000000704e-05]</msg>
<status status="PASS" starttime="20201115 22:03:10.179" endtime="20201115 22:03:10.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.167" endtime="20201115 22:03:10.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.192" endtime="20201115 22:03:10.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.200" endtime="20201115 22:03:10.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.196" endtime="20201115 22:03:10.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.187" endtime="20201115 22:03:10.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.668" endtime="20201115 22:03:10.226"></status>
</kw>
<msg timestamp="20201115 22:03:10.227" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.250" endtime="20201115 22:03:10.270"></status>
</kw>
<msg timestamp="20201115 22:03:10.271" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.246" endtime="20201115 22:03:10.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.278" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.274" endtime="20201115 22:03:10.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.280" endtime="20201115 22:03:10.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.239" endtime="20201115 22:03:10.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.233" endtime="20201115 22:03:10.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.304" endtime="20201115 22:03:10.646"></status>
</kw>
<msg timestamp="20201115 22:03:10.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042785528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042797444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.300" endtime="20201115 22:03:10.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042785528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042797444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.655" endtime="20201115 22:03:10.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.674" endtime="20201115 22:03:10.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.293" endtime="20201115 22:03:10.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.288" endtime="20201115 22:03:10.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.693" level="INFO">${RESULT} = [{'time': 0.042797444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1915999999993765e-05, 'source_diff': 1.1915999999993765e-05}, {'time': 0.042951514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:10.684" endtime="20201115 22:03:10.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.724" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:10.695" endtime="20201115 22:03:10.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.735" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:03:10.733" endtime="20201115 22:03:10.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.741" level="INFO">VALUE: [1.1915999999993765e-05, 1.1889000000001038e-05, 1.1902000000001134e-05, 1.1930999999999747e-05, 1.1861999999994433e-05, 1.1862000000001371e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1916000000000704e-05, 1.1917000000000177e-05, 1.1944999999999317e-05, 1.1903000000000608e-05, 1.1887999999994625e-05, 1.1903000000000608e-05, 1.1916000000000704e-05, 1.1916000000000704e-05, 1.1861000000001898e-05, 1.1875000000001468e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1930000000000274e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1916000000000704e-05, 1.1889000000001038e-05, 1.1985999999998553e-05, 1.1903000000000608e-05, 1.1943999999999844e-05, 1.1930999999999747e-05, 1.1903000000000608e-05, 1.1916000000000704e-05, 1.1917000000000177e-05, 1.1888999999994099e-05, 1.1917000000000177e-05, 1.1902999999993669e-05, 1.1875000000001468e-05, 1.1985999999998553e-05, 1.1930999999999747e-05, 1.1846999999995389e-05, 1.1903000000000608e-05, 1.1930999999999747e-05, 1.1889000000001038e-05, 1.1888000000001564e-05, 1.1901999999994195e-05, 1.1917000000000177e-05, 1.1917000000000177e-05, 1.1889000000001038e-05, 1.1916000000000704e-05, 1.1903000000000608e-05]</msg>
<status status="PASS" starttime="20201115 22:03:10.738" endtime="20201115 22:03:10.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.726" endtime="20201115 22:03:10.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.751" endtime="20201115 22:03:10.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.760" endtime="20201115 22:03:10.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.755" endtime="20201115 22:03:10.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.746" endtime="20201115 22:03:10.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.228" endtime="20201115 22:03:10.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.984" endtime="20201115 22:03:10.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.982" endtime="20201115 22:03:10.787"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.792" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.815" endtime="20201115 22:03:10.836"></status>
</kw>
<msg timestamp="20201115 22:03:10.838" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.812" endtime="20201115 22:03:10.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.844" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.840" endtime="20201115 22:03:10.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.846" endtime="20201115 22:03:10.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.804" endtime="20201115 22:03:10.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.798" endtime="20201115 22:03:10.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.870" endtime="20201115 22:03:11.197"></status>
</kw>
<msg timestamp="20201115 22:03:11.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048575319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048588028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.867" endtime="20201115 22:03:11.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048575319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048588028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.207" endtime="20201115 22:03:11.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.225" endtime="20201115 22:03:11.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.860" endtime="20201115 22:03:11.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.855" endtime="20201115 22:03:11.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.243" level="INFO">${RESULT} = [{'time': 0.048588028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708999999999637e-05, 'source_diff': 1.2708999999999637e-05}, {'time': 0.048750361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:11.234" endtime="20201115 22:03:11.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.274" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:11.245" endtime="20201115 22:03:11.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.285" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:03:11.283" endtime="20201115 22:03:11.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.297" level="INFO">VALUE: [1.2708999999999637e-05, 1.2708000000000164e-05, 1.2681000000000497e-05, 1.2721999999999734e-05, 1.2722999999999207e-05, 1.2708000000000164e-05, 1.2735999999999303e-05, 1.2695000000000067e-05, 1.2722999999999207e-05, 1.2735999999999303e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2722999999999207e-05, 1.2778000000004952e-05, 1.2694000000000594e-05, 1.2708000000000164e-05, 1.2695000000000067e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2722999999999207e-05, 1.2721999999999734e-05, 1.2681000000000497e-05, 1.2639000000001788e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.2722999999999207e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2694000000000594e-05, 1.2708000000000164e-05, 1.2735999999999303e-05, 1.2764000000005382e-05, 1.2721999999999734e-05, 1.2695000000000067e-05, 1.2735999999999303e-05, 1.2721999999999734e-05, 1.2694000000000594e-05, 1.2667000000000928e-05, 1.2694000000000594e-05, 1.2708999999999637e-05, 1.2693999999993655e-05, 1.2694000000000594e-05, 1.2736999999998777e-05, 1.2708000000000164e-05, 1.2708999999999637e-05, 1.2708000000000164e-05]</msg>
<status status="PASS" starttime="20201115 22:03:11.287" endtime="20201115 22:03:11.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.276" endtime="20201115 22:03:11.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.308" endtime="20201115 22:03:11.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.318" endtime="20201115 22:03:11.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.313" endtime="20201115 22:03:11.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.303" endtime="20201115 22:03:11.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.793" endtime="20201115 22:03:11.345"></status>
</kw>
<msg timestamp="20201115 22:03:11.345" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.370" endtime="20201115 22:03:11.392"></status>
</kw>
<msg timestamp="20201115 22:03:11.393" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.367" endtime="20201115 22:03:11.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.400" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.396" endtime="20201115 22:03:11.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.402" endtime="20201115 22:03:11.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.359" endtime="20201115 22:03:11.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.353" endtime="20201115 22:03:11.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.426" endtime="20201115 22:03:11.781"></status>
</kw>
<msg timestamp="20201115 22:03:11.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045910778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045923486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.422" endtime="20201115 22:03:11.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045910778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045923486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.791" endtime="20201115 22:03:11.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.809" endtime="20201115 22:03:11.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.415" endtime="20201115 22:03:11.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.410" endtime="20201115 22:03:11.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.831" level="INFO">${RESULT} = [{'time': 0.045923486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.046095611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:11.822" endtime="20201115 22:03:11.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.862" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:11.833" endtime="20201115 22:03:11.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.874" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:03:11.871" endtime="20201115 22:03:11.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.879" level="INFO">VALUE: [1.2708000000000164e-05, 1.2694000000000594e-05, 1.2721999999999734e-05, 1.2722999999999207e-05, 1.2695000000000067e-05, 1.2694000000000594e-05, 1.2695000000000067e-05, 1.2708999999999637e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2708999999999637e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2695000000000067e-05, 1.2763999999998443e-05, 1.2708000000000164e-05, 1.2735999999999303e-05, 1.2722999999999207e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2723000000006146e-05, 1.2708000000000164e-05, 1.2666000000001454e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2708999999999637e-05, 1.2624999999995279e-05, 1.2735999999999303e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2708999999999637e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2694000000000594e-05, 1.2625000000002218e-05, 1.2749999999998873e-05, 1.2735999999999303e-05, 1.2681000000000497e-05, 1.2735999999999303e-05, 1.2695000000000067e-05, 1.2721999999999734e-05, 1.2750000000005812e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2708000000000164e-05]</msg>
<status status="PASS" starttime="20201115 22:03:11.876" endtime="20201115 22:03:11.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.864" endtime="20201115 22:03:11.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.888" endtime="20201115 22:03:11.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.896" endtime="20201115 22:03:11.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.892" endtime="20201115 22:03:11.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.883" endtime="20201115 22:03:11.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.347" endtime="20201115 22:03:11.922"></status>
</kw>
<msg timestamp="20201115 22:03:11.923" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.946" endtime="20201115 22:03:11.967"></status>
</kw>
<msg timestamp="20201115 22:03:11.969" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.943" endtime="20201115 22:03:11.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.975" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.971" endtime="20201115 22:03:11.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.977" endtime="20201115 22:03:11.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.935" endtime="20201115 22:03:11.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.929" endtime="20201115 22:03:11.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.001" endtime="20201115 22:03:12.358"></status>
</kw>
<msg timestamp="20201115 22:03:12.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042953639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042966319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.997" endtime="20201115 22:03:12.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042953639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042966319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.368" endtime="20201115 22:03:12.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.387" endtime="20201115 22:03:12.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.990" endtime="20201115 22:03:12.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.985" endtime="20201115 22:03:12.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.407" level="INFO">${RESULT} = [{'time': 0.042966319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2680000000001024e-05, 'source_diff': 1.2680000000001024e-05}, {'time': 0.043137625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:12.397" endtime="20201115 22:03:12.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.438" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:12.409" endtime="20201115 22:03:12.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.449" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:03:12.446" endtime="20201115 22:03:12.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.454" level="INFO">VALUE: [1.2680000000001024e-05, 1.2694000000000594e-05, 1.2625000000002218e-05, 1.2736999999998777e-05, 1.2708999999999637e-05, 1.2736999999998777e-05, 1.2680000000001024e-05, 1.2749999999998873e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2681000000000497e-05, 1.2694000000000594e-05, 1.2722999999999207e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.2778000000004952e-05, 1.2708999999999637e-05, 1.2708000000000164e-05, 1.2708999999999637e-05, 1.2708000000000164e-05, 1.2749999999998873e-05, 1.2708999999999637e-05, 1.2763999999998443e-05, 1.2666000000001454e-05, 1.2735999999999303e-05, 1.2708999999999637e-05, 1.2708999999999637e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2694000000000594e-05, 1.2708999999999637e-05, 1.2708000000000164e-05, 1.2695000000000067e-05, 1.2805999999997153e-05, 1.2695000000000067e-05, 1.2681000000000497e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2694000000000594e-05, 1.2721999999999734e-05, 1.2749999999998873e-05, 1.2708000000000164e-05, 1.2722999999999207e-05, 1.2722999999999207e-05]</msg>
<status status="PASS" starttime="20201115 22:03:12.451" endtime="20201115 22:03:12.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.439" endtime="20201115 22:03:12.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.463" endtime="20201115 22:03:12.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.472" endtime="20201115 22:03:12.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.467" endtime="20201115 22:03:12.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.459" endtime="20201115 22:03:12.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.924" endtime="20201115 22:03:12.498"></status>
</kw>
<msg timestamp="20201115 22:03:12.498" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.522" endtime="20201115 22:03:12.543"></status>
</kw>
<msg timestamp="20201115 22:03:12.544" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.518" endtime="20201115 22:03:12.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.551" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.546" endtime="20201115 22:03:12.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.553" endtime="20201115 22:03:12.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.511" endtime="20201115 22:03:12.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.505" endtime="20201115 22:03:12.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.577" endtime="20201115 22:03:12.933"></status>
</kw>
<msg timestamp="20201115 22:03:12.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043209458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043222153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.573" endtime="20201115 22:03:12.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043209458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043222153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.942" endtime="20201115 22:03:12.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.962" endtime="20201115 22:03:12.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.566" endtime="20201115 22:03:12.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.561" endtime="20201115 22:03:12.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.981" level="INFO">${RESULT} = [{'time': 0.043222153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2695000000000067e-05, 'source_diff': 1.2695000000000067e-05}, {'time': 0.043390958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:12.972" endtime="20201115 22:03:12.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.012" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:12.983" endtime="20201115 22:03:13.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.023" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:03:13.021" endtime="20201115 22:03:13.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.029" level="INFO">VALUE: [1.2695000000000067e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2723000000006146e-05, 1.2708999999999637e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2694000000000594e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2693999999993655e-05, 1.2736999999998777e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.2735999999999303e-05, 1.2708999999999637e-05, 1.2749999999998873e-05, 1.2722999999999207e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2722999999999207e-05, 1.2681000000000497e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2665999999994515e-05, 1.2735999999999303e-05, 1.2708000000000164e-05, 1.2679999999994085e-05, 1.2679999999994085e-05, 1.2693999999993655e-05, 1.2694000000000594e-05, 1.2694000000000594e-05, 1.2722999999999207e-05, 1.2735999999999303e-05, 1.2791999999997583e-05, 1.2667000000000928e-05, 1.2695000000000067e-05, 1.2694000000000594e-05, 1.2708999999999637e-05, 1.2695000000000067e-05, 1.2721999999999734e-05, 1.277699999999854e-05, 1.2722000000006672e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2652000000001884e-05, 1.2735999999999303e-05]</msg>
<status status="PASS" starttime="20201115 22:03:13.026" endtime="20201115 22:03:13.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.014" endtime="20201115 22:03:13.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.038" endtime="20201115 22:03:13.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.046" endtime="20201115 22:03:13.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.042" endtime="20201115 22:03:13.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.033" endtime="20201115 22:03:13.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.499" endtime="20201115 22:03:13.072"></status>
</kw>
<msg timestamp="20201115 22:03:13.073" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.096" endtime="20201115 22:03:13.117"></status>
</kw>
<msg timestamp="20201115 22:03:13.119" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.092" endtime="20201115 22:03:13.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.125" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.121" endtime="20201115 22:03:13.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.127" endtime="20201115 22:03:13.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.085" endtime="20201115 22:03:13.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.079" endtime="20201115 22:03:13.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.151" endtime="20201115 22:03:13.506"></status>
</kw>
<msg timestamp="20201115 22:03:13.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043372056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043384722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.148" endtime="20201115 22:03:13.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043372056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043384722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.517" endtime="20201115 22:03:13.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.535" endtime="20201115 22:03:13.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.140" endtime="20201115 22:03:13.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.136" endtime="20201115 22:03:13.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:13.555" level="INFO">${RESULT} = [{'time': 0.043384722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2666000000001454e-05, 'source_diff': 1.2666000000001454e-05}, {'time': 0.043551014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:13.546" endtime="20201115 22:03:13.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.586" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:13.557" endtime="20201115 22:03:13.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.597" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:03:13.594" endtime="20201115 22:03:13.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.602" level="INFO">VALUE: [1.2666000000001454e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2694000000000594e-05, 1.2721999999999734e-05, 1.2749999999998873e-05, 1.2721999999999734e-05, 1.2667000000000928e-05, 1.2735999999999303e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2695000000000067e-05, 1.2735999999999303e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2708999999999637e-05, 1.2694000000000594e-05, 1.2749999999998873e-05, 1.2721999999999734e-05, 1.2708999999999637e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2695000000000067e-05, 1.2694000000000594e-05, 1.2666999999993989e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2694000000000594e-05, 1.2695000000000067e-05, 1.2681000000000497e-05, 1.2708000000000164e-05, 1.2708999999999637e-05, 1.2708000000000164e-05, 1.2749999999998873e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2693999999993655e-05, 1.2694000000000594e-05, 1.2722999999999207e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2721999999999734e-05]</msg>
<status status="PASS" starttime="20201115 22:03:13.599" endtime="20201115 22:03:13.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.587" endtime="20201115 22:03:13.605"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.612" endtime="20201115 22:03:13.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.620" endtime="20201115 22:03:13.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.615" endtime="20201115 22:03:13.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.607" endtime="20201115 22:03:13.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.074" endtime="20201115 22:03:13.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.789" endtime="20201115 22:03:13.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.787" endtime="20201115 22:03:13.647"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.652" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.675" endtime="20201115 22:03:13.697"></status>
</kw>
<msg timestamp="20201115 22:03:13.698" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.672" endtime="20201115 22:03:13.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.704" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.700" endtime="20201115 22:03:13.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.707" endtime="20201115 22:03:13.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.664" endtime="20201115 22:03:13.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.658" endtime="20201115 22:03:13.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.732" endtime="20201115 22:03:14.091"></status>
</kw>
<msg timestamp="20201115 22:03:14.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048408264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048421778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.728" endtime="20201115 22:03:14.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048408264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048421778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.100" endtime="20201115 22:03:14.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.119" endtime="20201115 22:03:14.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.720" endtime="20201115 22:03:14.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.716" endtime="20201115 22:03:14.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.137" level="INFO">${RESULT} = [{'time': 0.048421778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.048599611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:14.128" endtime="20201115 22:03:14.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.168" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:14.139" endtime="20201115 22:03:14.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.179" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:03:14.177" endtime="20201115 22:03:14.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.184" level="INFO">VALUE: [1.3513999999999193e-05, 1.3513999999999193e-05, 1.3499999999999623e-05, 1.3528000000005702e-05, 1.354099999999886e-05, 1.352699999999929e-05, 1.354099999999886e-05, 1.3472000000000484e-05, 1.3514000000006132e-05, 1.351299999999972e-05, 1.3541000000005798e-05, 1.3542000000005272e-05, 1.3597000000004078e-05, 1.3513999999999193e-05, 1.3513999999999193e-05, 1.3513999999999193e-05, 1.3513999999999193e-05, 1.3472000000000484e-05, 1.3514000000006132e-05, 1.351299999999972e-05, 1.3513999999999193e-05, 1.3486000000000054e-05, 1.3513999999999193e-05, 1.3513999999999193e-05, 1.3514000000006132e-05, 1.3513999999999193e-05, 1.3568999999998e-05, 1.3499999999999623e-05, 1.3527999999998763e-05, 1.3527999999998763e-05, 1.3513999999999193e-05, 1.351299999999972e-05, 1.3541999999998333e-05, 1.3513999999999193e-05, 1.3541000000005798e-05, 1.3513999999999193e-05, 1.3514000000006132e-05, 1.3527999999998763e-05, 1.3527999999998763e-05, 1.351299999999972e-05, 1.3527999999998763e-05, 1.3513999999999193e-05, 1.3499999999999623e-05, 1.3513999999999193e-05, 1.3527999999998763e-05, 1.3486000000000054e-05, 1.352699999999929e-05, 1.3542000000005272e-05, 1.3527999999998763e-05, 1.3528000000005702e-05]</msg>
<status status="PASS" starttime="20201115 22:03:14.181" endtime="20201115 22:03:14.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.170" endtime="20201115 22:03:14.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.194" endtime="20201115 22:03:14.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.203" endtime="20201115 22:03:14.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.198" endtime="20201115 22:03:14.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.189" endtime="20201115 22:03:14.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.653" endtime="20201115 22:03:14.229"></status>
</kw>
<msg timestamp="20201115 22:03:14.230" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.253" endtime="20201115 22:03:14.275"></status>
</kw>
<msg timestamp="20201115 22:03:14.276" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.249" endtime="20201115 22:03:14.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.283" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.279" endtime="20201115 22:03:14.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.286" endtime="20201115 22:03:14.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.242" endtime="20201115 22:03:14.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.236" endtime="20201115 22:03:14.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.309" endtime="20201115 22:03:14.612"></status>
</kw>
<msg timestamp="20201115 22:03:14.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043288819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043302278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.306" endtime="20201115 22:03:14.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043288819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043302278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.622" endtime="20201115 22:03:14.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.640" endtime="20201115 22:03:14.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.299" endtime="20201115 22:03:14.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.294" endtime="20201115 22:03:14.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.659" level="INFO">${RESULT} = [{'time': 0.043302278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3459000000000387e-05, 'source_diff': 1.3459000000000387e-05}, {'time': 0.043486375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:14.650" endtime="20201115 22:03:14.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.690" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:14.661" endtime="20201115 22:03:14.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.701" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:03:14.699" endtime="20201115 22:03:14.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.707" level="INFO">VALUE: [1.3459000000000387e-05, 1.3527999999998763e-05, 1.3527999999998763e-05, 1.3513999999999193e-05, 1.354099999999886e-05, 1.3458000000000914e-05, 1.3513999999999193e-05, 1.3513999999999193e-05, 1.3528000000005702e-05, 1.352699999999929e-05, 1.3555999999997903e-05, 1.3459000000000387e-05, 1.3527999999998763e-05, 1.3513999999999193e-05, 1.3527999999998763e-05, 1.3527000000006228e-05, 1.3527999999998763e-05, 1.3499999999999623e-05, 1.3542000000005272e-05, 1.3513999999999193e-05, 1.3527999999998763e-05, 1.3472000000000484e-05, 1.3513999999999193e-05, 1.358299999999757e-05, 1.3513999999999193e-05, 1.355499999999843e-05, 1.3527999999998763e-05, 1.3541999999998333e-05, 1.354099999999886e-05, 1.3499999999999623e-05, 1.3513999999999193e-05, 1.3541999999998333e-05, 1.3527999999998763e-05, 1.3499999999999623e-05, 1.354099999999886e-05, 1.3513999999999193e-05, 1.352699999999929e-05, 1.352699999999929e-05, 1.3486000000000054e-05, 1.3513999999999193e-05, 1.3513999999999193e-05, 1.3570000000004412e-05, 1.3541999999998333e-05, 1.3513999999999193e-05, 1.3527999999998763e-05, 1.3542000000005272e-05, 1.3528000000005702e-05, 1.3499999999999623e-05, 1.3541999999998333e-05, 1.3499999999999623e-05]</msg>
<status status="PASS" starttime="20201115 22:03:14.704" endtime="20201115 22:03:14.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.692" endtime="20201115 22:03:14.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.716" endtime="20201115 22:03:14.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.724" endtime="20201115 22:03:14.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.720" endtime="20201115 22:03:14.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.711" endtime="20201115 22:03:14.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.231" endtime="20201115 22:03:14.751"></status>
</kw>
<msg timestamp="20201115 22:03:14.751" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.775" endtime="20201115 22:03:14.798"></status>
</kw>
<msg timestamp="20201115 22:03:14.799" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.772" endtime="20201115 22:03:14.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.805" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.801" endtime="20201115 22:03:14.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.808" endtime="20201115 22:03:14.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.765" endtime="20201115 22:03:14.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.758" endtime="20201115 22:03:14.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.831" endtime="20201115 22:03:15.186"></status>
</kw>
<msg timestamp="20201115 22:03:15.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044412903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044426403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.828" endtime="20201115 22:03:15.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044412903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044426403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.195" endtime="20201115 22:03:15.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.214" endtime="20201115 22:03:15.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.821" endtime="20201115 22:03:15.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.816" endtime="20201115 22:03:15.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.234" level="INFO">${RESULT} = [{'time': 0.044426403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3500000000006562e-05, 'source_diff': 1.3500000000006562e-05}, {'time': 0.044604028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:15.224" endtime="20201115 22:03:15.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.266" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:15.236" endtime="20201115 22:03:15.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.277" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:03:15.274" endtime="20201115 22:03:15.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.282" level="INFO">VALUE: [1.3500000000006562e-05, 1.3499999999999623e-05, 1.3541000000005798e-05, 1.354099999999886e-05, 1.3444000000001344e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3527999999998763e-05, 1.354099999999886e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3541999999998333e-05, 1.3486999999999527e-05, 1.3513999999999193e-05, 1.3486000000000054e-05, 1.3527999999998763e-05, 1.3527999999998763e-05, 1.354099999999886e-05, 1.3513999999999193e-05, 1.3472000000000484e-05, 1.3500000000006562e-05, 1.3527999999998763e-05, 1.352699999999929e-05, 1.3513999999999193e-05, 1.3541999999998333e-05, 1.3513999999999193e-05, 1.358299999999757e-05, 1.3513999999999193e-05, 1.3527999999998763e-05, 1.3556000000004842e-05, 1.3513999999999193e-05, 1.3527999999998763e-05, 1.3513999999999193e-05, 1.355499999999843e-05, 1.3570000000004412e-05, 1.3513999999999193e-05, 1.3513999999999193e-05, 1.3499999999999623e-05, 1.352699999999929e-05, 1.3527999999998763e-05, 1.3513000000006659e-05, 1.3499999999999623e-05, 1.352699999999929e-05, 1.3513999999999193e-05, 1.3541999999998333e-05, 1.352699999999929e-05, 1.352699999999929e-05, 1.3499999999999623e-05, 1.3541999999998333e-05]</msg>
<status status="PASS" starttime="20201115 22:03:15.279" endtime="20201115 22:03:15.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.267" endtime="20201115 22:03:15.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.291" endtime="20201115 22:03:15.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.300" endtime="20201115 22:03:15.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.295" endtime="20201115 22:03:15.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.287" endtime="20201115 22:03:15.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.753" endtime="20201115 22:03:15.326"></status>
</kw>
<msg timestamp="20201115 22:03:15.327" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.350" endtime="20201115 22:03:15.371"></status>
</kw>
<msg timestamp="20201115 22:03:15.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.347" endtime="20201115 22:03:15.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.379" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.375" endtime="20201115 22:03:15.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.381" endtime="20201115 22:03:15.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.339" endtime="20201115 22:03:15.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.334" endtime="20201115 22:03:15.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.405" endtime="20201115 22:03:15.754"></status>
</kw>
<msg timestamp="20201115 22:03:15.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043134514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043148042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.402" endtime="20201115 22:03:15.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043134514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043148042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.764" endtime="20201115 22:03:15.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.782" endtime="20201115 22:03:15.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.394" endtime="20201115 22:03:15.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.390" endtime="20201115 22:03:15.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.801" level="INFO">${RESULT} = [{'time': 0.043148042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.043334417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:15.792" endtime="20201115 22:03:15.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.833" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:15.805" endtime="20201115 22:03:15.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.844" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:03:15.842" endtime="20201115 22:03:15.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.849" level="INFO">VALUE: [1.3527999999998763e-05, 1.3499999999999623e-05, 1.3527999999998763e-05, 1.3528000000005702e-05, 1.3499999999999623e-05, 1.3527999999998763e-05, 1.3527999999998763e-05, 1.3513999999999193e-05, 1.3527999999998763e-05, 1.3513999999999193e-05, 1.3527999999998763e-05, 1.3513999999999193e-05, 1.3513999999999193e-05, 1.352699999999929e-05, 1.3513999999999193e-05, 1.3513999999999193e-05, 1.3541999999998333e-05, 1.3513999999999193e-05, 1.3527999999998763e-05, 1.3445000000000817e-05, 1.3527999999998763e-05, 1.3513999999999193e-05, 1.351299999999972e-05, 1.3541999999998333e-05, 1.351299999999972e-05, 1.352699999999929e-05, 1.3513999999999193e-05, 1.3513999999999193e-05, 1.354099999999886e-05, 1.3472000000000484e-05, 1.3486000000000054e-05, 1.358299999999757e-05, 1.3527999999998763e-05, 1.352699999999929e-05, 1.3527999999998763e-05, 1.3527999999998763e-05, 1.352699999999929e-05, 1.3527999999998763e-05, 1.3513999999999193e-05, 1.354099999999886e-05, 1.3499999999999623e-05, 1.3541999999998333e-05, 1.3527999999998763e-05, 1.3514000000006132e-05, 1.3556000000004842e-05, 1.358299999999757e-05, 1.3527999999998763e-05, 1.3472000000000484e-05, 1.3513999999999193e-05, 1.3527999999998763e-05]</msg>
<status status="PASS" starttime="20201115 22:03:15.846" endtime="20201115 22:03:15.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.835" endtime="20201115 22:03:15.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.859" endtime="20201115 22:03:15.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.867" endtime="20201115 22:03:15.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.863" endtime="20201115 22:03:15.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.855" endtime="20201115 22:03:15.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.328" endtime="20201115 22:03:15.893"></status>
</kw>
<msg timestamp="20201115 22:03:15.893" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.917" endtime="20201115 22:03:15.938"></status>
</kw>
<msg timestamp="20201115 22:03:15.940" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.913" endtime="20201115 22:03:15.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.946" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.942" endtime="20201115 22:03:15.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.948" endtime="20201115 22:03:15.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.906" endtime="20201115 22:03:15.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.900" endtime="20201115 22:03:15.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.972" endtime="20201115 22:03:16.328"></status>
</kw>
<msg timestamp="20201115 22:03:16.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042939306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042952819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.968" endtime="20201115 22:03:16.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042939306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042952819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.337" endtime="20201115 22:03:16.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.356" endtime="20201115 22:03:16.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.961" endtime="20201115 22:03:16.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.957" endtime="20201115 22:03:16.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.377" level="INFO">${RESULT} = [{'time': 0.042952819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3513000000006659e-05, 'source_diff': 1.3513000000006659e-05}, {'time': 0.043129833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:16.368" endtime="20201115 22:03:16.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.408" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:16.380" endtime="20201115 22:03:16.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.419" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:03:16.417" endtime="20201115 22:03:16.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.425" level="INFO">VALUE: [1.3513000000006659e-05, 1.3513999999999193e-05, 1.3527999999998763e-05, 1.3542000000005272e-05, 1.355499999999843e-05, 1.355499999999843e-05, 1.3499999999999623e-05, 1.3598000000003552e-05, 1.3527999999998763e-05, 1.3513999999999193e-05, 1.3597000000004078e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3527999999998763e-05, 1.3527999999998763e-05, 1.3527999999998763e-05, 1.3499999999999623e-05, 1.3513999999999193e-05, 1.3541999999998333e-05, 1.3486000000000054e-05, 1.3513999999999193e-05, 1.3527999999998763e-05, 1.3513999999999193e-05, 1.3513999999999193e-05, 1.3486000000000054e-05, 1.3555000000005368e-05, 1.354099999999886e-05, 1.3472000000000484e-05, 1.3569000000004938e-05, 1.3499999999999623e-05, 1.3527999999998763e-05, 1.3459000000000387e-05, 1.3569999999997473e-05, 1.3527999999998763e-05, 1.352699999999929e-05, 1.3513999999999193e-05, 1.3528000000005702e-05, 1.358299999999757e-05, 1.352699999999929e-05, 1.3513999999999193e-05, 1.352699999999929e-05, 1.3528000000005702e-05, 1.3514000000006132e-05, 1.3431000000001247e-05, 1.3541999999998333e-05, 1.3499999999999623e-05, 1.355499999999843e-05, 1.354099999999886e-05, 1.3528000000005702e-05, 1.352699999999929e-05]</msg>
<status status="PASS" starttime="20201115 22:03:16.422" endtime="20201115 22:03:16.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.410" endtime="20201115 22:03:16.434"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.441" endtime="20201115 22:03:16.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:16.449" endtime="20201115 22:03:16.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.445" endtime="20201115 22:03:16.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.436" endtime="20201115 22:03:16.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.894" endtime="20201115 22:03:16.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.649" endtime="20201115 22:03:16.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.648" endtime="20201115 22:03:16.476"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.481" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.504" endtime="20201115 22:03:16.526"></status>
</kw>
<msg timestamp="20201115 22:03:16.528" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.501" endtime="20201115 22:03:16.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.534" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.530" endtime="20201115 22:03:16.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.536" endtime="20201115 22:03:16.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.494" endtime="20201115 22:03:16.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.488" endtime="20201115 22:03:16.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.560" endtime="20201115 22:03:16.917"></status>
</kw>
<msg timestamp="20201115 22:03:16.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048612514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048626875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.557" endtime="20201115 22:03:16.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048612514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048626875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.927" endtime="20201115 22:03:16.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.945" endtime="20201115 22:03:16.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.549" endtime="20201115 22:03:16.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.545" endtime="20201115 22:03:16.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.963" level="INFO">${RESULT} = [{'time': 0.048626875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.048818125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:16.954" endtime="20201115 22:03:16.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.994" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:16.965" endtime="20201115 22:03:16.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.005" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:03:17.003" endtime="20201115 22:03:17.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.012" level="INFO">VALUE: [1.4360999999997459e-05, 1.431899999999875e-05, 1.4402999999996169e-05, 1.433299999999832e-05, 1.433299999999832e-05, 1.433299999999832e-05, 1.4305999999998653e-05, 1.4305000000006118e-05, 1.4362000000003872e-05, 1.4333000000005258e-05, 1.4361000000004398e-05, 1.4306000000005592e-05, 1.431899999999875e-05, 1.4319999999998223e-05, 1.4334000000004732e-05, 1.4320000000005162e-05, 1.4319999999998223e-05, 1.431899999999875e-05, 1.431899999999875e-05, 1.4277999999999513e-05, 1.429099999999961e-05, 1.4237000000000277e-05, 1.434699999999789e-05, 1.434699999999789e-05, 1.4333000000005258e-05, 1.4305999999998653e-05, 1.431899999999875e-05, 1.4291999999999083e-05, 1.4319000000005688e-05, 1.4291999999999083e-05, 1.433299999999832e-05, 1.433299999999832e-05, 1.4333999999997793e-05, 1.431899999999875e-05, 1.431899999999875e-05, 1.4348000000004302e-05, 1.4305999999998653e-05, 1.4319999999998223e-05, 1.4347000000004828e-05, 1.4319999999998223e-05, 1.433299999999832e-05, 1.433299999999832e-05, 1.431899999999875e-05, 1.4319999999998223e-05, 1.431899999999875e-05, 1.4375000000003968e-05, 1.430499999999918e-05, 1.431899999999875e-05, 1.4333999999997793e-05, 1.4333999999997793e-05]</msg>
<status status="PASS" starttime="20201115 22:03:17.008" endtime="20201115 22:03:17.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.996" endtime="20201115 22:03:17.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.020" endtime="20201115 22:03:17.023"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.029" endtime="20201115 22:03:17.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.025" endtime="20201115 22:03:17.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.016" endtime="20201115 22:03:17.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.482" endtime="20201115 22:03:17.055"></status>
</kw>
<msg timestamp="20201115 22:03:17.055" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.079" endtime="20201115 22:03:17.102"></status>
</kw>
<msg timestamp="20201115 22:03:17.103" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.075" endtime="20201115 22:03:17.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.110" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.106" endtime="20201115 22:03:17.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.112" endtime="20201115 22:03:17.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.068" endtime="20201115 22:03:17.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.062" endtime="20201115 22:03:17.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.136" endtime="20201115 22:03:17.493"></status>
</kw>
<msg timestamp="20201115 22:03:17.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043551514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043565833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.132" endtime="20201115 22:03:17.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043551514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043565833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.502" endtime="20201115 22:03:17.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.521" endtime="20201115 22:03:17.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.125" endtime="20201115 22:03:17.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.120" endtime="20201115 22:03:17.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:17.540" level="INFO">${RESULT} = [{'time': 0.043565833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.431899999999875e-05, 'source_diff': 1.431899999999875e-05}, {'time': 0.043760042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:17.531" endtime="20201115 22:03:17.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:17.571" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:17.542" endtime="20201115 22:03:17.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.583" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:03:17.581" endtime="20201115 22:03:17.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.589" level="INFO">VALUE: [1.431899999999875e-05, 1.4291999999999083e-05, 1.4334000000004732e-05, 1.430499999999918e-05, 1.4305999999998653e-05, 1.4319999999998223e-05, 1.4361999999996933e-05, 1.430499999999918e-05, 1.4334000000004732e-05, 1.4333999999997793e-05, 1.4334000000004732e-05, 1.430499999999918e-05, 1.4305999999998653e-05, 1.4333999999997793e-05, 1.434699999999789e-05, 1.431899999999875e-05, 1.431899999999875e-05, 1.4333000000005258e-05, 1.4305999999998653e-05, 1.4361000000004398e-05, 1.433299999999832e-05, 1.4334000000004732e-05, 1.431899999999875e-05, 1.429099999999961e-05, 1.4388999999996599e-05, 1.4334000000004732e-05, 1.433299999999832e-05, 1.4263999999999943e-05, 1.4374999999997029e-05, 1.430499999999918e-05, 1.430499999999918e-05, 1.4362000000003872e-05, 1.4277999999999513e-05, 1.4333999999997793e-05, 1.433299999999832e-05, 1.431899999999875e-05, 1.431899999999875e-05, 1.434699999999789e-05, 1.4333999999997793e-05, 1.434699999999789e-05, 1.4333000000005258e-05, 1.4388999999996599e-05, 1.4375000000003968e-05, 1.4416000000003204e-05, 1.4333000000005258e-05, 1.433299999999832e-05, 1.433299999999832e-05, 1.4319000000005688e-05, 1.431899999999875e-05, 1.4291999999999083e-05]</msg>
<status status="PASS" starttime="20201115 22:03:17.585" endtime="20201115 22:03:17.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.574" endtime="20201115 22:03:17.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.597" endtime="20201115 22:03:17.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.606" endtime="20201115 22:03:17.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.602" endtime="20201115 22:03:17.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.593" endtime="20201115 22:03:17.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.056" endtime="20201115 22:03:17.632"></status>
</kw>
<msg timestamp="20201115 22:03:17.632" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.656" endtime="20201115 22:03:17.678"></status>
</kw>
<msg timestamp="20201115 22:03:17.679" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.652" endtime="20201115 22:03:17.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.685" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.681" endtime="20201115 22:03:17.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.687" endtime="20201115 22:03:17.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.645" endtime="20201115 22:03:17.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.639" endtime="20201115 22:03:17.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.711" endtime="20201115 22:03:18.035"></status>
</kw>
<msg timestamp="20201115 22:03:18.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042909847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042924181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.708" endtime="20201115 22:03:18.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042909847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042924181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.045" endtime="20201115 22:03:18.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.063" endtime="20201115 22:03:18.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.701" endtime="20201115 22:03:18.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.696" endtime="20201115 22:03:18.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.083" level="INFO">${RESULT} = [{'time': 0.042924181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4333999999997793e-05, 'source_diff': 1.4333999999997793e-05}, {'time': 0.043120847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:18.074" endtime="20201115 22:03:18.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.114" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:18.086" endtime="20201115 22:03:18.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.126" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:03:18.123" endtime="20201115 22:03:18.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.132" level="INFO">VALUE: [1.4333999999997793e-05, 1.431899999999875e-05, 1.4277999999999513e-05, 1.434699999999789e-05, 1.427700000000004e-05, 1.4319999999998223e-05, 1.431899999999875e-05, 1.4361000000004398e-05, 1.433299999999832e-05, 1.431899999999875e-05, 1.4319000000005688e-05, 1.4250000000000373e-05, 1.4333999999997793e-05, 1.429099999999961e-05, 1.4305999999998653e-05, 1.4319999999998223e-05, 1.433299999999832e-05, 1.433299999999832e-05, 1.4319999999998223e-05, 1.4333999999997793e-05, 1.4305999999998653e-05, 1.434699999999789e-05, 1.4333999999997793e-05, 1.433299999999832e-05, 1.4334000000004732e-05, 1.4306000000005592e-05, 1.434699999999789e-05, 1.4374999999997029e-05, 1.433299999999832e-05, 1.4361000000004398e-05, 1.4347000000004828e-05, 1.4374999999997029e-05, 1.4319999999998223e-05, 1.427700000000004e-05, 1.4320000000005162e-05, 1.4347000000004828e-05, 1.431899999999875e-05, 1.4305999999998653e-05, 1.4305999999998653e-05, 1.4319000000005688e-05, 1.4319999999998223e-05, 1.434699999999789e-05, 1.4277999999999513e-05, 1.4347000000004828e-05, 1.434699999999789e-05, 1.4333999999997793e-05, 1.431899999999875e-05, 1.431899999999875e-05, 1.4333000000005258e-05, 1.4319999999998223e-05]</msg>
<status status="PASS" starttime="20201115 22:03:18.128" endtime="20201115 22:03:18.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.116" endtime="20201115 22:03:18.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.141" endtime="20201115 22:03:18.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.149" endtime="20201115 22:03:18.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.145" endtime="20201115 22:03:18.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.136" endtime="20201115 22:03:18.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.633" endtime="20201115 22:03:18.175"></status>
</kw>
<msg timestamp="20201115 22:03:18.175" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.199" endtime="20201115 22:03:18.221"></status>
</kw>
<msg timestamp="20201115 22:03:18.222" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.195" endtime="20201115 22:03:18.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.228" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.224" endtime="20201115 22:03:18.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.231" endtime="20201115 22:03:18.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.188" endtime="20201115 22:03:18.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.182" endtime="20201115 22:03:18.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.255" endtime="20201115 22:03:18.597"></status>
</kw>
<msg timestamp="20201115 22:03:18.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043339111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043353486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.251" endtime="20201115 22:03:18.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043339111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043353486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.607" endtime="20201115 22:03:18.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.626" endtime="20201115 22:03:18.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.244" endtime="20201115 22:03:18.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.239" endtime="20201115 22:03:18.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.648" level="INFO">${RESULT} = [{'time': 0.043353486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.043545111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:18.638" endtime="20201115 22:03:18.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.678" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:18.650" endtime="20201115 22:03:18.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.689" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:03:18.687" endtime="20201115 22:03:18.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.695" level="INFO">VALUE: [1.4374999999997029e-05, 1.431899999999875e-05, 1.433299999999832e-05, 1.4306000000005592e-05, 1.4319999999998223e-05, 1.4319999999998223e-05, 1.4374999999997029e-05, 1.4319000000005688e-05, 1.433299999999832e-05, 1.4320000000005162e-05, 1.4333999999997793e-05, 1.4388999999996599e-05, 1.430499999999918e-05, 1.4333999999997793e-05, 1.4334000000004732e-05, 1.430499999999918e-05, 1.4305999999998653e-05, 1.433299999999832e-05, 1.4319999999998223e-05, 1.429099999999961e-05, 1.4347000000004828e-05, 1.4320000000005162e-05, 1.434699999999789e-05, 1.4347000000004828e-05, 1.4305999999998653e-05, 1.4333000000005258e-05, 1.431899999999875e-05, 1.4333999999997793e-05, 1.4305999999998653e-05, 1.4305999999998653e-05, 1.434699999999789e-05, 1.4319999999998223e-05, 1.4319999999998223e-05, 1.4333999999997793e-05, 1.4319000000005688e-05, 1.431899999999875e-05, 1.4319000000005688e-05, 1.434699999999789e-05, 1.431899999999875e-05, 1.433299999999832e-05, 1.4263999999999943e-05, 1.4320000000005162e-05, 1.431899999999875e-05, 1.4291999999999083e-05, 1.4319000000005688e-05, 1.4291999999999083e-05, 1.4277999999999513e-05, 1.4277999999999513e-05, 1.431899999999875e-05, 1.434699999999789e-05]</msg>
<status status="PASS" starttime="20201115 22:03:18.692" endtime="20201115 22:03:18.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.680" endtime="20201115 22:03:18.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.704" endtime="20201115 22:03:18.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.713" endtime="20201115 22:03:18.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.708" endtime="20201115 22:03:18.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.699" endtime="20201115 22:03:18.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.177" endtime="20201115 22:03:18.738"></status>
</kw>
<msg timestamp="20201115 22:03:18.739" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.762" endtime="20201115 22:03:18.784"></status>
</kw>
<msg timestamp="20201115 22:03:18.785" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.759" endtime="20201115 22:03:18.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.792" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.788" endtime="20201115 22:03:18.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.794" endtime="20201115 22:03:18.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.751" endtime="20201115 22:03:18.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.746" endtime="20201115 22:03:18.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.818" endtime="20201115 22:03:19.163"></status>
</kw>
<msg timestamp="20201115 22:03:19.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042990347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043004667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.815" endtime="20201115 22:03:19.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042990347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043004667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.173" endtime="20201115 22:03:19.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.192" endtime="20201115 22:03:19.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.807" endtime="20201115 22:03:19.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.802" endtime="20201115 22:03:19.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.211" level="INFO">${RESULT} = [{'time': 0.043004667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4320000000005162e-05, 'source_diff': 1.4320000000005162e-05}, {'time': 0.043201806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:19.202" endtime="20201115 22:03:19.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.242" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:19.213" endtime="20201115 22:03:19.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.253" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:03:19.251" endtime="20201115 22:03:19.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.259" level="INFO">VALUE: [1.4320000000005162e-05, 1.4348000000004302e-05, 1.4319999999998223e-05, 1.4347999999997363e-05, 1.4319999999998223e-05, 1.4320000000005162e-05, 1.433299999999832e-05, 1.4264000000006882e-05, 1.4348000000004302e-05, 1.4277999999999513e-05, 1.4319999999998223e-05, 1.433299999999832e-05, 1.4305000000006118e-05, 1.4305999999998653e-05, 1.4319999999998223e-05, 1.433299999999832e-05, 1.4263999999999943e-05, 1.4347999999997363e-05, 1.4333999999997793e-05, 1.433299999999832e-05, 1.4305999999998653e-05, 1.4333000000005258e-05, 1.4319999999998223e-05, 1.431899999999875e-05, 1.4319000000005688e-05, 1.4319999999998223e-05, 1.433299999999832e-05, 1.434699999999789e-05, 1.433299999999832e-05, 1.431899999999875e-05, 1.4333999999997793e-05, 1.4361000000004398e-05, 1.433299999999832e-05, 1.4291999999999083e-05, 1.431899999999875e-05, 1.4320000000005162e-05, 1.433299999999832e-05, 1.430499999999918e-05, 1.4333000000005258e-05, 1.4333999999997793e-05, 1.4361000000004398e-05, 1.4305999999998653e-05, 1.433299999999832e-05, 1.4319999999998223e-05, 1.431899999999875e-05, 1.431899999999875e-05, 1.4277999999999513e-05, 1.431899999999875e-05, 1.4319999999998223e-05, 1.4334000000004732e-05]</msg>
<status status="PASS" starttime="20201115 22:03:19.255" endtime="20201115 22:03:19.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.244" endtime="20201115 22:03:19.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.268" endtime="20201115 22:03:19.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.276" endtime="20201115 22:03:19.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.272" endtime="20201115 22:03:19.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.263" endtime="20201115 22:03:19.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.740" endtime="20201115 22:03:19.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.479" endtime="20201115 22:03:19.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.477" endtime="20201115 22:03:19.303"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.308" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.331" endtime="20201115 22:03:19.354"></status>
</kw>
<msg timestamp="20201115 22:03:19.355" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.328" endtime="20201115 22:03:19.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.362" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.357" endtime="20201115 22:03:19.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.365" endtime="20201115 22:03:19.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.320" endtime="20201115 22:03:19.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.314" endtime="20201115 22:03:19.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.391" endtime="20201115 22:03:19.735"></status>
</kw>
<msg timestamp="20201115 22:03:19.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048440847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048455931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.387" endtime="20201115 22:03:19.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048440847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048455931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.745" endtime="20201115 22:03:19.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.764" endtime="20201115 22:03:19.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.379" endtime="20201115 22:03:19.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.374" endtime="20201115 22:03:19.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.782" level="INFO">${RESULT} = [{'time': 0.048455931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5083999999998543e-05, 'source_diff': 1.5083999999998543e-05}, {'time': 0.048665361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:19.772" endtime="20201115 22:03:19.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.812" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:19.784" endtime="20201115 22:03:19.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.824" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:03:19.821" endtime="20201115 22:03:19.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.829" level="INFO">VALUE: [1.5083999999998543e-05, 1.5124999999997779e-05, 1.5124999999997779e-05, 1.5139000000004288e-05, 1.5167000000003428e-05, 1.5125000000004718e-05, 1.5084000000005482e-05, 1.5138999999997349e-05, 1.5137999999997875e-05, 1.5125000000004718e-05, 1.5151999999997445e-05, 1.5139000000004288e-05, 1.5097000000005578e-05, 1.5138999999997349e-05, 1.5124999999997779e-05, 1.511099999999821e-05, 1.5139000000004288e-05, 1.5111000000005148e-05, 1.5125000000004718e-05, 1.5138999999997349e-05, 1.5111000000005148e-05, 1.5125000000004718e-05, 1.5138999999997349e-05, 1.5222000000002234e-05, 1.5124999999997779e-05, 1.5137999999997875e-05, 1.5125000000004718e-05, 1.5151999999997445e-05, 1.5151999999997445e-05, 1.509699999999864e-05, 1.509699999999864e-05, 1.508299999999907e-05, 1.5083999999998543e-05, 1.5137999999997875e-05, 1.5125000000004718e-05, 1.511099999999821e-05, 1.5111000000005148e-05, 1.5180999999996059e-05, 1.5124999999997779e-05, 1.511099999999821e-05, 1.5165999999997015e-05, 1.5097999999998113e-05, 1.5137999999997875e-05, 1.5139000000004288e-05, 1.5124999999997779e-05, 1.5207999999995725e-05, 1.511099999999821e-05, 1.5125000000004718e-05, 1.5151999999997445e-05, 1.5124999999997779e-05]</msg>
<status status="PASS" starttime="20201115 22:03:19.826" endtime="20201115 22:03:19.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.814" endtime="20201115 22:03:19.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.838" endtime="20201115 22:03:19.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.847" endtime="20201115 22:03:19.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.842" endtime="20201115 22:03:19.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.834" endtime="20201115 22:03:19.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.309" endtime="20201115 22:03:19.872"></status>
</kw>
<msg timestamp="20201115 22:03:19.873" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.896" endtime="20201115 22:03:19.920"></status>
</kw>
<msg timestamp="20201115 22:03:19.921" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.893" endtime="20201115 22:03:19.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.928" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.923" endtime="20201115 22:03:19.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.930" endtime="20201115 22:03:19.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.886" endtime="20201115 22:03:19.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.880" endtime="20201115 22:03:19.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.954" endtime="20201115 22:03:20.297"></status>
</kw>
<msg timestamp="20201115 22:03:20.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042954806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042969931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.951" endtime="20201115 22:03:20.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042954806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042969931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.307" endtime="20201115 22:03:20.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.325" endtime="20201115 22:03:20.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.944" endtime="20201115 22:03:20.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.939" endtime="20201115 22:03:20.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:20.344" level="INFO">${RESULT} = [{'time': 0.042969931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5125000000004718e-05, 'source_diff': 1.5125000000004718e-05}, {'time': 0.043183125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:20.335" endtime="20201115 22:03:20.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:20.375" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:20.347" endtime="20201115 22:03:20.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.386" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:03:20.384" endtime="20201115 22:03:20.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.392" level="INFO">VALUE: [1.5125000000004718e-05, 1.5125000000004718e-05, 1.5125000000004718e-05, 1.5167000000003428e-05, 1.5153000000003858e-05, 1.5151999999997445e-05, 1.504100000000036e-05, 1.5124999999997779e-05, 1.5138999999997349e-05, 1.5180000000003524e-05, 1.5223000000001707e-05, 1.5139000000004288e-05, 1.5125000000004718e-05, 1.5138999999997349e-05, 1.5111000000005148e-05, 1.5138999999997349e-05, 1.5125000000004718e-05, 1.511099999999821e-05, 1.5152999999996919e-05, 1.5152999999996919e-05, 1.5138999999997349e-05, 1.5138999999997349e-05, 1.5124999999997779e-05, 1.505499999999993e-05, 1.5139000000004288e-05, 1.5125000000004718e-05, 1.5139000000004288e-05, 1.5138999999997349e-05, 1.5125000000004718e-05, 1.5139000000004288e-05, 1.5137999999997875e-05, 1.5138999999997349e-05, 1.5124999999997779e-05, 1.5125000000004718e-05, 1.5208999999995199e-05, 1.5153000000003858e-05, 1.5139000000004288e-05, 1.5125000000004718e-05, 1.5151999999997445e-05, 1.5111000000005148e-05, 1.5124999999997779e-05, 1.5125000000004718e-05, 1.5124999999997779e-05, 1.5151999999997445e-05, 1.5138999999997349e-05, 1.50689999999995e-05, 1.5138999999997349e-05, 1.5139000000004288e-05, 1.5138999999997349e-05, 1.509699999999864e-05]</msg>
<status status="PASS" starttime="20201115 22:03:20.388" endtime="20201115 22:03:20.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.377" endtime="20201115 22:03:20.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.401" endtime="20201115 22:03:20.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:20.410" endtime="20201115 22:03:20.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.405" endtime="20201115 22:03:20.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.396" endtime="20201115 22:03:20.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.874" endtime="20201115 22:03:20.436"></status>
</kw>
<msg timestamp="20201115 22:03:20.437" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.461" endtime="20201115 22:03:20.484"></status>
</kw>
<msg timestamp="20201115 22:03:20.485" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.457" endtime="20201115 22:03:20.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.492" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.488" endtime="20201115 22:03:20.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.494" endtime="20201115 22:03:20.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.449" endtime="20201115 22:03:20.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.444" endtime="20201115 22:03:20.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.518" endtime="20201115 22:03:20.863"></status>
</kw>
<msg timestamp="20201115 22:03:20.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044162347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044177486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.514" endtime="20201115 22:03:20.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044162347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044177486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.872" endtime="20201115 22:03:20.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.891" endtime="20201115 22:03:20.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.507" endtime="20201115 22:03:20.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.502" endtime="20201115 22:03:20.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:20.912" level="INFO">${RESULT} = [{'time': 0.044177486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139000000004288e-05, 'source_diff': 1.5139000000004288e-05}, {'time': 0.04438775, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:03:20.903" endtime="20201115 22:03:20.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:20.943" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:20.914" endtime="20201115 22:03:20.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.954" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:03:20.952" endtime="20201115 22:03:20.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.960" level="INFO">VALUE: [1.5139000000004288e-05, 1.5124999999997779e-05, 1.5124999999997779e-05, 1.5166999999996489e-05, 1.5124999999997779e-05, 1.511099999999821e-05, 1.5124999999997779e-05, 1.5138999999997349e-05, 1.5166000000003954e-05, 1.5139000000004288e-05, 1.508299999999907e-05, 1.5165999999997015e-05, 1.5138999999997349e-05, 1.5124999999997779e-05, 1.5125000000004718e-05, 1.5152999999996919e-05, 1.50689999999995e-05, 1.5138999999997349e-05, 1.5138000000004814e-05, 1.5138999999997349e-05, 1.5083999999998543e-05, 1.5138999999997349e-05, 1.508299999999907e-05, 1.5152000000004384e-05, 1.5124999999997779e-05, 1.5167000000003428e-05, 1.5125000000004718e-05, 1.5139000000004288e-05, 1.5138999999997349e-05, 1.5152999999996919e-05, 1.5181000000002998e-05, 1.5153000000003858e-05, 1.509699999999864e-05, 1.5138999999997349e-05, 1.5138999999997349e-05, 1.5137999999997875e-05, 1.511099999999821e-05, 1.5138999999997349e-05, 1.5124999999997779e-05, 1.5153000000003858e-05, 1.5125000000004718e-05, 1.5138999999997349e-05, 1.5138999999997349e-05, 1.5124999999997779e-05, 1.5125000000004718e-05, 1.5125000000004718e-05, 1.5138999999997349e-05, 1.5124999999997779e-05, 1.5166000000003954e-05, 1.5138999999997349e-05]</msg>
<status status="PASS" starttime="20201115 22:03:20.956" endtime="20201115 22:03:20.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.945" endtime="20201115 22:03:20.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.969" endtime="20201115 22:03:20.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:20.977" endtime="20201115 22:03:20.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.973" endtime="20201115 22:03:21.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.964" endtime="20201115 22:03:21.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.438" endtime="20201115 22:03:21.004"></status>
</kw>
<msg timestamp="20201115 22:03:21.004" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.028" endtime="20201115 22:03:21.051"></status>
</kw>
<msg timestamp="20201115 22:03:21.052" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.024" endtime="20201115 22:03:21.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.058" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.054" endtime="20201115 22:03:21.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.061" endtime="20201115 22:03:21.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.017" endtime="20201115 22:03:21.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.011" endtime="20201115 22:03:21.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.085" endtime="20201115 22:03:21.408"></status>
</kw>
<msg timestamp="20201115 22:03:21.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044364292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044379417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.081" endtime="20201115 22:03:21.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044364292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044379417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.417" endtime="20201115 22:03:21.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.436" endtime="20201115 22:03:21.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.074" endtime="20201115 22:03:21.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.069" endtime="20201115 22:03:21.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.456" level="INFO">${RESULT} = [{'time': 0.044379417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5124999999997779e-05, 'source_diff': 1.5124999999997779e-05}, {'time': 0.0445945, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:21.447" endtime="20201115 22:03:21.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.487" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:21.458" endtime="20201115 22:03:21.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.499" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:03:21.496" endtime="20201115 22:03:21.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.504" level="INFO">VALUE: [1.5124999999997779e-05, 1.5139000000004288e-05, 1.5152999999996919e-05, 1.5111000000005148e-05, 1.5137999999997875e-05, 1.5111000000005148e-05, 1.5125000000004718e-05, 1.5166999999996489e-05, 1.5138999999997349e-05, 1.5151999999997445e-05, 1.5069999999998973e-05, 1.5138000000004814e-05, 1.5124999999997779e-05, 1.5139000000004288e-05, 1.509699999999864e-05, 1.5139000000004288e-05, 1.511099999999821e-05, 1.5153000000003858e-05, 1.5124999999997779e-05, 1.5124999999997779e-05, 1.5138999999997349e-05, 1.5124999999997779e-05, 1.5125000000004718e-05, 1.5180999999996059e-05, 1.5124999999997779e-05, 1.5153000000003858e-05, 1.5069999999998973e-05, 1.5138999999997349e-05, 1.508299999999907e-05, 1.5124999999997779e-05, 1.5124999999997779e-05, 1.5138999999997349e-05, 1.511099999999821e-05, 1.5125000000004718e-05, 1.509699999999864e-05, 1.5124999999997779e-05, 1.5124999999997779e-05, 1.5166999999996489e-05, 1.508299999999907e-05, 1.5125000000004718e-05, 1.5124999999997779e-05, 1.5153000000003858e-05, 1.5152999999996919e-05, 1.5124999999997779e-05, 1.5166999999996489e-05, 1.5125000000004718e-05, 1.5139000000004288e-05, 1.5152999999996919e-05, 1.5152999999996919e-05, 1.5111000000005148e-05]</msg>
<status status="PASS" starttime="20201115 22:03:21.501" endtime="20201115 22:03:21.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.489" endtime="20201115 22:03:21.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.520" endtime="20201115 22:03:21.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.528" endtime="20201115 22:03:21.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.524" endtime="20201115 22:03:21.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.515" endtime="20201115 22:03:21.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.005" endtime="20201115 22:03:21.554"></status>
</kw>
<msg timestamp="20201115 22:03:21.554" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.578" endtime="20201115 22:03:21.602"></status>
</kw>
<msg timestamp="20201115 22:03:21.603" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.574" endtime="20201115 22:03:21.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.609" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.605" endtime="20201115 22:03:21.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.612" endtime="20201115 22:03:21.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.567" endtime="20201115 22:03:21.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.561" endtime="20201115 22:03:21.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.635" endtime="20201115 22:03:21.979"></status>
</kw>
<msg timestamp="20201115 22:03:21.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043442736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043457847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.632" endtime="20201115 22:03:21.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043442736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043457847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.988" endtime="20201115 22:03:22.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.007" endtime="20201115 22:03:22.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.625" endtime="20201115 22:03:22.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.620" endtime="20201115 22:03:22.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.026" level="INFO">${RESULT} = [{'time': 0.043457847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.511099999999821e-05, 'source_diff': 1.511099999999821e-05}, {'time': 0.043672292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:22.017" endtime="20201115 22:03:22.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.057" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:22.028" endtime="20201115 22:03:22.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.068" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:03:22.066" endtime="20201115 22:03:22.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.074" level="INFO">VALUE: [1.511099999999821e-05, 1.5125000000004718e-05, 1.511099999999821e-05, 1.5124999999997779e-05, 1.5138999999997349e-05, 1.5193999999996155e-05, 1.5139000000004288e-05, 1.5125000000004718e-05, 1.5124999999997779e-05, 1.5139000000004288e-05, 1.5124999999997779e-05, 1.5098000000005052e-05, 1.509699999999864e-05, 1.5138999999997349e-05, 1.5166999999996489e-05, 1.5124999999997779e-05, 1.5139000000004288e-05, 1.5139000000004288e-05, 1.5153000000003858e-05, 1.5138999999997349e-05, 1.5151999999997445e-05, 1.511099999999821e-05, 1.5124999999997779e-05, 1.5124999999997779e-05, 1.5125000000004718e-05, 1.5125000000004718e-05, 1.511099999999821e-05, 1.5139000000004288e-05, 1.5138999999997349e-05, 1.5125000000004718e-05, 1.5124999999997779e-05, 1.5139000000004288e-05, 1.511099999999821e-05, 1.5138999999997349e-05, 1.5153000000003858e-05, 1.5138999999997349e-05, 1.5138999999997349e-05, 1.5153000000003858e-05, 1.509699999999864e-05, 1.5138999999997349e-05, 1.5166999999996489e-05, 1.5151999999997445e-05, 1.5153000000003858e-05, 1.5138999999997349e-05, 1.5138999999997349e-05, 1.5152999999996919e-05, 1.5139000000004288e-05, 1.5124999999997779e-05, 1.5152999999996919e-05, 1.5138999999997349e-05]</msg>
<status status="PASS" starttime="20201115 22:03:22.071" endtime="20201115 22:03:22.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.059" endtime="20201115 22:03:22.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.084" endtime="20201115 22:03:22.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.092" endtime="20201115 22:03:22.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.088" endtime="20201115 22:03:22.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.079" endtime="20201115 22:03:22.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.555" endtime="20201115 22:03:22.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.305" endtime="20201115 22:03:22.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.304" endtime="20201115 22:03:22.119"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.124" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.147" endtime="20201115 22:03:22.171"></status>
</kw>
<msg timestamp="20201115 22:03:22.172" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.144" endtime="20201115 22:03:22.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.178" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.174" endtime="20201115 22:03:22.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.181" endtime="20201115 22:03:22.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.136" endtime="20201115 22:03:22.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.130" endtime="20201115 22:03:22.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.205" endtime="20201115 22:03:22.550"></status>
</kw>
<msg timestamp="20201115 22:03:22.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048363444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048379375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.201" endtime="20201115 22:03:22.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048363444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048379375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.559" endtime="20201115 22:03:22.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.578" endtime="20201115 22:03:22.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.194" endtime="20201115 22:03:22.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.189" endtime="20201115 22:03:22.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.596" level="INFO">${RESULT} = [{'time': 0.048379375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5931000000003748e-05, 'source_diff': 1.5931000000003748e-05}, {'time': 0.048606597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:22.587" endtime="20201115 22:03:22.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.627" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:22.598" endtime="20201115 22:03:22.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.638" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:03:22.636" endtime="20201115 22:03:22.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.644" level="INFO">VALUE: [1.5931000000003748e-05, 1.5958000000003414e-05, 1.5943999999996905e-05, 1.5944000000003844e-05, 1.5985999999995615e-05, 1.594499999999638e-05, 1.5930000000004274e-05, 1.5944000000003844e-05, 1.5915999999997765e-05, 1.5931000000003748e-05, 1.5901999999998195e-05, 1.5958000000003414e-05, 1.5943999999996905e-05, 1.5943999999996905e-05, 1.593099999999681e-05, 1.5915999999997765e-05, 1.5931000000003748e-05, 1.590299999999767e-05, 1.5929999999997335e-05, 1.5945000000003318e-05, 1.5986000000002554e-05, 1.5959000000002888e-05, 1.5945000000003318e-05, 1.5945000000003318e-05, 1.5945000000003318e-05, 1.5945000000003318e-05, 1.5930000000004274e-05, 1.5957999999996475e-05, 1.5917000000004178e-05, 1.5944000000003844e-05, 1.590299999999767e-05, 1.5971999999996045e-05, 1.5958000000003414e-05, 1.5944000000003844e-05, 1.5931000000003748e-05, 1.5929999999997335e-05, 1.5944000000003844e-05, 1.5944000000003844e-05, 1.5875000000005468e-05, 1.594499999999638e-05, 1.5916000000004704e-05, 1.593099999999681e-05, 1.5944000000003844e-05, 1.5945000000003318e-05, 1.5973000000002457e-05, 1.5930000000004274e-05, 1.5945000000003318e-05, 1.5929999999997335e-05, 1.593099999999681e-05, 1.593099999999681e-05]</msg>
<status status="PASS" starttime="20201115 22:03:22.640" endtime="20201115 22:03:22.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.629" endtime="20201115 22:03:22.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.653" endtime="20201115 22:03:22.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.662" endtime="20201115 22:03:22.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.657" endtime="20201115 22:03:22.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.649" endtime="20201115 22:03:22.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.125" endtime="20201115 22:03:22.687"></status>
</kw>
<msg timestamp="20201115 22:03:22.688" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.711" endtime="20201115 22:03:22.735"></status>
</kw>
<msg timestamp="20201115 22:03:22.737" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.708" endtime="20201115 22:03:22.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.743" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.739" endtime="20201115 22:03:22.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.745" endtime="20201115 22:03:22.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.701" endtime="20201115 22:03:22.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.695" endtime="20201115 22:03:22.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.769" endtime="20201115 22:03:23.111"></status>
</kw>
<msg timestamp="20201115 22:03:23.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043080917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043096861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.766" endtime="20201115 22:03:23.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043080917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043096861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.120" endtime="20201115 22:03:23.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.139" endtime="20201115 22:03:23.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.758" endtime="20201115 22:03:23.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.754" endtime="20201115 22:03:23.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.160" level="INFO">${RESULT} = [{'time': 0.043096861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5943999999996905e-05, 'source_diff': 1.5943999999996905e-05}, {'time': 0.043319056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:23.151" endtime="20201115 22:03:23.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.191" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:23.162" endtime="20201115 22:03:23.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.203" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:03:23.200" endtime="20201115 22:03:23.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.208" level="INFO">VALUE: [1.5943999999996905e-05, 1.5931000000003748e-05, 1.5915999999997765e-05, 1.5944000000003844e-05, 1.587499999999853e-05, 1.5944000000003844e-05, 1.5945000000003318e-05, 1.5915999999997765e-05, 1.5944000000003844e-05, 1.5945000000003318e-05, 1.5916000000004704e-05, 1.595899999999595e-05, 1.5957999999996475e-05, 1.5973000000002457e-05, 1.594499999999638e-05, 1.5931000000003748e-05, 1.5944000000003844e-05, 1.5929999999997335e-05, 1.5972000000002984e-05, 1.5943999999996905e-05, 1.593099999999681e-05, 1.5987000000002027e-05, 1.5943999999996905e-05, 1.5917000000004178e-05, 1.5959000000002888e-05, 1.5929999999997335e-05, 1.5957999999996475e-05, 1.5916000000004704e-05, 1.591699999999724e-05, 1.5930000000004274e-05, 1.5915999999997765e-05, 1.595899999999595e-05, 1.5915999999997765e-05, 1.5944000000003844e-05, 1.593099999999681e-05, 1.5943999999996905e-05, 1.5959000000002888e-05, 1.593099999999681e-05, 1.58889999999981e-05, 1.5931000000003748e-05, 1.591699999999724e-05, 1.5973000000002457e-05, 1.5930000000004274e-05, 1.5916000000004704e-05, 1.593099999999681e-05, 1.5958000000003414e-05, 1.5957999999996475e-05, 1.5972000000002984e-05, 1.5903000000004608e-05, 1.5959000000002888e-05]</msg>
<status status="PASS" starttime="20201115 22:03:23.205" endtime="20201115 22:03:23.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.193" endtime="20201115 22:03:23.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.217" endtime="20201115 22:03:23.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.226" endtime="20201115 22:03:23.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.221" endtime="20201115 22:03:23.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.213" endtime="20201115 22:03:23.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.689" endtime="20201115 22:03:23.252"></status>
</kw>
<msg timestamp="20201115 22:03:23.252" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.275" endtime="20201115 22:03:23.299"></status>
</kw>
<msg timestamp="20201115 22:03:23.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.272" endtime="20201115 22:03:23.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.307" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.303" endtime="20201115 22:03:23.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.309" endtime="20201115 22:03:23.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.265" endtime="20201115 22:03:23.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.259" endtime="20201115 22:03:23.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.333" endtime="20201115 22:03:23.677"></status>
</kw>
<msg timestamp="20201115 22:03:23.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043007806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04302375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:23.329" endtime="20201115 22:03:23.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043007806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04302375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:23.687" endtime="20201115 22:03:23.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.705" endtime="20201115 22:03:23.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.322" endtime="20201115 22:03:23.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.317" endtime="20201115 22:03:23.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.724" level="INFO">${RESULT} = [{'time': 0.04302375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5943999999996905e-05, 'source_diff': 1.5943999999996905e-05}, {'time': 0.043244111, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:03:23.715" endtime="20201115 22:03:23.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.756" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:23.727" endtime="20201115 22:03:23.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.767" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:03:23.765" endtime="20201115 22:03:23.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.773" level="INFO">VALUE: [1.5943999999996905e-05, 1.5958000000003414e-05, 1.5972000000002984e-05, 1.5945000000003318e-05, 1.594499999999638e-05, 1.5944000000003844e-05, 1.5931000000003748e-05, 1.5931000000003748e-05, 1.5972000000002984e-05, 1.5943999999996905e-05, 1.5985999999995615e-05, 1.5931000000003748e-05, 1.6000000000002124e-05, 1.5915999999997765e-05, 1.593099999999681e-05, 1.5931000000003748e-05, 1.593099999999681e-05, 1.5958000000003414e-05, 1.5943999999996905e-05, 1.593099999999681e-05, 1.5987000000002027e-05, 1.5944000000003844e-05, 1.5929999999997335e-05, 1.593099999999681e-05, 1.5916000000004704e-05, 1.5929999999997335e-05, 1.5943999999996905e-05, 1.5930000000004274e-05, 1.5901999999998195e-05, 1.5972000000002984e-05, 1.593099999999681e-05, 1.5931000000003748e-05, 1.5930000000004274e-05, 1.5915999999997765e-05, 1.5973000000002457e-05, 1.5944000000003844e-05, 1.5931000000003748e-05, 1.594499999999638e-05, 1.593099999999681e-05, 1.594499999999638e-05, 1.5931000000003748e-05, 1.5957999999996475e-05, 1.5915999999997765e-05, 1.595899999999595e-05, 1.5944000000003844e-05, 1.591699999999724e-05, 1.5943999999996905e-05, 1.5944000000003844e-05, 1.5943999999996905e-05, 1.5945000000003318e-05]</msg>
<status status="PASS" starttime="20201115 22:03:23.770" endtime="20201115 22:03:23.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.758" endtime="20201115 22:03:23.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.782" endtime="20201115 22:03:23.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.790" endtime="20201115 22:03:23.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.786" endtime="20201115 22:03:23.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.777" endtime="20201115 22:03:23.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.253" endtime="20201115 22:03:23.816"></status>
</kw>
<msg timestamp="20201115 22:03:23.817" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.840" endtime="20201115 22:03:23.864"></status>
</kw>
<msg timestamp="20201115 22:03:23.866" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.837" endtime="20201115 22:03:23.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.872" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.868" endtime="20201115 22:03:23.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.874" endtime="20201115 22:03:23.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.829" endtime="20201115 22:03:23.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.823" endtime="20201115 22:03:23.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.898" endtime="20201115 22:03:24.240"></status>
</kw>
<msg timestamp="20201115 22:03:24.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043035389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043051319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.895" endtime="20201115 22:03:24.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043035389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043051319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.250" endtime="20201115 22:03:24.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.269" endtime="20201115 22:03:24.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.887" endtime="20201115 22:03:24.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.883" endtime="20201115 22:03:24.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.288" level="INFO">${RESULT} = [{'time': 0.043051319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5929999999997335e-05, 'source_diff': 1.5929999999997335e-05}, {'time': 0.043275403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:24.279" endtime="20201115 22:03:24.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:24.319" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:24.291" endtime="20201115 22:03:24.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.331" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:03:24.328" endtime="20201115 22:03:24.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.336" level="INFO">VALUE: [1.5929999999997335e-05, 1.594499999999638e-05, 1.5999999999995185e-05, 1.5943999999996905e-05, 1.5943999999996905e-05, 1.5958000000003414e-05, 1.5930000000004274e-05, 1.5929999999997335e-05, 1.5931000000003748e-05, 1.591699999999724e-05, 1.5943999999996905e-05, 1.5972000000002984e-05, 1.5931000000003748e-05, 1.5916000000004704e-05, 1.593099999999681e-05, 1.590299999999767e-05, 1.593099999999681e-05, 1.5901999999998195e-05, 1.5943999999996905e-05, 1.5945000000003318e-05, 1.5930000000004274e-05, 1.5930000000004274e-05, 1.5943999999996905e-05, 1.5917000000004178e-05, 1.5915999999997765e-05, 1.590299999999767e-05, 1.5917000000004178e-05, 1.5943999999996905e-05, 1.594499999999638e-05, 1.593099999999681e-05, 1.593099999999681e-05, 1.594499999999638e-05, 1.5945000000003318e-05, 1.5972000000002984e-05, 1.593099999999681e-05, 1.593099999999681e-05, 1.5915999999997765e-05, 1.5957999999996475e-05, 1.591699999999724e-05, 1.594499999999638e-05, 1.5945000000003318e-05, 1.5929999999997335e-05, 1.5929999999997335e-05, 1.5915999999997765e-05, 1.595899999999595e-05, 1.5916000000004704e-05, 1.5945000000003318e-05, 1.5943999999996905e-05, 1.5945000000003318e-05, 1.594499999999638e-05]</msg>
<status status="PASS" starttime="20201115 22:03:24.333" endtime="20201115 22:03:24.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.321" endtime="20201115 22:03:24.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.345" endtime="20201115 22:03:24.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:24.354" endtime="20201115 22:03:24.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.349" endtime="20201115 22:03:24.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.340" endtime="20201115 22:03:24.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.818" endtime="20201115 22:03:24.379"></status>
</kw>
<msg timestamp="20201115 22:03:24.380" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.403" endtime="20201115 22:03:24.427"></status>
</kw>
<msg timestamp="20201115 22:03:24.429" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.399" endtime="20201115 22:03:24.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.435" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.431" endtime="20201115 22:03:24.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.437" endtime="20201115 22:03:24.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.392" endtime="20201115 22:03:24.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.386" endtime="20201115 22:03:24.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.461" endtime="20201115 22:03:24.778"></status>
</kw>
<msg timestamp="20201115 22:03:24.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043296569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043312472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.458" endtime="20201115 22:03:24.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043296569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043312472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.789" endtime="20201115 22:03:24.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.807" endtime="20201115 22:03:24.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.450" endtime="20201115 22:03:24.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.446" endtime="20201115 22:03:24.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.827" level="INFO">${RESULT} = [{'time': 0.043312472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.590299999999767e-05, 'source_diff': 1.590299999999767e-05}, {'time': 0.043538014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:24.818" endtime="20201115 22:03:24.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:24.858" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:24.829" endtime="20201115 22:03:24.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.869" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:03:24.866" endtime="20201115 22:03:24.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.874" level="INFO">VALUE: [1.590299999999767e-05, 1.591699999999724e-05, 1.5930000000004274e-05, 1.5944000000003844e-05, 1.5959000000002888e-05, 1.5943999999996905e-05, 1.5985999999995615e-05, 1.5957999999996475e-05, 1.587499999999853e-05, 1.5929999999997335e-05, 1.5944000000003844e-05, 1.594499999999638e-05, 1.597299999999552e-05, 1.5943999999996905e-05, 1.5929999999997335e-05, 1.5943999999996905e-05, 1.5943999999996905e-05, 1.5931000000003748e-05, 1.5999999999995185e-05, 1.5888000000005564e-05, 1.5945000000003318e-05, 1.5931000000003748e-05, 1.591699999999724e-05, 1.5944000000003844e-05, 1.6000000000002124e-05, 1.5986000000002554e-05, 1.5915999999997765e-05, 1.5930000000004274e-05, 1.5917000000004178e-05, 1.593099999999681e-05, 1.5931000000003748e-05, 1.590299999999767e-05, 1.587499999999853e-05, 1.5958000000003414e-05, 1.5945000000003318e-05, 1.593099999999681e-05, 1.5901999999998195e-05, 1.587499999999853e-05, 1.594499999999638e-05, 1.590299999999767e-05, 1.5931000000003748e-05, 1.5959000000002888e-05, 1.586099999999896e-05, 1.5931000000003748e-05, 1.5931000000003748e-05, 1.591699999999724e-05, 1.5944000000003844e-05, 1.5945000000003318e-05, 1.593099999999681e-05, 1.5945000000003318e-05]</msg>
<status status="PASS" starttime="20201115 22:03:24.871" endtime="20201115 22:03:24.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.859" endtime="20201115 22:03:24.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.883" endtime="20201115 22:03:24.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:24.892" endtime="20201115 22:03:24.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.887" endtime="20201115 22:03:24.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.879" endtime="20201115 22:03:24.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.381" endtime="20201115 22:03:24.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.121" endtime="20201115 22:03:24.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.120" endtime="20201115 22:03:24.918"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.923" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.947" endtime="20201115 22:03:24.971"></status>
</kw>
<msg timestamp="20201115 22:03:24.972" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.943" endtime="20201115 22:03:24.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.979" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.975" endtime="20201115 22:03:24.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.981" endtime="20201115 22:03:24.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.936" endtime="20201115 22:03:24.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.930" endtime="20201115 22:03:24.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.006" endtime="20201115 22:03:25.352"></status>
</kw>
<msg timestamp="20201115 22:03:25.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048328056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048344792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.002" endtime="20201115 22:03:25.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048328056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048344792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.362" endtime="20201115 22:03:25.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.380" endtime="20201115 22:03:25.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.995" endtime="20201115 22:03:25.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.990" endtime="20201115 22:03:25.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:25.398" level="INFO">${RESULT} = [{'time': 0.048344792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6735999999996365e-05, 'source_diff': 1.6735999999996365e-05}, {'time': 0.048586347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:25.389" endtime="20201115 22:03:25.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:25.429" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:25.400" endtime="20201115 22:03:25.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.440" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:03:25.438" endtime="20201115 22:03:25.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.446" level="INFO">VALUE: [1.6735999999996365e-05, 1.6750000000002874e-05, 1.6722000000003734e-05, 1.6749999999995935e-05, 1.672299999999627e-05, 1.6792000000001583e-05, 1.6735999999996365e-05, 1.6722000000003734e-05, 1.6735999999996365e-05, 1.6749999999995935e-05, 1.6778000000002014e-05, 1.6723000000003208e-05, 1.6736000000003304e-05, 1.6750000000002874e-05, 1.6750000000002874e-05, 1.672299999999627e-05, 1.6764000000002444e-05, 1.6721999999996795e-05, 1.683300000000082e-05, 1.6749999999995935e-05, 1.6764000000002444e-05, 1.6778000000002014e-05, 1.6750000000002874e-05, 1.6750000000002874e-05, 1.6763999999995505e-05, 1.6736000000003304e-05, 1.6750000000002874e-05, 1.6707999999997225e-05, 1.6735999999996365e-05, 1.6750000000002874e-05, 1.6735999999996365e-05, 1.6735999999996365e-05, 1.6736000000003304e-05, 1.6764000000002444e-05, 1.683300000000082e-05, 1.6750000000002874e-05, 1.6736000000003304e-05, 1.6750000000002874e-05, 1.67089999999967e-05, 1.6764000000002444e-05, 1.6764000000002444e-05, 1.6736000000003304e-05, 1.6750000000002874e-05, 1.6750000000002874e-05, 1.6764000000002444e-05, 1.6749999999995935e-05, 1.6736000000003304e-05, 1.6735999999996365e-05, 1.6764000000002444e-05, 1.6651999999998945e-05]</msg>
<status status="PASS" starttime="20201115 22:03:25.442" endtime="20201115 22:03:25.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.431" endtime="20201115 22:03:25.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.454" endtime="20201115 22:03:25.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:25.463" endtime="20201115 22:03:25.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.458" endtime="20201115 22:03:25.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.450" endtime="20201115 22:03:25.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.925" endtime="20201115 22:03:25.489"></status>
</kw>
<msg timestamp="20201115 22:03:25.489" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.512" endtime="20201115 22:03:25.537"></status>
</kw>
<msg timestamp="20201115 22:03:25.538" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.509" endtime="20201115 22:03:25.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.545" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.540" endtime="20201115 22:03:25.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.547" endtime="20201115 22:03:25.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.502" endtime="20201115 22:03:25.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.496" endtime="20201115 22:03:25.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.573" endtime="20201115 22:03:25.917"></status>
</kw>
<msg timestamp="20201115 22:03:25.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042819708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042836458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.569" endtime="20201115 22:03:25.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042819708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042836458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.926" endtime="20201115 22:03:25.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.945" endtime="20201115 22:03:25.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.561" endtime="20201115 22:03:25.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.556" endtime="20201115 22:03:25.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:25.964" level="INFO">${RESULT} = [{'time': 0.042836458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6750000000002874e-05, 'source_diff': 1.6750000000002874e-05}, {'time': 0.043080319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:25.955" endtime="20201115 22:03:25.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:25.995" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:25.966" endtime="20201115 22:03:25.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.006" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:03:26.004" endtime="20201115 22:03:26.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.011" level="INFO">VALUE: [1.6750000000002874e-05, 1.6749999999995935e-05, 1.6722000000003734e-05, 1.6764000000002444e-05, 1.6722000000003734e-05, 1.6749999999995935e-05, 1.6735999999996365e-05, 1.6722000000003734e-05, 1.6749999999995935e-05, 1.683300000000082e-05, 1.6750000000002874e-05, 1.6763999999995505e-05, 1.6749999999995935e-05, 1.6736000000003304e-05, 1.6735999999996365e-05, 1.6735999999996365e-05, 1.6750000000002874e-05, 1.6679999999998085e-05, 1.6722000000003734e-05, 1.6736000000003304e-05, 1.6709000000003638e-05, 1.6735999999996365e-05, 1.6750000000002874e-05, 1.6735999999996365e-05, 1.6737000000002777e-05, 1.6749999999995935e-05, 1.6749999999995935e-05, 1.6764000000002444e-05, 1.666699999999799e-05, 1.669499999999713e-05, 1.6749999999995935e-05, 1.6764000000002444e-05, 1.6764000000002444e-05, 1.6735999999996365e-05, 1.6764000000002444e-05, 1.676299999999603e-05, 1.6736000000003304e-05, 1.6749999999995935e-05, 1.6721999999996795e-05, 1.6764000000002444e-05, 1.6749999999995935e-05, 1.6764000000002444e-05, 1.6749999999995935e-05, 1.6736000000003304e-05, 1.6721999999996795e-05, 1.672299999999627e-05, 1.6764000000002444e-05, 1.6693999999997655e-05, 1.6735999999996365e-05, 1.669499999999713e-05]</msg>
<status status="PASS" starttime="20201115 22:03:26.008" endtime="20201115 22:03:26.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.996" endtime="20201115 22:03:26.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.020" endtime="20201115 22:03:26.023"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:26.029" endtime="20201115 22:03:26.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.025" endtime="20201115 22:03:26.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.016" endtime="20201115 22:03:26.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.490" endtime="20201115 22:03:26.055"></status>
</kw>
<msg timestamp="20201115 22:03:26.055" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.079" endtime="20201115 22:03:26.105"></status>
</kw>
<msg timestamp="20201115 22:03:26.106" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.076" endtime="20201115 22:03:26.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.112" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.108" endtime="20201115 22:03:26.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.114" endtime="20201115 22:03:26.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.068" endtime="20201115 22:03:26.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.062" endtime="20201115 22:03:26.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.138" endtime="20201115 22:03:26.481"></status>
</kw>
<msg timestamp="20201115 22:03:26.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043854542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043871278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.135" endtime="20201115 22:03:26.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043854542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043871278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.490" endtime="20201115 22:03:26.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.509" endtime="20201115 22:03:26.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.128" endtime="20201115 22:03:26.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.123" endtime="20201115 22:03:26.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:26.528" level="INFO">${RESULT} = [{'time': 0.043871278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6735999999996365e-05, 'source_diff': 1.6735999999996365e-05}, {'time': 0.044118667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:26.519" endtime="20201115 22:03:26.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:26.559" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:26.530" endtime="20201115 22:03:26.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.570" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:03:26.567" endtime="20201115 22:03:26.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.575" level="INFO">VALUE: [1.6735999999996365e-05, 1.6736000000003304e-05, 1.6707999999997225e-05, 1.6693999999997655e-05, 1.6764000000002444e-05, 1.6735999999996365e-05, 1.6735999999996365e-05, 1.6749999999995935e-05, 1.6749999999995935e-05, 1.6764000000002444e-05, 1.6778000000002014e-05, 1.669499999999713e-05, 1.6763999999995505e-05, 1.6750000000002874e-05, 1.6735999999996365e-05, 1.6721999999996795e-05, 1.6778000000002014e-05, 1.6750000000002874e-05, 1.679100000000211e-05, 1.6763999999995505e-05, 1.6735999999996365e-05, 1.6749999999995935e-05, 1.6764000000002444e-05, 1.6721999999996795e-05, 1.6736000000003304e-05, 1.6721999999996795e-05, 1.6764000000002444e-05, 1.6721999999996795e-05, 1.6721999999996795e-05, 1.6736000000003304e-05, 1.6735999999996365e-05, 1.6749999999995935e-05, 1.6708000000004164e-05, 1.6736000000003304e-05, 1.6750000000002874e-05, 1.6750000000002874e-05, 1.6735999999996365e-05, 1.6737000000002777e-05, 1.6735999999996365e-05, 1.668099999999756e-05, 1.6750000000002874e-05, 1.6750000000002874e-05, 1.6723000000003208e-05, 1.6736000000003304e-05, 1.6736000000003304e-05, 1.6736000000003304e-05, 1.6735999999996365e-05, 1.679100000000211e-05, 1.6735999999996365e-05, 1.6721999999996795e-05]</msg>
<status status="PASS" starttime="20201115 22:03:26.572" endtime="20201115 22:03:26.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.561" endtime="20201115 22:03:26.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.584" endtime="20201115 22:03:26.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:26.594" endtime="20201115 22:03:26.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.589" endtime="20201115 22:03:26.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.580" endtime="20201115 22:03:26.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.056" endtime="20201115 22:03:26.626"></status>
</kw>
<msg timestamp="20201115 22:03:26.627" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.651" endtime="20201115 22:03:26.676"></status>
</kw>
<msg timestamp="20201115 22:03:26.678" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.647" endtime="20201115 22:03:26.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.684" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.680" endtime="20201115 22:03:26.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.686" endtime="20201115 22:03:26.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.640" endtime="20201115 22:03:26.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.634" endtime="20201115 22:03:26.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.710" endtime="20201115 22:03:27.054"></status>
</kw>
<msg timestamp="20201115 22:03:27.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050713278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050730028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.707" endtime="20201115 22:03:27.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050713278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050730028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.064" endtime="20201115 22:03:27.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.082" endtime="20201115 22:03:27.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.699" endtime="20201115 22:03:27.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.695" endtime="20201115 22:03:27.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:27.102" level="INFO">${RESULT} = [{'time': 0.050730028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6750000000002874e-05, 'source_diff': 1.6750000000002874e-05}, {'time': 0.050971375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:27.092" endtime="20201115 22:03:27.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:27.132" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:27.104" endtime="20201115 22:03:27.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.144" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:03:27.141" endtime="20201115 22:03:27.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.149" level="INFO">VALUE: [1.6750000000002874e-05, 1.6749999999995935e-05, 1.672299999999627e-05, 1.6749999999995935e-05, 1.6750000000002874e-05, 1.6736000000003304e-05, 1.6763999999995505e-05, 1.6737000000002777e-05, 1.67089999999967e-05, 1.6736000000003304e-05, 1.6763999999995505e-05, 1.673699999999584e-05, 1.6722000000003734e-05, 1.6750000000002874e-05, 1.6736000000003304e-05, 1.6736000000003304e-05, 1.6806000000001153e-05, 1.6750000000002874e-05, 1.6735999999996365e-05, 1.6764000000002444e-05, 1.6736000000003304e-05, 1.6750000000002874e-05, 1.6736000000003304e-05, 1.6736000000003304e-05, 1.6763999999995505e-05, 1.676299999999603e-05, 1.6750000000002874e-05, 1.6749999999995935e-05, 1.6749999999995935e-05, 1.6708000000004164e-05, 1.6735999999996365e-05, 1.6735999999996365e-05, 1.6764000000002444e-05, 1.6735999999996365e-05, 1.6736000000003304e-05, 1.6750000000002874e-05, 1.668099999999756e-05, 1.6763999999995505e-05, 1.6778000000002014e-05, 1.6721999999996795e-05, 1.6750000000002874e-05, 1.6721999999996795e-05, 1.6722000000003734e-05, 1.6735999999996365e-05, 1.6736000000003304e-05, 1.6721999999996795e-05, 1.6763999999995505e-05, 1.6750000000002874e-05, 1.6749999999995935e-05, 1.6750000000009813e-05]</msg>
<status status="PASS" starttime="20201115 22:03:27.146" endtime="20201115 22:03:27.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.134" endtime="20201115 22:03:27.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.159" endtime="20201115 22:03:27.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:27.168" endtime="20201115 22:03:27.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.163" endtime="20201115 22:03:27.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.154" endtime="20201115 22:03:27.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.628" endtime="20201115 22:03:27.193"></status>
</kw>
<msg timestamp="20201115 22:03:27.194" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.217" endtime="20201115 22:03:27.241"></status>
</kw>
<msg timestamp="20201115 22:03:27.243" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.214" endtime="20201115 22:03:27.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.249" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.245" endtime="20201115 22:03:27.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.251" endtime="20201115 22:03:27.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.206" endtime="20201115 22:03:27.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.201" endtime="20201115 22:03:27.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.275" endtime="20201115 22:03:27.617"></status>
</kw>
<msg timestamp="20201115 22:03:27.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043086458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043103264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.271" endtime="20201115 22:03:27.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043086458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043103264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.627" endtime="20201115 22:03:27.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.646" endtime="20201115 22:03:27.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.264" endtime="20201115 22:03:27.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.259" endtime="20201115 22:03:27.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:27.668" level="INFO">${RESULT} = [{'time': 0.043103264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6806000000001153e-05, 'source_diff': 1.6806000000001153e-05}, {'time': 0.043348736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:27.659" endtime="20201115 22:03:27.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:27.699" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:27.670" endtime="20201115 22:03:27.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.710" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:03:27.708" endtime="20201115 22:03:27.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.716" level="INFO">VALUE: [1.6806000000001153e-05, 1.6735999999996365e-05, 1.6764000000002444e-05, 1.673699999999584e-05, 1.6722000000003734e-05, 1.6750000000002874e-05, 1.6736000000003304e-05, 1.6735999999996365e-05, 1.6749999999995935e-05, 1.669499999999713e-05, 1.6749999999995935e-05, 1.666699999999799e-05, 1.6750000000002874e-05, 1.6736000000003304e-05, 1.6750000000002874e-05, 1.6735999999996365e-05, 1.6736000000003304e-05, 1.6749999999995935e-05, 1.6750000000002874e-05, 1.6763999999995505e-05, 1.6749999999995935e-05, 1.6763999999995505e-05, 1.6665999999998515e-05, 1.6750000000002874e-05, 1.6749999999995935e-05, 1.6749999999995935e-05, 1.677700000000254e-05, 1.6736000000003304e-05, 1.6694000000004594e-05, 1.6750000000002874e-05, 1.6737000000002777e-05, 1.6722000000003734e-05, 1.6707999999997225e-05, 1.6777999999995075e-05, 1.6736000000003304e-05, 1.6792000000001583e-05, 1.6749999999995935e-05, 1.6736000000003304e-05, 1.6749999999995935e-05, 1.6721999999996795e-05, 1.6722000000003734e-05, 1.6721999999996795e-05, 1.6707999999997225e-05, 1.6750000000002874e-05, 1.6735999999996365e-05, 1.6750000000002874e-05, 1.6764000000002444e-05, 1.6750000000002874e-05, 1.665299999999842e-05, 1.6749999999995935e-05]</msg>
<status status="PASS" starttime="20201115 22:03:27.713" endtime="20201115 22:03:27.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.701" endtime="20201115 22:03:27.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.726" endtime="20201115 22:03:27.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:27.734" endtime="20201115 22:03:27.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.730" endtime="20201115 22:03:27.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.721" endtime="20201115 22:03:27.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.195" endtime="20201115 22:03:27.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.921" endtime="20201115 22:03:27.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.919" endtime="20201115 22:03:27.761"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.766" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.789" endtime="20201115 22:03:27.815"></status>
</kw>
<msg timestamp="20201115 22:03:27.816" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.786" endtime="20201115 22:03:27.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.822" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.818" endtime="20201115 22:03:27.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.825" endtime="20201115 22:03:27.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.778" endtime="20201115 22:03:27.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.773" endtime="20201115 22:03:27.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.848" endtime="20201115 22:03:28.154"></status>
</kw>
<msg timestamp="20201115 22:03:28.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048402681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04842025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:27.845" endtime="20201115 22:03:28.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048402681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04842025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:28.163" endtime="20201115 22:03:28.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.182" endtime="20201115 22:03:28.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.838" endtime="20201115 22:03:28.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.833" endtime="20201115 22:03:28.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:28.200" level="INFO">${RESULT} = [{'time': 0.04842025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.756899999999506e-05, 'source_diff': 1.756899999999506e-05}, {'time': 0.048674111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:28.190" endtime="20201115 22:03:28.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:28.230" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:28.202" endtime="20201115 22:03:28.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.242" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:03:28.239" endtime="20201115 22:03:28.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.248" level="INFO">VALUE: [1.756899999999506e-05, 1.758300000000157e-05, 1.754100000000286e-05, 1.752699999999635e-05, 1.7542000000002334e-05, 1.7528000000002764e-05, 1.7556000000001903e-05, 1.7556000000001903e-05, 1.7556000000001903e-05, 1.758299999999463e-05, 1.755500000000243e-05, 1.7570000000001473e-05, 1.7556000000001903e-05, 1.7542000000002334e-05, 1.7555999999994965e-05, 1.747299999999702e-05, 1.754100000000286e-05, 1.755500000000243e-05, 1.754099999999592e-05, 1.7542000000002334e-05, 1.7598000000000613e-05, 1.7500000000003624e-05, 1.7569999999994534e-05, 1.7541999999995395e-05, 1.7556000000001903e-05, 1.7499999999996685e-05, 1.756899999999506e-05, 1.754099999999592e-05, 1.755500000000243e-05, 1.7569000000002e-05, 1.7598000000000613e-05, 1.7556000000001903e-05, 1.7500000000003624e-05, 1.7542000000002334e-05, 1.7570000000001473e-05, 1.755499999999549e-05, 1.758300000000157e-05, 1.7542000000002334e-05, 1.755499999999549e-05, 1.758300000000157e-05, 1.758299999999463e-05, 1.7528000000002764e-05, 1.755500000000243e-05, 1.756899999999506e-05, 1.7570000000001473e-05, 1.755500000000243e-05, 1.7569000000002e-05, 1.7471999999997545e-05, 1.7569000000002e-05, 1.755500000000243e-05]</msg>
<status status="PASS" starttime="20201115 22:03:28.244" endtime="20201115 22:03:28.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.232" endtime="20201115 22:03:28.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.257" endtime="20201115 22:03:28.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:28.265" endtime="20201115 22:03:28.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.261" endtime="20201115 22:03:28.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.252" endtime="20201115 22:03:28.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.767" endtime="20201115 22:03:28.291"></status>
</kw>
<msg timestamp="20201115 22:03:28.291" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.315" endtime="20201115 22:03:28.340"></status>
</kw>
<msg timestamp="20201115 22:03:28.341" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.311" endtime="20201115 22:03:28.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.348" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.344" endtime="20201115 22:03:28.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.350" endtime="20201115 22:03:28.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.304" endtime="20201115 22:03:28.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.298" endtime="20201115 22:03:28.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.374" endtime="20201115 22:03:28.717"></status>
</kw>
<msg timestamp="20201115 22:03:28.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042938333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042955875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.370" endtime="20201115 22:03:28.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042938333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042955875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.727" endtime="20201115 22:03:28.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.746" endtime="20201115 22:03:28.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.363" endtime="20201115 22:03:28.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.358" endtime="20201115 22:03:28.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:28.765" level="INFO">${RESULT} = [{'time': 0.042955875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7541999999995395e-05, 'source_diff': 1.7541999999995395e-05}, {'time': 0.043219722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:28.756" endtime="20201115 22:03:28.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:28.796" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:28.767" endtime="20201115 22:03:28.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.808" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:03:28.805" endtime="20201115 22:03:28.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.813" level="INFO">VALUE: [1.7541999999995395e-05, 1.754100000000286e-05, 1.7556000000001903e-05, 1.755500000000243e-05, 1.755499999999549e-05, 1.754100000000286e-05, 1.7556000000001903e-05, 1.7528000000002764e-05, 1.754100000000286e-05, 1.7584000000001043e-05, 1.754100000000286e-05, 1.7584000000001043e-05, 1.755499999999549e-05, 1.755500000000243e-05, 1.761100000000071e-05, 1.7514000000003194e-05, 1.7541999999995395e-05, 1.7556000000001903e-05, 1.754099999999592e-05, 1.7556000000001903e-05, 1.755499999999549e-05, 1.7584000000001043e-05, 1.7556000000001903e-05, 1.7541999999995395e-05, 1.7570000000001473e-05, 1.754100000000286e-05, 1.7598000000000613e-05, 1.759700000000114e-05, 1.7584000000001043e-05, 1.7542000000002334e-05, 1.7555999999994965e-05, 1.7542000000002334e-05, 1.7569000000002e-05, 1.7556000000001903e-05, 1.755500000000243e-05, 1.7513999999996255e-05, 1.754100000000286e-05, 1.752700000000329e-05, 1.759700000000114e-05, 1.7542000000002334e-05, 1.755500000000243e-05, 1.7542000000002334e-05, 1.7555999999994965e-05, 1.758300000000157e-05, 1.7569999999994534e-05, 1.7541999999995395e-05, 1.7555999999994965e-05, 1.7569000000002e-05, 1.7499999999996685e-05, 1.7556000000001903e-05]</msg>
<status status="PASS" starttime="20201115 22:03:28.810" endtime="20201115 22:03:28.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.798" endtime="20201115 22:03:28.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.822" endtime="20201115 22:03:28.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:28.831" endtime="20201115 22:03:28.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.826" endtime="20201115 22:03:28.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.818" endtime="20201115 22:03:28.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.293" endtime="20201115 22:03:28.856"></status>
</kw>
<msg timestamp="20201115 22:03:28.857" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.880" endtime="20201115 22:03:28.906"></status>
</kw>
<msg timestamp="20201115 22:03:28.907" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.877" endtime="20201115 22:03:28.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.913" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.909" endtime="20201115 22:03:28.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.916" endtime="20201115 22:03:28.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.870" endtime="20201115 22:03:28.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.864" endtime="20201115 22:03:28.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.939" endtime="20201115 22:03:29.282"></status>
</kw>
<msg timestamp="20201115 22:03:29.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042986292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043003875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.936" endtime="20201115 22:03:29.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042986292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043003875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.291" endtime="20201115 22:03:29.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.309" endtime="20201115 22:03:29.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.929" endtime="20201115 22:03:29.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.924" endtime="20201115 22:03:29.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:29.329" level="INFO">${RESULT} = [{'time': 0.043003875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.758299999999463e-05, 'source_diff': 1.758299999999463e-05}, {'time': 0.043269181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:29.320" endtime="20201115 22:03:29.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:29.360" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:29.332" endtime="20201115 22:03:29.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.371" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:03:29.369" endtime="20201115 22:03:29.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.377" level="INFO">VALUE: [1.758299999999463e-05, 1.7583999999994104e-05, 1.7584000000001043e-05, 1.7500000000003624e-05, 1.755500000000243e-05, 1.754100000000286e-05, 1.7556000000001903e-05, 1.7541999999995395e-05, 1.7570000000001473e-05, 1.755499999999549e-05, 1.755499999999549e-05, 1.7500000000003624e-05, 1.7597999999993674e-05, 1.7541999999995395e-05, 1.7528000000002764e-05, 1.7541999999995395e-05, 1.754100000000286e-05, 1.7556000000001903e-05, 1.7541999999995395e-05, 1.758300000000157e-05, 1.762500000000028e-05, 1.7542000000002334e-05, 1.7513999999996255e-05, 1.7541999999995395e-05, 1.759700000000114e-05, 1.7542000000002334e-05, 1.761100000000071e-05, 1.754100000000286e-05, 1.7542000000002334e-05, 1.755500000000243e-05, 1.7569000000002e-05, 1.7500000000003624e-05, 1.7556000000001903e-05, 1.754100000000286e-05, 1.755500000000243e-05, 1.7542000000002334e-05, 1.7542000000002334e-05, 1.7528000000002764e-05, 1.756899999999506e-05, 1.755499999999549e-05, 1.7569000000002e-05, 1.7570000000001473e-05, 1.7542000000002334e-05, 1.7569000000002e-05, 1.754099999999592e-05, 1.7542000000002334e-05, 1.758300000000157e-05, 1.7569000000002e-05, 1.7556000000001903e-05, 1.756899999999506e-05]</msg>
<status status="PASS" starttime="20201115 22:03:29.373" endtime="20201115 22:03:29.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.362" endtime="20201115 22:03:29.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.386" endtime="20201115 22:03:29.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:29.394" endtime="20201115 22:03:29.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.390" endtime="20201115 22:03:29.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.381" endtime="20201115 22:03:29.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.858" endtime="20201115 22:03:29.420"></status>
</kw>
<msg timestamp="20201115 22:03:29.420" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.444" endtime="20201115 22:03:29.470"></status>
</kw>
<msg timestamp="20201115 22:03:29.471" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.440" endtime="20201115 22:03:29.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.477" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.473" endtime="20201115 22:03:29.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.480" endtime="20201115 22:03:29.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.433" endtime="20201115 22:03:29.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.427" endtime="20201115 22:03:29.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.503" endtime="20201115 22:03:29.845"></status>
</kw>
<msg timestamp="20201115 22:03:29.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043033403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043050944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.500" endtime="20201115 22:03:29.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043033403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043050944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.854" endtime="20201115 22:03:29.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.873" endtime="20201115 22:03:29.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.493" endtime="20201115 22:03:29.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.488" endtime="20201115 22:03:29.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:29.895" level="INFO">${RESULT} = [{'time': 0.043050944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.754100000000286e-05, 'source_diff': 1.754100000000286e-05}, {'time': 0.043315014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:29.886" endtime="20201115 22:03:29.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:29.925" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:29.897" endtime="20201115 22:03:29.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.936" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:03:29.934" endtime="20201115 22:03:29.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.942" level="INFO">VALUE: [1.754100000000286e-05, 1.7570000000001473e-05, 1.7541999999995395e-05, 1.7527999999995825e-05, 1.7528000000002764e-05, 1.7527999999995825e-05, 1.7542000000002334e-05, 1.758300000000157e-05, 1.755500000000243e-05, 1.754100000000286e-05, 1.7542000000002334e-05, 1.755500000000243e-05, 1.7528000000002764e-05, 1.755500000000243e-05, 1.751299999999678e-05, 1.754099999999592e-05, 1.7555999999994965e-05, 1.7514000000003194e-05, 1.7542000000002334e-05, 1.755499999999549e-05, 1.7556000000001903e-05, 1.7542000000002334e-05, 1.7555999999994965e-05, 1.7528000000002764e-05, 1.7542000000002334e-05, 1.755500000000243e-05, 1.7542000000002334e-05, 1.7570000000001473e-05, 1.7569000000002e-05, 1.758300000000157e-05, 1.758300000000157e-05, 1.7500000000003624e-05, 1.7541999999995395e-05, 1.754100000000286e-05, 1.7569000000002e-05, 1.754099999999592e-05, 1.7555999999994965e-05, 1.754100000000286e-05, 1.7541999999995395e-05, 1.7542000000002334e-05, 1.755499999999549e-05, 1.7514000000003194e-05, 1.7556000000001903e-05, 1.7542000000002334e-05, 1.755500000000243e-05, 1.755499999999549e-05, 1.7541999999995395e-05, 1.7541999999995395e-05, 1.755500000000243e-05, 1.7555999999994965e-05]</msg>
<status status="PASS" starttime="20201115 22:03:29.939" endtime="20201115 22:03:29.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.927" endtime="20201115 22:03:29.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.951" endtime="20201115 22:03:29.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:29.959" endtime="20201115 22:03:29.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.955" endtime="20201115 22:03:29.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.946" endtime="20201115 22:03:29.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.421" endtime="20201115 22:03:29.985"></status>
</kw>
<msg timestamp="20201115 22:03:29.986" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.009" endtime="20201115 22:03:30.035"></status>
</kw>
<msg timestamp="20201115 22:03:30.037" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.006" endtime="20201115 22:03:30.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.043" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.039" endtime="20201115 22:03:30.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.045" endtime="20201115 22:03:30.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.998" endtime="20201115 22:03:30.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.992" endtime="20201115 22:03:30.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.069" endtime="20201115 22:03:30.411"></status>
</kw>
<msg timestamp="20201115 22:03:30.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043334181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043351722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.066" endtime="20201115 22:03:30.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043334181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043351722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.421" endtime="20201115 22:03:30.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.440" endtime="20201115 22:03:30.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.058" endtime="20201115 22:03:30.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.054" endtime="20201115 22:03:30.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:30.459" level="INFO">${RESULT} = [{'time': 0.043351722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.754100000000286e-05, 'source_diff': 1.754100000000286e-05}, {'time': 0.043618486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:30.450" endtime="20201115 22:03:30.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:30.490" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:30.462" endtime="20201115 22:03:30.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.501" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:03:30.499" endtime="20201115 22:03:30.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.507" level="INFO">VALUE: [1.754100000000286e-05, 1.7541999999995395e-05, 1.755500000000243e-05, 1.7527999999995825e-05, 1.754100000000286e-05, 1.7528000000002764e-05, 1.7556000000001903e-05, 1.751299999999678e-05, 1.747299999999702e-05, 1.7541999999995395e-05, 1.7542000000002334e-05, 1.754099999999592e-05, 1.7569000000002e-05, 1.7570000000001473e-05, 1.7556000000001903e-05, 1.755500000000243e-05, 1.755500000000243e-05, 1.7541999999995395e-05, 1.7556000000001903e-05, 1.7556000000001903e-05, 1.7528000000002764e-05, 1.7556000000001903e-05, 1.7528000000002764e-05, 1.7542000000002334e-05, 1.755500000000243e-05, 1.7583999999994104e-05, 1.761100000000071e-05, 1.7556000000001903e-05, 1.7556000000001903e-05, 1.7556000000001903e-05, 1.754100000000286e-05, 1.7500000000003624e-05, 1.7556000000001903e-05, 1.7542000000002334e-05, 1.7555999999994965e-05, 1.7542000000002334e-05, 1.754099999999592e-05, 1.7542000000002334e-05, 1.755500000000243e-05, 1.7542000000002334e-05, 1.7500000000003624e-05, 1.752700000000329e-05, 1.7541999999995395e-05, 1.7528000000002764e-05, 1.7499999999996685e-05, 1.7542000000002334e-05, 1.759700000000114e-05, 1.755499999999549e-05, 1.7542000000002334e-05, 1.754099999999592e-05]</msg>
<status status="PASS" starttime="20201115 22:03:30.504" endtime="20201115 22:03:30.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.492" endtime="20201115 22:03:30.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.516" endtime="20201115 22:03:30.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:30.524" endtime="20201115 22:03:30.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.520" endtime="20201115 22:03:30.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.511" endtime="20201115 22:03:30.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.987" endtime="20201115 22:03:30.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.764" endtime="20201115 22:03:30.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.762" endtime="20201115 22:03:30.551"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.556" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.579" endtime="20201115 22:03:30.606"></status>
</kw>
<msg timestamp="20201115 22:03:30.607" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.576" endtime="20201115 22:03:30.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.614" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.610" endtime="20201115 22:03:30.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.616" endtime="20201115 22:03:30.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.569" endtime="20201115 22:03:30.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.563" endtime="20201115 22:03:30.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.641" endtime="20201115 22:03:30.986"></status>
</kw>
<msg timestamp="20201115 22:03:30.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048534264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048552625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.637" endtime="20201115 22:03:30.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048534264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048552625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.995" endtime="20201115 22:03:31.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.014" endtime="20201115 22:03:31.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.630" endtime="20201115 22:03:31.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.625" endtime="20201115 22:03:31.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:31.031" level="INFO">${RESULT} = [{'time': 0.048552625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.836100000000146e-05, 'source_diff': 1.836100000000146e-05}, {'time': 0.048832847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:31.022" endtime="20201115 22:03:31.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:31.062" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:31.034" endtime="20201115 22:03:31.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.074" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:03:31.071" endtime="20201115 22:03:31.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.079" level="INFO">VALUE: [1.836100000000146e-05, 1.834700000000189e-05, 1.834700000000189e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.837499999999409e-05, 1.837500000000103e-05, 1.838899999999366e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.834699999999495e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.844499999999888e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.831900000000275e-05, 1.833299999999538e-05, 1.833300000000232e-05, 1.834700000000189e-05, 1.834700000000189e-05, 1.836100000000146e-05, 1.833299999999538e-05, 1.83890000000006e-05, 1.8362000000000933e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.8362000000000933e-05, 1.836100000000146e-05, 1.833300000000232e-05, 1.833300000000232e-05, 1.834699999999495e-05, 1.836099999999452e-05, 1.834700000000189e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.838899999999366e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.8319999999995285e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.834700000000189e-05, 1.834700000000189e-05, 1.836100000000146e-05]</msg>
<status status="PASS" starttime="20201115 22:03:31.076" endtime="20201115 22:03:31.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.064" endtime="20201115 22:03:31.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.088" endtime="20201115 22:03:31.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:31.097" endtime="20201115 22:03:31.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.092" endtime="20201115 22:03:31.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.084" endtime="20201115 22:03:31.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.557" endtime="20201115 22:03:31.122"></status>
</kw>
<msg timestamp="20201115 22:03:31.123" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.146" endtime="20201115 22:03:31.173"></status>
</kw>
<msg timestamp="20201115 22:03:31.174" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.143" endtime="20201115 22:03:31.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.181" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.177" endtime="20201115 22:03:31.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.184" endtime="20201115 22:03:31.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.136" endtime="20201115 22:03:31.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.130" endtime="20201115 22:03:31.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.208" endtime="20201115 22:03:31.531"></status>
</kw>
<msg timestamp="20201115 22:03:31.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043071125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043089472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.204" endtime="20201115 22:03:31.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043071125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043089472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.541" endtime="20201115 22:03:31.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.559" endtime="20201115 22:03:31.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.197" endtime="20201115 22:03:31.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.192" endtime="20201115 22:03:31.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:31.579" level="INFO">${RESULT} = [{'time': 0.043089472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.834699999999495e-05, 'source_diff': 1.834699999999495e-05}, {'time': 0.043368681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:31.570" endtime="20201115 22:03:31.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:31.609" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:31.581" endtime="20201115 22:03:31.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.621" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:03:31.618" endtime="20201115 22:03:31.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.626" level="INFO">VALUE: [1.834699999999495e-05, 1.8334000000001793e-05, 1.833299999999538e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.840300000000017e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.841699999999974e-05, 1.8362000000000933e-05, 1.834700000000189e-05, 1.834700000000189e-05, 1.833300000000232e-05, 1.836099999999452e-05, 1.833299999999538e-05, 1.829099999999667e-05, 1.833300000000232e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.834700000000189e-05, 1.834699999999495e-05, 1.834700000000189e-05, 1.8388000000001126e-05, 1.8431000000006248e-05, 1.8347999999994424e-05, 1.834699999999495e-05, 1.831900000000275e-05, 1.841699999999974e-05, 1.837500000000103e-05, 1.8334000000001793e-05, 1.8347999999994424e-05, 1.836099999999452e-05, 1.834700000000189e-05, 1.834699999999495e-05, 1.8362000000000933e-05, 1.8348000000001363e-05, 1.836100000000146e-05, 1.8416000000000265e-05, 1.837500000000103e-05, 1.841699999999974e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.833300000000232e-05, 1.843099999999931e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.837500000000103e-05]</msg>
<status status="PASS" starttime="20201115 22:03:31.623" endtime="20201115 22:03:31.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.611" endtime="20201115 22:03:31.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.635" endtime="20201115 22:03:31.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:31.644" endtime="20201115 22:03:31.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.639" endtime="20201115 22:03:31.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.631" endtime="20201115 22:03:31.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.124" endtime="20201115 22:03:31.669"></status>
</kw>
<msg timestamp="20201115 22:03:31.670" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.700" endtime="20201115 22:03:31.727"></status>
</kw>
<msg timestamp="20201115 22:03:31.728" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.690" endtime="20201115 22:03:31.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.734" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.730" endtime="20201115 22:03:31.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.736" endtime="20201115 22:03:31.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.683" endtime="20201115 22:03:31.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.677" endtime="20201115 22:03:31.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.761" endtime="20201115 22:03:32.104"></status>
</kw>
<msg timestamp="20201115 22:03:32.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04963675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049655097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:31.757" endtime="20201115 22:03:32.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04963675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049655097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:32.114" endtime="20201115 22:03:32.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.132" endtime="20201115 22:03:32.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.750" endtime="20201115 22:03:32.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.745" endtime="20201115 22:03:32.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:32.154" level="INFO">${RESULT} = [{'time': 0.049655097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.834700000000189e-05, 'source_diff': 1.834700000000189e-05}, {'time': 0.049932042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:32.145" endtime="20201115 22:03:32.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:32.184" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:32.156" endtime="20201115 22:03:32.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.195" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:03:32.193" endtime="20201115 22:03:32.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.201" level="INFO">VALUE: [1.834700000000189e-05, 1.840300000000017e-05, 1.834700000000189e-05, 1.836099999999452e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.8362000000000933e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.830500000000318e-05, 1.8264000000003944e-05, 1.836100000000146e-05, 1.833299999999538e-05, 1.83890000000006e-05, 1.834700000000189e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.834700000000189e-05, 1.834700000000189e-05, 1.833299999999538e-05, 1.834699999999495e-05, 1.834700000000189e-05, 1.834700000000189e-05, 1.836099999999452e-05, 1.834700000000189e-05, 1.829100000000361e-05, 1.834699999999495e-05, 1.837500000000103e-05, 1.836099999999452e-05, 1.834700000000189e-05, 1.836100000000146e-05, 1.834700000000189e-05, 1.834699999999495e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.834700000000189e-05, 1.836099999999452e-05, 1.837500000000103e-05, 1.8361999999993994e-05, 1.8334000000008732e-05, 1.833299999999538e-05, 1.834700000000189e-05]</msg>
<status status="PASS" starttime="20201115 22:03:32.198" endtime="20201115 22:03:32.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.186" endtime="20201115 22:03:32.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.210" endtime="20201115 22:03:32.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:32.218" endtime="20201115 22:03:32.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.214" endtime="20201115 22:03:32.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.205" endtime="20201115 22:03:32.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.671" endtime="20201115 22:03:32.244"></status>
</kw>
<msg timestamp="20201115 22:03:32.245" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.268" endtime="20201115 22:03:32.295"></status>
</kw>
<msg timestamp="20201115 22:03:32.296" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.265" endtime="20201115 22:03:32.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.302" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.298" endtime="20201115 22:03:32.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.305" endtime="20201115 22:03:32.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.257" endtime="20201115 22:03:32.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.252" endtime="20201115 22:03:32.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.329" endtime="20201115 22:03:32.672"></status>
</kw>
<msg timestamp="20201115 22:03:32.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043701806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043720236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.325" endtime="20201115 22:03:32.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043701806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043720236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.681" endtime="20201115 22:03:32.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.700" endtime="20201115 22:03:32.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.318" endtime="20201115 22:03:32.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.313" endtime="20201115 22:03:32.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:32.719" level="INFO">${RESULT} = [{'time': 0.043720236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8429999999999835e-05, 'source_diff': 1.8429999999999835e-05}, {'time': 0.043994972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:32.710" endtime="20201115 22:03:32.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:32.750" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:32.722" endtime="20201115 22:03:32.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.762" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:03:32.759" endtime="20201115 22:03:32.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.767" level="INFO">VALUE: [1.8429999999999835e-05, 1.834700000000189e-05, 1.841699999999974e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.8362000000000933e-05, 1.8348000000001363e-05, 1.834700000000189e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.834700000000189e-05, 1.8348000000001363e-05, 1.834700000000189e-05, 1.836100000000146e-05, 1.8429999999999835e-05, 1.836100000000146e-05, 1.834700000000189e-05, 1.8348000000001363e-05, 1.8334000000001793e-05, 1.834700000000189e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.830499999999624e-05, 1.836100000000146e-05, 1.83890000000006e-05, 1.837499999999409e-05, 1.834700000000189e-05, 1.836100000000146e-05, 1.834700000000189e-05, 1.834699999999495e-05, 1.833299999999538e-05, 1.833300000000232e-05, 1.831900000000275e-05, 1.836100000000146e-05, 1.8320000000002223e-05, 1.833300000000232e-05, 1.834700000000189e-05, 1.8347999999994424e-05, 1.834700000000189e-05, 1.834700000000189e-05, 1.836099999999452e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.831899999999581e-05, 1.8348000000001363e-05, 1.834700000000189e-05, 1.834700000000189e-05, 1.836100000000146e-05, 1.8334000000001793e-05]</msg>
<status status="PASS" starttime="20201115 22:03:32.764" endtime="20201115 22:03:32.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.752" endtime="20201115 22:03:32.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.776" endtime="20201115 22:03:32.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:32.785" endtime="20201115 22:03:32.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.781" endtime="20201115 22:03:32.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.771" endtime="20201115 22:03:32.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.246" endtime="20201115 22:03:32.811"></status>
</kw>
<msg timestamp="20201115 22:03:32.812" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.836" endtime="20201115 22:03:32.862"></status>
</kw>
<msg timestamp="20201115 22:03:32.863" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.833" endtime="20201115 22:03:32.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.870" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.866" endtime="20201115 22:03:32.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.872" endtime="20201115 22:03:32.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.825" endtime="20201115 22:03:32.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.819" endtime="20201115 22:03:32.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.896" endtime="20201115 22:03:33.239"></status>
</kw>
<msg timestamp="20201115 22:03:33.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044411736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044430097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.892" endtime="20201115 22:03:33.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044411736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044430097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:33.248" endtime="20201115 22:03:33.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.267" endtime="20201115 22:03:33.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.885" endtime="20201115 22:03:33.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.880" endtime="20201115 22:03:33.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:33.286" level="INFO">${RESULT} = [{'time': 0.044430097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.836100000000146e-05, 'source_diff': 1.836100000000146e-05}, {'time': 0.044705125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:33.277" endtime="20201115 22:03:33.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:33.317" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:33.288" endtime="20201115 22:03:33.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.328" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:03:33.326" endtime="20201115 22:03:33.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.333" level="INFO">VALUE: [1.836100000000146e-05, 1.836100000000146e-05, 1.834699999999495e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.8348000000001363e-05, 1.833300000000232e-05, 1.834700000000189e-05, 1.834700000000189e-05, 1.8334000000001793e-05, 1.8388000000001126e-05, 1.836100000000146e-05, 1.8334000000001793e-05, 1.8334000000001793e-05, 1.834699999999495e-05, 1.836100000000146e-05, 1.834700000000189e-05, 1.83890000000006e-05, 1.833299999999538e-05, 1.834699999999495e-05, 1.8334000000001793e-05, 1.8348000000001363e-05, 1.836099999999452e-05, 1.830500000000318e-05, 1.843099999999931e-05, 1.836099999999452e-05, 1.8348000000001363e-05, 1.837500000000103e-05, 1.836099999999452e-05, 1.829099999999667e-05, 1.834700000000189e-05, 1.82769999999971e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.83890000000006e-05, 1.8416000000000265e-05, 1.836100000000146e-05, 1.8333999999994854e-05, 1.8348000000001363e-05, 1.834700000000189e-05, 1.837500000000103e-05, 1.8362000000000933e-05, 1.833300000000232e-05, 1.8334000000001793e-05, 1.8333999999994854e-05, 1.8348000000001363e-05, 1.8334000000001793e-05, 1.8348000000001363e-05]</msg>
<status status="PASS" starttime="20201115 22:03:33.330" endtime="20201115 22:03:33.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.319" endtime="20201115 22:03:33.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.343" endtime="20201115 22:03:33.346"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:33.352" endtime="20201115 22:03:33.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.347" endtime="20201115 22:03:33.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.338" endtime="20201115 22:03:33.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.813" endtime="20201115 22:03:33.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.554" endtime="20201115 22:03:33.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.552" endtime="20201115 22:03:33.378"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.384" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.407" endtime="20201115 22:03:33.435"></status>
</kw>
<msg timestamp="20201115 22:03:33.436" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:33.404" endtime="20201115 22:03:33.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.442" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:33.438" endtime="20201115 22:03:33.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.445" endtime="20201115 22:03:33.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.396" endtime="20201115 22:03:33.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.390" endtime="20201115 22:03:33.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.469" endtime="20201115 22:03:33.813"></status>
</kw>
<msg timestamp="20201115 22:03:33.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049220972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049240139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:33.465" endtime="20201115 22:03:33.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049220972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049240139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:33.822" endtime="20201115 22:03:33.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.841" endtime="20201115 22:03:33.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.458" endtime="20201115 22:03:33.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.453" endtime="20201115 22:03:33.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:33.860" level="INFO">${RESULT} = [{'time': 0.049240139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.916700000000049e-05, 'source_diff': 1.916700000000049e-05}, {'time': 0.049535722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:33.850" endtime="20201115 22:03:33.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:33.891" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:33.862" endtime="20201115 22:03:33.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.902" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:03:33.900" endtime="20201115 22:03:33.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.909" level="INFO">VALUE: [1.916700000000049e-05, 1.9165999999994077e-05, 1.9152000000001446e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.9221999999999295e-05, 1.916700000000049e-05, 1.912500000000178e-05, 1.915300000000092e-05, 1.9083999999995604e-05, 1.9152000000001446e-05, 1.916700000000049e-05, 1.9166000000001016e-05, 1.918100000000006e-05, 1.916700000000049e-05, 1.918100000000006e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.912500000000178e-05, 1.916700000000049e-05, 1.9152000000001446e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.9166000000001016e-05, 1.918100000000006e-05, 1.911100000000221e-05, 1.912500000000178e-05, 1.916700000000049e-05, 1.915299999999398e-05, 1.913900000000135e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.9165999999994077e-05, 1.918100000000006e-05, 1.915300000000092e-05, 1.915299999999398e-05, 1.918100000000006e-05, 1.916700000000049e-05, 1.918100000000006e-05, 1.9166000000001016e-05, 1.9165999999994077e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.918100000000006e-05, 1.9194000000000155e-05, 1.9153000000007858e-05, 1.913900000000135e-05, 1.916700000000049e-05, 1.915299999999398e-05]</msg>
<status status="PASS" starttime="20201115 22:03:33.905" endtime="20201115 22:03:33.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.893" endtime="20201115 22:03:33.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.918" endtime="20201115 22:03:33.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:33.926" endtime="20201115 22:03:33.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.922" endtime="20201115 22:03:33.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.913" endtime="20201115 22:03:33.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.385" endtime="20201115 22:03:33.952"></status>
</kw>
<msg timestamp="20201115 22:03:33.952" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.976" endtime="20201115 22:03:34.003"></status>
</kw>
<msg timestamp="20201115 22:03:34.004" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:33.972" endtime="20201115 22:03:34.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.010" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:34.006" endtime="20201115 22:03:34.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.013" endtime="20201115 22:03:34.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.965" endtime="20201115 22:03:34.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.959" endtime="20201115 22:03:34.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.036" endtime="20201115 22:03:34.380"></status>
</kw>
<msg timestamp="20201115 22:03:34.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043070153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043089347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:34.033" endtime="20201115 22:03:34.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043070153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043089347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:34.390" endtime="20201115 22:03:34.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.408" endtime="20201115 22:03:34.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.026" endtime="20201115 22:03:34.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.021" endtime="20201115 22:03:34.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:34.430" level="INFO">${RESULT} = [{'time': 0.043089347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9194000000000155e-05, 'source_diff': 1.9194000000000155e-05}, {'time': 0.043389264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:34.420" endtime="20201115 22:03:34.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:34.460" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:34.432" endtime="20201115 22:03:34.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.472" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:03:34.469" endtime="20201115 22:03:34.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.477" level="INFO">VALUE: [1.9194000000000155e-05, 1.915299999999398e-05, 1.915300000000092e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.9180000000000585e-05, 1.9166000000001016e-05, 1.913900000000135e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.913900000000135e-05, 1.915300000000092e-05, 1.9180000000000585e-05, 1.915300000000092e-05, 1.918100000000006e-05, 1.919499999999963e-05, 1.9194000000000155e-05, 1.9152000000001446e-05, 1.916700000000049e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.9207999999999725e-05, 1.9152000000001446e-05, 1.9180000000000585e-05, 1.915300000000092e-05, 1.9180000000000585e-05, 1.916700000000049e-05, 1.9151999999994507e-05, 1.915300000000092e-05, 1.9152000000001446e-05, 1.918100000000006e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.9151999999994507e-05, 1.916700000000049e-05, 1.913900000000135e-05, 1.915300000000092e-05, 1.92089999999992e-05, 1.913900000000135e-05, 1.9152000000001446e-05, 1.9207999999999725e-05, 1.913900000000135e-05, 1.916700000000049e-05]</msg>
<status status="PASS" starttime="20201115 22:03:34.474" endtime="20201115 22:03:34.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.463" endtime="20201115 22:03:34.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.486" endtime="20201115 22:03:34.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:34.495" endtime="20201115 22:03:34.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.490" endtime="20201115 22:03:34.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.482" endtime="20201115 22:03:34.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.954" endtime="20201115 22:03:34.520"></status>
</kw>
<msg timestamp="20201115 22:03:34.521" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.544" endtime="20201115 22:03:34.571"></status>
</kw>
<msg timestamp="20201115 22:03:34.573" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:34.541" endtime="20201115 22:03:34.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.579" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:34.575" endtime="20201115 22:03:34.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.581" endtime="20201115 22:03:34.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.533" endtime="20201115 22:03:34.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.528" endtime="20201115 22:03:34.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.605" endtime="20201115 22:03:34.907"></status>
</kw>
<msg timestamp="20201115 22:03:34.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042951278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042970417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:34.602" endtime="20201115 22:03:34.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042951278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042970417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:34.917" endtime="20201115 22:03:34.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.935" endtime="20201115 22:03:34.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.594" endtime="20201115 22:03:34.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.589" endtime="20201115 22:03:34.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:34.955" level="INFO">${RESULT} = [{'time': 0.042970417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.913899999999441e-05, 'source_diff': 1.913899999999441e-05}, {'time': 0.043271625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:34.945" endtime="20201115 22:03:34.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:34.986" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:34.957" endtime="20201115 22:03:34.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.997" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:03:34.995" endtime="20201115 22:03:34.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.003" level="INFO">VALUE: [1.913899999999441e-05, 1.915300000000092e-05, 1.9166000000001016e-05, 1.918100000000006e-05, 1.919499999999963e-05, 1.916700000000049e-05, 1.918100000000006e-05, 1.915300000000092e-05, 1.915300000000092e-05, 1.9166000000001016e-05, 1.92089999999992e-05, 1.915300000000092e-05, 1.9152000000001446e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.9166000000001016e-05, 1.90969999999957e-05, 1.916699999999355e-05, 1.9209000000006138e-05, 1.9207999999999725e-05, 1.911100000000221e-05, 1.913900000000135e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.922299999999877e-05, 1.9194000000000155e-05, 1.915300000000092e-05, 1.9152000000001446e-05, 1.919499999999963e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.9152000000001446e-05, 1.918100000000006e-05, 1.916700000000049e-05, 1.9207999999999725e-05, 1.918100000000006e-05, 1.9151999999994507e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.912500000000178e-05, 1.9166000000001016e-05, 1.9138000000001876e-05, 1.913900000000135e-05, 1.916700000000049e-05, 1.912500000000178e-05, 1.913900000000135e-05, 1.908299999999613e-05, 1.919499999999963e-05, 1.913900000000135e-05]</msg>
<status status="PASS" starttime="20201115 22:03:34.999" endtime="20201115 22:03:35.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.988" endtime="20201115 22:03:35.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.012" endtime="20201115 22:03:35.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:35.020" endtime="20201115 22:03:35.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.016" endtime="20201115 22:03:35.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.007" endtime="20201115 22:03:35.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.522" endtime="20201115 22:03:35.046"></status>
</kw>
<msg timestamp="20201115 22:03:35.046" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.070" endtime="20201115 22:03:35.098"></status>
</kw>
<msg timestamp="20201115 22:03:35.099" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:35.066" endtime="20201115 22:03:35.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.105" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:35.101" endtime="20201115 22:03:35.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.108" endtime="20201115 22:03:35.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.059" endtime="20201115 22:03:35.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.053" endtime="20201115 22:03:35.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.131" endtime="20201115 22:03:35.475"></status>
</kw>
<msg timestamp="20201115 22:03:35.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043090958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043110111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:35.128" endtime="20201115 22:03:35.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043090958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043110111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:35.484" endtime="20201115 22:03:35.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.504" endtime="20201115 22:03:35.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.121" endtime="20201115 22:03:35.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.116" endtime="20201115 22:03:35.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:35.523" level="INFO">${RESULT} = [{'time': 0.043110111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915300000000092e-05, 'source_diff': 1.915300000000092e-05}, {'time': 0.043402972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:35.514" endtime="20201115 22:03:35.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:35.554" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:35.525" endtime="20201115 22:03:35.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.565" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:03:35.562" endtime="20201115 22:03:35.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.570" level="INFO">VALUE: [1.915300000000092e-05, 1.9166000000001016e-05, 1.916700000000049e-05, 1.9180000000000585e-05, 1.9221999999999295e-05, 1.9180000000000585e-05, 1.9166000000001016e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.9194000000000155e-05, 1.9194000000000155e-05, 1.923699999999834e-05, 1.9180000000000585e-05, 1.913900000000135e-05, 1.9166000000001016e-05, 1.918100000000006e-05, 1.92089999999992e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.911100000000221e-05, 1.913900000000135e-05, 1.916700000000049e-05, 1.9166000000001016e-05, 1.9194000000000155e-05, 1.9166000000001016e-05, 1.915300000000092e-05, 1.916699999999355e-05, 1.9152000000001446e-05, 1.915300000000092e-05, 1.9179999999993647e-05, 1.909700000000264e-05, 1.9152000000001446e-05, 1.915300000000092e-05, 1.923699999999834e-05, 1.909700000000264e-05, 1.916700000000049e-05, 1.9165999999994077e-05, 1.916700000000049e-05, 1.9165999999994077e-05, 1.915300000000092e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.9152000000001446e-05, 1.915300000000092e-05, 1.9166000000001016e-05, 1.9166000000001016e-05, 1.916699999999355e-05, 1.9152000000001446e-05, 1.9166000000001016e-05, 1.9138000000001876e-05]</msg>
<status status="PASS" starttime="20201115 22:03:35.567" endtime="20201115 22:03:35.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.555" endtime="20201115 22:03:35.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.579" endtime="20201115 22:03:35.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:35.588" endtime="20201115 22:03:35.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.583" endtime="20201115 22:03:35.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.575" endtime="20201115 22:03:35.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.047" endtime="20201115 22:03:35.613"></status>
</kw>
<msg timestamp="20201115 22:03:35.614" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.637" endtime="20201115 22:03:35.664"></status>
</kw>
<msg timestamp="20201115 22:03:35.665" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:35.634" endtime="20201115 22:03:35.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.672" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:35.668" endtime="20201115 22:03:35.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.674" endtime="20201115 22:03:35.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.626" endtime="20201115 22:03:35.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.621" endtime="20201115 22:03:35.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.698" endtime="20201115 22:03:36.041"></status>
</kw>
<msg timestamp="20201115 22:03:36.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042970458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042989611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:35.694" endtime="20201115 22:03:36.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042970458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042989611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:36.051" endtime="20201115 22:03:36.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.070" endtime="20201115 22:03:36.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.687" endtime="20201115 22:03:36.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.682" endtime="20201115 22:03:36.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:36.089" level="INFO">${RESULT} = [{'time': 0.042989611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915299999999398e-05, 'source_diff': 1.915299999999398e-05}, {'time': 0.043288528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:36.080" endtime="20201115 22:03:36.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:36.120" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:36.091" endtime="20201115 22:03:36.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.131" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:03:36.129" endtime="20201115 22:03:36.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.137" level="INFO">VALUE: [1.915299999999398e-05, 1.915300000000092e-05, 1.9152000000001446e-05, 1.9180000000000585e-05, 1.9179999999993647e-05, 1.9207999999999725e-05, 1.9152000000001446e-05, 1.912499999999484e-05, 1.916700000000049e-05, 1.9207999999999725e-05, 1.9152000000001446e-05, 1.915299999999398e-05, 1.913900000000135e-05, 1.915300000000092e-05, 1.918100000000006e-05, 1.915300000000092e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.9166000000001016e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.913900000000135e-05, 1.912499999999484e-05, 1.916700000000049e-05, 1.9166000000001016e-05, 1.918100000000006e-05, 1.916700000000049e-05, 1.9138000000001876e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.9180000000000585e-05, 1.9166000000001016e-05, 1.9151999999994507e-05, 1.9207999999999725e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.9166000000001016e-05, 1.918100000000006e-05, 1.9165999999994077e-05, 1.9152000000001446e-05, 1.9180000000000585e-05, 1.9138000000001876e-05, 1.919499999999963e-05, 1.9166000000001016e-05, 1.915300000000092e-05, 1.916700000000049e-05]</msg>
<status status="PASS" starttime="20201115 22:03:36.134" endtime="20201115 22:03:36.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.122" endtime="20201115 22:03:36.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.146" endtime="20201115 22:03:36.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:36.154" endtime="20201115 22:03:36.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.150" endtime="20201115 22:03:36.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.141" endtime="20201115 22:03:36.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.615" endtime="20201115 22:03:36.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.381" endtime="20201115 22:03:36.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.379" endtime="20201115 22:03:36.181"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.186" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.209" endtime="20201115 22:03:36.239"></status>
</kw>
<msg timestamp="20201115 22:03:36.240" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:36.206" endtime="20201115 22:03:36.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.246" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:36.242" endtime="20201115 22:03:36.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.248" endtime="20201115 22:03:36.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.198" endtime="20201115 22:03:36.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.193" endtime="20201115 22:03:36.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.273" endtime="20201115 22:03:36.618"></status>
</kw>
<msg timestamp="20201115 22:03:36.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048779, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048798972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:36.270" endtime="20201115 22:03:36.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048779, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048798972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:36.628" endtime="20201115 22:03:36.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.647" endtime="20201115 22:03:36.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.262" endtime="20201115 22:03:36.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.257" endtime="20201115 22:03:36.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:36.664" level="INFO">${RESULT} = [{'time': 0.048798972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9972000000000045e-05, 'source_diff': 1.9972000000000045e-05}, {'time': 0.049112361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:36.655" endtime="20201115 22:03:36.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:36.695" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:36.667" endtime="20201115 22:03:36.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.706" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:03:36.704" endtime="20201115 22:03:36.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.712" level="INFO">VALUE: [1.9972000000000045e-05, 1.9972000000000045e-05, 1.995899999999995e-05, 1.9999999999999185e-05, 1.997299999999952e-05, 1.9999999999999185e-05, 1.9972000000000045e-05, 1.9999999999999185e-05, 1.9999999999999185e-05, 1.995899999999995e-05, 2.0013999999998755e-05, 1.9958000000000475e-05, 1.9958000000000475e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.9958000000000475e-05, 1.997299999999952e-05, 1.9972000000000045e-05, 1.9958000000000475e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.9958000000000475e-05, 1.9957999999993536e-05, 1.9930000000001336e-05, 1.9999999999999185e-05, 1.997299999999952e-05, 1.9930000000001336e-05, 1.9958000000000475e-05, 1.9999999999999185e-05, 1.994500000000038e-05, 1.9929999999994397e-05, 1.9958000000000475e-05, 1.997299999999952e-05, 1.9972000000000045e-05, 1.997299999999952e-05, 1.9958000000000475e-05, 1.9944000000000905e-05, 1.9958000000000475e-05, 1.9930000000001336e-05, 1.995899999999995e-05, 1.9972000000000045e-05, 1.9958000000000475e-05, 1.9985999999999615e-05, 1.9972000000006984e-05, 1.9971999999993106e-05, 1.9958000000000475e-05, 1.988899999999516e-05, 1.9971999999993106e-05]</msg>
<status status="PASS" starttime="20201115 22:03:36.709" endtime="20201115 22:03:36.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.697" endtime="20201115 22:03:36.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.721" endtime="20201115 22:03:36.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:36.730" endtime="20201115 22:03:36.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.725" endtime="20201115 22:03:36.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.716" endtime="20201115 22:03:36.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.187" endtime="20201115 22:03:36.755"></status>
</kw>
<msg timestamp="20201115 22:03:36.756" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.779" endtime="20201115 22:03:36.807"></status>
</kw>
<msg timestamp="20201115 22:03:36.809" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:36.776" endtime="20201115 22:03:36.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.822" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:36.811" endtime="20201115 22:03:36.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.824" endtime="20201115 22:03:36.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.768" endtime="20201115 22:03:36.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.763" endtime="20201115 22:03:36.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.848" endtime="20201115 22:03:37.192"></status>
</kw>
<msg timestamp="20201115 22:03:37.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042966444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042986431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:36.844" endtime="20201115 22:03:37.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042966444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042986431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:37.202" endtime="20201115 22:03:37.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.220" endtime="20201115 22:03:37.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.837" endtime="20201115 22:03:37.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.832" endtime="20201115 22:03:37.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:37.240" level="INFO">${RESULT} = [{'time': 0.042986431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.998699999999909e-05, 'source_diff': 1.998699999999909e-05}, {'time': 0.043305611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:37.230" endtime="20201115 22:03:37.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:37.270" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:37.242" endtime="20201115 22:03:37.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.282" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:03:37.279" endtime="20201115 22:03:37.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.287" level="INFO">VALUE: [1.998699999999909e-05, 1.9930000000001336e-05, 1.9985999999999615e-05, 1.9958000000000475e-05, 1.9985999999999615e-05, 1.9972000000000045e-05, 1.9958000000000475e-05, 1.9958000000000475e-05, 1.995899999999995e-05, 1.997299999999952e-05, 1.9958000000000475e-05, 1.9944000000000905e-05, 1.9958000000000475e-05, 1.994500000000038e-05, 2.0000000000006124e-05, 1.995899999999995e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.9999999999999185e-05, 1.9958000000000475e-05, 1.9972000000000045e-05, 1.9958000000000475e-05, 1.9985999999999615e-05, 1.9985999999999615e-05, 1.9958000000000475e-05, 1.995899999999995e-05, 1.9958000000000475e-05, 1.993100000000081e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.994500000000038e-05, 1.9944000000000905e-05, 1.995899999999995e-05, 2.0027999999998325e-05, 1.9944000000000905e-05, 1.9944000000000905e-05, 2.0000000000006124e-05, 1.9985999999999615e-05, 1.995899999999995e-05, 1.9972000000000045e-05, 1.9944000000000905e-05, 1.9972000000000045e-05, 1.993100000000081e-05, 1.9958000000000475e-05, 1.9985999999999615e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.9999999999999185e-05, 1.9958000000000475e-05, 1.9958000000000475e-05]</msg>
<status status="PASS" starttime="20201115 22:03:37.284" endtime="20201115 22:03:37.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.272" endtime="20201115 22:03:37.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.296" endtime="20201115 22:03:37.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:37.305" endtime="20201115 22:03:37.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.300" endtime="20201115 22:03:37.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.292" endtime="20201115 22:03:37.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.757" endtime="20201115 22:03:37.330"></status>
</kw>
<msg timestamp="20201115 22:03:37.331" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.355" endtime="20201115 22:03:37.384"></status>
</kw>
<msg timestamp="20201115 22:03:37.385" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.351" endtime="20201115 22:03:37.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.392" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.388" endtime="20201115 22:03:37.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.394" endtime="20201115 22:03:37.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.343" endtime="20201115 22:03:37.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.338" endtime="20201115 22:03:37.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.418" endtime="20201115 22:03:37.761"></status>
</kw>
<msg timestamp="20201115 22:03:37.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044119375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044139333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:37.415" endtime="20201115 22:03:37.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044119375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044139333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:37.770" endtime="20201115 22:03:37.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.789" endtime="20201115 22:03:37.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.407" endtime="20201115 22:03:37.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.402" endtime="20201115 22:03:37.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:37.810" level="INFO">${RESULT} = [{'time': 0.044139333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9958000000000475e-05, 'source_diff': 1.9958000000000475e-05}, {'time': 0.044464181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:37.801" endtime="20201115 22:03:37.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:37.841" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:37.813" endtime="20201115 22:03:37.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.853" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:03:37.850" endtime="20201115 22:03:37.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.858" level="INFO">VALUE: [1.9958000000000475e-05, 1.998699999999909e-05, 1.9972000000000045e-05, 1.993100000000081e-05, 1.9972000000000045e-05, 1.9986000000006554e-05, 1.9985999999999615e-05, 1.9958000000000475e-05, 1.990300000000167e-05, 1.9972000000000045e-05, 1.9958000000000475e-05, 2.0000000000006124e-05, 1.9972000000000045e-05, 1.9999999999999185e-05, 1.9972000000000045e-05, 1.9985999999999615e-05, 1.9916000000001766e-05, 1.9972000000000045e-05, 1.9973000000006458e-05, 1.9972000000000045e-05, 1.995899999999995e-05, 1.994500000000038e-05, 1.9972000000000045e-05, 1.9987000000006028e-05, 1.9944000000000905e-05, 1.9985999999999615e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.9999999999999185e-05, 1.997299999999952e-05, 1.995899999999995e-05, 1.9930000000001336e-05, 2.0013999999998755e-05, 1.9985999999999615e-05, 1.9958000000000475e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.9958000000000475e-05, 1.9972000000000045e-05, 1.9985999999999615e-05, 1.995899999999995e-05, 1.994500000000038e-05, 1.9972000000000045e-05, 1.995899999999995e-05, 1.9985999999999615e-05, 1.9972000000000045e-05, 1.997299999999952e-05, 1.997299999999952e-05, 1.998699999999909e-05, 1.994500000000038e-05]</msg>
<status status="PASS" starttime="20201115 22:03:37.855" endtime="20201115 22:03:37.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.843" endtime="20201115 22:03:37.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.867" endtime="20201115 22:03:37.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:37.876" endtime="20201115 22:03:37.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.872" endtime="20201115 22:03:37.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.863" endtime="20201115 22:03:37.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.332" endtime="20201115 22:03:37.902"></status>
</kw>
<msg timestamp="20201115 22:03:37.903" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.926" endtime="20201115 22:03:37.955"></status>
</kw>
<msg timestamp="20201115 22:03:37.956" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.923" endtime="20201115 22:03:37.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.962" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.958" endtime="20201115 22:03:37.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.965" endtime="20201115 22:03:37.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.916" endtime="20201115 22:03:37.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.910" endtime="20201115 22:03:37.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.990" endtime="20201115 22:03:38.294"></status>
</kw>
<msg timestamp="20201115 22:03:38.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043837556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043857514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:37.986" endtime="20201115 22:03:38.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043837556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043857514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:38.299" endtime="20201115 22:03:38.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.318" endtime="20201115 22:03:38.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.979" endtime="20201115 22:03:38.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.974" endtime="20201115 22:03:38.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:38.337" level="INFO">${RESULT} = [{'time': 0.043857514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9958000000000475e-05, 'source_diff': 1.9958000000000475e-05}, {'time': 0.044176306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:38.328" endtime="20201115 22:03:38.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:38.368" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:38.340" endtime="20201115 22:03:38.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.379" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:03:38.377" endtime="20201115 22:03:38.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.385" level="INFO">VALUE: [1.9958000000000475e-05, 1.997299999999952e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.994500000000038e-05, 1.9985999999999615e-05, 1.9972000000000045e-05, 1.994500000000038e-05, 1.994500000000038e-05, 1.995899999999995e-05, 1.9944000000000905e-05, 1.9972000000000045e-05, 1.9999999999999185e-05, 1.9958000000000475e-05, 2.0027999999998325e-05, 2.0042000000004834e-05, 1.9972000000000045e-05, 1.9985999999999615e-05, 1.994499999999344e-05, 1.9958000000000475e-05, 1.9958000000000475e-05, 1.994500000000038e-05, 1.9972000000000045e-05, 1.995899999999995e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.991700000000124e-05, 1.9972000000000045e-05, 1.9958000000000475e-05, 1.9957999999993536e-05, 1.995899999999995e-05, 1.9985999999999615e-05, 1.98890000000021e-05, 1.9972000000000045e-05, 1.9958000000000475e-05, 1.991700000000124e-05, 1.9999999999999185e-05, 1.997299999999952e-05, 1.9958000000000475e-05, 1.9999999999999185e-05, 1.994500000000038e-05, 1.9972000000000045e-05, 1.9944000000000905e-05, 1.9971999999993106e-05, 1.995899999999995e-05, 1.9972000000000045e-05, 1.995899999999995e-05, 1.9958000000000475e-05, 1.9985999999999615e-05]</msg>
<status status="PASS" starttime="20201115 22:03:38.382" endtime="20201115 22:03:38.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.370" endtime="20201115 22:03:38.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.394" endtime="20201115 22:03:38.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:38.403" endtime="20201115 22:03:38.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.399" endtime="20201115 22:03:38.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.389" endtime="20201115 22:03:38.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.904" endtime="20201115 22:03:38.429"></status>
</kw>
<msg timestamp="20201115 22:03:38.430" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.453" endtime="20201115 22:03:38.482"></status>
</kw>
<msg timestamp="20201115 22:03:38.483" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:38.450" endtime="20201115 22:03:38.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.489" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:38.485" endtime="20201115 22:03:38.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.492" endtime="20201115 22:03:38.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.442" endtime="20201115 22:03:38.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.437" endtime="20201115 22:03:38.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.516" endtime="20201115 22:03:38.858"></status>
</kw>
<msg timestamp="20201115 22:03:38.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043312236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043332181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:38.512" endtime="20201115 22:03:38.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043312236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043332181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:38.867" endtime="20201115 22:03:38.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.885" endtime="20201115 22:03:38.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.505" endtime="20201115 22:03:38.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.500" endtime="20201115 22:03:38.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:38.907" level="INFO">${RESULT} = [{'time': 0.043332181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.994500000000038e-05, 'source_diff': 1.994500000000038e-05}, {'time': 0.043645111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:38.898" endtime="20201115 22:03:38.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:39.009" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:38.909" endtime="20201115 22:03:39.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.022" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:03:39.019" endtime="20201115 22:03:39.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.028" level="INFO">VALUE: [1.994500000000038e-05, 1.9930000000001336e-05, 1.9944000000000905e-05, 1.9985999999999615e-05, 2.0000000000006124e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.993100000000081e-05, 1.9972000000000045e-05, 1.994500000000038e-05, 1.997299999999952e-05, 1.9915999999994827e-05, 1.993100000000081e-05, 1.9985999999999615e-05, 1.9958000000000475e-05, 1.994500000000038e-05, 1.9916000000001766e-05, 1.9916000000001766e-05, 1.9972000000000045e-05, 1.9958000000000475e-05, 1.9999999999999185e-05, 1.9985999999999615e-05, 1.994500000000038e-05, 1.994500000000038e-05, 1.994500000000038e-05, 1.9986000000006554e-05, 1.9972000000000045e-05, 1.994500000000038e-05, 1.9999999999999185e-05, 1.9901999999995257e-05, 2.0014000000005694e-05, 1.9972000000000045e-05, 1.9972000000000045e-05, 1.9999999999999185e-05, 1.9999999999999185e-05, 1.9958000000000475e-05, 1.997299999999952e-05, 1.9985999999999615e-05, 1.9985999999999615e-05, 1.988899999999516e-05, 1.9972000000000045e-05, 1.991700000000124e-05, 1.9958000000000475e-05, 1.994500000000038e-05, 1.990300000000167e-05, 1.9972000000000045e-05, 1.9973000000006458e-05, 1.997299999999952e-05, 1.9999999999999185e-05, 1.9958000000000475e-05]</msg>
<status status="PASS" starttime="20201115 22:03:39.024" endtime="20201115 22:03:39.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.012" endtime="20201115 22:03:39.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.038" endtime="20201115 22:03:39.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:39.047" endtime="20201115 22:03:39.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.042" endtime="20201115 22:03:39.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.033" endtime="20201115 22:03:39.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.431" endtime="20201115 22:03:39.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.184" endtime="20201115 22:03:39.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.182" endtime="20201115 22:03:39.073"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.078" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.103" endtime="20201115 22:03:39.132"></status>
</kw>
<msg timestamp="20201115 22:03:39.134" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:39.099" endtime="20201115 22:03:39.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.140" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:39.136" endtime="20201115 22:03:39.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.142" endtime="20201115 22:03:39.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.091" endtime="20201115 22:03:39.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.085" endtime="20201115 22:03:39.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.166" endtime="20201115 22:03:39.510"></status>
</kw>
<msg timestamp="20201115 22:03:39.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049617903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049638681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:39.163" endtime="20201115 22:03:39.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049617903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049638681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:39.519" endtime="20201115 22:03:39.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.538" endtime="20201115 22:03:39.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.155" endtime="20201115 22:03:39.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.151" endtime="20201115 22:03:39.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:39.556" level="INFO">${RESULT} = [{'time': 0.049638681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0777999999999075e-05, 'source_diff': 2.0777999999999075e-05}, {'time': 0.049981931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:39.547" endtime="20201115 22:03:39.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:39.586" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:39.558" endtime="20201115 22:03:39.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.598" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:03:39.595" endtime="20201115 22:03:39.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.604" level="INFO">VALUE: [2.0777999999999075e-05, 2.0777999999999075e-05, 2.083300000000482e-05, 2.07769999999996e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0791999999998645e-05, 2.0763999999999505e-05, 2.0708000000001225e-05, 2.0749999999999935e-05, 2.07769999999996e-05, 2.079099999999917e-05, 2.07769999999996e-05, 2.0764000000006444e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.0763999999999505e-05, 2.081899999999831e-05, 2.0749999999999935e-05, 2.07769999999996e-05, 2.07769999999996e-05, 2.07769999999996e-05, 2.0707999999994287e-05, 2.07769999999996e-05, 2.0763999999999505e-05, 2.0805999999998215e-05, 2.0777999999999075e-05, 2.076300000000003e-05, 2.0749999999999935e-05, 2.07769999999996e-05, 2.0749999999999935e-05, 2.080499999999874e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0805999999998215e-05, 2.080499999999874e-05, 2.0763999999999505e-05, 2.0777999999999075e-05, 2.0764000000006444e-05, 2.0735999999993426e-05, 2.0778000000012953e-05, 2.0777999999999075e-05, 2.0749999999999935e-05, 2.0777999999999075e-05, 2.0694000000001656e-05, 2.0791999999991706e-05, 2.0777999999999075e-05, 2.079100000000611e-05, 2.0722000000000795e-05]</msg>
<status status="PASS" starttime="20201115 22:03:39.600" endtime="20201115 22:03:39.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.588" endtime="20201115 22:03:39.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.613" endtime="20201115 22:03:39.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:39.622" endtime="20201115 22:03:39.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.617" endtime="20201115 22:03:39.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.608" endtime="20201115 22:03:39.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.079" endtime="20201115 22:03:39.647"></status>
</kw>
<msg timestamp="20201115 22:03:39.648" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.671" endtime="20201115 22:03:39.702"></status>
</kw>
<msg timestamp="20201115 22:03:39.703" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:39.668" endtime="20201115 22:03:39.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.709" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:39.705" endtime="20201115 22:03:39.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.712" endtime="20201115 22:03:39.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.660" endtime="20201115 22:03:39.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.655" endtime="20201115 22:03:39.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.736" endtime="20201115 22:03:40.079"></status>
</kw>
<msg timestamp="20201115 22:03:40.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044552319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044573097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:39.733" endtime="20201115 22:03:40.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044552319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044573097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:40.089" endtime="20201115 22:03:40.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.108" endtime="20201115 22:03:40.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.725" endtime="20201115 22:03:40.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.720" endtime="20201115 22:03:40.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:40.126" level="INFO">${RESULT} = [{'time': 0.044573097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0777999999999075e-05, 'source_diff': 2.0777999999999075e-05}, {'time': 0.044911778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:40.116" endtime="20201115 22:03:40.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:40.157" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:40.128" endtime="20201115 22:03:40.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.168" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:03:40.166" endtime="20201115 22:03:40.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.174" level="INFO">VALUE: [2.0777999999999075e-05, 2.0777999999999075e-05, 2.0791999999998645e-05, 2.0763999999999505e-05, 2.0833999999997355e-05, 2.079099999999917e-05, 2.0763999999999505e-05, 2.0777999999999075e-05, 2.0777999999999075e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0777999999999075e-05, 2.0777999999999075e-05, 2.0777999999999075e-05, 2.07769999999996e-05, 2.07769999999996e-05, 2.0792000000005584e-05, 2.079099999999917e-05, 2.0749999999999935e-05, 2.0764000000006444e-05, 2.0777999999999075e-05, 2.0778000000006014e-05, 2.0777999999999075e-05, 2.0749999999999935e-05, 2.0722000000000795e-05, 2.0777999999999075e-05, 2.0763999999999505e-05, 2.0777999999999075e-05, 2.0763999999999505e-05, 2.0694000000001656e-05, 2.07769999999996e-05, 2.0777999999999075e-05, 2.0778000000006014e-05, 2.0777999999999075e-05, 2.0749999999999935e-05, 2.0708000000001225e-05, 2.0805999999998215e-05, 2.0749999999999935e-05, 2.0777999999999075e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0777999999999075e-05, 2.07769999999996e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.079099999999917e-05, 2.0763999999999505e-05, 2.0777999999999075e-05, 2.0777999999999075e-05]</msg>
<status status="PASS" starttime="20201115 22:03:40.171" endtime="20201115 22:03:40.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.159" endtime="20201115 22:03:40.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.183" endtime="20201115 22:03:40.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:40.191" endtime="20201115 22:03:40.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.187" endtime="20201115 22:03:40.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.178" endtime="20201115 22:03:40.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.649" endtime="20201115 22:03:40.217"></status>
</kw>
<msg timestamp="20201115 22:03:40.218" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.241" endtime="20201115 22:03:40.271"></status>
</kw>
<msg timestamp="20201115 22:03:40.272" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.238" endtime="20201115 22:03:40.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.278" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.274" endtime="20201115 22:03:40.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.281" endtime="20201115 22:03:40.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.230" endtime="20201115 22:03:40.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.224" endtime="20201115 22:03:40.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.306" endtime="20201115 22:03:40.649"></status>
</kw>
<msg timestamp="20201115 22:03:40.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043076722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043097486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:40.303" endtime="20201115 22:03:40.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043076722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043097486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:40.658" endtime="20201115 22:03:40.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.677" endtime="20201115 22:03:40.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.294" endtime="20201115 22:03:40.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.289" endtime="20201115 22:03:40.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:40.696" level="INFO">${RESULT} = [{'time': 0.043097486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0763999999999505e-05, 'source_diff': 2.0763999999999505e-05}, {'time': 0.043435958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:40.686" endtime="20201115 22:03:40.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:40.727" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:40.698" endtime="20201115 22:03:40.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.738" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:03:40.736" endtime="20201115 22:03:40.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.743" level="INFO">VALUE: [2.0763999999999505e-05, 2.07769999999996e-05, 2.0791999999998645e-05, 2.0791999999998645e-05, 2.0777999999999075e-05, 2.0721999999993856e-05, 2.0791999999998645e-05, 2.0777999999999075e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0778000000006014e-05, 2.079099999999917e-05, 2.0763999999999505e-05, 2.0791999999998645e-05, 2.0791999999998645e-05, 2.079099999999917e-05, 2.0763999999999505e-05, 2.0791999999998645e-05, 2.0763999999999505e-05, 2.07769999999996e-05, 2.0791999999998645e-05, 2.0777999999999075e-05, 2.079099999999917e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0791999999998645e-05, 2.0763999999999505e-05, 2.0736000000000365e-05, 2.0763999999999505e-05, 2.069499999999419e-05, 2.076300000000003e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0778000000006014e-05, 2.07769999999996e-05, 2.0819999999997785e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.083300000000482e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0736000000000365e-05, 2.079100000000611e-05, 2.0763999999999505e-05]</msg>
<status status="PASS" starttime="20201115 22:03:40.740" endtime="20201115 22:03:40.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.729" endtime="20201115 22:03:40.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.752" endtime="20201115 22:03:40.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:40.761" endtime="20201115 22:03:40.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.756" endtime="20201115 22:03:40.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.748" endtime="20201115 22:03:40.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.219" endtime="20201115 22:03:40.787"></status>
</kw>
<msg timestamp="20201115 22:03:40.787" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.811" endtime="20201115 22:03:40.840"></status>
</kw>
<msg timestamp="20201115 22:03:40.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.807" endtime="20201115 22:03:40.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.847" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.844" endtime="20201115 22:03:40.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.850" endtime="20201115 22:03:40.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.800" endtime="20201115 22:03:40.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.794" endtime="20201115 22:03:40.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.874" endtime="20201115 22:03:41.220"></status>
</kw>
<msg timestamp="20201115 22:03:41.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043163139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043183917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:40.870" endtime="20201115 22:03:41.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043163139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043183917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:41.230" endtime="20201115 22:03:41.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.249" endtime="20201115 22:03:41.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.863" endtime="20201115 22:03:41.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.858" endtime="20201115 22:03:41.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:41.267" level="INFO">${RESULT} = [{'time': 0.043183917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0777999999999075e-05, 'source_diff': 2.0777999999999075e-05}, {'time': 0.043528667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:41.258" endtime="20201115 22:03:41.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:41.300" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:41.269" endtime="20201115 22:03:41.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.311" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:03:41.308" endtime="20201115 22:03:41.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.316" level="INFO">VALUE: [2.0777999999999075e-05, 2.0819999999997785e-05, 2.0764000000006444e-05, 2.081899999999831e-05, 2.0763999999999505e-05, 2.07769999999996e-05, 2.0791999999998645e-05, 2.0777999999999075e-05, 2.0777999999999075e-05, 2.0763999999999505e-05, 2.0833999999997355e-05, 2.0763999999999505e-05, 2.0777999999999075e-05, 2.0777999999999075e-05, 2.0777999999999075e-05, 2.0749999999999935e-05, 2.0722000000000795e-05, 2.0791999999998645e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.07769999999996e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0791999999998645e-05, 2.0777999999999075e-05, 2.0749999999999935e-05, 2.07769999999996e-05, 2.077700000000654e-05, 2.0763999999999505e-05, 2.080499999999874e-05, 2.0763999999999505e-05, 2.0778000000006014e-05, 2.07769999999996e-05, 2.0791999999998645e-05, 2.0749999999999935e-05, 2.076300000000003e-05, 2.07769999999996e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0778000000006014e-05, 2.0777999999999075e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0778000000006014e-05, 2.0749999999999935e-05, 2.0777999999999075e-05, 2.07769999999996e-05, 2.0777999999999075e-05, 2.079099999999917e-05]</msg>
<status status="PASS" starttime="20201115 22:03:41.313" endtime="20201115 22:03:41.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.302" endtime="20201115 22:03:41.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.325" endtime="20201115 22:03:41.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:41.334" endtime="20201115 22:03:41.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.329" endtime="20201115 22:03:41.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.321" endtime="20201115 22:03:41.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.788" endtime="20201115 22:03:41.360"></status>
</kw>
<msg timestamp="20201115 22:03:41.360" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.384" endtime="20201115 22:03:41.413"></status>
</kw>
<msg timestamp="20201115 22:03:41.415" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:41.380" endtime="20201115 22:03:41.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.421" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:41.417" endtime="20201115 22:03:41.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.423" endtime="20201115 22:03:41.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.373" endtime="20201115 22:03:41.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.367" endtime="20201115 22:03:41.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.447" endtime="20201115 22:03:41.764"></status>
</kw>
<msg timestamp="20201115 22:03:41.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043201236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043222042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:41.444" endtime="20201115 22:03:41.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043201236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043222042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:41.775" endtime="20201115 22:03:41.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.793" endtime="20201115 22:03:41.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.436" endtime="20201115 22:03:41.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.432" endtime="20201115 22:03:41.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:41.813" level="INFO">${RESULT} = [{'time': 0.043222042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0806000000005154e-05, 'source_diff': 2.0806000000005154e-05}, {'time': 0.043555278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:41.804" endtime="20201115 22:03:41.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:41.844" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:41.815" endtime="20201115 22:03:41.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.855" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:03:41.852" endtime="20201115 22:03:41.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.860" level="INFO">VALUE: [2.0806000000005154e-05, 2.0778000000006014e-05, 2.0763999999999505e-05, 2.0778000000006014e-05, 2.0749999999999935e-05, 2.0777999999999075e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0777999999999075e-05, 2.0777999999999075e-05, 2.079099999999917e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0777999999999075e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.07769999999996e-05, 2.0805999999998215e-05, 2.0736000000000365e-05, 2.084699999999745e-05, 2.0749999999999935e-05, 2.0777999999999075e-05, 2.0707999999994287e-05, 2.0763999999999505e-05, 2.0791999999998645e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0777999999999075e-05, 2.0777999999999075e-05, 2.0735999999993426e-05, 2.0763999999999505e-05, 2.0791999999998645e-05, 2.0791999999998645e-05, 2.0777999999999075e-05, 2.0763999999999505e-05, 2.0777999999999075e-05, 2.076300000000003e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.07769999999996e-05, 2.0778000000006014e-05, 2.0805999999998215e-05, 2.0763999999999505e-05, 2.0778000000006014e-05, 2.0777999999999075e-05, 2.079099999999917e-05, 2.0749999999999935e-05, 2.0763999999999505e-05]</msg>
<status status="PASS" starttime="20201115 22:03:41.857" endtime="20201115 22:03:41.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.845" endtime="20201115 22:03:41.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.869" endtime="20201115 22:03:41.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:41.878" endtime="20201115 22:03:41.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.873" endtime="20201115 22:03:41.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.865" endtime="20201115 22:03:41.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.361" endtime="20201115 22:03:41.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.076" endtime="20201115 22:03:41.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.074" endtime="20201115 22:03:41.905"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.909" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.933" endtime="20201115 22:03:41.965"></status>
</kw>
<msg timestamp="20201115 22:03:41.966" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:41.929" endtime="20201115 22:03:41.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.972" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:41.968" endtime="20201115 22:03:41.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.975" endtime="20201115 22:03:41.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.922" endtime="20201115 22:03:41.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.916" endtime="20201115 22:03:41.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.005" endtime="20201115 22:03:42.350"></status>
</kw>
<msg timestamp="20201115 22:03:42.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049031306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049052889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:42.002" endtime="20201115 22:03:42.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049031306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049052889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:42.360" endtime="20201115 22:03:42.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.379" endtime="20201115 22:03:42.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.995" endtime="20201115 22:03:42.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.990" endtime="20201115 22:03:42.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:42.397" level="INFO">${RESULT} = [{'time': 0.049052889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.158300000000557e-05, 'source_diff': 2.158300000000557e-05}, {'time': 0.049416792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:42.388" endtime="20201115 22:03:42.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:42.428" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:42.399" endtime="20201115 22:03:42.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.439" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:03:42.436" endtime="20201115 22:03:42.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.444" level="INFO">VALUE: [2.158300000000557e-05, 2.1569999999998535e-05, 2.1555999999998965e-05, 2.161100000000471e-05, 2.156899999999906e-05, 2.1556000000005904e-05, 2.1597999999997675e-05, 2.1569999999998535e-05, 2.1569999999998535e-05, 2.156899999999906e-05, 2.156899999999906e-05, 2.1569999999998535e-05, 2.15969999999982e-05, 2.158299999999863e-05, 2.15969999999982e-05, 2.1569999999998535e-05, 2.1569000000006e-05, 2.15969999999982e-05, 2.1569999999998535e-05, 2.1555999999998965e-05, 2.156899999999906e-05, 2.158300000000557e-05, 2.154099999999992e-05, 2.1583999999998105e-05, 2.158299999999863e-05, 2.156899999999906e-05, 2.156899999999906e-05, 2.158299999999863e-05, 2.1597999999997675e-05, 2.1583999999998105e-05, 2.1555999999998965e-05, 2.156899999999906e-05, 2.156899999999906e-05, 2.1569999999998535e-05, 2.1569999999998535e-05, 2.158299999999863e-05, 2.1569999999998535e-05, 2.1569999999998535e-05, 2.15969999999982e-05, 2.1583999999991166e-05, 2.1569999999998535e-05, 2.15969999999982e-05, 2.1583999999991166e-05, 2.1554999999992552e-05, 2.1582999999991692e-05, 2.1569999999998535e-05, 2.1584000000005044e-05, 2.1541999999999395e-05, 2.1569999999998535e-05, 2.1541999999999395e-05]</msg>
<status status="PASS" starttime="20201115 22:03:42.441" endtime="20201115 22:03:42.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.430" endtime="20201115 22:03:42.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.453" endtime="20201115 22:03:42.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:42.462" endtime="20201115 22:03:42.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.457" endtime="20201115 22:03:42.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.449" endtime="20201115 22:03:42.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.911" endtime="20201115 22:03:42.488"></status>
</kw>
<msg timestamp="20201115 22:03:42.488" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.511" endtime="20201115 22:03:42.542"></status>
</kw>
<msg timestamp="20201115 22:03:42.543" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:42.508" endtime="20201115 22:03:42.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.550" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:42.546" endtime="20201115 22:03:42.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.553" endtime="20201115 22:03:42.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.501" endtime="20201115 22:03:42.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.495" endtime="20201115 22:03:42.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.576" endtime="20201115 22:03:42.918"></status>
</kw>
<msg timestamp="20201115 22:03:42.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043298125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043319722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:42.573" endtime="20201115 22:03:42.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043298125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043319722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:42.928" endtime="20201115 22:03:42.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.946" endtime="20201115 22:03:42.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.566" endtime="20201115 22:03:42.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.561" endtime="20201115 22:03:42.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:42.966" level="INFO">${RESULT} = [{'time': 0.043319722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.15969999999982e-05, 'source_diff': 2.15969999999982e-05}, {'time': 0.043678, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2....</msg>
<status status="PASS" starttime="20201115 22:03:42.956" endtime="20201115 22:03:42.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:42.996" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:42.968" endtime="20201115 22:03:42.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.008" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:03:43.005" endtime="20201115 22:03:43.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.013" level="INFO">VALUE: [2.15969999999982e-05, 2.158299999999863e-05, 2.158299999999863e-05, 2.156899999999906e-05, 2.1555999999998965e-05, 2.161099999999777e-05, 2.156899999999906e-05, 2.158300000000557e-05, 2.156899999999906e-05, 2.15969999999982e-05, 2.158299999999863e-05, 2.156899999999906e-05, 2.158299999999863e-05, 2.1569999999998535e-05, 2.15969999999982e-05, 2.1597999999997675e-05, 2.156899999999906e-05, 2.158300000000557e-05, 2.1583999999998105e-05, 2.1597999999997675e-05, 2.162499999999734e-05, 2.158299999999863e-05, 2.162499999999734e-05, 2.1584000000005044e-05, 2.1555999999998965e-05, 2.1569999999998535e-05, 2.1598000000004614e-05, 2.155499999999949e-05, 2.1597999999997675e-05, 2.161099999999777e-05, 2.156899999999906e-05, 2.154099999999992e-05, 2.15969999999982e-05, 2.158299999999863e-05, 2.158299999999863e-05, 2.1569999999998535e-05, 2.1569999999998535e-05, 2.158299999999863e-05, 2.156899999999906e-05, 2.1570000000005474e-05, 2.158299999999863e-05, 2.1583999999998105e-05, 2.156899999999906e-05, 2.155499999999949e-05, 2.156899999999906e-05, 2.158299999999863e-05, 2.156899999999906e-05, 2.1583999999998105e-05, 2.158299999999863e-05, 2.158300000000557e-05]</msg>
<status status="PASS" starttime="20201115 22:03:43.010" endtime="20201115 22:03:43.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.998" endtime="20201115 22:03:43.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.022" endtime="20201115 22:03:43.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:43.031" endtime="20201115 22:03:43.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.026" endtime="20201115 22:03:43.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.017" endtime="20201115 22:03:43.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.489" endtime="20201115 22:03:43.056"></status>
</kw>
<msg timestamp="20201115 22:03:43.057" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.081" endtime="20201115 22:03:43.112"></status>
</kw>
<msg timestamp="20201115 22:03:43.113" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:43.077" endtime="20201115 22:03:43.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.119" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:43.115" endtime="20201115 22:03:43.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.122" endtime="20201115 22:03:43.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.070" endtime="20201115 22:03:43.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.064" endtime="20201115 22:03:43.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.146" endtime="20201115 22:03:43.491"></status>
</kw>
<msg timestamp="20201115 22:03:43.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043963542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043985083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:43.143" endtime="20201115 22:03:43.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043963542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043985083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:43.501" endtime="20201115 22:03:43.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.519" endtime="20201115 22:03:43.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.135" endtime="20201115 22:03:43.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.130" endtime="20201115 22:03:43.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:43.539" level="INFO">${RESULT} = [{'time': 0.043985083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.154099999999992e-05, 'source_diff': 2.154099999999992e-05}, {'time': 0.044341069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:43.529" endtime="20201115 22:03:43.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:43.572" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:43.541" endtime="20201115 22:03:43.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.583" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:03:43.581" endtime="20201115 22:03:43.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.589" level="INFO">VALUE: [2.154099999999992e-05, 2.1526999999993413e-05, 2.15969999999982e-05, 2.1569000000006e-05, 2.155499999999949e-05, 2.1514000000000255e-05, 2.1570000000005474e-05, 2.1597999999997675e-05, 2.1584000000005044e-05, 2.15969999999982e-05, 2.1569999999998535e-05, 2.158299999999863e-05, 2.156899999999906e-05, 2.158299999999863e-05, 2.1569999999998535e-05, 2.158299999999863e-05, 2.156899999999906e-05, 2.158299999999863e-05, 2.155499999999949e-05, 2.1612000000004183e-05, 2.1569999999998535e-05, 2.1569999999998535e-05, 2.158299999999863e-05, 2.1541999999999395e-05, 2.1569000000006e-05, 2.1612000000004183e-05, 2.1597999999997675e-05, 2.15969999999982e-05, 2.156899999999906e-05, 2.1527999999999825e-05, 2.1556000000005904e-05, 2.15969999999982e-05, 2.156899999999906e-05, 2.156899999999906e-05, 2.161100000000471e-05, 2.1555999999998965e-05, 2.156899999999906e-05, 2.1514000000000255e-05, 2.1541999999999395e-05, 2.1584000000005044e-05, 2.1570000000005474e-05, 2.156899999999906e-05, 2.1583999999998105e-05, 2.1569999999998535e-05, 2.1583999999998105e-05, 2.1499999999993746e-05, 2.1583999999998105e-05, 2.158299999999863e-05, 2.158300000000557e-05, 2.158299999999863e-05]</msg>
<status status="PASS" starttime="20201115 22:03:43.585" endtime="20201115 22:03:43.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.574" endtime="20201115 22:03:43.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.597" endtime="20201115 22:03:43.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:43.606" endtime="20201115 22:03:43.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.601" endtime="20201115 22:03:43.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.593" endtime="20201115 22:03:43.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.058" endtime="20201115 22:03:43.632"></status>
</kw>
<msg timestamp="20201115 22:03:43.633" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.656" endtime="20201115 22:03:43.688"></status>
</kw>
<msg timestamp="20201115 22:03:43.689" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:43.653" endtime="20201115 22:03:43.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.695" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:43.691" endtime="20201115 22:03:43.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.697" endtime="20201115 22:03:43.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.645" endtime="20201115 22:03:43.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.640" endtime="20201115 22:03:43.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.721" endtime="20201115 22:03:44.063"></status>
</kw>
<msg timestamp="20201115 22:03:44.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043896722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043918292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:43.718" endtime="20201115 22:03:44.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043896722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043918292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:44.073" endtime="20201115 22:03:44.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.091" endtime="20201115 22:03:44.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.711" endtime="20201115 22:03:44.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.706" endtime="20201115 22:03:44.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:44.109" level="INFO">${RESULT} = [{'time': 0.043918292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1569999999998535e-05, 'source_diff': 2.1569999999998535e-05}, {'time': 0.044274333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:44.100" endtime="20201115 22:03:44.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:44.141" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:44.111" endtime="20201115 22:03:44.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.152" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:03:44.150" endtime="20201115 22:03:44.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.158" level="INFO">VALUE: [2.1569999999998535e-05, 2.162499999999734e-05, 2.1583999999998105e-05, 2.156899999999906e-05, 2.15969999999982e-05, 2.1569999999998535e-05, 2.1598000000004614e-05, 2.158299999999863e-05, 2.156899999999906e-05, 2.15969999999982e-05, 2.154099999999992e-05, 2.15969999999982e-05, 2.15969999999982e-05, 2.1584000000005044e-05, 2.1541999999999395e-05, 2.1570000000005474e-05, 2.158300000000557e-05, 2.158299999999863e-05, 2.158299999999863e-05, 2.158299999999863e-05, 2.1569999999998535e-05, 2.1584000000005044e-05, 2.1569999999998535e-05, 2.1569999999998535e-05, 2.156899999999906e-05, 2.166699999999605e-05, 2.154099999999992e-05, 2.161100000000471e-05, 2.1583999999998105e-05, 2.158299999999863e-05, 2.161099999999777e-05, 2.158299999999863e-05, 2.15969999999982e-05, 2.1569999999998535e-05, 2.1541999999999395e-05, 2.156899999999906e-05, 2.15969999999982e-05, 2.1555999999998965e-05, 2.156899999999906e-05, 2.155499999999949e-05, 2.15969999999982e-05, 2.1514000000000255e-05, 2.156899999999906e-05, 2.1555999999998965e-05, 2.15969999999982e-05, 2.159700000000514e-05, 2.1569999999998535e-05, 2.1569999999998535e-05, 2.161100000000471e-05, 2.158299999999863e-05]</msg>
<status status="PASS" starttime="20201115 22:03:44.155" endtime="20201115 22:03:44.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.143" endtime="20201115 22:03:44.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.167" endtime="20201115 22:03:44.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:44.176" endtime="20201115 22:03:44.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.172" endtime="20201115 22:03:44.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.163" endtime="20201115 22:03:44.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.634" endtime="20201115 22:03:44.203"></status>
</kw>
<msg timestamp="20201115 22:03:44.203" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.227" endtime="20201115 22:03:44.258"></status>
</kw>
<msg timestamp="20201115 22:03:44.259" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:44.224" endtime="20201115 22:03:44.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.265" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:44.261" endtime="20201115 22:03:44.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.268" endtime="20201115 22:03:44.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.216" endtime="20201115 22:03:44.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.210" endtime="20201115 22:03:44.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.291" endtime="20201115 22:03:44.635"></status>
</kw>
<msg timestamp="20201115 22:03:44.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044218083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044239681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:44.288" endtime="20201115 22:03:44.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044218083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044239681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:44.645" endtime="20201115 22:03:44.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.663" endtime="20201115 22:03:44.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.281" endtime="20201115 22:03:44.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.276" endtime="20201115 22:03:44.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:44.681" level="INFO">${RESULT} = [{'time': 0.044239681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1598000000004614e-05, 'source_diff': 2.1598000000004614e-05}, {'time': 0.044607153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:44.672" endtime="20201115 22:03:44.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:44.714" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:44.683" endtime="20201115 22:03:44.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.725" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:03:44.722" endtime="20201115 22:03:44.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.731" level="INFO">VALUE: [2.1598000000004614e-05, 2.161099999999777e-05, 2.158299999999863e-05, 2.158299999999863e-05, 2.1597999999997675e-05, 2.1569000000006e-05, 2.1570000000005474e-05, 2.155499999999949e-05, 2.1570000000005474e-05, 2.1569999999998535e-05, 2.156899999999906e-05, 2.1514000000000255e-05, 2.155499999999949e-05, 2.1583999999998105e-05, 2.1570000000005474e-05, 2.161099999999777e-05, 2.1570000000005474e-05, 2.1584000000005044e-05, 2.156899999999906e-05, 2.1583999999998105e-05, 2.1583999999998105e-05, 2.1583999999998105e-05, 2.156899999999906e-05, 2.1500000000000685e-05, 2.1570000000005474e-05, 2.158299999999863e-05, 2.156899999999906e-05, 2.162500000000428e-05, 2.1583999999998105e-05, 2.161099999999777e-05, 2.161099999999777e-05, 2.1514000000000255e-05, 2.1541999999999395e-05, 2.1569999999998535e-05, 2.162500000000428e-05, 2.156899999999906e-05, 2.158300000000557e-05, 2.1569999999998535e-05, 2.1569999999998535e-05, 2.1541999999999395e-05, 2.156899999999906e-05, 2.159700000000514e-05, 2.1556000000005904e-05, 2.158300000000557e-05, 2.1570000000005474e-05, 2.15969999999982e-05, 2.162499999999734e-05, 2.158299999999863e-05, 2.156899999999906e-05, 2.162499999999734e-05]</msg>
<status status="PASS" starttime="20201115 22:03:44.727" endtime="20201115 22:03:44.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.716" endtime="20201115 22:03:44.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.740" endtime="20201115 22:03:44.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:44.749" endtime="20201115 22:03:44.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.744" endtime="20201115 22:03:44.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.736" endtime="20201115 22:03:44.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.204" endtime="20201115 22:03:44.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.907" endtime="20201115 22:03:44.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.905" endtime="20201115 22:03:44.776"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.780" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.804" endtime="20201115 22:03:44.835"></status>
</kw>
<msg timestamp="20201115 22:03:44.836" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:44.800" endtime="20201115 22:03:44.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:44.843" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:44.838" endtime="20201115 22:03:44.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.845" endtime="20201115 22:03:44.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.793" endtime="20201115 22:03:44.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.787" endtime="20201115 22:03:44.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:44.868" endtime="20201115 22:03:45.174"></status>
</kw>
<msg timestamp="20201115 22:03:45.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048546417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048568792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:44.865" endtime="20201115 22:03:45.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048546417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048568792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:45.183" endtime="20201115 22:03:45.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.202" endtime="20201115 22:03:45.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.858" endtime="20201115 22:03:45.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.853" endtime="20201115 22:03:45.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:45.220" level="INFO">${RESULT} = [{'time': 0.048568792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.237499999999809e-05, 'source_diff': 2.237499999999809e-05}, {'time': 0.048957944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:45.211" endtime="20201115 22:03:45.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:45.253" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:45.223" endtime="20201115 22:03:45.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.264" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:03:45.262" endtime="20201115 22:03:45.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.271" level="INFO">VALUE: [2.237499999999809e-05, 2.2388000000005126e-05, 2.231899999999981e-05, 2.23890000000046e-05, 2.237499999999809e-05, 2.23890000000046e-05, 2.236099999999852e-05, 2.233299999999938e-05, 2.238899999999766e-05, 2.2401999999997757e-05, 2.2333999999998855e-05, 2.240300000000417e-05, 2.237499999999809e-05, 2.238899999999766e-05, 2.2334000000005794e-05, 2.23890000000046e-05, 2.237499999999809e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.2347999999998425e-05, 2.236099999999852e-05, 2.237499999999809e-05, 2.241700000000374e-05, 2.240299999999723e-05, 2.237499999999809e-05, 2.2444000000003406e-05, 2.237500000000503e-05, 2.240299999999723e-05, 2.2443999999996467e-05, 2.238899999999766e-05, 2.240299999999723e-05, 2.238899999999766e-05, 2.236099999999852e-05, 2.23890000000046e-05, 2.238899999999766e-05, 2.237499999999809e-05, 2.238900000001154e-05, 2.238900000001154e-05, 2.234700000000589e-05, 2.238899999999766e-05, 2.237500000000503e-05, 2.238899999999766e-05, 2.236099999999852e-05, 2.2320000000006224e-05, 2.2319999999992346e-05, 2.237500000000503e-05, 2.2429999999989958e-05, 2.238899999999766e-05, 2.237500000000503e-05]</msg>
<status status="PASS" starttime="20201115 22:03:45.267" endtime="20201115 22:03:45.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.255" endtime="20201115 22:03:45.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.280" endtime="20201115 22:03:45.282"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:45.288" endtime="20201115 22:03:45.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.284" endtime="20201115 22:03:45.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.275" endtime="20201115 22:03:45.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.782" endtime="20201115 22:03:45.314"></status>
</kw>
<msg timestamp="20201115 22:03:45.314" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.338" endtime="20201115 22:03:45.370"></status>
</kw>
<msg timestamp="20201115 22:03:45.371" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:45.334" endtime="20201115 22:03:45.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.377" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:45.373" endtime="20201115 22:03:45.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.380" endtime="20201115 22:03:45.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.327" endtime="20201115 22:03:45.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.321" endtime="20201115 22:03:45.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.403" endtime="20201115 22:03:45.747"></status>
</kw>
<msg timestamp="20201115 22:03:45.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043493319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043515667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:45.400" endtime="20201115 22:03:45.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043493319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043515667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:45.756" endtime="20201115 22:03:45.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.775" endtime="20201115 22:03:45.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.393" endtime="20201115 22:03:45.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.388" endtime="20201115 22:03:45.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:45.793" level="INFO">${RESULT} = [{'time': 0.043515667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2347999999998425e-05, 'source_diff': 2.2347999999998425e-05}, {'time': 0.043901486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:45.784" endtime="20201115 22:03:45.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:45.826" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:45.795" endtime="20201115 22:03:45.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.838" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:03:45.836" endtime="20201115 22:03:45.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.844" level="INFO">VALUE: [2.2347999999998425e-05, 2.240300000000417e-05, 2.237499999999809e-05, 2.237500000000503e-05, 2.237499999999809e-05, 2.23890000000046e-05, 2.245899999999551e-05, 2.237499999999809e-05, 2.236099999999852e-05, 2.237499999999809e-05, 2.236099999999852e-05, 2.237499999999809e-05, 2.23890000000046e-05, 2.238899999999766e-05, 2.23890000000046e-05, 2.240299999999723e-05, 2.2443999999996467e-05, 2.236100000000546e-05, 2.23890000000046e-05, 2.237499999999809e-05, 2.234699999999895e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.236099999999852e-05, 2.2444000000003406e-05, 2.236099999999852e-05, 2.2362000000004933e-05, 2.237499999999809e-05, 2.237499999999809e-05, 2.240299999999723e-05, 2.237499999999809e-05, 2.2347999999998425e-05, 2.23890000000046e-05, 2.237499999999809e-05, 2.234699999999895e-05, 2.240299999999723e-05, 2.237499999999809e-05, 2.233300000000632e-05, 2.236100000000546e-05, 2.237499999999809e-05, 2.243100000000331e-05, 2.237499999999809e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.237499999999809e-05, 2.2401999999997757e-05, 2.237499999999809e-05, 2.237499999999809e-05, 2.237499999999809e-05, 2.236100000000546e-05]</msg>
<status status="PASS" starttime="20201115 22:03:45.841" endtime="20201115 22:03:45.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.829" endtime="20201115 22:03:45.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.853" endtime="20201115 22:03:45.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:45.861" endtime="20201115 22:03:45.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.857" endtime="20201115 22:03:45.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.848" endtime="20201115 22:03:45.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.315" endtime="20201115 22:03:45.887"></status>
</kw>
<msg timestamp="20201115 22:03:45.888" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.911" endtime="20201115 22:03:45.942"></status>
</kw>
<msg timestamp="20201115 22:03:45.944" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:45.907" endtime="20201115 22:03:45.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:45.950" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:45.946" endtime="20201115 22:03:45.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.952" endtime="20201115 22:03:45.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.900" endtime="20201115 22:03:45.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.894" endtime="20201115 22:03:45.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:45.976" endtime="20201115 22:03:46.321"></status>
</kw>
<msg timestamp="20201115 22:03:46.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043236653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043259042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:45.973" endtime="20201115 22:03:46.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043236653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043259042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:46.331" endtime="20201115 22:03:46.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.349" endtime="20201115 22:03:46.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.965" endtime="20201115 22:03:46.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.961" endtime="20201115 22:03:46.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:46.367" level="INFO">${RESULT} = [{'time': 0.043259042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.238899999999766e-05, 'source_diff': 2.238899999999766e-05}, {'time': 0.043658139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:46.358" endtime="20201115 22:03:46.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:46.399" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:46.370" endtime="20201115 22:03:46.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.412" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:03:46.408" endtime="20201115 22:03:46.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.417" level="INFO">VALUE: [2.238899999999766e-05, 2.238899999999766e-05, 2.2387999999998187e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.237499999999809e-05, 2.238899999999766e-05, 2.2388000000005126e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.240300000000417e-05, 2.240299999999723e-05, 2.237499999999809e-05, 2.240299999999723e-05, 2.238899999999766e-05, 2.237499999999809e-05, 2.237499999999809e-05, 2.237500000000503e-05, 2.244499999999594e-05, 2.238899999999766e-05, 2.2429999999996897e-05, 2.236099999999852e-05, 2.240299999999723e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.237499999999809e-05, 2.237499999999809e-05, 2.23890000000046e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.237500000000503e-05, 2.2416000000004266e-05, 2.237499999999809e-05, 2.23890000000046e-05, 2.236099999999852e-05, 2.237499999999809e-05, 2.238899999999766e-05, 2.233299999999938e-05, 2.237499999999809e-05, 2.236099999999852e-05, 2.237499999999809e-05, 2.234699999999895e-05, 2.237500000000503e-05, 2.238899999999766e-05, 2.2361999999997995e-05, 2.245899999999551e-05, 2.236100000000546e-05, 2.237500000000503e-05]</msg>
<status status="PASS" starttime="20201115 22:03:46.414" endtime="20201115 22:03:46.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.401" endtime="20201115 22:03:46.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.426" endtime="20201115 22:03:46.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:46.435" endtime="20201115 22:03:46.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.430" endtime="20201115 22:03:46.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.422" endtime="20201115 22:03:46.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:45.889" endtime="20201115 22:03:46.460"></status>
</kw>
<msg timestamp="20201115 22:03:46.461" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.484" endtime="20201115 22:03:46.516"></status>
</kw>
<msg timestamp="20201115 22:03:46.517" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:46.481" endtime="20201115 22:03:46.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.524" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:46.520" endtime="20201115 22:03:46.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.526" endtime="20201115 22:03:46.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.473" endtime="20201115 22:03:46.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.467" endtime="20201115 22:03:46.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.550" endtime="20201115 22:03:46.893"></status>
</kw>
<msg timestamp="20201115 22:03:46.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043151736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043174111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:46.546" endtime="20201115 22:03:46.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043151736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043174111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:46.903" endtime="20201115 22:03:46.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.922" endtime="20201115 22:03:46.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.539" endtime="20201115 22:03:46.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.534" endtime="20201115 22:03:46.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:46.940" level="INFO">${RESULT} = [{'time': 0.043174111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.237499999999809e-05, 'source_diff': 2.237499999999809e-05}, {'time': 0.043553264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:46.931" endtime="20201115 22:03:46.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:46.971" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:46.942" endtime="20201115 22:03:46.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.982" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:03:46.980" endtime="20201115 22:03:46.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:46.988" level="INFO">VALUE: [2.237499999999809e-05, 2.23890000000046e-05, 2.243100000000331e-05, 2.2444000000003406e-05, 2.237499999999809e-05, 2.236100000000546e-05, 2.237499999999809e-05, 2.236099999999852e-05, 2.2333999999998855e-05, 2.2415999999997327e-05, 2.237500000000503e-05, 2.233299999999938e-05, 2.240300000000417e-05, 2.237499999999809e-05, 2.233299999999938e-05, 2.237500000000503e-05, 2.238899999999766e-05, 2.237499999999809e-05, 2.238899999999766e-05, 2.2347999999998425e-05, 2.237499999999809e-05, 2.23890000000046e-05, 2.2387999999998187e-05, 2.238899999999766e-05, 2.240299999999723e-05, 2.234699999999895e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.240300000000417e-05, 2.238899999999766e-05, 2.233299999999938e-05, 2.23890000000046e-05, 2.237500000000503e-05, 2.236099999999852e-05, 2.23890000000046e-05, 2.237500000000503e-05, 2.237499999999809e-05, 2.2319999999999285e-05, 2.237499999999809e-05, 2.238899999999766e-05, 2.237500000000503e-05, 2.240299999999723e-05, 2.236099999999852e-05, 2.236100000000546e-05, 2.238899999999766e-05, 2.2334000000005794e-05, 2.2444000000003406e-05, 2.237499999999809e-05, 2.236099999999852e-05, 2.240299999999723e-05]</msg>
<status status="PASS" starttime="20201115 22:03:46.985" endtime="20201115 22:03:46.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.973" endtime="20201115 22:03:46.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:46.998" endtime="20201115 22:03:47.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:47.007" endtime="20201115 22:03:47.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.002" endtime="20201115 22:03:47.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.994" endtime="20201115 22:03:47.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:46.462" endtime="20201115 22:03:47.032"></status>
</kw>
<msg timestamp="20201115 22:03:47.033" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.056" endtime="20201115 22:03:47.089"></status>
</kw>
<msg timestamp="20201115 22:03:47.090" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:47.053" endtime="20201115 22:03:47.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.096" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:47.092" endtime="20201115 22:03:47.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.099" endtime="20201115 22:03:47.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.046" endtime="20201115 22:03:47.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.040" endtime="20201115 22:03:47.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.123" endtime="20201115 22:03:47.466"></status>
</kw>
<msg timestamp="20201115 22:03:47.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043074944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043097319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:47.119" endtime="20201115 22:03:47.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043074944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043097319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:47.483" endtime="20201115 22:03:47.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.502" endtime="20201115 22:03:47.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.112" endtime="20201115 22:03:47.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.107" endtime="20201115 22:03:47.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:47.520" level="INFO">${RESULT} = [{'time': 0.043097319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.237500000000503e-05, 'source_diff': 2.237500000000503e-05}, {'time': 0.043483556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:47.511" endtime="20201115 22:03:47.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:47.551" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:47.522" endtime="20201115 22:03:47.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.562" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:03:47.560" endtime="20201115 22:03:47.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.568" level="INFO">VALUE: [2.237500000000503e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.237499999999809e-05, 2.237499999999809e-05, 2.234699999999895e-05, 2.240299999999723e-05, 2.238899999999766e-05, 2.240299999999723e-05, 2.2402000000004696e-05, 2.2333999999998855e-05, 2.233299999999938e-05, 2.238899999999766e-05, 2.240300000000417e-05, 2.237500000000503e-05, 2.238899999999766e-05, 2.236099999999852e-05, 2.2430000000003836e-05, 2.238899999999766e-05, 2.23890000000046e-05, 2.234699999999895e-05, 2.236100000000546e-05, 2.237499999999809e-05, 2.237499999999809e-05, 2.241700000000374e-05, 2.244499999999594e-05, 2.23890000000046e-05, 2.237499999999809e-05, 2.23890000000046e-05, 2.237499999999809e-05, 2.243099999999637e-05, 2.237500000000503e-05, 2.238899999999766e-05, 2.23890000000046e-05, 2.2319999999999285e-05, 2.240300000000417e-05, 2.238899999999766e-05, 2.244500000000288e-05, 2.237499999999809e-05, 2.23890000000046e-05, 2.233299999999938e-05, 2.236099999999852e-05, 2.237499999999809e-05, 2.237500000000503e-05, 2.236100000000546e-05, 2.2387999999998187e-05, 2.2347999999998425e-05, 2.238899999999766e-05, 2.237500000000503e-05, 2.238899999999766e-05]</msg>
<status status="PASS" starttime="20201115 22:03:47.564" endtime="20201115 22:03:47.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.553" endtime="20201115 22:03:47.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.577" endtime="20201115 22:03:47.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:47.586" endtime="20201115 22:03:47.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.582" endtime="20201115 22:03:47.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.572" endtime="20201115 22:03:47.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.034" endtime="20201115 22:03:47.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.778" endtime="20201115 22:03:47.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.776" endtime="20201115 22:03:47.613"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.618" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.641" endtime="20201115 22:03:47.675"></status>
</kw>
<msg timestamp="20201115 22:03:47.676" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:47.638" endtime="20201115 22:03:47.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:47.683" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:47.678" endtime="20201115 22:03:47.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.685" endtime="20201115 22:03:47.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.631" endtime="20201115 22:03:47.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.625" endtime="20201115 22:03:47.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:47.709" endtime="20201115 22:03:48.053"></status>
</kw>
<msg timestamp="20201115 22:03:48.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048605722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048628889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:47.706" endtime="20201115 22:03:48.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048605722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048628889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:48.062" endtime="20201115 22:03:48.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.081" endtime="20201115 22:03:48.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.699" endtime="20201115 22:03:48.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.694" endtime="20201115 22:03:48.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:48.099" level="INFO">${RESULT} = [{'time': 0.048628889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.316700000000449e-05, 'source_diff': 2.316700000000449e-05}, {'time': 0.049037847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:48.090" endtime="20201115 22:03:48.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:48.132" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:48.101" endtime="20201115 22:03:48.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.143" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:03:48.141" endtime="20201115 22:03:48.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.149" level="INFO">VALUE: [2.316700000000449e-05, 2.3222000000003296e-05, 2.3180000000004586e-05, 2.319499999999669e-05, 2.3180000000004586e-05, 2.3194000000004156e-05, 2.3151999999998507e-05, 2.3208000000003726e-05, 2.32090000000032e-05, 2.3179999999997647e-05, 2.3207999999996787e-05, 2.3263999999995066e-05, 2.3179999999997647e-05, 2.3207999999996787e-05, 2.316699999999755e-05, 2.318100000000406e-05, 2.3165999999998077e-05, 2.316699999999755e-05, 2.3250000000002435e-05, 2.3179999999997647e-05, 2.318100000000406e-05, 2.3249999999995496e-05, 2.318099999999712e-05, 2.3193999999997217e-05, 2.316699999999755e-05, 2.313899999999841e-05, 2.3193999999997217e-05, 2.320899999999626e-05, 2.319499999999669e-05, 2.3179999999997647e-05, 2.3180000000004586e-05, 2.3208000000003726e-05, 2.3180000000004586e-05, 2.3194000000004156e-05, 2.318099999999712e-05, 2.319500000000363e-05, 2.3194000000004156e-05, 2.319500000000363e-05, 2.3179999999997647e-05, 2.312499999999884e-05, 2.3179999999997647e-05, 2.3193999999990278e-05, 2.3165999999991138e-05, 2.3207999999996787e-05, 2.3180000000011525e-05, 2.316700000000449e-05, 2.3207999999996787e-05, 2.3179999999997647e-05, 2.3207999999996787e-05, 2.3180000000011525e-05]</msg>
<status status="PASS" starttime="20201115 22:03:48.146" endtime="20201115 22:03:48.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.134" endtime="20201115 22:03:48.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.158" endtime="20201115 22:03:48.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:48.167" endtime="20201115 22:03:48.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.162" endtime="20201115 22:03:48.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.153" endtime="20201115 22:03:48.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.619" endtime="20201115 22:03:48.193"></status>
</kw>
<msg timestamp="20201115 22:03:48.194" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.217" endtime="20201115 22:03:48.250"></status>
</kw>
<msg timestamp="20201115 22:03:48.251" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:48.214" endtime="20201115 22:03:48.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.258" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:48.253" endtime="20201115 22:03:48.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.260" endtime="20201115 22:03:48.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.206" endtime="20201115 22:03:48.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.201" endtime="20201115 22:03:48.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.284" endtime="20201115 22:03:48.607"></status>
</kw>
<msg timestamp="20201115 22:03:48.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043163569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04318675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:48.281" endtime="20201115 22:03:48.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043163569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04318675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:48.616" endtime="20201115 22:03:48.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.635" endtime="20201115 22:03:48.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.273" endtime="20201115 22:03:48.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.268" endtime="20201115 22:03:48.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:48.653" level="INFO">${RESULT} = [{'time': 0.04318675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.318100000000406e-05, 'source_diff': 2.318100000000406e-05}, {'time': 0.043591306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:48.644" endtime="20201115 22:03:48.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:48.684" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:48.655" endtime="20201115 22:03:48.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.695" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:03:48.693" endtime="20201115 22:03:48.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.700" level="INFO">VALUE: [2.318100000000406e-05, 2.32090000000032e-05, 2.318100000000406e-05, 2.3194000000004156e-05, 2.318099999999712e-05, 2.3193999999997217e-05, 2.316700000000449e-05, 2.318099999999712e-05, 2.318100000000406e-05, 2.312499999999884e-05, 2.3097999999999175e-05, 2.318100000000406e-05, 2.3193999999997217e-05, 2.3179999999997647e-05, 2.3180000000004586e-05, 2.3249999999995496e-05, 2.3193999999997217e-05, 2.3193999999997217e-05, 2.318099999999712e-05, 2.316700000000449e-05, 2.313899999999841e-05, 2.319499999999669e-05, 2.318099999999712e-05, 2.316700000000449e-05, 2.319499999999669e-05, 2.3179999999997647e-05, 2.315299999999798e-05, 2.3193999999997217e-05, 2.3193999999997217e-05, 2.322299999999583e-05, 2.32090000000032e-05, 2.3221999999996357e-05, 2.318099999999712e-05, 2.3249999999995496e-05, 2.3179999999997647e-05, 2.318099999999712e-05, 2.3179999999997647e-05, 2.32090000000032e-05, 2.318099999999712e-05, 2.318099999999712e-05, 2.3264000000002005e-05, 2.312499999999884e-05, 2.3193999999997217e-05, 2.3235999999995927e-05, 2.3193999999997217e-05, 2.3221999999996357e-05, 2.3179999999997647e-05, 2.32090000000032e-05, 2.3179999999997647e-05, 2.3193999999990278e-05]</msg>
<status status="PASS" starttime="20201115 22:03:48.697" endtime="20201115 22:03:48.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.686" endtime="20201115 22:03:48.703"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.709" endtime="20201115 22:03:48.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:48.718" endtime="20201115 22:03:48.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.713" endtime="20201115 22:03:48.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.705" endtime="20201115 22:03:48.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.195" endtime="20201115 22:03:48.743"></status>
</kw>
<msg timestamp="20201115 22:03:48.744" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.769" endtime="20201115 22:03:48.802"></status>
</kw>
<msg timestamp="20201115 22:03:48.803" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:48.765" endtime="20201115 22:03:48.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:48.810" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:48.806" endtime="20201115 22:03:48.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.812" endtime="20201115 22:03:48.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.758" endtime="20201115 22:03:48.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.751" endtime="20201115 22:03:48.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:48.836" endtime="20201115 22:03:49.178"></status>
</kw>
<msg timestamp="20201115 22:03:49.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045523306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045546486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:48.833" endtime="20201115 22:03:49.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045523306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045546486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:49.188" endtime="20201115 22:03:49.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.206" endtime="20201115 22:03:49.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.825" endtime="20201115 22:03:49.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.821" endtime="20201115 22:03:49.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:49.224" level="INFO">${RESULT} = [{'time': 0.045546486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3179999999997647e-05, 'source_diff': 2.3179999999997647e-05}, {'time': 0.045946875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:49.215" endtime="20201115 22:03:49.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:49.255" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:49.226" endtime="20201115 22:03:49.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.267" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:03:49.264" endtime="20201115 22:03:49.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.272" level="INFO">VALUE: [2.3179999999997647e-05, 2.3193999999997217e-05, 2.316699999999755e-05, 2.318100000000406e-05, 2.322300000000277e-05, 2.3250000000002435e-05, 2.319499999999669e-05, 2.3193999999997217e-05, 2.319500000000363e-05, 2.319500000000363e-05, 2.319499999999669e-05, 2.318100000000406e-05, 2.3236000000002865e-05, 2.3193999999997217e-05, 2.319500000000363e-05, 2.316700000000449e-05, 2.316700000000449e-05, 2.319500000000363e-05, 2.3166000000005016e-05, 2.318100000000406e-05, 2.318100000000406e-05, 2.3193999999997217e-05, 2.3193999999997217e-05, 2.3207999999996787e-05, 2.3179999999997647e-05, 2.3165999999998077e-05, 2.3166000000005016e-05, 2.3193999999997217e-05, 2.3194000000004156e-05, 2.318100000000406e-05, 2.320899999999626e-05, 2.3193999999997217e-05, 2.319500000000363e-05, 2.3193999999997217e-05, 2.3194000000004156e-05, 2.3179999999997647e-05, 2.316699999999755e-05, 2.316700000000449e-05, 2.3194000000004156e-05, 2.32090000000032e-05, 2.318099999999712e-05, 2.3180000000004586e-05, 2.316700000000449e-05, 2.3166999999990612e-05, 2.316700000000449e-05, 2.3194000000004156e-05, 2.3165999999991138e-05, 2.319500000000363e-05, 2.316700000000449e-05, 2.3207999999996787e-05]</msg>
<status status="PASS" starttime="20201115 22:03:49.269" endtime="20201115 22:03:49.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.257" endtime="20201115 22:03:49.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.281" endtime="20201115 22:03:49.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:49.289" endtime="20201115 22:03:49.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.285" endtime="20201115 22:03:49.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.276" endtime="20201115 22:03:49.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:48.745" endtime="20201115 22:03:49.315"></status>
</kw>
<msg timestamp="20201115 22:03:49.316" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.340" endtime="20201115 22:03:49.375"></status>
</kw>
<msg timestamp="20201115 22:03:49.376" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:49.337" endtime="20201115 22:03:49.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.382" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:49.378" endtime="20201115 22:03:49.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.385" endtime="20201115 22:03:49.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.329" endtime="20201115 22:03:49.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.323" endtime="20201115 22:03:49.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.409" endtime="20201115 22:03:49.754"></status>
</kw>
<msg timestamp="20201115 22:03:49.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045972097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045995292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:49.405" endtime="20201115 22:03:49.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045972097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045995292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:49.763" endtime="20201115 22:03:49.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.782" endtime="20201115 22:03:49.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.398" endtime="20201115 22:03:49.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.393" endtime="20201115 22:03:49.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:49.800" level="INFO">${RESULT} = [{'time': 0.045995292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.319499999999669e-05, 'source_diff': 2.319499999999669e-05}, {'time': 0.046398569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:49.791" endtime="20201115 22:03:49.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:49.831" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:49.802" endtime="20201115 22:03:49.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.842" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:03:49.840" endtime="20201115 22:03:49.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.847" level="INFO">VALUE: [2.319499999999669e-05, 2.3179999999997647e-05, 2.3221999999996357e-05, 2.3179999999997647e-05, 2.318099999999712e-05, 2.320899999999626e-05, 2.3208000000003726e-05, 2.3250000000002435e-05, 2.3165999999998077e-05, 2.319499999999669e-05, 2.319500000000363e-05, 2.3207999999996787e-05, 2.316699999999755e-05, 2.3180000000004586e-05, 2.3180000000004586e-05, 2.318100000000406e-05, 2.318100000000406e-05, 2.3180000000004586e-05, 2.3180000000004586e-05, 2.3249999999995496e-05, 2.3180000000004586e-05, 2.3179999999997647e-05, 2.3264000000002005e-05, 2.316699999999755e-05, 2.3194000000004156e-05, 2.3193999999997217e-05, 2.318099999999712e-05, 2.3222000000003296e-05, 2.319500000000363e-05, 2.319499999999669e-05, 2.313899999999841e-05, 2.3263999999995066e-05, 2.320899999999626e-05, 2.3222000000003296e-05, 2.313899999999841e-05, 2.318099999999712e-05, 2.3207999999996787e-05, 2.319500000000363e-05, 2.3193999999997217e-05, 2.3194000000004156e-05, 2.3180000000004586e-05, 2.319499999998975e-05, 2.3193999999990278e-05, 2.320899999999626e-05, 2.3179999999997647e-05, 2.3151999999998507e-05, 2.3207999999996787e-05, 2.316700000000449e-05, 2.3276999999988224e-05, 2.3179999999997647e-05]</msg>
<status status="PASS" starttime="20201115 22:03:49.844" endtime="20201115 22:03:49.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.833" endtime="20201115 22:03:49.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.856" endtime="20201115 22:03:49.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:49.866" endtime="20201115 22:03:49.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.861" endtime="20201115 22:03:49.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.852" endtime="20201115 22:03:49.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.317" endtime="20201115 22:03:49.891"></status>
</kw>
<msg timestamp="20201115 22:03:49.892" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.915" endtime="20201115 22:03:49.948"></status>
</kw>
<msg timestamp="20201115 22:03:49.949" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:49.912" endtime="20201115 22:03:49.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:49.955" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:49.951" endtime="20201115 22:03:49.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.958" endtime="20201115 22:03:49.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.904" endtime="20201115 22:03:49.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.899" endtime="20201115 22:03:49.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:49.983" endtime="20201115 22:03:50.326"></status>
</kw>
<msg timestamp="20201115 22:03:50.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043044472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043067653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:49.980" endtime="20201115 22:03:50.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043044472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043067653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:50.335" endtime="20201115 22:03:50.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.354" endtime="20201115 22:03:50.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.971" endtime="20201115 22:03:50.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.966" endtime="20201115 22:03:50.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:50.372" level="INFO">${RESULT} = [{'time': 0.043067653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.318099999999712e-05, 'source_diff': 2.318099999999712e-05}, {'time': 0.043469889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:50.363" endtime="20201115 22:03:50.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:50.406" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:50.375" endtime="20201115 22:03:50.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.417" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:03:50.415" endtime="20201115 22:03:50.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.423" level="INFO">VALUE: [2.318099999999712e-05, 2.318099999999712e-05, 2.3165999999998077e-05, 2.3208000000003726e-05, 2.3221999999996357e-05, 2.312499999999884e-05, 2.320899999999626e-05, 2.3249999999995496e-05, 2.319500000000363e-05, 2.318100000000406e-05, 2.3193999999997217e-05, 2.3194000000004156e-05, 2.3151999999998507e-05, 2.3207999999996787e-05, 2.32090000000032e-05, 2.319499999999669e-05, 2.322300000000277e-05, 2.3193999999997217e-05, 2.3165999999998077e-05, 2.32090000000032e-05, 2.316699999999755e-05, 2.3194000000004156e-05, 2.312499999999884e-05, 2.32090000000032e-05, 2.3165999999998077e-05, 2.3179999999997647e-05, 2.3208000000003726e-05, 2.316699999999755e-05, 2.3179999999997647e-05, 2.318099999999712e-05, 2.3236000000002865e-05, 2.3166000000005016e-05, 2.32090000000032e-05, 2.3179999999997647e-05, 2.3193999999997217e-05, 2.319500000000363e-05, 2.3193999999997217e-05, 2.3208000000003726e-05, 2.3250000000002435e-05, 2.3179999999997647e-05, 2.3193999999997217e-05, 2.3235999999995927e-05, 2.3208000000003726e-05, 2.3179999999997647e-05, 2.319499999999669e-05, 2.319500000000363e-05, 2.319500000000363e-05, 2.3166000000005016e-05, 2.3166000000005016e-05, 2.3222000000003296e-05]</msg>
<status status="PASS" starttime="20201115 22:03:50.419" endtime="20201115 22:03:50.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.408" endtime="20201115 22:03:50.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.433" endtime="20201115 22:03:50.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:50.441" endtime="20201115 22:03:50.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.437" endtime="20201115 22:03:50.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.428" endtime="20201115 22:03:50.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:49.893" endtime="20201115 22:03:50.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.616" endtime="20201115 22:03:50.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:47.614" endtime="20201115 22:03:50.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.334" endtime="20201115 22:03:50.468"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:50.479" endtime="20201115 22:03:50.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.474" endtime="20201115 22:03:50.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.472" endtime="20201115 22:03:50.503"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:02:40.207" endtime="20201115 22:03:50.504" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:50.522" endtime="20201115 22:03:50.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.518" endtime="20201115 22:03:50.546"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.581" endtime="20201115 22:03:50.600"></status>
</kw>
<msg timestamp="20201115 22:03:50.601" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:50.578" endtime="20201115 22:03:50.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.608" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:50.603" endtime="20201115 22:03:50.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.614" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:03:50.610" endtime="20201115 22:03:50.615"></status>
</kw>
<status status="FAIL" starttime="20201115 22:03:50.569" endtime="20201115 22:03:50.617"></status>
</kw>
<status status="FAIL" starttime="20201115 22:03:50.562" endtime="20201115 22:03:50.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.559" endtime="20201115 22:03:50.619"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:03:50.627" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:03:50.626" endtime="20201115 22:03:50.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.621" endtime="20201115 22:03:50.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.558" endtime="20201115 22:03:50.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.556" endtime="20201115 22:03:50.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.631" endtime="20201115 22:03:50.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.552" endtime="20201115 22:03:50.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.547" endtime="20201115 22:03:50.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.515" endtime="20201115 22:03:50.638"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.646" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.670" endtime="20201115 22:03:50.686"></status>
</kw>
<msg timestamp="20201115 22:03:50.687" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:50.666" endtime="20201115 22:03:50.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:50.694" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:50.689" endtime="20201115 22:03:50.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.696" endtime="20201115 22:03:50.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.659" endtime="20201115 22:03:50.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.652" endtime="20201115 22:03:50.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:50.719" endtime="20201115 22:03:51.073"></status>
</kw>
<msg timestamp="20201115 22:03:51.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141040583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141042028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:50.716" endtime="20201115 22:03:51.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141040583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141042028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:51.083" endtime="20201115 22:03:51.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.102" endtime="20201115 22:03:51.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.709" endtime="20201115 22:03:51.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.704" endtime="20201115 22:03:51.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:51.122" level="INFO">${RESULT} = [{'time': 0.141042028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.445000000016572e-06, 'source_diff': 1.445000000016572e-06}, {'time': 0.141117708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:51.113" endtime="20201115 22:03:51.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:51.153" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:51.124" endtime="20201115 22:03:51.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.164" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:03:51.162" endtime="20201115 22:03:51.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.170" level="INFO">VALUE: [1.445000000016572e-06, 1.4160000000040807e-06, 1.4579999999819737e-06, 1.4449999999888163e-06, 1.4170000000035543e-06, 1.4299999999967117e-06, 1.4439999999893427e-06, 1.445000000016572e-06, 1.360999999977519e-06, 1.4439999999893427e-06, 1.445000000016572e-06, 1.3890000000182923e-06, 1.431000000023941e-06, 1.4449999999888163e-06, 1.473000000001834e-06, 1.4580000000097293e-06, 1.4440000000170983e-06, 1.3890000000182923e-06, 1.4299999999967117e-06, 1.4299999999967117e-06, 1.4309999999961853e-06, 1.4440000000170983e-06, 1.445000000016572e-06, 1.4440000000170983e-06, 1.445000000016572e-06, 1.4439999999893427e-06, 1.4440000000170983e-06, 1.4440000000170983e-06, 1.4439999999893427e-06, 1.4299999999967117e-06, 1.4170000000035543e-06, 1.445000000016572e-06, 1.4439999999893427e-06, 1.4440000000170983e-06, 1.4449999999888163e-06, 1.4439999999893427e-06, 1.4439999999893427e-06, 1.4720000000023603e-06, 1.4580000000097293e-06, 1.4299999999967117e-06, 1.4449999999888163e-06, 1.4580000000097293e-06, 1.4309999999961853e-06, 1.4440000000170983e-06, 1.4439999999893427e-06, 1.4719999999746047e-06, 1.4579999999819737e-06, 1.4299999999967117e-06, 1.4580000000097293e-06, 1.445000000016572e-06]</msg>
<status status="PASS" starttime="20201115 22:03:51.166" endtime="20201115 22:03:51.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.155" endtime="20201115 22:03:51.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.179" endtime="20201115 22:03:51.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:51.187" endtime="20201115 22:03:51.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.183" endtime="20201115 22:03:51.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.174" endtime="20201115 22:03:51.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.647" endtime="20201115 22:03:51.214"></status>
</kw>
<msg timestamp="20201115 22:03:51.214" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.237" endtime="20201115 22:03:51.254"></status>
</kw>
<msg timestamp="20201115 22:03:51.255" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:51.234" endtime="20201115 22:03:51.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.261" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:51.257" endtime="20201115 22:03:51.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.264" endtime="20201115 22:03:51.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.227" endtime="20201115 22:03:51.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.221" endtime="20201115 22:03:51.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.287" endtime="20201115 22:03:51.633"></status>
</kw>
<msg timestamp="20201115 22:03:51.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043170208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043171639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:51.284" endtime="20201115 22:03:51.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043170208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043171639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:51.642" endtime="20201115 22:03:51.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.661" endtime="20201115 22:03:51.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.277" endtime="20201115 22:03:51.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.272" endtime="20201115 22:03:51.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:51.681" level="INFO">${RESULT} = [{'time': 0.043171639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999961853e-06, 'source_diff': 1.4309999999961853e-06}, {'time': 0.043238986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:51.672" endtime="20201115 22:03:51.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:51.712" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:51.683" endtime="20201115 22:03:51.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.723" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:03:51.720" endtime="20201115 22:03:51.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.729" level="INFO">VALUE: [1.4309999999961853e-06, 1.4440000000032205e-06, 1.4450000000026941e-06, 1.4309999999961853e-06, 1.4299999999967117e-06, 1.4589999999953251e-06, 1.4439999999962816e-06, 1.4439999999962816e-06, 1.4439999999962816e-06, 1.459000000002264e-06, 1.4580000000027904e-06, 1.459000000002264e-06, 1.4310000000031242e-06, 1.4299999999967117e-06, 1.4449999999957552e-06, 1.459000000002264e-06, 1.4450000000026941e-06, 1.4580000000027904e-06, 1.4440000000032205e-06, 1.4449999999957552e-06, 1.4580000000027904e-06, 1.4160000000040807e-06, 1.4310000000031242e-06, 1.4160000000040807e-06, 1.4450000000026941e-06, 1.4440000000032205e-06, 1.4580000000027904e-06, 1.4439999999962816e-06, 1.4860000000019302e-06, 1.4440000000032205e-06, 1.4439999999962816e-06, 1.4299999999967117e-06, 1.459000000002264e-06, 1.459000000002264e-06, 1.4439999999962816e-06, 1.4440000000032205e-06, 1.4439999999962816e-06, 1.4580000000027904e-06, 1.4449999999957552e-06, 1.4449999999957552e-06, 1.4310000000031242e-06, 1.4580000000027904e-06, 1.459000000002264e-06, 1.4580000000027904e-06, 1.4440000000032205e-06, 1.4859999999949913e-06, 1.4450000000026941e-06, 1.4450000000026941e-06, 1.4449999999957552e-06, 1.4579999999958515e-06]</msg>
<status status="PASS" starttime="20201115 22:03:51.725" endtime="20201115 22:03:51.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.713" endtime="20201115 22:03:51.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.738" endtime="20201115 22:03:51.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:51.747" endtime="20201115 22:03:51.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.742" endtime="20201115 22:03:51.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.734" endtime="20201115 22:03:51.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.215" endtime="20201115 22:03:51.772"></status>
</kw>
<msg timestamp="20201115 22:03:51.773" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.796" endtime="20201115 22:03:51.813"></status>
</kw>
<msg timestamp="20201115 22:03:51.814" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:51.793" endtime="20201115 22:03:51.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:51.821" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:51.816" endtime="20201115 22:03:51.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.823" endtime="20201115 22:03:51.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.786" endtime="20201115 22:03:51.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.780" endtime="20201115 22:03:51.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:51.847" endtime="20201115 22:03:52.189"></status>
</kw>
<msg timestamp="20201115 22:03:52.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043490833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043492236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:51.843" endtime="20201115 22:03:52.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043490833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043492236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:52.199" endtime="20201115 22:03:52.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.218" endtime="20201115 22:03:52.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.836" endtime="20201115 22:03:52.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.831" endtime="20201115 22:03:52.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:52.237" level="INFO">${RESULT} = [{'time': 0.043492236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4029999999970455e-06, 'source_diff': 1.4029999999970455e-06}, {'time': 0.043556278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:52.228" endtime="20201115 22:03:52.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:52.268" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:52.239" endtime="20201115 22:03:52.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.279" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:03:52.277" endtime="20201115 22:03:52.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.285" level="INFO">VALUE: [1.4029999999970455e-06, 1.4589999999953251e-06, 1.4450000000026941e-06, 1.4440000000032205e-06, 1.4309999999961853e-06, 1.4580000000027904e-06, 1.3750000000048446e-06, 1.472999999994895e-06, 1.4450000000026941e-06, 1.4580000000027904e-06, 1.4310000000031242e-06, 1.4309999999961853e-06, 1.52800000000064e-06, 1.4440000000032205e-06, 1.459000000002264e-06, 1.4449999999957552e-06, 1.4019999999975719e-06, 1.4169999999966154e-06, 1.4439999999962816e-06, 1.4439999999962816e-06, 1.459000000002264e-06, 1.4439999999962816e-06, 1.4299999999967117e-06, 1.4440000000032205e-06, 1.4299999999967117e-06, 1.4439999999962816e-06, 1.4439999999962816e-06, 1.4439999999962816e-06, 1.4450000000026941e-06, 1.4439999999962816e-06, 1.4860000000019302e-06, 1.4440000000032205e-06, 1.459000000002264e-06, 1.4580000000027904e-06, 1.4020000000045107e-06, 1.4450000000026941e-06, 1.4170000000035543e-06, 1.4449999999957552e-06, 1.4580000000027904e-06, 1.3890000000044145e-06, 1.4450000000026941e-06, 1.4580000000027904e-06, 1.4450000000026941e-06, 1.4450000000026941e-06, 1.4439999999962816e-06, 1.4439999999962816e-06, 1.4449999999957552e-06, 1.4439999999962816e-06, 1.4450000000026941e-06, 1.4450000000026941e-06]</msg>
<status status="PASS" starttime="20201115 22:03:52.281" endtime="20201115 22:03:52.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.270" endtime="20201115 22:03:52.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.294" endtime="20201115 22:03:52.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:52.303" endtime="20201115 22:03:52.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.298" endtime="20201115 22:03:52.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.290" endtime="20201115 22:03:52.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:51.774" endtime="20201115 22:03:52.329"></status>
</kw>
<msg timestamp="20201115 22:03:52.329" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.353" endtime="20201115 22:03:52.370"></status>
</kw>
<msg timestamp="20201115 22:03:52.371" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:52.349" endtime="20201115 22:03:52.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.377" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:52.373" endtime="20201115 22:03:52.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.380" endtime="20201115 22:03:52.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.342" endtime="20201115 22:03:52.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.336" endtime="20201115 22:03:52.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.403" endtime="20201115 22:03:52.746"></status>
</kw>
<msg timestamp="20201115 22:03:52.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043702042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043703486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:52.400" endtime="20201115 22:03:52.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043702042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043703486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:52.756" endtime="20201115 22:03:52.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.775" endtime="20201115 22:03:52.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.393" endtime="20201115 22:03:52.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.388" endtime="20201115 22:03:52.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:52.794" level="INFO">${RESULT} = [{'time': 0.043703486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4439999999962816e-06, 'source_diff': 1.4439999999962816e-06}, {'time': 0.04377875, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:03:52.785" endtime="20201115 22:03:52.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:52.828" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:52.796" endtime="20201115 22:03:52.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.839" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:03:52.837" endtime="20201115 22:03:52.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.845" level="INFO">VALUE: [1.4439999999962816e-06, 1.4439999999962816e-06, 1.459000000002264e-06, 1.4159999999971418e-06, 1.4440000000032205e-06, 1.4019999999975719e-06, 1.4449999999957552e-06, 1.4440000000032205e-06, 1.4440000000032205e-06, 1.4169999999966154e-06, 1.4450000000026941e-06, 1.4450000000026941e-06, 1.4159999999971418e-06, 1.4450000000026941e-06, 1.4580000000027904e-06, 1.4450000000026941e-06, 1.4449999999957552e-06, 1.4449999999957552e-06, 1.4870000000014039e-06, 1.4300000000036506e-06, 1.4580000000027904e-06, 1.51400000000107e-06, 1.4439999999962816e-06, 1.4439999999962816e-06, 1.4450000000026941e-06, 1.4300000000036506e-06, 1.4169999999966154e-06, 1.4439999999962816e-06, 1.4160000000040807e-06, 1.4439999999962816e-06, 1.4719999999954214e-06, 1.4440000000032205e-06, 1.4449999999957552e-06, 1.4439999999962816e-06, 1.4450000000026941e-06, 1.4449999999957552e-06, 1.4450000000026941e-06, 1.4299999999967117e-06, 1.4580000000027904e-06, 1.4440000000032205e-06, 1.4029999999970455e-06, 1.4310000000031242e-06, 1.4440000000032205e-06, 1.4439999999962816e-06, 1.4450000000026941e-06, 1.52800000000064e-06, 1.4450000000026941e-06, 1.4169999999966154e-06, 1.459000000002264e-06, 1.4579999999958515e-06]</msg>
<status status="PASS" starttime="20201115 22:03:52.842" endtime="20201115 22:03:52.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.830" endtime="20201115 22:03:52.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.861" endtime="20201115 22:03:52.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:52.870" endtime="20201115 22:03:52.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.865" endtime="20201115 22:03:52.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.856" endtime="20201115 22:03:52.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.330" endtime="20201115 22:03:52.895"></status>
</kw>
<msg timestamp="20201115 22:03:52.896" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.919" endtime="20201115 22:03:52.936"></status>
</kw>
<msg timestamp="20201115 22:03:52.937" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:52.916" endtime="20201115 22:03:52.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:52.943" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:52.939" endtime="20201115 22:03:52.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.946" endtime="20201115 22:03:52.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.908" endtime="20201115 22:03:52.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.903" endtime="20201115 22:03:52.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:52.969" endtime="20201115 22:03:53.311"></status>
</kw>
<msg timestamp="20201115 22:03:53.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043083944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043085389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:52.966" endtime="20201115 22:03:53.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043083944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043085389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:53.321" endtime="20201115 22:03:53.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.340" endtime="20201115 22:03:53.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.959" endtime="20201115 22:03:53.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.954" endtime="20201115 22:03:53.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:53.358" level="INFO">${RESULT} = [{'time': 0.043085389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4450000000026941e-06, 'source_diff': 1.4450000000026941e-06}, {'time': 0.043161319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:53.349" endtime="20201115 22:03:53.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:53.390" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:53.360" endtime="20201115 22:03:53.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.402" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:03:53.399" endtime="20201115 22:03:53.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.407" level="INFO">VALUE: [1.4450000000026941e-06, 1.4439999999962816e-06, 1.4580000000027904e-06, 1.4439999999962816e-06, 1.4579999999958515e-06, 1.4450000000026941e-06, 1.4169999999966154e-06, 1.4580000000027904e-06, 1.5000000000015001e-06, 1.4439999999962816e-06, 1.4169999999966154e-06, 1.4579999999958515e-06, 1.459000000002264e-06, 1.4440000000032205e-06, 1.4449999999957552e-06, 1.4580000000027904e-06, 1.4450000000026941e-06, 1.3889999999974756e-06, 1.4580000000027904e-06, 1.4449999999957552e-06, 1.5000000000015001e-06, 1.4450000000026941e-06, 1.4720000000023603e-06, 1.5000000000015001e-06, 1.4450000000026941e-06, 1.4580000000027904e-06, 1.4589999999953251e-06, 1.4309999999961853e-06, 1.4859999999949913e-06, 1.4440000000032205e-06, 1.4450000000026941e-06, 1.4579999999958515e-06, 1.4439999999962816e-06, 1.4310000000031242e-06, 1.473000000001834e-06, 1.3889999999974756e-06, 1.3889999999974756e-06, 1.459000000002264e-06, 1.4860000000019302e-06, 1.4310000000031242e-06, 1.4579999999958515e-06, 1.4310000000031242e-06, 1.4310000000031242e-06, 1.4860000000019302e-06, 1.4440000000032205e-06, 1.4309999999961853e-06, 1.4439999999962816e-06, 1.4169999999966154e-06, 1.4439999999962816e-06, 1.4160000000040807e-06]</msg>
<status status="PASS" starttime="20201115 22:03:53.404" endtime="20201115 22:03:53.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.392" endtime="20201115 22:03:53.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.417" endtime="20201115 22:03:53.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:53.425" endtime="20201115 22:03:53.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.421" endtime="20201115 22:03:53.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.412" endtime="20201115 22:03:53.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:52.897" endtime="20201115 22:03:53.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.643" endtime="20201115 22:03:53.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.641" endtime="20201115 22:03:53.452"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.457" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.481" endtime="20201115 22:03:53.498"></status>
</kw>
<msg timestamp="20201115 22:03:53.499" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:53.477" endtime="20201115 22:03:53.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.506" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:53.501" endtime="20201115 22:03:53.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.508" endtime="20201115 22:03:53.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.469" endtime="20201115 22:03:53.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.463" endtime="20201115 22:03:53.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.532" endtime="20201115 22:03:53.856"></status>
</kw>
<msg timestamp="20201115 22:03:53.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049551694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049553444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:53.528" endtime="20201115 22:03:53.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049551694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049553444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:53.861" endtime="20201115 22:03:53.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.869" endtime="20201115 22:03:53.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.521" endtime="20201115 22:03:53.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.516" endtime="20201115 22:03:53.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:53.877" level="INFO">${RESULT} = [{'time': 0.049553444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.049634194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:53.873" endtime="20201115 22:03:53.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:53.903" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:53.878" endtime="20201115 22:03:53.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.914" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:03:53.912" endtime="20201115 22:03:53.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:53.920" level="INFO">VALUE: [1.7500000000017502e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.723000000002084e-06, 1.7359999999952413e-06, 1.723000000002084e-06, 1.7220000000026103e-06, 1.6799999999969617e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.6949999999960053e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7920000000004599e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7370000000016539e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7079999999961015e-06, 1.7360000000021802e-06, 1.6669999999968654e-06, 1.7359999999952413e-06, 1.7500000000017502e-06, 1.7219999999956714e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7220000000026103e-06, 1.7359999999952413e-06, 1.7359999999952413e-06, 1.722999999995145e-06, 1.7920000000004599e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7499999999948113e-06, 1.7629999999949075e-06, 1.7360000000021802e-06, 1.7499999999948113e-06]</msg>
<status status="PASS" starttime="20201115 22:03:53.916" endtime="20201115 22:03:53.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.905" endtime="20201115 22:03:53.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.929" endtime="20201115 22:03:53.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:53.938" endtime="20201115 22:03:53.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.933" endtime="20201115 22:03:53.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.925" endtime="20201115 22:03:53.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.458" endtime="20201115 22:03:53.963"></status>
</kw>
<msg timestamp="20201115 22:03:53.964" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:53.987" endtime="20201115 22:03:54.003"></status>
</kw>
<msg timestamp="20201115 22:03:54.004" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:53.984" endtime="20201115 22:03:54.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.011" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:54.007" endtime="20201115 22:03:54.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.013" endtime="20201115 22:03:54.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.976" endtime="20201115 22:03:54.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.971" endtime="20201115 22:03:54.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.037" endtime="20201115 22:03:54.380"></status>
</kw>
<msg timestamp="20201115 22:03:54.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042915625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042917347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:54.033" endtime="20201115 22:03:54.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042915625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042917347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:54.390" endtime="20201115 22:03:54.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.409" endtime="20201115 22:03:54.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.026" endtime="20201115 22:03:54.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.021" endtime="20201115 22:03:54.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:54.427" level="INFO">${RESULT} = [{'time': 0.042917347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.042989833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:54.418" endtime="20201115 22:03:54.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:54.459" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:54.429" endtime="20201115 22:03:54.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.471" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:03:54.469" endtime="20201115 22:03:54.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.477" level="INFO">VALUE: [1.7220000000026103e-06, 1.7770000000014163e-06, 1.7080000000030404e-06, 1.7359999999952413e-06, 1.76400000000132e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.777999999993951e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.6670000000038043e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7769999999944774e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.7500000000017502e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7219999999956714e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7359999999952413e-06, 1.7220000000026103e-06, 1.7359999999952413e-06, 1.7359999999952413e-06, 1.76400000000132e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201115 22:03:54.473" endtime="20201115 22:03:54.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.462" endtime="20201115 22:03:54.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.486" endtime="20201115 22:03:54.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:54.494" endtime="20201115 22:03:54.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.490" endtime="20201115 22:03:54.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.481" endtime="20201115 22:03:54.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.965" endtime="20201115 22:03:54.520"></status>
</kw>
<msg timestamp="20201115 22:03:54.521" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.545" endtime="20201115 22:03:54.562"></status>
</kw>
<msg timestamp="20201115 22:03:54.563" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:54.542" endtime="20201115 22:03:54.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.569" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:54.565" endtime="20201115 22:03:54.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.572" endtime="20201115 22:03:54.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.534" endtime="20201115 22:03:54.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.528" endtime="20201115 22:03:54.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.595" endtime="20201115 22:03:54.938"></status>
</kw>
<msg timestamp="20201115 22:03:54.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044643208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044644944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:54.592" endtime="20201115 22:03:54.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:54.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044643208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044644944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:54.948" endtime="20201115 22:03:54.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:54.967" endtime="20201115 22:03:54.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.585" endtime="20201115 22:03:54.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.580" endtime="20201115 22:03:54.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:54.985" level="INFO">${RESULT} = [{'time': 0.044644944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.044714069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:54.976" endtime="20201115 22:03:54.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:55.018" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:54.988" endtime="20201115 22:03:55.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.031" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:03:55.028" endtime="20201115 22:03:55.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.036" level="INFO">VALUE: [1.7360000000021802e-06, 1.7360000000021802e-06, 1.7370000000016539e-06, 1.77800000000089e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.6939999999965316e-06, 1.8060000000000298e-06, 1.7500000000017502e-06, 1.6660000000043307e-06, 1.7499999999948113e-06, 1.7219999999956714e-06, 1.7500000000017502e-06, 1.7370000000016539e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.6810000000033742e-06, 1.7220000000026103e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.6809999999964353e-06, 1.7359999999952413e-06, 1.7499999999948113e-06, 1.7500000000017502e-06, 1.7920000000004599e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7359999999952413e-06, 1.7500000000017502e-06, 1.777999999993951e-06, 1.77800000000089e-06, 1.6799999999969617e-06, 1.7770000000014163e-06, 1.6810000000033742e-06, 1.7359999999952413e-06, 1.7220000000026103e-06, 1.7499999999948113e-06, 1.6669999999968654e-06, 1.76400000000132e-06, 1.777999999993951e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7500000000017502e-06]</msg>
<status status="PASS" starttime="20201115 22:03:55.033" endtime="20201115 22:03:55.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.020" endtime="20201115 22:03:55.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.045" endtime="20201115 22:03:55.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:55.054" endtime="20201115 22:03:55.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.049" endtime="20201115 22:03:55.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.041" endtime="20201115 22:03:55.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:54.522" endtime="20201115 22:03:55.079"></status>
</kw>
<msg timestamp="20201115 22:03:55.080" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.103" endtime="20201115 22:03:55.121"></status>
</kw>
<msg timestamp="20201115 22:03:55.122" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:55.100" endtime="20201115 22:03:55.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.128" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:55.124" endtime="20201115 22:03:55.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.131" endtime="20201115 22:03:55.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.093" endtime="20201115 22:03:55.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.087" endtime="20201115 22:03:55.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.154" endtime="20201115 22:03:55.496"></status>
</kw>
<msg timestamp="20201115 22:03:55.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0431525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043154236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:55.151" endtime="20201115 22:03:55.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0431525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043154236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:55.506" endtime="20201115 22:03:55.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.526" endtime="20201115 22:03:55.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.144" endtime="20201115 22:03:55.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.139" endtime="20201115 22:03:55.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:55.544" level="INFO">${RESULT} = [{'time': 0.043154236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999952413e-06, 'source_diff': 1.7359999999952413e-06}, {'time': 0.043227278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:55.535" endtime="20201115 22:03:55.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:55.576" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:55.546" endtime="20201115 22:03:55.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.587" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:03:55.585" endtime="20201115 22:03:55.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.594" level="INFO">VALUE: [1.7359999999952413e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7080000000030404e-06, 1.77800000000089e-06, 1.7219999999956714e-06, 1.7500000000017502e-06, 1.7359999999952413e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.722999999995145e-06, 1.7359999999952413e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7920000000004599e-06, 1.76400000000132e-06, 1.7220000000026103e-06, 1.7499999999948113e-06, 1.7500000000017502e-06, 1.7219999999956714e-06, 1.709000000002514e-06, 1.7500000000017502e-06, 1.7770000000014163e-06, 1.722999999995145e-06, 1.7359999999952413e-06, 1.6810000000033742e-06, 1.7360000000021802e-06, 1.6810000000033742e-06, 1.6799999999969617e-06, 1.6659999999973918e-06, 1.6940000000034705e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7500000000017502e-06, 1.723000000002084e-06, 1.7370000000016539e-06, 1.7359999999952413e-06, 1.7920000000004599e-06, 1.7360000000021802e-06, 1.7080000000030404e-06]</msg>
<status status="PASS" starttime="20201115 22:03:55.590" endtime="20201115 22:03:55.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.578" endtime="20201115 22:03:55.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.603" endtime="20201115 22:03:55.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:55.612" endtime="20201115 22:03:55.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.607" endtime="20201115 22:03:55.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.598" endtime="20201115 22:03:55.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.081" endtime="20201115 22:03:55.637"></status>
</kw>
<msg timestamp="20201115 22:03:55.638" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.661" endtime="20201115 22:03:55.678"></status>
</kw>
<msg timestamp="20201115 22:03:55.679" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:55.658" endtime="20201115 22:03:55.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:55.685" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:55.681" endtime="20201115 22:03:55.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.688" endtime="20201115 22:03:55.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.651" endtime="20201115 22:03:55.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.645" endtime="20201115 22:03:55.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:55.711" endtime="20201115 22:03:56.055"></status>
</kw>
<msg timestamp="20201115 22:03:56.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043041389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043043097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:55.708" endtime="20201115 22:03:56.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043041389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043043097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:56.065" endtime="20201115 22:03:56.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.085" endtime="20201115 22:03:56.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.701" endtime="20201115 22:03:56.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.696" endtime="20201115 22:03:56.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:56.102" level="INFO">${RESULT} = [{'time': 0.043043097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}, {'time': 0.043122611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:56.093" endtime="20201115 22:03:56.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:56.134" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:56.105" endtime="20201115 22:03:56.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.145" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:03:56.142" endtime="20201115 22:03:56.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.150" level="INFO">VALUE: [1.7080000000030404e-06, 1.7219999999956714e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.7499999999948113e-06, 1.7080000000030404e-06, 1.777999999993951e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.7360000000021802e-06, 1.7639999999943812e-06, 1.8060000000000298e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7220000000026103e-06, 1.6670000000038043e-06, 1.76400000000132e-06, 1.7359999999952413e-06, 1.723000000002084e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.6940000000034705e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.777999999993951e-06, 1.8060000000000298e-06, 1.736999999994715e-06, 1.7370000000016539e-06, 1.7360000000021802e-06, 1.7359999999952413e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.7499999999948113e-06, 1.76400000000132e-06, 1.7359999999952413e-06, 1.7079999999961015e-06, 1.76400000000132e-06]</msg>
<status status="PASS" starttime="20201115 22:03:56.147" endtime="20201115 22:03:56.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.135" endtime="20201115 22:03:56.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.159" endtime="20201115 22:03:56.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:56.169" endtime="20201115 22:03:56.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.165" endtime="20201115 22:03:56.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.155" endtime="20201115 22:03:56.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:55.639" endtime="20201115 22:03:56.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.454" endtime="20201115 22:03:56.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:53.453" endtime="20201115 22:03:56.196"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.201" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.224" endtime="20201115 22:03:56.241"></status>
</kw>
<msg timestamp="20201115 22:03:56.242" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:56.221" endtime="20201115 22:03:56.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.248" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:56.244" endtime="20201115 22:03:56.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.251" endtime="20201115 22:03:56.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.213" endtime="20201115 22:03:56.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.208" endtime="20201115 22:03:56.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.275" endtime="20201115 22:03:56.619"></status>
</kw>
<msg timestamp="20201115 22:03:56.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048471986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048474014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:56.272" endtime="20201115 22:03:56.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048471986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048474014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:56.628" endtime="20201115 22:03:56.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.647" endtime="20201115 22:03:56.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.264" endtime="20201115 22:03:56.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.259" endtime="20201115 22:03:56.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:56.665" level="INFO">${RESULT} = [{'time': 0.048474014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.0485575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1...</msg>
<status status="PASS" starttime="20201115 22:03:56.656" endtime="20201115 22:03:56.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:56.696" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:56.667" endtime="20201115 22:03:56.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.707" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:03:56.705" endtime="20201115 22:03:56.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.713" level="INFO">VALUE: [2.02800000000114e-06, 1.9440000000037205e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.0270000000016664e-06, 2.0270000000016664e-06, 2.096999999999516e-06, 2.000000000002e-06, 2.055000000000806e-06, 2.02800000000114e-06, 2.0840000000063585e-06, 2.01400000000157e-06, 2.02800000000114e-06, 2.000000000002e-06, 2.0270000000016664e-06, 2.096999999999516e-06, 2.0699999999998497e-06, 2.0129999999951576e-06, 2.0129999999951576e-06, 2.04200000000071e-06, 2.0269999999947275e-06, 2.013999999994631e-06, 2.0270000000016664e-06, 2.04200000000071e-06, 1.9999999999950613e-06, 2.01400000000157e-06, 1.987000000001904e-06, 2.01400000000157e-06, 2.027999999994201e-06, 2.0130000000020964e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.01400000000157e-06, 2.02800000000114e-06, 2.0130000000020964e-06, 2.000000000002e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.013999999994631e-06, 2.0270000000016664e-06, 2.096999999999516e-06, 2.0130000000020964e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.04200000000071e-06]</msg>
<status status="PASS" starttime="20201115 22:03:56.710" endtime="20201115 22:03:56.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.698" endtime="20201115 22:03:56.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.722" endtime="20201115 22:03:56.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:56.734" endtime="20201115 22:03:56.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.727" endtime="20201115 22:03:56.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.717" endtime="20201115 22:03:56.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.202" endtime="20201115 22:03:56.759"></status>
</kw>
<msg timestamp="20201115 22:03:56.760" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.783" endtime="20201115 22:03:56.801"></status>
</kw>
<msg timestamp="20201115 22:03:56.802" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:56.780" endtime="20201115 22:03:56.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:56.809" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:56.805" endtime="20201115 22:03:56.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.811" endtime="20201115 22:03:56.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.773" endtime="20201115 22:03:56.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.767" endtime="20201115 22:03:56.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:56.835" endtime="20201115 22:03:57.169"></status>
</kw>
<msg timestamp="20201115 22:03:57.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043211403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043213472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:56.832" endtime="20201115 22:03:57.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043211403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043213472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:57.173" endtime="20201115 22:03:57.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.182" endtime="20201115 22:03:57.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.825" endtime="20201115 22:03:57.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.820" endtime="20201115 22:03:57.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:57.190" level="INFO">${RESULT} = [{'time': 0.043213472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.069000000000376e-06, 'source_diff': 2.069000000000376e-06}, {'time': 0.043301153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:57.186" endtime="20201115 22:03:57.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:57.205" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:57.191" endtime="20201115 22:03:57.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.210" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:03:57.209" endtime="20201115 22:03:57.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.213" level="INFO">VALUE: [2.069000000000376e-06, 2.0699999999998497e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.0699999999998497e-06, 2.055000000000806e-06, 2.000000000002e-06, 2.0270000000016664e-06, 2.02800000000114e-06, 2.013999999994631e-06, 2.02800000000114e-06, 2.0410000000012363e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.01400000000157e-06, 2.027999999994201e-06, 2.0410000000012363e-06, 2.0270000000016664e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.01400000000157e-06, 2.02800000000114e-06, 2.05600000000028e-06, 2.055000000000806e-06, 2.013999999994631e-06, 2.01400000000157e-06, 2.013999999994631e-06, 2.04200000000071e-06, 2.0699999999998497e-06, 2.05600000000028e-06, 2.05600000000028e-06, 2.0269999999947275e-06, 2.0130000000020964e-06, 2.02800000000114e-06, 2.01400000000157e-06, 2.096999999999516e-06, 2.0130000000020964e-06, 2.0410000000012363e-06, 2.01400000000157e-06, 2.000000000002e-06, 2.02800000000114e-06, 2.013999999994631e-06, 2.0270000000016664e-06, 2.0130000000020964e-06, 2.02800000000114e-06, 2.027999999994201e-06, 2.02800000000114e-06]</msg>
<status status="PASS" starttime="20201115 22:03:57.212" endtime="20201115 22:03:57.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.206" endtime="20201115 22:03:57.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.217" endtime="20201115 22:03:57.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:57.221" endtime="20201115 22:03:57.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.219" endtime="20201115 22:03:57.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.215" endtime="20201115 22:03:57.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.761" endtime="20201115 22:03:57.246"></status>
</kw>
<msg timestamp="20201115 22:03:57.247" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.273" endtime="20201115 22:03:57.291"></status>
</kw>
<msg timestamp="20201115 22:03:57.292" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:57.269" endtime="20201115 22:03:57.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.298" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:57.294" endtime="20201115 22:03:57.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.300" endtime="20201115 22:03:57.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.261" endtime="20201115 22:03:57.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.254" endtime="20201115 22:03:57.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.324" endtime="20201115 22:03:57.670"></status>
</kw>
<msg timestamp="20201115 22:03:57.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045853167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045855139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:57.321" endtime="20201115 22:03:57.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045853167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045855139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:57.680" endtime="20201115 22:03:57.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.699" endtime="20201115 22:03:57.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.314" endtime="20201115 22:03:57.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.309" endtime="20201115 22:03:57.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:57.717" level="INFO">${RESULT} = [{'time': 0.045855139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.045942611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:57.708" endtime="20201115 22:03:57.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:57.748" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:57.719" endtime="20201115 22:03:57.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.759" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:03:57.757" endtime="20201115 22:03:57.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.765" level="INFO">VALUE: [1.9720000000028604e-06, 2.01400000000157e-06, 2.0270000000016664e-06, 2.01400000000157e-06, 2.02800000000114e-06, 1.9999999999950613e-06, 2.0130000000020964e-06, 2.0270000000016664e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.069000000000376e-06, 2.0269999999947275e-06, 2.01400000000157e-06, 2.01400000000157e-06, 1.9860000000024303e-06, 2.01400000000157e-06, 2.02800000000114e-06, 2.027999999994201e-06, 2.01400000000157e-06, 2.01400000000157e-06, 2.0410000000012363e-06, 2.0269999999947275e-06, 1.9859999999954914e-06, 2.0410000000012363e-06, 2.01400000000157e-06, 1.9999999999950613e-06, 2.01400000000157e-06, 2.02800000000114e-06, 2.027999999994201e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.000000000002e-06, 2.04200000000071e-06, 2.027999999994201e-06, 2.01400000000157e-06, 2.0699999999998497e-06, 1.9580000000032904e-06, 2.027999999994201e-06, 2.0270000000016664e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.0409999999942974e-06, 2.027999999994201e-06, 2.02800000000114e-06]</msg>
<status status="PASS" starttime="20201115 22:03:57.762" endtime="20201115 22:03:57.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.750" endtime="20201115 22:03:57.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.774" endtime="20201115 22:03:57.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:57.782" endtime="20201115 22:03:57.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.778" endtime="20201115 22:03:57.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.769" endtime="20201115 22:03:57.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.248" endtime="20201115 22:03:57.809"></status>
</kw>
<msg timestamp="20201115 22:03:57.809" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.833" endtime="20201115 22:03:57.850"></status>
</kw>
<msg timestamp="20201115 22:03:57.851" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:57.829" endtime="20201115 22:03:57.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:57.857" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:57.853" endtime="20201115 22:03:57.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.860" endtime="20201115 22:03:57.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.822" endtime="20201115 22:03:57.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.816" endtime="20201115 22:03:57.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:57.886" endtime="20201115 22:03:58.231"></status>
</kw>
<msg timestamp="20201115 22:03:58.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044221611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044223681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:57.883" endtime="20201115 22:03:58.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044221611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044223681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:58.240" endtime="20201115 22:03:58.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.259" endtime="20201115 22:03:58.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.876" endtime="20201115 22:03:58.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.871" endtime="20201115 22:03:58.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:58.278" level="INFO">${RESULT} = [{'time': 0.044223681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0699999999998497e-06, 'source_diff': 2.0699999999998497e-06}, {'time': 0.044307333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:58.268" endtime="20201115 22:03:58.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:58.309" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:58.280" endtime="20201115 22:03:58.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.320" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:03:58.317" endtime="20201115 22:03:58.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.325" level="INFO">VALUE: [2.0699999999998497e-06, 2.013999999994631e-06, 2.02800000000114e-06, 2.069000000000376e-06, 2.01400000000157e-06, 2.082999999999946e-06, 2.01400000000157e-06, 1.9720000000028604e-06, 1.9860000000024303e-06, 2.05600000000028e-06, 2.02800000000114e-06, 2.0409999999942974e-06, 2.02800000000114e-06, 2.0699999999998497e-06, 2.0979999999989896e-06, 2.027999999994201e-06, 2.02800000000114e-06, 2.041999999993771e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.000000000002e-06, 2.013999999994631e-06, 2.0699999999998497e-06, 2.02800000000114e-06, 1.9999999999950613e-06, 2.055000000000806e-06, 2.0409999999942974e-06, 1.9860000000024303e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.01400000000157e-06, 2.0130000000020964e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.069000000000376e-06, 2.02800000000114e-06, 2.0269999999947275e-06, 2.05600000000028e-06, 2.0270000000016664e-06, 2.069000000000376e-06, 2.02800000000114e-06, 2.05600000000028e-06, 2.02800000000114e-06, 2.0699999999998497e-06, 2.0410000000012363e-06, 1.9719999999959215e-06, 2.02800000000114e-06, 2.02800000000114e-06]</msg>
<status status="PASS" starttime="20201115 22:03:58.322" endtime="20201115 22:03:58.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.311" endtime="20201115 22:03:58.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.342" endtime="20201115 22:03:58.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:58.350" endtime="20201115 22:03:58.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.346" endtime="20201115 22:03:58.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.337" endtime="20201115 22:03:58.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:57.811" endtime="20201115 22:03:58.376"></status>
</kw>
<msg timestamp="20201115 22:03:58.377" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.400" endtime="20201115 22:03:58.416"></status>
</kw>
<msg timestamp="20201115 22:03:58.418" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:58.396" endtime="20201115 22:03:58.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.424" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:58.420" endtime="20201115 22:03:58.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.426" endtime="20201115 22:03:58.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.389" endtime="20201115 22:03:58.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.383" endtime="20201115 22:03:58.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.452" endtime="20201115 22:03:58.797"></status>
</kw>
<msg timestamp="20201115 22:03:58.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043143222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043145264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:58.448" endtime="20201115 22:03:58.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043143222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043145264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:58.807" endtime="20201115 22:03:58.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.826" endtime="20201115 22:03:58.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.439" endtime="20201115 22:03:58.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.435" endtime="20201115 22:03:58.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:58.843" level="INFO">${RESULT} = [{'time': 0.043145264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.04200000000071e-06, 'source_diff': 2.04200000000071e-06}, {'time': 0.043230236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:58.834" endtime="20201115 22:03:58.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:58.874" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:58.846" endtime="20201115 22:03:58.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.886" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:03:58.883" endtime="20201115 22:03:58.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.891" level="INFO">VALUE: [2.04200000000071e-06, 2.04200000000071e-06, 2.01400000000157e-06, 2.01400000000157e-06, 2.041999999993771e-06, 2.05600000000028e-06, 2.041999999993771e-06, 2.01400000000157e-06, 2.013999999994631e-06, 2.02800000000114e-06, 2.0270000000016664e-06, 2.000000000002e-06, 1.959000000002764e-06, 2.0699999999998497e-06, 2.055000000000806e-06, 2.01400000000157e-06, 2.05600000000028e-06, 2.01400000000157e-06, 2.013999999994631e-06, 2.068999999993437e-06, 2.02800000000114e-06, 2.0269999999947275e-06, 2.02800000000114e-06, 2.0270000000016664e-06, 2.01400000000157e-06, 2.02800000000114e-06, 2.000000000002e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.05600000000028e-06, 2.0270000000016664e-06, 2.0269999999947275e-06, 2.05600000000028e-06, 2.013999999994631e-06, 2.013999999994631e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.013999999994631e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.01400000000157e-06, 2.02800000000114e-06, 1.987000000001904e-06, 2.02800000000114e-06, 2.05600000000028e-06, 2.02800000000114e-06, 2.0270000000016664e-06, 2.0270000000016664e-06]</msg>
<status status="PASS" starttime="20201115 22:03:58.888" endtime="20201115 22:03:58.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.876" endtime="20201115 22:03:58.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.901" endtime="20201115 22:03:58.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:58.910" endtime="20201115 22:03:58.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.905" endtime="20201115 22:03:58.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.897" endtime="20201115 22:03:58.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.378" endtime="20201115 22:03:58.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.198" endtime="20201115 22:03:58.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:56.197" endtime="20201115 22:03:58.937"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.942" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.965" endtime="20201115 22:03:58.983"></status>
</kw>
<msg timestamp="20201115 22:03:58.984" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:58.961" endtime="20201115 22:03:58.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:58.990" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:58.986" endtime="20201115 22:03:58.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:58.993" endtime="20201115 22:03:58.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.954" endtime="20201115 22:03:58.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.948" endtime="20201115 22:03:59.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.017" endtime="20201115 22:03:59.363"></status>
</kw>
<msg timestamp="20201115 22:03:59.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048305097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048307403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:59.013" endtime="20201115 22:03:59.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048305097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048307403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:59.373" endtime="20201115 22:03:59.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.392" endtime="20201115 22:03:59.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.006" endtime="20201115 22:03:59.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.001" endtime="20201115 22:03:59.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:59.410" level="INFO">${RESULT} = [{'time': 0.048307403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.048394694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:59.401" endtime="20201115 22:03:59.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:59.443" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:59.412" endtime="20201115 22:03:59.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.454" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:03:59.452" endtime="20201115 22:03:59.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.460" level="INFO">VALUE: [2.30600000000053e-06, 2.346999999999766e-06, 2.29200000000096e-06, 2.319000000000626e-06, 2.25000000000225e-06, 2.3479999999992396e-06, 2.319000000000626e-06, 2.29200000000096e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.305000000001056e-06, 2.360999999999336e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.3189999999936872e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.3339999999996697e-06, 2.3339999999996697e-06, 2.2910000000014863e-06, 2.333000000000196e-06, 2.332999999993257e-06, 2.319000000000626e-06, 2.305000000001056e-06, 2.305000000001056e-06, 2.4030000000049845e-06, 2.333000000000196e-06, 2.30600000000053e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.30600000000053e-06, 2.333000000000196e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.3339999999996697e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.3340000000066086e-06, 2.3339999999996697e-06, 2.2360000000026803e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.305000000001056e-06, 2.30600000000053e-06, 2.26400000000182e-06]</msg>
<status status="PASS" starttime="20201115 22:03:59.456" endtime="20201115 22:03:59.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.445" endtime="20201115 22:03:59.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.469" endtime="20201115 22:03:59.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:59.478" endtime="20201115 22:03:59.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.473" endtime="20201115 22:03:59.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.465" endtime="20201115 22:03:59.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.943" endtime="20201115 22:03:59.503"></status>
</kw>
<msg timestamp="20201115 22:03:59.504" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.527" endtime="20201115 22:03:59.545"></status>
</kw>
<msg timestamp="20201115 22:03:59.546" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:59.524" endtime="20201115 22:03:59.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.553" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:59.549" endtime="20201115 22:03:59.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.555" endtime="20201115 22:03:59.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.517" endtime="20201115 22:03:59.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.511" endtime="20201115 22:03:59.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.579" endtime="20201115 22:03:59.923"></status>
</kw>
<msg timestamp="20201115 22:03:59.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043480806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043483139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:59.575" endtime="20201115 22:03:59.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:59.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043480806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043483139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:59.932" endtime="20201115 22:03:59.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:59.951" endtime="20201115 22:03:59.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.568" endtime="20201115 22:03:59.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.563" endtime="20201115 22:03:59.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:59.971" level="INFO">${RESULT} = [{'time': 0.043483139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.043572694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:59.962" endtime="20201115 22:03:59.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:00.001" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:03:59.973" endtime="20201115 22:04:00.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.013" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:04:00.011" endtime="20201115 22:04:00.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.019" level="INFO">VALUE: [2.333000000000196e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.30600000000053e-06, 2.3200000000000998e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.332999999993257e-06, 2.3339999999996697e-06, 2.333000000000196e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.305000000001056e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.237000000002154e-06, 2.333000000000196e-06, 2.2910000000014863e-06, 2.333000000000196e-06, 2.30600000000053e-06, 2.305000000001056e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.3339999999996697e-06, 2.305000000001056e-06, 2.333000000000196e-06, 2.3049999999941173e-06, 2.333000000000196e-06, 2.2499999999953113e-06, 2.3200000000000998e-06, 2.30600000000053e-06, 2.26400000000182e-06, 2.25000000000225e-06, 2.29200000000096e-06, 2.333000000000196e-06, 2.30600000000053e-06, 2.2770000000019164e-06, 2.319000000000626e-06, 2.3339999999996697e-06, 2.333000000000196e-06, 2.3200000000000998e-06, 2.305999999993591e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.305999999993591e-06, 2.3339999999996697e-06]</msg>
<status status="PASS" starttime="20201115 22:04:00.016" endtime="20201115 22:04:00.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.004" endtime="20201115 22:04:00.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.028" endtime="20201115 22:04:00.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:00.036" endtime="20201115 22:04:00.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.032" endtime="20201115 22:04:00.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.023" endtime="20201115 22:04:00.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:59.505" endtime="20201115 22:04:00.062"></status>
</kw>
<msg timestamp="20201115 22:04:00.063" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.086" endtime="20201115 22:04:00.103"></status>
</kw>
<msg timestamp="20201115 22:04:00.104" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:00.083" endtime="20201115 22:04:00.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.111" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:00.107" endtime="20201115 22:04:00.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.113" endtime="20201115 22:04:00.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.075" endtime="20201115 22:04:00.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.069" endtime="20201115 22:04:00.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.137" endtime="20201115 22:04:00.475"></status>
</kw>
<msg timestamp="20201115 22:04:00.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043327, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043329333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:04:00.134" endtime="20201115 22:04:00.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043327, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043329333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:04:00.479" endtime="20201115 22:04:00.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.488" endtime="20201115 22:04:00.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.126" endtime="20201115 22:04:00.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.122" endtime="20201115 22:04:00.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:00.497" level="INFO">${RESULT} = [{'time': 0.043329333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.043414917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:00.493" endtime="20201115 22:04:00.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:00.511" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:00.498" endtime="20201115 22:04:00.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.516" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:04:00.515" endtime="20201115 22:04:00.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.519" level="INFO">VALUE: [2.333000000000196e-06, 2.3339999999996697e-06, 2.3339999999996697e-06, 2.2630000000023465e-06, 2.333000000000196e-06, 2.305000000001056e-06, 2.3339999999996697e-06, 2.3200000000000998e-06, 2.3339999999996697e-06, 2.332999999993257e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.3339999999996697e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.3049999999941173e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.3750000000058447e-06, 2.3200000000000998e-06, 2.26400000000182e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.30600000000053e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.3189999999936872e-06, 2.333000000000196e-06, 2.3339999999996697e-06, 2.319000000000626e-06, 2.305000000001056e-06, 2.2499999999953113e-06, 2.319000000000626e-06, 2.346999999999766e-06, 2.27800000000139e-06, 2.3339999999996697e-06, 2.333000000000196e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.3339999999996697e-06, 2.333000000000196e-06, 2.3339999999996697e-06, 2.333000000000196e-06, 2.305000000001056e-06, 2.333000000000196e-06]</msg>
<status status="PASS" starttime="20201115 22:04:00.517" endtime="20201115 22:04:00.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.512" endtime="20201115 22:04:00.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.523" endtime="20201115 22:04:00.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:00.527" endtime="20201115 22:04:00.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.525" endtime="20201115 22:04:00.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.521" endtime="20201115 22:04:00.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.064" endtime="20201115 22:04:00.548"></status>
</kw>
<msg timestamp="20201115 22:04:00.549" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.560" endtime="20201115 22:04:00.575"></status>
</kw>
<msg timestamp="20201115 22:04:00.575" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:00.558" endtime="20201115 22:04:00.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.578" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:00.576" endtime="20201115 22:04:00.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.579" endtime="20201115 22:04:00.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.555" endtime="20201115 22:04:00.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.552" endtime="20201115 22:04:00.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.590" endtime="20201115 22:04:00.921"></status>
</kw>
<msg timestamp="20201115 22:04:00.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025279694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025282, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:04:00.589" endtime="20201115 22:04:00.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:00.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025279694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025282, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:04:00.931" endtime="20201115 22:04:00.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:00.950" endtime="20201115 22:04:00.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.585" endtime="20201115 22:04:00.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.583" endtime="20201115 22:04:00.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:00.970" level="INFO">${RESULT} = [{'time': 0.025282, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.025372819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2....</msg>
<status status="PASS" starttime="20201115 22:04:00.961" endtime="20201115 22:04:00.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:01.000" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:00.972" endtime="20201115 22:04:01.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.012" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:04:01.010" endtime="20201115 22:04:01.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.017" level="INFO">VALUE: [2.30600000000053e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.305000000001056e-06, 2.3059999999970604e-06, 2.27800000000139e-06, 2.3339999999996697e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3200000000000998e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.30600000000053e-06, 2.333000000000196e-06, 2.3189999999971567e-06, 2.27800000000139e-06, 2.3200000000000998e-06, 2.333000000000196e-06, 2.29200000000096e-06, 2.333000000000196e-06, 2.30600000000053e-06, 2.3049999999975868e-06, 2.3339999999996697e-06, 2.3339999999996697e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.333000000000196e-06, 2.30600000000053e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.319000000000626e-06, 2.3749999999989058e-06, 2.30600000000053e-06, 2.305000000001056e-06, 2.2499999999987808e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.27800000000139e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.305000000001056e-06, 2.3200000000000998e-06, 2.3049999999975868e-06, 2.3200000000000998e-06]</msg>
<status status="PASS" starttime="20201115 22:04:01.014" endtime="20201115 22:04:01.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.003" endtime="20201115 22:04:01.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.026" endtime="20201115 22:04:01.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:01.035" endtime="20201115 22:04:01.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.030" endtime="20201115 22:04:01.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.022" endtime="20201115 22:04:01.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:00.549" endtime="20201115 22:04:01.061"></status>
</kw>
<msg timestamp="20201115 22:04:01.061" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.084" endtime="20201115 22:04:01.104"></status>
</kw>
<msg timestamp="20201115 22:04:01.105" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:01.081" endtime="20201115 22:04:01.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.111" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:01.107" endtime="20201115 22:04:01.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.114" endtime="20201115 22:04:01.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.074" endtime="20201115 22:04:01.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.068" endtime="20201115 22:04:01.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.137" endtime="20201115 22:04:01.480"></status>
</kw>
<msg timestamp="20201115 22:04:01.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043551792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043554111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:01.134" endtime="20201115 22:04:01.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043551792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043554111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:01.491" endtime="20201115 22:04:01.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.510" endtime="20201115 22:04:01.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.127" endtime="20201115 22:04:01.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.122" endtime="20201115 22:04:01.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:01.529" level="INFO">${RESULT} = [{'time': 0.043554111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.319000000000626e-06, 'source_diff': 2.319000000000626e-06}, {'time': 0.043647833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:01.520" endtime="20201115 22:04:01.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:01.562" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:01.531" endtime="20201115 22:04:01.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.573" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:04:01.571" endtime="20201115 22:04:01.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.579" level="INFO">VALUE: [2.319000000000626e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.30600000000053e-06, 2.30600000000053e-06, 2.333000000000196e-06, 2.30600000000053e-06, 2.333000000000196e-06, 2.30600000000053e-06, 2.333000000000196e-06, 2.3619999999988095e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.2910000000014863e-06, 2.346999999999766e-06, 2.29200000000096e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.26400000000182e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.3049999999941173e-06, 2.3200000000000998e-06, 2.29200000000096e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.305000000001056e-06, 2.319000000000626e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.3189999999936872e-06, 2.3200000000000998e-06, 2.30600000000053e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.3890000000054146e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.3339999999996697e-06, 2.3339999999996697e-06, 2.3189999999936872e-06, 2.319000000000626e-06, 2.30600000000053e-06, 2.3189999999936872e-06, 2.3339999999996697e-06, 2.319000000000626e-06, 2.3200000000000998e-06]</msg>
<status status="PASS" starttime="20201115 22:04:01.576" endtime="20201115 22:04:01.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.564" endtime="20201115 22:04:01.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.588" endtime="20201115 22:04:01.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:01.596" endtime="20201115 22:04:01.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.592" endtime="20201115 22:04:01.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.583" endtime="20201115 22:04:01.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.062" endtime="20201115 22:04:01.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.939" endtime="20201115 22:04:01.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:58.937" endtime="20201115 22:04:01.623"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.628" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.651" endtime="20201115 22:04:01.668"></status>
</kw>
<msg timestamp="20201115 22:04:01.670" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:01.648" endtime="20201115 22:04:01.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:01.676" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:01.672" endtime="20201115 22:04:01.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.678" endtime="20201115 22:04:01.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.640" endtime="20201115 22:04:01.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.635" endtime="20201115 22:04:01.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:01.703" endtime="20201115 22:04:02.061"></status>
</kw>
<msg timestamp="20201115 22:04:02.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048541389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048544, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:04:01.699" endtime="20201115 22:04:02.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048541389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048544, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:04:02.071" endtime="20201115 22:04:02.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.090" endtime="20201115 22:04:02.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.692" endtime="20201115 22:04:02.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.687" endtime="20201115 22:04:02.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:02.110" level="INFO">${RESULT} = [{'time': 0.048544, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.048645986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:04:02.100" endtime="20201115 22:04:02.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:02.140" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:02.112" endtime="20201115 22:04:02.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.152" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:04:02.149" endtime="20201115 22:04:02.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.157" level="INFO">VALUE: [2.610999999999586e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.6110000000065248e-06, 2.6249999999991558e-06, 2.583000000000446e-06, 2.6389999999987257e-06, 2.569000000000876e-06, 2.6389999999987257e-06, 2.610999999999586e-06, 2.6669999999978655e-06, 2.6249999999991558e-06, 2.583000000000446e-06, 2.555999999993841e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.6119999999990595e-06, 2.6249999999991558e-06, 2.610999999999586e-06, 2.6110000000065248e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.5839999999999197e-06, 2.5689999999939372e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.5700000000003498e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.5839999999999197e-06, 2.6249999999991558e-06, 2.6669999999978655e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.6249999999991558e-06, 2.6389999999987257e-06, 2.610999999999586e-06, 2.6389999999987257e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.6249999999991558e-06]</msg>
<status status="PASS" starttime="20201115 22:04:02.154" endtime="20201115 22:04:02.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.142" endtime="20201115 22:04:02.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.166" endtime="20201115 22:04:02.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:02.175" endtime="20201115 22:04:02.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.170" endtime="20201115 22:04:02.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.162" endtime="20201115 22:04:02.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.629" endtime="20201115 22:04:02.200"></status>
</kw>
<msg timestamp="20201115 22:04:02.201" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.224" endtime="20201115 22:04:02.242"></status>
</kw>
<msg timestamp="20201115 22:04:02.243" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:02.221" endtime="20201115 22:04:02.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.250" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:02.245" endtime="20201115 22:04:02.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.253" endtime="20201115 22:04:02.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.213" endtime="20201115 22:04:02.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.208" endtime="20201115 22:04:02.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.276" endtime="20201115 22:04:02.619"></status>
</kw>
<msg timestamp="20201115 22:04:02.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043071736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043074403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:02.273" endtime="20201115 22:04:02.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043071736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043074403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:02.629" endtime="20201115 22:04:02.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.648" endtime="20201115 22:04:02.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.266" endtime="20201115 22:04:02.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.261" endtime="20201115 22:04:02.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:02.667" level="INFO">${RESULT} = [{'time': 0.043074403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.043172611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:02.658" endtime="20201115 22:04:02.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:02.698" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:02.670" endtime="20201115 22:04:02.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.709" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:04:02.707" endtime="20201115 22:04:02.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.715" level="INFO">VALUE: [2.6669999999978655e-06, 2.610999999999586e-06, 2.5979999999994896e-06, 2.6389999999987257e-06, 2.610999999999586e-06, 2.5550000000013062e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.5410000000017363e-06, 2.6249999999991558e-06, 2.6119999999990595e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.6249999999991558e-06, 2.6389999999987257e-06, 2.6389999999987257e-06, 2.6389999999987257e-06, 2.6389999999987257e-06, 2.6389999999987257e-06, 2.610999999999586e-06, 2.6389999999987257e-06, 2.597000000000016e-06, 2.6529999999982956e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.6119999999990595e-06, 2.6249999999991558e-06, 2.5839999999999197e-06, 2.6249999999991558e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.6250000000060947e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.6669999999978655e-06, 2.6249999999991558e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.6119999999990595e-06, 2.610999999999586e-06, 2.6110000000065248e-06, 2.541999999994271e-06]</msg>
<status status="PASS" starttime="20201115 22:04:02.712" endtime="20201115 22:04:02.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.700" endtime="20201115 22:04:02.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.724" endtime="20201115 22:04:02.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:02.733" endtime="20201115 22:04:02.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.728" endtime="20201115 22:04:02.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.719" endtime="20201115 22:04:02.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.202" endtime="20201115 22:04:02.759"></status>
</kw>
<msg timestamp="20201115 22:04:02.759" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.784" endtime="20201115 22:04:02.801"></status>
</kw>
<msg timestamp="20201115 22:04:02.802" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:02.780" endtime="20201115 22:04:02.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:02.809" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:02.805" endtime="20201115 22:04:02.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.812" endtime="20201115 22:04:02.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.772" endtime="20201115 22:04:02.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.766" endtime="20201115 22:04:02.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:02.836" endtime="20201115 22:04:03.178"></status>
</kw>
<msg timestamp="20201115 22:04:03.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044450792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044453403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:02.833" endtime="20201115 22:04:03.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044450792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044453403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:03.187" endtime="20201115 22:04:03.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.206" endtime="20201115 22:04:03.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.825" endtime="20201115 22:04:03.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.820" endtime="20201115 22:04:03.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:03.226" level="INFO">${RESULT} = [{'time': 0.044453403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.044543153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:03.217" endtime="20201115 22:04:03.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:03.257" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:03.228" endtime="20201115 22:04:03.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.268" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:04:03.265" endtime="20201115 22:04:03.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.273" level="INFO">VALUE: [2.610999999999586e-06, 2.6389999999987257e-06, 2.6530000000052345e-06, 2.6529999999982956e-06, 2.6670000000048044e-06, 2.6249999999991558e-06, 2.55600000000078e-06, 2.597000000000016e-06, 2.6250000000060947e-06, 2.597000000000016e-06, 2.5979999999994896e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.583000000000446e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.6389999999987257e-06, 2.6119999999990595e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.583000000000446e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.6250000000060947e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.6529999999982956e-06, 2.6249999999991558e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.610999999999586e-06, 2.5979999999994896e-06, 2.569000000000876e-06, 2.6250000000060947e-06, 2.5839999999999197e-06, 2.5979999999994896e-06, 2.6669999999978655e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.597000000000016e-06, 2.610999999999586e-06]</msg>
<status status="PASS" starttime="20201115 22:04:03.270" endtime="20201115 22:04:03.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.258" endtime="20201115 22:04:03.276"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.282" endtime="20201115 22:04:03.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:03.291" endtime="20201115 22:04:03.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.286" endtime="20201115 22:04:03.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.278" endtime="20201115 22:04:03.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:02.760" endtime="20201115 22:04:03.317"></status>
</kw>
<msg timestamp="20201115 22:04:03.317" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.341" endtime="20201115 22:04:03.359"></status>
</kw>
<msg timestamp="20201115 22:04:03.360" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:03.337" endtime="20201115 22:04:03.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.366" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:03.362" endtime="20201115 22:04:03.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.368" endtime="20201115 22:04:03.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.330" endtime="20201115 22:04:03.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.324" endtime="20201115 22:04:03.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.392" endtime="20201115 22:04:03.735"></status>
</kw>
<msg timestamp="20201115 22:04:03.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043937903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043940514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:03.389" endtime="20201115 22:04:03.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043937903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043940514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:03.744" endtime="20201115 22:04:03.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.763" endtime="20201115 22:04:03.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.382" endtime="20201115 22:04:03.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.377" endtime="20201115 22:04:03.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:03.783" level="INFO">${RESULT} = [{'time': 0.043940514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.044033236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:03.773" endtime="20201115 22:04:03.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:03.816" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:03.785" endtime="20201115 22:04:03.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.828" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:04:03.825" endtime="20201115 22:04:03.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.834" level="INFO">VALUE: [2.610999999999586e-06, 2.6940000000044706e-06, 2.5979999999994896e-06, 2.6119999999990595e-06, 2.6249999999991558e-06, 2.597000000000016e-06, 2.6950000000039442e-06, 2.597000000000016e-06, 2.6529999999982956e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.54200000000121e-06, 2.6249999999991558e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.6389999999987257e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.6110000000065248e-06, 2.6250000000060947e-06, 2.5839999999999197e-06, 2.6120000000059984e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.6119999999990595e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.6389999999987257e-06, 2.6249999999991558e-06, 2.6250000000060947e-06, 2.5700000000003498e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.597000000000016e-06, 2.6389999999987257e-06, 2.6389999999987257e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.6119999999990595e-06, 2.6249999999991558e-06, 2.5979999999994896e-06, 2.6249999999991558e-06, 2.5700000000003498e-06]</msg>
<status status="PASS" starttime="20201115 22:04:03.830" endtime="20201115 22:04:03.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.818" endtime="20201115 22:04:03.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.851" endtime="20201115 22:04:03.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:03.859" endtime="20201115 22:04:03.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.855" endtime="20201115 22:04:03.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.846" endtime="20201115 22:04:03.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.319" endtime="20201115 22:04:03.885"></status>
</kw>
<msg timestamp="20201115 22:04:03.886" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.906" endtime="20201115 22:04:03.921"></status>
</kw>
<msg timestamp="20201115 22:04:03.922" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:03.905" endtime="20201115 22:04:03.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:03.925" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:03.923" endtime="20201115 22:04:03.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.926" endtime="20201115 22:04:03.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.898" endtime="20201115 22:04:03.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.893" endtime="20201115 22:04:03.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:03.937" endtime="20201115 22:04:04.268"></status>
</kw>
<msg timestamp="20201115 22:04:04.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038995917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038998514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:03.936" endtime="20201115 22:04:04.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038995917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038998514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:04.277" endtime="20201115 22:04:04.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.297" endtime="20201115 22:04:04.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.932" endtime="20201115 22:04:04.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.930" endtime="20201115 22:04:04.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:04.314" level="INFO">${RESULT} = [{'time': 0.038998514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.039096778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:04.305" endtime="20201115 22:04:04.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:04.347" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:04.316" endtime="20201115 22:04:04.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.358" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:04:04.355" endtime="20201115 22:04:04.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.363" level="INFO">VALUE: [2.597000000000016e-06, 2.610999999999586e-06, 2.583000000000446e-06, 2.6120000000059984e-06, 2.6110000000065248e-06, 2.597000000000016e-06, 2.6119999999990595e-06, 2.610999999999586e-06, 2.6119999999990595e-06, 2.6249999999991558e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.6249999999991558e-06, 2.5839999999999197e-06, 2.6110000000065248e-06, 2.6669999999978655e-06, 2.610999999999586e-06, 2.5549999999943673e-06, 2.6249999999991558e-06, 2.6249999999991558e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.6809999999974354e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.527999999994701e-06, 2.6119999999990595e-06, 2.5839999999999197e-06, 2.6249999999991558e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.6119999999990595e-06, 2.597000000000016e-06, 2.6669999999978655e-06, 2.5979999999994896e-06, 2.5979999999994896e-06, 2.6249999999991558e-06, 2.6249999999991558e-06, 2.6250000000060947e-06]</msg>
<status status="PASS" starttime="20201115 22:04:04.360" endtime="20201115 22:04:04.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.348" endtime="20201115 22:04:04.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.373" endtime="20201115 22:04:04.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:04.382" endtime="20201115 22:04:04.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.377" endtime="20201115 22:04:04.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.368" endtime="20201115 22:04:04.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:03.887" endtime="20201115 22:04:04.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.626" endtime="20201115 22:04:04.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:01.624" endtime="20201115 22:04:04.408"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.413" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.437" endtime="20201115 22:04:04.454"></status>
</kw>
<msg timestamp="20201115 22:04:04.455" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:04.433" endtime="20201115 22:04:04.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.462" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:04.458" endtime="20201115 22:04:04.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.464" endtime="20201115 22:04:04.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.426" endtime="20201115 22:04:04.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.420" endtime="20201115 22:04:04.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.488" endtime="20201115 22:04:04.831"></status>
</kw>
<msg timestamp="20201115 22:04:04.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048361931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048364819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:04.484" endtime="20201115 22:04:04.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048361931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048364819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:04.841" endtime="20201115 22:04:04.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.860" endtime="20201115 22:04:04.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.477" endtime="20201115 22:04:04.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.472" endtime="20201115 22:04:04.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:04.879" level="INFO">${RESULT} = [{'time': 0.048364819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.888000000006441e-06, 'source_diff': 2.888000000006441e-06}, {'time': 0.048464917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:04.869" endtime="20201115 22:04:04.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:04.912" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:04.881" endtime="20201115 22:04:04.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.923" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:04:04.921" endtime="20201115 22:04:04.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:04.930" level="INFO">VALUE: [2.888000000006441e-06, 2.9030000000054845e-06, 2.9030000000054845e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.915999999998642e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.9170000000050544e-06, 2.8889999999989757e-06, 2.9439999999977817e-06, 2.9030000000054845e-06, 2.9310000000046244e-06, 2.9169999999981155e-06, 2.874999999999406e-06, 2.9030000000054845e-06, 2.860999999999836e-06, 2.9029999999985456e-06, 2.901999999999072e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.9589999999968253e-06, 2.8889999999989757e-06, 2.9170000000050544e-06, 2.9310000000046244e-06, 2.9439999999977817e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.9030000000054845e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.9589999999968253e-06, 2.9439999999977817e-06, 2.902000000006011e-06, 2.915999999998642e-06, 2.929999999998212e-06, 2.915999999998642e-06, 2.887999999999502e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.9169999999981155e-06, 2.887999999999502e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.8889999999989757e-06]</msg>
<status status="PASS" starttime="20201115 22:04:04.926" endtime="20201115 22:04:04.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.914" endtime="20201115 22:04:04.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.939" endtime="20201115 22:04:04.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:04.947" endtime="20201115 22:04:04.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.943" endtime="20201115 22:04:04.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.934" endtime="20201115 22:04:04.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.414" endtime="20201115 22:04:04.973"></status>
</kw>
<msg timestamp="20201115 22:04:04.973" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:04.997" endtime="20201115 22:04:05.014"></status>
</kw>
<msg timestamp="20201115 22:04:05.015" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:04.993" endtime="20201115 22:04:05.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.022" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:05.018" endtime="20201115 22:04:05.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.024" endtime="20201115 22:04:05.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.986" endtime="20201115 22:04:05.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.980" endtime="20201115 22:04:05.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.048" endtime="20201115 22:04:05.389"></status>
</kw>
<msg timestamp="20201115 22:04:05.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043153042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043155958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:05.044" endtime="20201115 22:04:05.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043153042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043155958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:05.399" endtime="20201115 22:04:05.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.418" endtime="20201115 22:04:05.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.037" endtime="20201115 22:04:05.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.032" endtime="20201115 22:04:05.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:05.436" level="INFO">${RESULT} = [{'time': 0.043155958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.04325375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:04:05.427" endtime="20201115 22:04:05.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:05.468" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:05.438" endtime="20201115 22:04:05.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.480" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:04:05.478" endtime="20201115 22:04:05.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.486" level="INFO">VALUE: [2.915999999998642e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.887999999999502e-06, 2.9719999999969215e-06, 2.915999999998642e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.8890000000059146e-06, 2.860999999999836e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.9030000000054845e-06, 2.8890000000059146e-06, 2.9029999999985456e-06, 2.9579999999973516e-06, 2.9029999999985456e-06, 2.9719999999969215e-06, 2.9030000000054845e-06, 2.9439999999977817e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.9030000000054845e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.8750000000063447e-06, 2.915999999998642e-06, 2.9449999999972554e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.9169999999981155e-06, 2.8750000000063447e-06, 2.9029999999985456e-06, 2.833000000000696e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.9030000000054845e-06, 2.8889999999989757e-06, 2.9169999999981155e-06, 2.9169999999981155e-06, 2.8889999999989757e-06]</msg>
<status status="PASS" starttime="20201115 22:04:05.483" endtime="20201115 22:04:05.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.471" endtime="20201115 22:04:05.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.495" endtime="20201115 22:04:05.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:05.503" endtime="20201115 22:04:05.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.499" endtime="20201115 22:04:05.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.490" endtime="20201115 22:04:05.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.974" endtime="20201115 22:04:05.529"></status>
</kw>
<msg timestamp="20201115 22:04:05.529" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.553" endtime="20201115 22:04:05.570"></status>
</kw>
<msg timestamp="20201115 22:04:05.572" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:05.549" endtime="20201115 22:04:05.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.578" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:05.574" endtime="20201115 22:04:05.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.580" endtime="20201115 22:04:05.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.542" endtime="20201115 22:04:05.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.536" endtime="20201115 22:04:05.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.604" endtime="20201115 22:04:05.948"></status>
</kw>
<msg timestamp="20201115 22:04:05.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043141403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043144306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:05.601" endtime="20201115 22:04:05.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:05.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043141403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043144306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:05.958" endtime="20201115 22:04:05.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:05.977" endtime="20201115 22:04:05.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.593" endtime="20201115 22:04:05.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.589" endtime="20201115 22:04:05.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:05.996" level="INFO">${RESULT} = [{'time': 0.043144306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.043243611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:05.986" endtime="20201115 22:04:05.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:06.030" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:05.998" endtime="20201115 22:04:06.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.041" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:04:06.039" endtime="20201115 22:04:06.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.046" level="INFO">VALUE: [2.9029999999985456e-06, 2.9580000000042905e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.915999999998642e-06, 2.8889999999989757e-06, 2.887999999999502e-06, 2.9450000000041943e-06, 2.9170000000050544e-06, 2.915999999998642e-06, 2.9029999999985456e-06, 2.9449999999972554e-06, 2.833000000000696e-06, 2.8750000000063447e-06, 2.874999999999406e-06, 2.9170000000050544e-06, 2.9029999999985456e-06, 2.915999999998642e-06, 2.901999999999072e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.9589999999968253e-06, 2.9300000000051507e-06, 2.901999999999072e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.9169999999981155e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.9439999999977817e-06, 2.915999999998642e-06, 2.901999999999072e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.901999999999072e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.887999999999502e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.9029999999985456e-06]</msg>
<status status="PASS" starttime="20201115 22:04:06.043" endtime="20201115 22:04:06.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.032" endtime="20201115 22:04:06.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.055" endtime="20201115 22:04:06.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:06.064" endtime="20201115 22:04:06.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.059" endtime="20201115 22:04:06.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.051" endtime="20201115 22:04:06.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:05.531" endtime="20201115 22:04:06.090"></status>
</kw>
<msg timestamp="20201115 22:04:06.090" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.113" endtime="20201115 22:04:06.132"></status>
</kw>
<msg timestamp="20201115 22:04:06.133" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:06.110" endtime="20201115 22:04:06.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.139" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:06.135" endtime="20201115 22:04:06.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.142" endtime="20201115 22:04:06.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.103" endtime="20201115 22:04:06.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.097" endtime="20201115 22:04:06.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.165" endtime="20201115 22:04:06.507"></status>
</kw>
<msg timestamp="20201115 22:04:06.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042964472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042967389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:06.162" endtime="20201115 22:04:06.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042964472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042967389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:06.517" endtime="20201115 22:04:06.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.537" endtime="20201115 22:04:06.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.155" endtime="20201115 22:04:06.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.150" endtime="20201115 22:04:06.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:06.555" level="INFO">${RESULT} = [{'time': 0.042967389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9170000000050544e-06, 'source_diff': 2.9170000000050544e-06}, {'time': 0.043069542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:06.545" endtime="20201115 22:04:06.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:06.586" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:06.557" endtime="20201115 22:04:06.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.598" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:04:06.595" endtime="20201115 22:04:06.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.604" level="INFO">VALUE: [2.9170000000050544e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.9030000000054845e-06, 2.8889999999989757e-06, 2.847000000000266e-06, 2.9580000000042905e-06, 2.860999999999836e-06, 2.9029999999985456e-06, 2.8619999999993095e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.9440000000047206e-06, 2.8889999999989757e-06, 2.8890000000059146e-06, 2.9580000000042905e-06, 2.9029999999985456e-06, 2.887999999999502e-06, 2.929999999998212e-06, 2.9029999999985456e-06, 2.8889999999989757e-06, 2.9719999999969215e-06, 2.9029999999985456e-06, 2.9030000000054845e-06, 2.8890000000059146e-06, 2.860999999999836e-06, 2.915999999998642e-06, 2.915999999998642e-06, 2.887999999999502e-06, 2.901999999999072e-06, 2.8890000000059146e-06, 2.915999999998642e-06, 2.9309999999976855e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.8890000000059146e-06, 2.8889999999989757e-06, 2.9030000000054845e-06, 2.887999999999502e-06, 2.887999999999502e-06, 2.9169999999981155e-06, 2.9029999999985456e-06, 2.929999999998212e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.9029999999985456e-06]</msg>
<status status="PASS" starttime="20201115 22:04:06.601" endtime="20201115 22:04:06.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.588" endtime="20201115 22:04:06.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.613" endtime="20201115 22:04:06.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:06.621" endtime="20201115 22:04:06.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.617" endtime="20201115 22:04:06.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.608" endtime="20201115 22:04:06.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.091" endtime="20201115 22:04:06.647"></status>
</kw>
<msg timestamp="20201115 22:04:06.648" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.671" endtime="20201115 22:04:06.690"></status>
</kw>
<msg timestamp="20201115 22:04:06.691" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:06.668" endtime="20201115 22:04:06.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:06.698" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:06.693" endtime="20201115 22:04:06.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.700" endtime="20201115 22:04:06.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.660" endtime="20201115 22:04:06.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.654" endtime="20201115 22:04:06.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:06.724" endtime="20201115 22:04:07.068"></status>
</kw>
<msg timestamp="20201115 22:04:07.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043641819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043644722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:06.720" endtime="20201115 22:04:07.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043641819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043644722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:07.079" endtime="20201115 22:04:07.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.098" endtime="20201115 22:04:07.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.713" endtime="20201115 22:04:07.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.708" endtime="20201115 22:04:07.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:07.116" level="INFO">${RESULT} = [{'time': 0.043644722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.043747722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:07.107" endtime="20201115 22:04:07.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:07.147" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:07.118" endtime="20201115 22:04:07.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.159" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:04:07.156" endtime="20201115 22:04:07.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.164" level="INFO">VALUE: [2.9029999999985456e-06, 2.9030000000054845e-06, 2.8889999999989757e-06, 2.8890000000059146e-06, 2.8889999999989757e-06, 2.9169999999981155e-06, 2.9589999999968253e-06, 2.9169999999981155e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.887999999999502e-06, 2.8889999999989757e-06, 2.9029999999985456e-06, 2.915999999998642e-06, 2.9440000000047206e-06, 2.972999999996395e-06, 2.8889999999989757e-06, 2.9579999999973516e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.901999999999072e-06, 2.9030000000054845e-06, 2.901999999999072e-06, 2.9029999999985456e-06, 2.9169999999981155e-06, 2.9170000000050544e-06, 2.9029999999985456e-06, 2.9300000000051507e-06, 2.9449999999972554e-06, 2.8889999999989757e-06, 2.901999999999072e-06, 2.9030000000054845e-06, 2.9030000000054845e-06, 2.9169999999981155e-06, 2.8889999999989757e-06, 2.833000000000696e-06, 2.9169999999981155e-06, 2.8890000000059146e-06, 2.8889999999989757e-06, 2.9169999999981155e-06, 2.901999999999072e-06, 2.9029999999985456e-06, 2.9440000000047206e-06, 2.8889999999989757e-06, 2.9449999999972554e-06, 2.9309999999976855e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.8889999999989757e-06]</msg>
<status status="PASS" starttime="20201115 22:04:07.161" endtime="20201115 22:04:07.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.149" endtime="20201115 22:04:07.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.174" endtime="20201115 22:04:07.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:07.183" endtime="20201115 22:04:07.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.178" endtime="20201115 22:04:07.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.170" endtime="20201115 22:04:07.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:06.649" endtime="20201115 22:04:07.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.411" endtime="20201115 22:04:07.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:04.409" endtime="20201115 22:04:07.210"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.215" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.238" endtime="20201115 22:04:07.255"></status>
</kw>
<msg timestamp="20201115 22:04:07.255" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:07.234" endtime="20201115 22:04:07.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.258" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:07.257" endtime="20201115 22:04:07.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.259" endtime="20201115 22:04:07.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.227" endtime="20201115 22:04:07.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.221" endtime="20201115 22:04:07.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.271" endtime="20201115 22:04:07.582"></status>
</kw>
<msg timestamp="20201115 22:04:07.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048538875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048542014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:07.269" endtime="20201115 22:04:07.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048538875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048542014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:07.591" endtime="20201115 22:04:07.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.610" endtime="20201115 22:04:07.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.266" endtime="20201115 22:04:07.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.264" endtime="20201115 22:04:07.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:07.628" level="INFO">${RESULT} = [{'time': 0.048542014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.048660764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:07.619" endtime="20201115 22:04:07.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:07.659" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:07.630" endtime="20201115 22:04:07.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.670" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:04:07.668" endtime="20201115 22:04:07.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.677" level="INFO">VALUE: [3.1389999999992257e-06, 3.124999999999656e-06, 3.1939999999980317e-06, 3.1950000000044443e-06, 3.1950000000044443e-06, 3.1950000000044443e-06, 3.1939999999980317e-06, 3.223000000003584e-06, 3.2079999999976017e-06, 3.1949999999975054e-06, 3.1949999999975054e-06, 3.2079999999976017e-06, 3.1949999999975054e-06, 3.1949999999975054e-06, 3.2080000000045406e-06, 3.1810000000048744e-06, 3.1809999999979355e-06, 3.2229999999966452e-06, 3.1529999999987957e-06, 3.1939999999980317e-06, 3.1949999999975054e-06, 3.2219999999971716e-06, 3.1809999999979355e-06, 3.26400000000282e-06, 3.1940000000049706e-06, 3.2079999999976017e-06, 3.2219999999971716e-06, 3.1950000000044443e-06, 3.2079999999976017e-06, 3.27800000000239e-06, 3.179999999998462e-06, 3.1939999999980317e-06, 3.1390000000061646e-06, 3.1949999999975054e-06, 3.2359999999967415e-06, 3.1949999999975054e-06, 3.2080000000045406e-06, 3.165999999998892e-06, 3.1949999999975054e-06, 3.1809999999979355e-06, 3.1809999999979355e-06, 3.2359999999967415e-06, 3.1950000000044443e-06, 3.179999999998462e-06, 3.1940000000049706e-06, 3.1940000000049706e-06, 3.1670000000053045e-06, 3.1949999999975054e-06, 3.1950000000044443e-06, 3.1669999999983656e-06]</msg>
<status status="PASS" starttime="20201115 22:04:07.673" endtime="20201115 22:04:07.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.661" endtime="20201115 22:04:07.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.686" endtime="20201115 22:04:07.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:07.695" endtime="20201115 22:04:07.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.690" endtime="20201115 22:04:07.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.682" endtime="20201115 22:04:07.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.216" endtime="20201115 22:04:07.720"></status>
</kw>
<msg timestamp="20201115 22:04:07.721" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.745" endtime="20201115 22:04:07.764"></status>
</kw>
<msg timestamp="20201115 22:04:07.765" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:07.741" endtime="20201115 22:04:07.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:07.772" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:07.768" endtime="20201115 22:04:07.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.774" endtime="20201115 22:04:07.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.734" endtime="20201115 22:04:07.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.728" endtime="20201115 22:04:07.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:07.798" endtime="20201115 22:04:08.142"></status>
</kw>
<msg timestamp="20201115 22:04:08.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043421778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043424958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:07.795" endtime="20201115 22:04:08.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043421778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043424958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:08.151" endtime="20201115 22:04:08.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.170" endtime="20201115 22:04:08.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.787" endtime="20201115 22:04:08.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.783" endtime="20201115 22:04:08.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:08.188" level="INFO">${RESULT} = [{'time': 0.043424958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.179999999998462e-06, 'source_diff': 3.179999999998462e-06}, {'time': 0.043539972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:08.178" endtime="20201115 22:04:08.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:08.219" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:08.190" endtime="20201115 22:04:08.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.230" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:04:08.228" endtime="20201115 22:04:08.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.236" level="INFO">VALUE: [3.179999999998462e-06, 3.1940000000049706e-06, 3.2089999999970753e-06, 3.1949999999975054e-06, 3.1809999999979355e-06, 3.1949999999975054e-06, 3.2079999999976017e-06, 3.179999999998462e-06, 3.1949999999975054e-06, 3.1950000000044443e-06, 3.1950000000044443e-06, 3.2079999999976017e-06, 3.1949999999975054e-06, 3.1949999999975054e-06, 3.1950000000044443e-06, 3.1949999999975054e-06, 3.1939999999980317e-06, 3.1940000000049706e-06, 3.2080000000045406e-06, 3.1939999999980317e-06, 3.2079999999976017e-06, 3.1950000000044443e-06, 3.179999999998462e-06, 3.2079999999976017e-06, 3.2079999999976017e-06, 3.1940000000049706e-06, 3.179999999998462e-06, 3.1949999999975054e-06, 3.1949999999975054e-06, 3.1939999999980317e-06, 3.2079999999976017e-06, 3.2079999999976017e-06, 3.1809999999979355e-06, 3.2219999999971716e-06, 3.2219999999971716e-06, 3.1529999999987957e-06, 3.179999999998462e-06, 3.2219999999971716e-06, 3.1939999999980317e-06, 3.179999999998462e-06, 3.2089999999970753e-06, 3.2499999999963114e-06, 3.1940000000049706e-06, 3.1939999999980317e-06, 3.2079999999976017e-06, 3.1949999999975054e-06, 3.209000000004014e-06, 3.1940000000049706e-06, 3.1949999999975054e-06, 3.1940000000049706e-06]</msg>
<status status="PASS" starttime="20201115 22:04:08.233" endtime="20201115 22:04:08.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.221" endtime="20201115 22:04:08.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.245" endtime="20201115 22:04:08.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:08.257" endtime="20201115 22:04:08.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.252" endtime="20201115 22:04:08.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.240" endtime="20201115 22:04:08.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.722" endtime="20201115 22:04:08.283"></status>
</kw>
<msg timestamp="20201115 22:04:08.283" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.307" endtime="20201115 22:04:08.326"></status>
</kw>
<msg timestamp="20201115 22:04:08.327" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:08.304" endtime="20201115 22:04:08.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.333" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:08.329" endtime="20201115 22:04:08.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.336" endtime="20201115 22:04:08.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.296" endtime="20201115 22:04:08.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.290" endtime="20201115 22:04:08.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.359" endtime="20201115 22:04:08.701"></status>
</kw>
<msg timestamp="20201115 22:04:08.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043948986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043952167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:08.356" endtime="20201115 22:04:08.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043948986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043952167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:08.711" endtime="20201115 22:04:08.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.730" endtime="20201115 22:04:08.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.349" endtime="20201115 22:04:08.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.344" endtime="20201115 22:04:08.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:08.748" level="INFO">${RESULT} = [{'time': 0.043952167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1809999999979355e-06, 'source_diff': 3.1809999999979355e-06}, {'time': 0.044068194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:08.738" endtime="20201115 22:04:08.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:08.779" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:08.750" endtime="20201115 22:04:08.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.790" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:04:08.788" endtime="20201115 22:04:08.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.796" level="INFO">VALUE: [3.1809999999979355e-06, 3.1939999999980317e-06, 3.209000000004014e-06, 3.2080000000045406e-06, 3.1529999999987957e-06, 3.165999999998892e-06, 3.2220000000041105e-06, 3.1950000000044443e-06, 3.1669999999983656e-06, 3.2080000000045406e-06, 3.1939999999980317e-06, 3.2079999999976017e-06, 3.2359999999967415e-06, 3.1940000000049706e-06, 3.2079999999976017e-06, 3.2079999999976017e-06, 3.1950000000044443e-06, 3.1669999999983656e-06, 3.1810000000048744e-06, 3.1939999999980317e-06, 3.1939999999980317e-06, 3.1939999999980317e-06, 3.2499999999963114e-06, 3.124999999999656e-06, 3.1809999999979355e-06, 3.1940000000049706e-06, 3.1809999999979355e-06, 3.209000000004014e-06, 3.26400000000282e-06, 3.1939999999980317e-06, 3.209000000004014e-06, 3.2079999999976017e-06, 3.1809999999979355e-06, 3.1809999999979355e-06, 3.1939999999980317e-06, 3.179999999998462e-06, 3.26400000000282e-06, 3.1800000000054007e-06, 3.209000000004014e-06, 3.1940000000049706e-06, 3.1940000000049706e-06, 3.1810000000048744e-06, 3.1949999999975054e-06, 3.2089999999970753e-06, 3.1809999999979355e-06, 3.2359999999967415e-06, 3.1809999999979355e-06, 3.1800000000054007e-06, 3.179999999998462e-06, 3.1529999999987957e-06]</msg>
<status status="PASS" starttime="20201115 22:04:08.793" endtime="20201115 22:04:08.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.781" endtime="20201115 22:04:08.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.805" endtime="20201115 22:04:08.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:08.813" endtime="20201115 22:04:08.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.809" endtime="20201115 22:04:08.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.800" endtime="20201115 22:04:08.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.284" endtime="20201115 22:04:08.840"></status>
</kw>
<msg timestamp="20201115 22:04:08.840" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.865" endtime="20201115 22:04:08.884"></status>
</kw>
<msg timestamp="20201115 22:04:08.885" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:08.862" endtime="20201115 22:04:08.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:08.892" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:08.888" endtime="20201115 22:04:08.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.894" endtime="20201115 22:04:08.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.854" endtime="20201115 22:04:08.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.847" endtime="20201115 22:04:08.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:08.918" endtime="20201115 22:04:09.260"></status>
</kw>
<msg timestamp="20201115 22:04:09.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044764833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044768014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:08.915" endtime="20201115 22:04:09.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044764833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044768014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:09.269" endtime="20201115 22:04:09.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.288" endtime="20201115 22:04:09.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.907" endtime="20201115 22:04:09.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.903" endtime="20201115 22:04:09.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:09.306" level="INFO">${RESULT} = [{'time': 0.044768014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1810000000048744e-06, 'source_diff': 3.1810000000048744e-06}, {'time': 0.044886194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:09.297" endtime="20201115 22:04:09.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:09.337" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:09.308" endtime="20201115 22:04:09.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.348" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:04:09.346" endtime="20201115 22:04:09.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.354" level="INFO">VALUE: [3.1810000000048744e-06, 3.2629999999964077e-06, 3.1950000000044443e-06, 3.1669999999983656e-06, 3.1809999999979355e-06, 3.1809999999979355e-06, 3.1940000000049706e-06, 3.1949999999975054e-06, 3.2080000000045406e-06, 3.179999999998462e-06, 3.2360000000036804e-06, 3.1949999999975054e-06, 3.179999999998462e-06, 3.2080000000045406e-06, 3.1949999999975054e-06, 3.1950000000044443e-06, 3.1809999999979355e-06, 3.179999999998462e-06, 3.1949999999975054e-06, 3.1800000000054007e-06, 3.1809999999979355e-06, 3.1809999999979355e-06, 3.179999999998462e-06, 3.1950000000044443e-06, 3.1939999999980317e-06, 3.2089999999970753e-06, 3.1939999999980317e-06, 3.1950000000044443e-06, 3.179999999998462e-06, 3.1949999999975054e-06, 3.2079999999976017e-06, 3.1940000000049706e-06, 3.2079999999976017e-06, 3.1949999999975054e-06, 3.179999999998462e-06, 3.1939999999980317e-06, 3.1939999999980317e-06, 3.1939999999980317e-06, 3.1810000000048744e-06, 3.2089999999970753e-06, 3.165999999998892e-06, 3.1950000000044443e-06, 3.179999999998462e-06, 3.1939999999980317e-06, 3.1949999999975054e-06, 3.1950000000044443e-06, 3.1949999999975054e-06, 3.1949999999975054e-06, 3.1940000000049706e-06, 3.2359999999967415e-06]</msg>
<status status="PASS" starttime="20201115 22:04:09.351" endtime="20201115 22:04:09.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.339" endtime="20201115 22:04:09.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.364" endtime="20201115 22:04:09.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:09.372" endtime="20201115 22:04:09.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.368" endtime="20201115 22:04:09.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.359" endtime="20201115 22:04:09.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:08.841" endtime="20201115 22:04:09.398"></status>
</kw>
<msg timestamp="20201115 22:04:09.399" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.422" endtime="20201115 22:04:09.440"></status>
</kw>
<msg timestamp="20201115 22:04:09.441" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:09.419" endtime="20201115 22:04:09.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.447" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:09.443" endtime="20201115 22:04:09.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.450" endtime="20201115 22:04:09.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.411" endtime="20201115 22:04:09.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.405" endtime="20201115 22:04:09.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.475" endtime="20201115 22:04:09.819"></status>
</kw>
<msg timestamp="20201115 22:04:09.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043197056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04320025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:09.472" endtime="20201115 22:04:09.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043197056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04320025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:09.829" endtime="20201115 22:04:09.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.848" endtime="20201115 22:04:09.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.465" endtime="20201115 22:04:09.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.460" endtime="20201115 22:04:09.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:09.866" level="INFO">${RESULT} = [{'time': 0.04320025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1940000000049706e-06, 'source_diff': 3.1940000000049706e-06}, {'time': 0.043319653, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:04:09.856" endtime="20201115 22:04:09.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:09.896" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:09.868" endtime="20201115 22:04:09.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.908" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:04:09.905" endtime="20201115 22:04:09.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.913" level="INFO">VALUE: [3.1940000000049706e-06, 3.2089999999970753e-06, 3.1950000000044443e-06, 3.179999999998462e-06, 3.179999999998462e-06, 3.1939999999980317e-06, 3.1800000000054007e-06, 3.1940000000049706e-06, 3.1940000000049706e-06, 3.1939999999980317e-06, 3.179999999998462e-06, 3.1949999999975054e-06, 3.2079999999976017e-06, 3.2219999999971716e-06, 3.1950000000044443e-06, 3.1940000000049706e-06, 3.1940000000049706e-06, 3.2079999999976017e-06, 3.2089999999970753e-06, 3.1949999999975054e-06, 3.1669999999983656e-06, 3.1950000000044443e-06, 3.2359999999967415e-06, 3.2079999999976017e-06, 3.111000000000086e-06, 3.1939999999980317e-06, 3.2089999999970753e-06, 3.2360000000036804e-06, 3.1950000000044443e-06, 3.1809999999979355e-06, 3.1940000000049706e-06, 3.1949999999975054e-06, 3.2080000000045406e-06, 3.2639999999958813e-06, 3.179999999998462e-06, 3.1949999999975054e-06, 3.2080000000045406e-06, 3.1949999999975054e-06, 3.2079999999976017e-06, 3.1939999999980317e-06, 3.2079999999976017e-06, 3.1939999999980317e-06, 3.1940000000049706e-06, 3.1809999999979355e-06, 3.1940000000049706e-06, 3.2079999999976017e-06, 3.179999999998462e-06, 3.1809999999979355e-06, 3.1940000000049706e-06, 3.1950000000044443e-06]</msg>
<status status="PASS" starttime="20201115 22:04:09.910" endtime="20201115 22:04:09.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.898" endtime="20201115 22:04:09.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.923" endtime="20201115 22:04:09.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:09.932" endtime="20201115 22:04:09.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.927" endtime="20201115 22:04:09.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.918" endtime="20201115 22:04:09.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.400" endtime="20201115 22:04:09.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.212" endtime="20201115 22:04:09.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:07.211" endtime="20201115 22:04:09.958"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:09.963" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:09.987" endtime="20201115 22:04:10.006"></status>
</kw>
<msg timestamp="20201115 22:04:10.007" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:09.983" endtime="20201115 22:04:10.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.013" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:10.009" endtime="20201115 22:04:10.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.016" endtime="20201115 22:04:10.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.976" endtime="20201115 22:04:10.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.970" endtime="20201115 22:04:10.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.043" endtime="20201115 22:04:10.387"></status>
</kw>
<msg timestamp="20201115 22:04:10.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048891042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048894444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:10.039" endtime="20201115 22:04:10.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048891042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048894444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:10.397" endtime="20201115 22:04:10.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.416" endtime="20201115 22:04:10.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.029" endtime="20201115 22:04:10.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.024" endtime="20201115 22:04:10.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:10.434" level="INFO">${RESULT} = [{'time': 0.048894444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.401999999999572e-06, 'source_diff': 3.401999999999572e-06}, {'time': 0.049015583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:10.424" endtime="20201115 22:04:10.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:10.465" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:10.436" endtime="20201115 22:04:10.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.476" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:04:10.473" endtime="20201115 22:04:10.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.482" level="INFO">VALUE: [3.401999999999572e-06, 3.4860000000039304e-06, 3.5140000000030702e-06, 3.4999999999965614e-06, 3.4999999999965614e-06, 3.5000000000035003e-06, 3.487000000003404e-06, 3.4439999999982818e-06, 3.4719999999974216e-06, 3.5000000000035003e-06, 3.4859999999969915e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4719999999974216e-06, 3.4859999999969915e-06, 3.4999999999965614e-06, 3.5140000000030702e-06, 3.52800000000264e-06, 3.473000000003834e-06, 3.4859999999969915e-06, 3.4719999999974216e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.5140000000030702e-06, 3.5000000000035003e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.52800000000264e-06, 3.4860000000039304e-06, 3.487000000003404e-06, 3.5139999999961313e-06, 3.4860000000039304e-06, 3.473000000003834e-06, 3.5000000000035003e-06, 3.486999999996465e-06, 3.4729999999968952e-06, 3.486999999996465e-06, 3.5000000000035003e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.5279999999957012e-06, 3.4720000000043605e-06, 3.4719999999974216e-06, 3.5140000000030702e-06, 3.4859999999969915e-06]</msg>
<status status="PASS" starttime="20201115 22:04:10.478" endtime="20201115 22:04:10.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.466" endtime="20201115 22:04:10.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.491" endtime="20201115 22:04:10.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:10.499" endtime="20201115 22:04:10.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.495" endtime="20201115 22:04:10.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.486" endtime="20201115 22:04:10.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.964" endtime="20201115 22:04:10.525"></status>
</kw>
<msg timestamp="20201115 22:04:10.526" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.549" endtime="20201115 22:04:10.569"></status>
</kw>
<msg timestamp="20201115 22:04:10.570" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:10.546" endtime="20201115 22:04:10.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.577" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:10.573" endtime="20201115 22:04:10.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.579" endtime="20201115 22:04:10.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.538" endtime="20201115 22:04:10.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.533" endtime="20201115 22:04:10.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.603" endtime="20201115 22:04:10.903"></status>
</kw>
<msg timestamp="20201115 22:04:10.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043493139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043496639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:10.599" endtime="20201115 22:04:10.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043493139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043496639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:10.913" endtime="20201115 22:04:10.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:10.932" endtime="20201115 22:04:10.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.592" endtime="20201115 22:04:10.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.587" endtime="20201115 22:04:10.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:10.949" level="INFO">${RESULT} = [{'time': 0.043496639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4999999999965614e-06, 'source_diff': 3.4999999999965614e-06}, {'time': 0.043625972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:10.940" endtime="20201115 22:04:10.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:10.981" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:10.951" endtime="20201115 22:04:10.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.993" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:04:10.990" endtime="20201115 22:04:10.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:10.998" level="INFO">VALUE: [3.4999999999965614e-06, 3.5550000000023063e-06, 3.4589999999973253e-06, 3.55600000000178e-06, 3.4439999999982818e-06, 3.4859999999969915e-06, 3.5000000000035003e-06, 3.4859999999969915e-06, 3.5140000000030702e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4729999999968952e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.473000000003834e-06, 3.4309999999981855e-06, 3.4450000000046943e-06, 3.4720000000043605e-06, 3.4720000000043605e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.486999999996465e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4719999999974216e-06, 3.4719999999974216e-06, 3.52800000000264e-06, 3.4859999999969915e-06, 3.4580000000047906e-06, 3.4859999999969915e-06, 3.5000000000035003e-06, 3.4859999999969915e-06, 3.5000000000035003e-06, 3.5410000000027364e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.5000000000035003e-06, 3.487000000003404e-06, 3.4859999999969915e-06, 3.4999999999965614e-06, 3.4860000000039304e-06, 3.4729999999968952e-06, 3.4859999999969915e-06, 3.4859999999969915e-06]</msg>
<status status="PASS" starttime="20201115 22:04:10.995" endtime="20201115 22:04:10.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.983" endtime="20201115 22:04:11.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.007" endtime="20201115 22:04:11.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:11.016" endtime="20201115 22:04:11.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.011" endtime="20201115 22:04:11.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.003" endtime="20201115 22:04:11.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:10.527" endtime="20201115 22:04:11.042"></status>
</kw>
<msg timestamp="20201115 22:04:11.042" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.066" endtime="20201115 22:04:11.085"></status>
</kw>
<msg timestamp="20201115 22:04:11.086" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:11.063" endtime="20201115 22:04:11.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.093" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:11.088" endtime="20201115 22:04:11.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.095" endtime="20201115 22:04:11.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.055" endtime="20201115 22:04:11.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.049" endtime="20201115 22:04:11.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.119" endtime="20201115 22:04:11.463"></status>
</kw>
<msg timestamp="20201115 22:04:11.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044169403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044172875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:11.116" endtime="20201115 22:04:11.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044169403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044172875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:11.473" endtime="20201115 22:04:11.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.492" endtime="20201115 22:04:11.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.108" endtime="20201115 22:04:11.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.104" endtime="20201115 22:04:11.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:11.510" level="INFO">${RESULT} = [{'time': 0.044172875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4719999999974216e-06, 'source_diff': 3.4719999999974216e-06}, {'time': 0.044295875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:11.500" endtime="20201115 22:04:11.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:11.541" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:11.512" endtime="20201115 22:04:11.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.552" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:04:11.550" endtime="20201115 22:04:11.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.558" level="INFO">VALUE: [3.4719999999974216e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.5269999999962276e-06, 3.5000000000035003e-06, 3.4719999999974216e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4579999999978517e-06, 3.4720000000043605e-06, 3.4859999999969915e-06, 3.5000000000035003e-06, 3.4999999999965614e-06, 3.4719999999974216e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.4719999999974216e-06, 3.486999999996465e-06, 3.4580000000047906e-06, 3.4720000000043605e-06, 3.4859999999969915e-06, 3.4580000000047906e-06, 3.4719999999974216e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.5279999999957012e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.5690000000018762e-06, 3.4860000000039304e-06, 3.4999999999965614e-06, 3.4859999999969915e-06, 3.5140000000030702e-06, 3.4729999999968952e-06, 3.4580000000047906e-06, 3.5279999999957012e-06, 3.4439999999982818e-06, 3.4579999999978517e-06, 3.4720000000043605e-06, 3.4859999999969915e-06, 3.4999999999965614e-06, 3.5000000000035003e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.5140000000030702e-06]</msg>
<status status="PASS" starttime="20201115 22:04:11.555" endtime="20201115 22:04:11.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.543" endtime="20201115 22:04:11.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.567" endtime="20201115 22:04:11.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:11.575" endtime="20201115 22:04:11.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.571" endtime="20201115 22:04:11.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.562" endtime="20201115 22:04:11.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.043" endtime="20201115 22:04:11.601"></status>
</kw>
<msg timestamp="20201115 22:04:11.602" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.625" endtime="20201115 22:04:11.645"></status>
</kw>
<msg timestamp="20201115 22:04:11.646" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:11.622" endtime="20201115 22:04:11.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:11.652" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:11.648" endtime="20201115 22:04:11.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.655" endtime="20201115 22:04:11.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.614" endtime="20201115 22:04:11.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.608" endtime="20201115 22:04:11.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:11.679" endtime="20201115 22:04:12.023"></status>
</kw>
<msg timestamp="20201115 22:04:12.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043481875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043485347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:11.675" endtime="20201115 22:04:12.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043481875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043485347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:12.033" endtime="20201115 22:04:12.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.052" endtime="20201115 22:04:12.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.668" endtime="20201115 22:04:12.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.663" endtime="20201115 22:04:12.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:12.071" level="INFO">${RESULT} = [{'time': 0.043485347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4719999999974216e-06, 'source_diff': 3.4719999999974216e-06}, {'time': 0.043608167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:12.062" endtime="20201115 22:04:12.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:12.102" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:12.073" endtime="20201115 22:04:12.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.114" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:04:12.112" endtime="20201115 22:04:12.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.120" level="INFO">VALUE: [3.4719999999974216e-06, 3.4860000000039304e-06, 3.4729999999968952e-06, 3.5000000000035003e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.4580000000047906e-06, 3.4860000000039304e-06, 3.487000000003404e-06, 3.4719999999974216e-06, 3.4860000000039304e-06, 3.4589999999973253e-06, 3.4999999999965614e-06, 3.4860000000039304e-06, 3.4719999999974216e-06, 3.4720000000043605e-06, 3.4999999999965614e-06, 3.4999999999965614e-06, 3.4860000000039304e-06, 3.4309999999981855e-06, 3.4999999999965614e-06, 3.5000000000035003e-06, 3.4720000000043605e-06, 3.4719999999974216e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.4589999999973253e-06, 3.487000000003404e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4450000000046943e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.473000000003834e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.52800000000264e-06, 3.4719999999974216e-06, 3.4720000000043605e-06, 3.4720000000043605e-06, 3.4999999999965614e-06, 3.4720000000043605e-06, 3.5140000000030702e-06, 3.5000000000035003e-06, 3.4860000000039304e-06]</msg>
<status status="PASS" starttime="20201115 22:04:12.117" endtime="20201115 22:04:12.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.104" endtime="20201115 22:04:12.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.129" endtime="20201115 22:04:12.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:12.138" endtime="20201115 22:04:12.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.134" endtime="20201115 22:04:12.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.125" endtime="20201115 22:04:12.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:11.603" endtime="20201115 22:04:12.164"></status>
</kw>
<msg timestamp="20201115 22:04:12.165" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.188" endtime="20201115 22:04:12.207"></status>
</kw>
<msg timestamp="20201115 22:04:12.208" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:12.184" endtime="20201115 22:04:12.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.214" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:12.210" endtime="20201115 22:04:12.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.217" endtime="20201115 22:04:12.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.177" endtime="20201115 22:04:12.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.171" endtime="20201115 22:04:12.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.240" endtime="20201115 22:04:12.583"></status>
</kw>
<msg timestamp="20201115 22:04:12.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043219347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043222792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:12.237" endtime="20201115 22:04:12.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043219347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043222792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:12.593" endtime="20201115 22:04:12.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.612" endtime="20201115 22:04:12.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.230" endtime="20201115 22:04:12.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.225" endtime="20201115 22:04:12.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:12.632" level="INFO">${RESULT} = [{'time': 0.043222792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4450000000046943e-06, 'source_diff': 3.4450000000046943e-06}, {'time': 0.043340833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:12.622" endtime="20201115 22:04:12.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:12.662" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:12.634" endtime="20201115 22:04:12.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.673" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:04:12.671" endtime="20201115 22:04:12.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.679" level="INFO">VALUE: [3.4450000000046943e-06, 3.5140000000030702e-06, 3.5000000000035003e-06, 3.4859999999969915e-06, 3.4720000000043605e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.5140000000030702e-06, 3.4579999999978517e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4729999999968952e-06, 3.4729999999968952e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.4169999999986156e-06, 3.4860000000039304e-06, 3.4720000000043605e-06, 3.487000000003404e-06, 3.4860000000039304e-06, 3.4439999999982818e-06, 3.4859999999969915e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.4719999999974216e-06, 3.4860000000039304e-06, 3.4719999999974216e-06, 3.4999999999965614e-06, 3.4719999999974216e-06, 3.54200000000221e-06, 3.4720000000043605e-06, 3.5139999999961313e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.4999999999965614e-06, 3.4860000000039304e-06, 3.4860000000039304e-06, 3.4719999999974216e-06, 3.4579999999978517e-06, 3.4860000000039304e-06, 3.4719999999974216e-06, 3.4860000000039304e-06, 3.4859999999969915e-06, 3.4720000000043605e-06, 3.486999999996465e-06, 3.4720000000043605e-06, 3.5549999999953674e-06, 3.4169999999986156e-06]</msg>
<status status="PASS" starttime="20201115 22:04:12.676" endtime="20201115 22:04:12.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.664" endtime="20201115 22:04:12.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.688" endtime="20201115 22:04:12.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:12.696" endtime="20201115 22:04:12.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.692" endtime="20201115 22:04:12.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.683" endtime="20201115 22:04:12.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.166" endtime="20201115 22:04:12.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.961" endtime="20201115 22:04:12.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:09.959" endtime="20201115 22:04:12.723"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.728" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.752" endtime="20201115 22:04:12.771"></status>
</kw>
<msg timestamp="20201115 22:04:12.772" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:12.748" endtime="20201115 22:04:12.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:12.778" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:12.774" endtime="20201115 22:04:12.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.780" endtime="20201115 22:04:12.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.741" endtime="20201115 22:04:12.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.735" endtime="20201115 22:04:12.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:12.805" endtime="20201115 22:04:13.153"></status>
</kw>
<msg timestamp="20201115 22:04:13.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048847986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048851764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:12.801" endtime="20201115 22:04:13.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048847986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048851764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:13.163" endtime="20201115 22:04:13.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.182" endtime="20201115 22:04:13.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.794" endtime="20201115 22:04:13.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.789" endtime="20201115 22:04:13.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:13.200" level="INFO">${RESULT} = [{'time': 0.048851764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7779999999959513e-06, 'source_diff': 3.7779999999959513e-06}, {'time': 0.048981931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:13.190" endtime="20201115 22:04:13.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:13.230" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:13.202" endtime="20201115 22:04:13.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.242" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:04:13.239" endtime="20201115 22:04:13.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.247" level="INFO">VALUE: [3.7779999999959513e-06, 3.7639999999963814e-06, 3.7770000000034165e-06, 3.7499999999968114e-06, 3.7500000000037503e-06, 3.77800000000289e-06, 3.791999999995521e-06, 3.7359999999972415e-06, 3.7229999999971453e-06, 3.77800000000289e-06, 3.7779999999959513e-06, 3.7769999999964776e-06, 3.77800000000289e-06, 3.7639999999963814e-06, 3.77800000000289e-06, 3.7640000000033202e-06, 3.77800000000289e-06, 3.79200000000246e-06, 3.7769999999964776e-06, 3.7640000000033202e-06, 3.7640000000033202e-06, 3.7639999999963814e-06, 3.79200000000246e-06, 3.7359999999972415e-06, 3.7779999999959513e-06, 3.791999999995521e-06, 3.7639999999963814e-06, 3.7640000000033202e-06, 3.77800000000289e-06, 3.7089999999975753e-06, 3.791999999995521e-06, 3.791999999995521e-06, 3.7359999999972415e-06, 3.833000000001696e-06, 3.7770000000034165e-06, 3.7640000000033202e-06, 3.7779999999959513e-06, 3.7779999999959513e-06, 3.77800000000289e-06, 3.79200000000246e-06, 3.819000000002126e-06, 3.7779999999959513e-06, 3.77800000000289e-06, 3.861000000000836e-06, 3.77800000000289e-06, 3.7779999999959513e-06, 3.833000000001696e-06, 3.819000000002126e-06, 3.77800000000289e-06, 3.7909999999960475e-06]</msg>
<status status="PASS" starttime="20201115 22:04:13.244" endtime="20201115 22:04:13.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.232" endtime="20201115 22:04:13.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.256" endtime="20201115 22:04:13.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:13.264" endtime="20201115 22:04:13.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.260" endtime="20201115 22:04:13.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.251" endtime="20201115 22:04:13.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.729" endtime="20201115 22:04:13.290"></status>
</kw>
<msg timestamp="20201115 22:04:13.291" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.314" endtime="20201115 22:04:13.334"></status>
</kw>
<msg timestamp="20201115 22:04:13.335" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:13.310" endtime="20201115 22:04:13.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.342" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:13.338" endtime="20201115 22:04:13.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.345" endtime="20201115 22:04:13.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.303" endtime="20201115 22:04:13.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.297" endtime="20201115 22:04:13.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.368" endtime="20201115 22:04:13.711"></status>
</kw>
<msg timestamp="20201115 22:04:13.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043013319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043017083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:13.365" endtime="20201115 22:04:13.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043013319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043017083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:13.720" endtime="20201115 22:04:13.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.739" endtime="20201115 22:04:13.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.358" endtime="20201115 22:04:13.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.353" endtime="20201115 22:04:13.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:13.758" level="INFO">${RESULT} = [{'time': 0.043017083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7639999999963814e-06, 'source_diff': 3.7639999999963814e-06}, {'time': 0.043151014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:13.749" endtime="20201115 22:04:13.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:13.789" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:13.760" endtime="20201115 22:04:13.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.800" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:04:13.798" endtime="20201115 22:04:13.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.806" level="INFO">VALUE: [3.7639999999963814e-06, 3.7640000000033202e-06, 3.7770000000034165e-06, 3.7640000000033202e-06, 3.77800000000289e-06, 3.80600000000203e-06, 3.7770000000034165e-06, 3.80600000000203e-06, 3.7640000000033202e-06, 3.77800000000289e-06, 3.7640000000033202e-06, 3.79200000000246e-06, 3.7640000000033202e-06, 3.7769999999964776e-06, 3.7910000000029864e-06, 3.7639999999963814e-06, 3.8200000000016e-06, 3.7639999999963814e-06, 3.7779999999959513e-06, 3.7639999999963814e-06, 3.79200000000246e-06, 3.7639999999963814e-06, 3.7779999999959513e-06, 3.77800000000289e-06, 3.7910000000029864e-06, 3.79200000000246e-06, 3.7779999999959513e-06, 3.7639999999963814e-06, 3.8050000000025563e-06, 3.7639999999963814e-06, 3.7779999999959513e-06, 3.79200000000246e-06, 3.7779999999959513e-06, 3.7779999999959513e-06, 3.7909999999960475e-06, 3.77800000000289e-06, 3.77800000000289e-06, 3.818999999995187e-06, 3.7640000000033202e-06, 3.7779999999959513e-06, 3.7640000000033202e-06, 3.7639999999963814e-06, 3.819000000002126e-06, 3.8049999999956174e-06, 3.7769999999964776e-06, 3.7769999999964776e-06, 3.7910000000029864e-06, 3.7640000000033202e-06, 3.7639999999963814e-06, 3.7910000000029864e-06]</msg>
<status status="PASS" starttime="20201115 22:04:13.803" endtime="20201115 22:04:13.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.791" endtime="20201115 22:04:13.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.815" endtime="20201115 22:04:13.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:13.823" endtime="20201115 22:04:13.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.819" endtime="20201115 22:04:13.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.810" endtime="20201115 22:04:13.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.292" endtime="20201115 22:04:13.849"></status>
</kw>
<msg timestamp="20201115 22:04:13.850" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.874" endtime="20201115 22:04:13.893"></status>
</kw>
<msg timestamp="20201115 22:04:13.894" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:13.870" endtime="20201115 22:04:13.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:13.900" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:13.896" endtime="20201115 22:04:13.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.902" endtime="20201115 22:04:13.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.863" endtime="20201115 22:04:13.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.856" endtime="20201115 22:04:13.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:13.926" endtime="20201115 22:04:14.244"></status>
</kw>
<msg timestamp="20201115 22:04:14.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043873542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043877361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:13.923" endtime="20201115 22:04:14.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043873542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043877361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:14.254" endtime="20201115 22:04:14.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.272" endtime="20201115 22:04:14.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.916" endtime="20201115 22:04:14.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.911" endtime="20201115 22:04:14.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:14.292" level="INFO">${RESULT} = [{'time': 0.043877361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.818999999995187e-06, 'source_diff': 3.818999999995187e-06}, {'time': 0.044006917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:14.283" endtime="20201115 22:04:14.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:14.323" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:14.294" endtime="20201115 22:04:14.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.334" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:04:14.331" endtime="20201115 22:04:14.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.339" level="INFO">VALUE: [3.818999999995187e-06, 3.8200000000016e-06, 3.7639999999963814e-06, 3.7639999999963814e-06, 3.7079999999981017e-06, 3.7779999999959513e-06, 3.7079999999981017e-06, 3.79200000000246e-06, 3.77800000000289e-06, 3.7779999999959513e-06, 3.77800000000289e-06, 3.847000000001266e-06, 3.7779999999959513e-06, 3.832999999994757e-06, 3.79200000000246e-06, 3.77800000000289e-06, 3.7640000000033202e-06, 3.79200000000246e-06, 3.7779999999959513e-06, 3.77800000000289e-06, 3.8050000000025563e-06, 3.7770000000034165e-06, 3.7500000000037503e-06, 3.805999999995091e-06, 3.7769999999964776e-06, 3.7779999999959513e-06, 3.7640000000033202e-06, 3.77800000000289e-06, 3.7770000000034165e-06, 3.77800000000289e-06, 3.791999999995521e-06, 3.77800000000289e-06, 3.77800000000289e-06, 3.7630000000038466e-06, 3.805999999995091e-06, 3.791999999995521e-06, 3.77800000000289e-06, 3.7219999999976716e-06, 3.77800000000289e-06, 3.833999999994231e-06, 3.7779999999959513e-06, 3.77800000000289e-06, 3.7640000000033202e-06, 3.7779999999959513e-06, 3.7500000000037503e-06, 3.7770000000034165e-06, 3.7779999999959513e-06, 3.7499999999968114e-06, 3.7779999999959513e-06, 3.7910000000029864e-06]</msg>
<status status="PASS" starttime="20201115 22:04:14.336" endtime="20201115 22:04:14.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.324" endtime="20201115 22:04:14.342"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.348" endtime="20201115 22:04:14.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:14.357" endtime="20201115 22:04:14.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.352" endtime="20201115 22:04:14.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.344" endtime="20201115 22:04:14.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:13.851" endtime="20201115 22:04:14.387"></status>
</kw>
<msg timestamp="20201115 22:04:14.388" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.411" endtime="20201115 22:04:14.430"></status>
</kw>
<msg timestamp="20201115 22:04:14.431" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:14.408" endtime="20201115 22:04:14.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.438" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:14.434" endtime="20201115 22:04:14.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.440" endtime="20201115 22:04:14.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.400" endtime="20201115 22:04:14.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.394" endtime="20201115 22:04:14.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.464" endtime="20201115 22:04:14.806"></status>
</kw>
<msg timestamp="20201115 22:04:14.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043290083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043293847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:14.461" endtime="20201115 22:04:14.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043290083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043293847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:14.816" endtime="20201115 22:04:14.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.834" endtime="20201115 22:04:14.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.453" endtime="20201115 22:04:14.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.448" endtime="20201115 22:04:14.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:14.854" level="INFO">${RESULT} = [{'time': 0.043293847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7640000000033202e-06, 'source_diff': 3.7640000000033202e-06}, {'time': 0.043433431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:14.845" endtime="20201115 22:04:14.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:14.884" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:14.856" endtime="20201115 22:04:14.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.896" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:04:14.893" endtime="20201115 22:04:14.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.901" level="INFO">VALUE: [3.7640000000033202e-06, 3.8200000000016e-06, 3.7779999999959513e-06, 3.7639999999963814e-06, 3.79200000000246e-06, 3.7779999999959513e-06, 3.79200000000246e-06, 3.7769999999964776e-06, 3.7770000000034165e-06, 3.7639999999963814e-06, 3.7639999999963814e-06, 3.7499999999968114e-06, 3.847000000001266e-06, 3.77800000000289e-06, 3.805999999995091e-06, 3.7779999999959513e-06, 3.7910000000029864e-06, 3.7909999999960475e-06, 3.7909999999960475e-06, 3.79200000000246e-06, 3.80600000000203e-06, 3.791999999995521e-06, 3.7769999999964776e-06, 3.7779999999959513e-06, 3.7640000000033202e-06, 3.7500000000037503e-06, 3.7639999999963814e-06, 3.791999999995521e-06, 3.805999999995091e-06, 3.7910000000029864e-06, 3.7910000000029864e-06, 3.791999999995521e-06, 3.7640000000033202e-06, 3.77800000000289e-06, 3.861000000000836e-06, 3.7779999999959513e-06, 3.7770000000034165e-06, 3.7639999999963814e-06, 3.77800000000289e-06, 3.7779999999959513e-06, 3.7779999999959513e-06, 3.7639999999963814e-06, 3.80600000000203e-06, 3.77800000000289e-06, 3.7640000000033202e-06, 3.77800000000289e-06, 3.84800000000074e-06, 3.7770000000034165e-06, 3.791999999995521e-06, 3.7640000000033202e-06]</msg>
<status status="PASS" starttime="20201115 22:04:14.898" endtime="20201115 22:04:14.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.886" endtime="20201115 22:04:14.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.911" endtime="20201115 22:04:14.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:14.919" endtime="20201115 22:04:14.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.915" endtime="20201115 22:04:14.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.906" endtime="20201115 22:04:14.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.389" endtime="20201115 22:04:14.945"></status>
</kw>
<msg timestamp="20201115 22:04:14.945" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.969" endtime="20201115 22:04:14.988"></status>
</kw>
<msg timestamp="20201115 22:04:14.989" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:14.965" endtime="20201115 22:04:14.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:14.996" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:14.992" endtime="20201115 22:04:14.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:14.998" endtime="20201115 22:04:15.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.958" endtime="20201115 22:04:15.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.952" endtime="20201115 22:04:15.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.022" endtime="20201115 22:04:15.365"></status>
</kw>
<msg timestamp="20201115 22:04:15.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043059292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043063069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:15.019" endtime="20201115 22:04:15.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043059292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043063069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:15.374" endtime="20201115 22:04:15.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.393" endtime="20201115 22:04:15.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.011" endtime="20201115 22:04:15.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.007" endtime="20201115 22:04:15.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:15.414" level="INFO">${RESULT} = [{'time': 0.043063069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7770000000034165e-06, 'source_diff': 3.7770000000034165e-06}, {'time': 0.043202847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:15.405" endtime="20201115 22:04:15.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:15.445" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:15.416" endtime="20201115 22:04:15.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.456" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:04:15.454" endtime="20201115 22:04:15.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.461" level="INFO">VALUE: [3.7770000000034165e-06, 3.77800000000289e-06, 3.791999999995521e-06, 3.7770000000034165e-06, 3.7779999999959513e-06, 3.791999999995521e-06, 3.80600000000203e-06, 3.79200000000246e-06, 3.7779999999959513e-06, 3.79200000000246e-06, 3.7639999999963814e-06, 3.7629999999969077e-06, 3.77800000000289e-06, 3.7639999999963814e-06, 3.7779999999959513e-06, 3.8200000000016e-06, 3.77800000000289e-06, 3.77800000000289e-06, 3.7779999999959513e-06, 3.7079999999981017e-06, 3.7639999999963814e-06, 3.7779999999959513e-06, 3.7499999999968114e-06, 3.791999999995521e-06, 3.7360000000041804e-06, 3.77800000000289e-06, 3.833000000001696e-06, 3.7779999999959513e-06, 3.791999999995521e-06, 3.7079999999981017e-06, 3.7909999999960475e-06, 3.77800000000289e-06, 3.833000000001696e-06, 3.79200000000246e-06, 3.77800000000289e-06, 3.7359999999972415e-06, 3.77800000000289e-06, 3.7779999999959513e-06, 3.77800000000289e-06, 3.7220000000046105e-06, 3.7639999999963814e-06, 3.7779999999959513e-06, 3.791999999995521e-06, 3.7640000000033202e-06, 3.7639999999963814e-06, 3.7779999999959513e-06, 3.791999999995521e-06, 3.79200000000246e-06, 3.7639999999963814e-06, 3.79200000000246e-06]</msg>
<status status="PASS" starttime="20201115 22:04:15.458" endtime="20201115 22:04:15.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.447" endtime="20201115 22:04:15.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.471" endtime="20201115 22:04:15.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:15.479" endtime="20201115 22:04:15.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.475" endtime="20201115 22:04:15.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.466" endtime="20201115 22:04:15.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:14.947" endtime="20201115 22:04:15.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.726" endtime="20201115 22:04:15.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:12.724" endtime="20201115 22:04:15.506"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.511" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.534" endtime="20201115 22:04:15.554"></status>
</kw>
<msg timestamp="20201115 22:04:15.556" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:15.531" endtime="20201115 22:04:15.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.562" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:15.558" endtime="20201115 22:04:15.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.564" endtime="20201115 22:04:15.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.524" endtime="20201115 22:04:15.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.518" endtime="20201115 22:04:15.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.588" endtime="20201115 22:04:15.932"></status>
</kw>
<msg timestamp="20201115 22:04:15.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048574208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048578278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:15.585" endtime="20201115 22:04:15.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:15.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048574208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048578278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:15.942" endtime="20201115 22:04:15.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:15.961" endtime="20201115 22:04:15.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.577" endtime="20201115 22:04:15.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.573" endtime="20201115 22:04:15.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:15.978" level="INFO">${RESULT} = [{'time': 0.048578278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.07000000000185e-06, 'source_diff': 4.07000000000185e-06}, {'time': 0.048722028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:04:15.969" endtime="20201115 22:04:15.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:16.009" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:15.980" endtime="20201115 22:04:16.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.020" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:04:16.018" endtime="20201115 22:04:16.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.027" level="INFO">VALUE: [4.07000000000185e-06, 4.05600000000228e-06, 4.05600000000228e-06, 4.069000000002376e-06, 4.07000000000185e-06, 4.068999999995437e-06, 4.07000000000185e-06, 4.082999999995007e-06, 4.096999999994577e-06, 4.05600000000228e-06, 4.08400000000142e-06, 4.0549999999958675e-06, 4.0410000000032364e-06, 4.07000000000185e-06, 4.04200000000271e-06, 4.069000000002376e-06, 4.07000000000185e-06, 4.07000000000185e-06, 4.08400000000142e-06, 4.07000000000185e-06, 4.07000000000185e-06, 4.0409999999962976e-06, 4.0549999999958675e-06, 4.055000000002806e-06, 4.139000000000226e-06, 4.068999999995437e-06, 4.08400000000142e-06, 4.068999999995437e-06, 4.055000000002806e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.082999999995007e-06, 4.05600000000228e-06, 4.055000000002806e-06, 4.069000000002376e-06, 4.068999999995437e-06, 4.013999999996631e-06, 4.069000000002376e-06, 4.083000000001946e-06, 4.0549999999958675e-06, 4.05600000000228e-06, 4.069000000002376e-06, 4.082999999995007e-06, 4.05600000000228e-06, 4.0549999999958675e-06, 4.069000000002376e-06, 4.069999999994911e-06, 4.041999999995771e-06, 4.02800000000314e-06, 4.07000000000185e-06]</msg>
<status status="PASS" starttime="20201115 22:04:16.023" endtime="20201115 22:04:16.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.011" endtime="20201115 22:04:16.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.036" endtime="20201115 22:04:16.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:16.044" endtime="20201115 22:04:16.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.040" endtime="20201115 22:04:16.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.031" endtime="20201115 22:04:16.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.512" endtime="20201115 22:04:16.070"></status>
</kw>
<msg timestamp="20201115 22:04:16.070" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.094" endtime="20201115 22:04:16.114"></status>
</kw>
<msg timestamp="20201115 22:04:16.115" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:16.090" endtime="20201115 22:04:16.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.121" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:16.117" endtime="20201115 22:04:16.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.124" endtime="20201115 22:04:16.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.083" endtime="20201115 22:04:16.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.077" endtime="20201115 22:04:16.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.147" endtime="20201115 22:04:16.493"></status>
</kw>
<msg timestamp="20201115 22:04:16.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043237528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043241611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:16.144" endtime="20201115 22:04:16.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043237528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043241611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:16.502" endtime="20201115 22:04:16.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.521" endtime="20201115 22:04:16.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.137" endtime="20201115 22:04:16.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.132" endtime="20201115 22:04:16.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:16.540" level="INFO">${RESULT} = [{'time': 0.043241611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.043388083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:16.531" endtime="20201115 22:04:16.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:16.571" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:16.542" endtime="20201115 22:04:16.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.583" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:04:16.580" endtime="20201115 22:04:16.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.588" level="INFO">VALUE: [4.083000000001946e-06, 4.069000000002376e-06, 4.0549999999958675e-06, 4.083000000001946e-06, 4.0409999999962976e-06, 4.055000000002806e-06, 4.055000000002806e-06, 4.097000000001516e-06, 4.069999999994911e-06, 4.069000000002376e-06, 4.07000000000185e-06, 4.07000000000185e-06, 4.069999999994911e-06, 4.069000000002376e-06, 4.05600000000228e-06, 4.055000000002806e-06, 4.139000000000226e-06, 4.082999999995007e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.069000000002376e-06, 4.055000000002806e-06, 4.0409999999962976e-06, 4.05600000000228e-06, 4.125000000000656e-06, 4.055000000002806e-06, 4.055999999995341e-06, 4.08400000000142e-06, 4.0549999999958675e-06, 4.097000000001516e-06, 4.069000000002376e-06, 4.08400000000142e-06, 4.027999999996201e-06, 4.055000000002806e-06, 4.07000000000185e-06, 4.0549999999958675e-06, 4.0549999999958675e-06, 4.068999999995437e-06, 4.02800000000314e-06, 4.07000000000185e-06, 4.07000000000185e-06, 4.02800000000314e-06, 4.097000000001516e-06, 4.04200000000271e-06, 4.07000000000185e-06, 4.097000000001516e-06, 4.069000000002376e-06, 4.069000000002376e-06, 4.08400000000142e-06, 4.096999999994577e-06]</msg>
<status status="PASS" starttime="20201115 22:04:16.585" endtime="20201115 22:04:16.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.573" endtime="20201115 22:04:16.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.597" endtime="20201115 22:04:16.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:16.606" endtime="20201115 22:04:16.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.601" endtime="20201115 22:04:16.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.593" endtime="20201115 22:04:16.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.071" endtime="20201115 22:04:16.632"></status>
</kw>
<msg timestamp="20201115 22:04:16.632" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.655" endtime="20201115 22:04:16.675"></status>
</kw>
<msg timestamp="20201115 22:04:16.676" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:16.652" endtime="20201115 22:04:16.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:16.683" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:16.679" endtime="20201115 22:04:16.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.685" endtime="20201115 22:04:16.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.645" endtime="20201115 22:04:16.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.639" endtime="20201115 22:04:16.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:16.709" endtime="20201115 22:04:17.052"></status>
</kw>
<msg timestamp="20201115 22:04:17.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043232014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043236056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:16.705" endtime="20201115 22:04:17.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043232014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043236056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:17.062" endtime="20201115 22:04:17.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.080" endtime="20201115 22:04:17.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.698" endtime="20201115 22:04:17.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.693" endtime="20201115 22:04:17.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:17.099" level="INFO">${RESULT} = [{'time': 0.043236056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.04200000000271e-06, 'source_diff': 4.04200000000271e-06}, {'time': 0.043377542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:04:17.090" endtime="20201115 22:04:17.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:17.131" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:17.102" endtime="20201115 22:04:17.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.142" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:04:17.139" endtime="20201115 22:04:17.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.147" level="INFO">VALUE: [4.04200000000271e-06, 4.069999999994911e-06, 4.08400000000142e-06, 4.02800000000314e-06, 4.027999999996201e-06, 4.082999999995007e-06, 4.069999999994911e-06, 4.083000000001946e-06, 4.09800000000099e-06, 4.05600000000228e-06, 4.055999999995341e-06, 4.055000000002806e-06, 4.068999999995437e-06, 4.069999999994911e-06, 4.02800000000314e-06, 4.069999999994911e-06, 4.139000000000226e-06, 4.07000000000185e-06, 4.069000000002376e-06, 4.02800000000314e-06, 4.069999999994911e-06, 4.068999999995437e-06, 4.069999999994911e-06, 4.068999999995437e-06, 4.013999999996631e-06, 4.11200000000056e-06, 4.068999999995437e-06, 4.068999999995437e-06, 4.096999999994577e-06, 4.08400000000142e-06, 4.125000000000656e-06, 4.083000000001946e-06, 4.07000000000185e-06, 4.083000000001946e-06, 4.082999999995007e-06, 4.083000000001946e-06, 4.083000000001946e-06, 4.07000000000185e-06, 4.08400000000142e-06, 4.055999999995341e-06, 4.068999999995437e-06, 4.083000000001946e-06, 4.069000000002376e-06, 4.096999999994577e-06, 4.055000000002806e-06, 3.9999999999970615e-06, 4.083000000001946e-06, 4.055999999995341e-06, 4.07000000000185e-06, 4.055999999995341e-06]</msg>
<status status="PASS" starttime="20201115 22:04:17.144" endtime="20201115 22:04:17.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.133" endtime="20201115 22:04:17.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.156" endtime="20201115 22:04:17.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:17.165" endtime="20201115 22:04:17.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.160" endtime="20201115 22:04:17.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.152" endtime="20201115 22:04:17.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:16.633" endtime="20201115 22:04:17.191"></status>
</kw>
<msg timestamp="20201115 22:04:17.191" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.214" endtime="20201115 22:04:17.236"></status>
</kw>
<msg timestamp="20201115 22:04:17.237" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:17.211" endtime="20201115 22:04:17.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.244" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:17.240" endtime="20201115 22:04:17.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.246" endtime="20201115 22:04:17.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.204" endtime="20201115 22:04:17.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.198" endtime="20201115 22:04:17.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.271" endtime="20201115 22:04:17.590"></status>
</kw>
<msg timestamp="20201115 22:04:17.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043316139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043320194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:17.268" endtime="20201115 22:04:17.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043316139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043320194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:17.599" endtime="20201115 22:04:17.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.618" endtime="20201115 22:04:17.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.260" endtime="20201115 22:04:17.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.255" endtime="20201115 22:04:17.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:17.640" level="INFO">${RESULT} = [{'time': 0.043320194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.055000000002806e-06, 'source_diff': 4.055000000002806e-06}, {'time': 0.043464792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:17.631" endtime="20201115 22:04:17.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:17.671" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:17.642" endtime="20201115 22:04:17.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.682" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:04:17.679" endtime="20201115 22:04:17.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.687" level="INFO">VALUE: [4.055000000002806e-06, 4.02800000000314e-06, 4.07000000000185e-06, 4.01400000000357e-06, 4.07000000000185e-06, 4.069000000002376e-06, 4.152999999999796e-06, 4.055999999995341e-06, 4.07000000000185e-06, 4.055000000002806e-06, 4.069000000002376e-06, 4.07000000000185e-06, 4.069000000002376e-06, 4.069999999994911e-06, 4.068999999995437e-06, 4.04200000000271e-06, 4.055000000002806e-06, 4.055000000002806e-06, 4.083000000001946e-06, 4.068999999995437e-06, 4.068999999995437e-06, 4.05600000000228e-06, 4.082999999995007e-06, 4.07000000000185e-06, 4.068999999995437e-06, 4.069000000002376e-06, 4.152999999999796e-06, 4.083000000001946e-06, 4.07000000000185e-06, 4.07000000000185e-06, 4.139000000000226e-06, 4.07000000000185e-06, 4.08400000000142e-06, 4.068999999995437e-06, 4.07000000000185e-06, 4.068999999995437e-06, 4.05600000000228e-06, 4.041999999995771e-06, 4.069999999994911e-06, 4.07000000000185e-06, 4.152000000000322e-06, 4.09800000000099e-06, 4.097000000001516e-06, 4.013999999996631e-06, 4.055000000002806e-06, 4.068999999995437e-06, 4.069000000002376e-06, 4.055999999995341e-06, 4.07000000000185e-06, 4.068999999995437e-06]</msg>
<status status="PASS" starttime="20201115 22:04:17.684" endtime="20201115 22:04:17.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.672" endtime="20201115 22:04:17.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.696" endtime="20201115 22:04:17.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:17.705" endtime="20201115 22:04:17.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.700" endtime="20201115 22:04:17.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.692" endtime="20201115 22:04:17.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.192" endtime="20201115 22:04:17.733"></status>
</kw>
<msg timestamp="20201115 22:04:17.734" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.758" endtime="20201115 22:04:17.778"></status>
</kw>
<msg timestamp="20201115 22:04:17.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:17.754" endtime="20201115 22:04:17.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:17.786" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:17.782" endtime="20201115 22:04:17.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.788" endtime="20201115 22:04:17.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.747" endtime="20201115 22:04:17.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.740" endtime="20201115 22:04:17.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:17.812" endtime="20201115 22:04:18.157"></status>
</kw>
<msg timestamp="20201115 22:04:18.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046678944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046683, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:04:17.809" endtime="20201115 22:04:18.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046678944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046683, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:04:18.167" endtime="20201115 22:04:18.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.186" endtime="20201115 22:04:18.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.801" endtime="20201115 22:04:18.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.796" endtime="20201115 22:04:18.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:18.206" level="INFO">${RESULT} = [{'time': 0.046683, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.05600000000228e-06, 'source_diff': 4.05600000000228e-06}, {'time': 0.046826611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4....</msg>
<status status="PASS" starttime="20201115 22:04:18.196" endtime="20201115 22:04:18.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:18.236" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:18.208" endtime="20201115 22:04:18.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.248" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:04:18.245" endtime="20201115 22:04:18.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.253" level="INFO">VALUE: [4.05600000000228e-06, 4.110999999994147e-06, 4.04200000000271e-06, 4.05600000000228e-06, 4.05600000000228e-06, 4.08400000000142e-06, 4.069000000002376e-06, 4.083000000001946e-06, 4.068999999995437e-06, 4.055000000002806e-06, 4.069000000002376e-06, 4.069000000002376e-06, 4.069000000002376e-06, 4.0270000000036665e-06, 4.0549999999958675e-06, 4.111000000001086e-06, 4.0549999999958675e-06, 4.013999999996631e-06, 4.05600000000228e-06, 4.055000000002806e-06, 4.083000000001946e-06, 3.9860000000044304e-06, 4.069000000002376e-06, 4.111000000001086e-06, 4.069000000002376e-06, 4.07000000000185e-06, 4.082999999995007e-06, 4.069000000002376e-06, 4.083000000001946e-06, 4.097000000001516e-06, 4.05600000000228e-06, 4.083000000001946e-06, 4.07000000000185e-06, 4.068999999995437e-06, 4.083000000001946e-06, 4.069000000002376e-06, 4.069999999994911e-06, 4.041999999995771e-06, 4.07000000000185e-06, 4.05600000000228e-06, 4.0549999999958675e-06, 4.069000000002376e-06, 4.055000000002806e-06, 4.082999999995007e-06, 4.139000000000226e-06, 4.069000000002376e-06, 4.05600000000228e-06, 4.082999999995007e-06, 4.082999999995007e-06, 4.0549999999958675e-06]</msg>
<status status="PASS" starttime="20201115 22:04:18.250" endtime="20201115 22:04:18.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.238" endtime="20201115 22:04:18.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.262" endtime="20201115 22:04:18.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:18.271" endtime="20201115 22:04:18.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.266" endtime="20201115 22:04:18.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.258" endtime="20201115 22:04:18.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:17.735" endtime="20201115 22:04:18.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.509" endtime="20201115 22:04:18.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:15.507" endtime="20201115 22:04:18.298"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.303" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.327" endtime="20201115 22:04:18.349"></status>
</kw>
<msg timestamp="20201115 22:04:18.350" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:18.324" endtime="20201115 22:04:18.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.356" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:18.352" endtime="20201115 22:04:18.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.359" endtime="20201115 22:04:18.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.316" endtime="20201115 22:04:18.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.310" endtime="20201115 22:04:18.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.383" endtime="20201115 22:04:18.728"></status>
</kw>
<msg timestamp="20201115 22:04:18.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050411583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050415944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:18.380" endtime="20201115 22:04:18.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050411583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050415944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:18.738" endtime="20201115 22:04:18.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.756" endtime="20201115 22:04:18.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.373" endtime="20201115 22:04:18.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.368" endtime="20201115 22:04:18.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:18.774" level="INFO">${RESULT} = [{'time': 0.050415944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.360999999994397e-06, 'source_diff': 4.360999999994397e-06}, {'time': 0.050577222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:18.765" endtime="20201115 22:04:18.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:18.805" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:18.776" endtime="20201115 22:04:18.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.816" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:04:18.814" endtime="20201115 22:04:18.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.821" level="INFO">VALUE: [4.360999999994397e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.346999999994827e-06, 4.319999999995161e-06, 4.388000000001002e-06, 4.360999999994397e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.3200000000021e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.34800000000124e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.347000000001766e-06, 4.34800000000124e-06, 4.389000000000476e-06, 4.347000000001766e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.36200000000081e-06, 4.347000000001766e-06, 4.346999999994827e-06, 4.361999999993871e-06, 4.347000000001766e-06, 4.430999999999186e-06, 4.374999999993967e-06, 4.375000000000906e-06, 4.333000000002196e-06, 4.361000000001336e-06, 4.416000000000142e-06, 4.346999999994827e-06, 4.361000000001336e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.346999999994827e-06, 4.360999999994397e-06, 4.347000000001766e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.361000000001336e-06]</msg>
<status status="PASS" starttime="20201115 22:04:18.818" endtime="20201115 22:04:18.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.807" endtime="20201115 22:04:18.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.830" endtime="20201115 22:04:18.833"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:18.839" endtime="20201115 22:04:18.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.834" endtime="20201115 22:04:18.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.826" endtime="20201115 22:04:18.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.304" endtime="20201115 22:04:18.864"></status>
</kw>
<msg timestamp="20201115 22:04:18.865" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.888" endtime="20201115 22:04:18.909"></status>
</kw>
<msg timestamp="20201115 22:04:18.910" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:18.885" endtime="20201115 22:04:18.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:18.917" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:18.913" endtime="20201115 22:04:18.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.920" endtime="20201115 22:04:18.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.877" endtime="20201115 22:04:18.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.872" endtime="20201115 22:04:18.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:18.943" endtime="20201115 22:04:19.287"></status>
</kw>
<msg timestamp="20201115 22:04:19.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043197097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043201458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:18.940" endtime="20201115 22:04:19.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043197097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043201458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:19.296" endtime="20201115 22:04:19.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.315" endtime="20201115 22:04:19.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.933" endtime="20201115 22:04:19.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.928" endtime="20201115 22:04:19.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:19.335" level="INFO">${RESULT} = [{'time': 0.043201458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.043358, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:04:19.325" endtime="20201115 22:04:19.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:19.366" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:19.337" endtime="20201115 22:04:19.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.378" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:04:19.376" endtime="20201115 22:04:19.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.384" level="INFO">VALUE: [4.361000000001336e-06, 4.416999999999616e-06, 4.416999999999616e-06, 4.346999999994827e-06, 4.34800000000124e-06, 4.361000000001336e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.347000000001766e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.347000000001766e-06, 4.347000000001766e-06, 4.374999999993967e-06, 4.360999999994397e-06, 4.360999999994397e-06, 4.36200000000081e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.360999999994397e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.34800000000124e-06, 4.361000000001336e-06, 4.33400000000167e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.347000000001766e-06, 4.360999999994397e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.361000000001336e-06]</msg>
<status status="PASS" starttime="20201115 22:04:19.380" endtime="20201115 22:04:19.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.368" endtime="20201115 22:04:19.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.393" endtime="20201115 22:04:19.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:19.401" endtime="20201115 22:04:19.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.397" endtime="20201115 22:04:19.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.388" endtime="20201115 22:04:19.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.866" endtime="20201115 22:04:19.427"></status>
</kw>
<msg timestamp="20201115 22:04:19.428" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.456" endtime="20201115 22:04:19.476"></status>
</kw>
<msg timestamp="20201115 22:04:19.478" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:19.448" endtime="20201115 22:04:19.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.484" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:19.480" endtime="20201115 22:04:19.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.486" endtime="20201115 22:04:19.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.440" endtime="20201115 22:04:19.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.434" endtime="20201115 22:04:19.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.510" endtime="20201115 22:04:19.853"></status>
</kw>
<msg timestamp="20201115 22:04:19.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048592347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048596694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:19.507" endtime="20201115 22:04:19.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048592347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048596694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:19.862" endtime="20201115 22:04:19.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.881" endtime="20201115 22:04:19.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.499" endtime="20201115 22:04:19.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.495" endtime="20201115 22:04:19.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:19.902" level="INFO">${RESULT} = [{'time': 0.048596694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.048748806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:19.893" endtime="20201115 22:04:19.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:19.932" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:19.904" endtime="20201115 22:04:19.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.944" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:04:19.941" endtime="20201115 22:04:19.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:19.949" level="INFO">VALUE: [4.347000000001766e-06, 4.36200000000081e-06, 4.374999999993967e-06, 4.361000000001336e-06, 4.360999999994397e-06, 4.346999999994827e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.402000000000572e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.360999999994397e-06, 4.360999999994397e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.374999999993967e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.34800000000124e-06, 4.333000000002196e-06, 4.347000000001766e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.3200000000021e-06, 4.361000000001336e-06, 4.360999999994397e-06, 4.305999999995591e-06, 4.361000000001336e-06, 4.347000000001766e-06, 4.3200000000021e-06, 4.333000000002196e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.360999999994397e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.360999999994397e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.375000000000906e-06]</msg>
<status status="PASS" starttime="20201115 22:04:19.946" endtime="20201115 22:04:19.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.934" endtime="20201115 22:04:19.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:19.958" endtime="20201115 22:04:19.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:19.966" endtime="20201115 22:04:19.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.962" endtime="20201115 22:04:19.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.953" endtime="20201115 22:04:19.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.429" endtime="20201115 22:04:19.992"></status>
</kw>
<msg timestamp="20201115 22:04:19.993" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.017" endtime="20201115 22:04:20.038"></status>
</kw>
<msg timestamp="20201115 22:04:20.039" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:20.014" endtime="20201115 22:04:20.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.045" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:20.041" endtime="20201115 22:04:20.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.047" endtime="20201115 22:04:20.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.006" endtime="20201115 22:04:20.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.000" endtime="20201115 22:04:20.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.071" endtime="20201115 22:04:20.413"></status>
</kw>
<msg timestamp="20201115 22:04:20.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044344208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044348542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:20.068" endtime="20201115 22:04:20.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044344208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044348542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:20.423" endtime="20201115 22:04:20.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.441" endtime="20201115 22:04:20.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.061" endtime="20201115 22:04:20.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.056" endtime="20201115 22:04:20.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:20.461" level="INFO">${RESULT} = [{'time': 0.044348542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.333999999994731e-06, 'source_diff': 4.333999999994731e-06}, {'time': 0.044506486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:20.451" endtime="20201115 22:04:20.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:20.491" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:20.463" endtime="20201115 22:04:20.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.502" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:04:20.500" endtime="20201115 22:04:20.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.508" level="INFO">VALUE: [4.333999999994731e-06, 4.346999999994827e-06, 4.36200000000081e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.360999999994397e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.346999999994827e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.305999999995591e-06, 4.318999999995687e-06, 4.346999999994827e-06, 4.347000000001766e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.374999999993967e-06, 4.34800000000124e-06, 4.416000000000142e-06, 4.361000000001336e-06, 4.360999999994397e-06, 4.375000000000906e-06, 4.36200000000081e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.347000000001766e-06, 4.360999999994397e-06, 4.361000000001336e-06, 4.3200000000021e-06, 4.27800000000339e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.276999999996978e-06, 4.347000000001766e-06, 4.374999999993967e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.2910000000034865e-06, 4.361000000001336e-06, 4.347000000001766e-06, 4.361000000001336e-06]</msg>
<status status="PASS" starttime="20201115 22:04:20.505" endtime="20201115 22:04:20.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.493" endtime="20201115 22:04:20.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.517" endtime="20201115 22:04:20.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:20.526" endtime="20201115 22:04:20.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.522" endtime="20201115 22:04:20.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.512" endtime="20201115 22:04:20.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:19.994" endtime="20201115 22:04:20.552"></status>
</kw>
<msg timestamp="20201115 22:04:20.552" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.576" endtime="20201115 22:04:20.596"></status>
</kw>
<msg timestamp="20201115 22:04:20.598" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:20.572" endtime="20201115 22:04:20.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.604" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:20.600" endtime="20201115 22:04:20.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.606" endtime="20201115 22:04:20.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.565" endtime="20201115 22:04:20.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.559" endtime="20201115 22:04:20.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.630" endtime="20201115 22:04:20.953"></status>
</kw>
<msg timestamp="20201115 22:04:20.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043310347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043314792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:20.627" endtime="20201115 22:04:20.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:20.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043310347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043314792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:20.963" endtime="20201115 22:04:20.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:20.981" endtime="20201115 22:04:20.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.619" endtime="20201115 22:04:20.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.615" endtime="20201115 22:04:20.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:21.001" level="INFO">${RESULT} = [{'time': 0.043314792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.043469944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:20.992" endtime="20201115 22:04:21.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:21.031" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:21.003" endtime="20201115 22:04:21.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.043" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:04:21.040" endtime="20201115 22:04:21.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.048" level="INFO">VALUE: [4.4449999999987555e-06, 4.361000000001336e-06, 4.416000000000142e-06, 4.361000000001336e-06, 4.36200000000081e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.33400000000167e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.36200000000081e-06, 4.360999999994397e-06, 4.375000000000906e-06, 4.347000000001766e-06, 4.360999999994397e-06, 4.360999999994397e-06, 4.360999999994397e-06, 4.360999999994397e-06, 4.36200000000081e-06, 4.347000000001766e-06, 4.361999999993871e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.33400000000167e-06, 4.34800000000124e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.347999999994301e-06, 4.3200000000021e-06, 4.416999999999616e-06, 4.36200000000081e-06, 4.347000000001766e-06, 4.3200000000021e-06, 4.361000000001336e-06, 4.36200000000081e-06, 4.318999999995687e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.347000000001766e-06, 4.360999999994397e-06, 4.36200000000081e-06, 4.360999999994397e-06]</msg>
<status status="PASS" starttime="20201115 22:04:21.045" endtime="20201115 22:04:21.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.033" endtime="20201115 22:04:21.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.058" endtime="20201115 22:04:21.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:21.066" endtime="20201115 22:04:21.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.062" endtime="20201115 22:04:21.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.053" endtime="20201115 22:04:21.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:20.553" endtime="20201115 22:04:21.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.301" endtime="20201115 22:04:21.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:18.299" endtime="20201115 22:04:21.093"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.098" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.121" endtime="20201115 22:04:21.143"></status>
</kw>
<msg timestamp="20201115 22:04:21.144" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:21.118" endtime="20201115 22:04:21.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.151" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:21.146" endtime="20201115 22:04:21.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.153" endtime="20201115 22:04:21.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.110" endtime="20201115 22:04:21.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.104" endtime="20201115 22:04:21.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.177" endtime="20201115 22:04:21.522"></status>
</kw>
<msg timestamp="20201115 22:04:21.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048703806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048708444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:21.173" endtime="20201115 22:04:21.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048703806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048708444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:21.531" endtime="20201115 22:04:21.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.550" endtime="20201115 22:04:21.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.166" endtime="20201115 22:04:21.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.161" endtime="20201115 22:04:21.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:21.568" level="INFO">${RESULT} = [{'time': 0.048708444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.637999999994313e-06, 'source_diff': 4.637999999994313e-06}, {'time': 0.048873653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:21.558" endtime="20201115 22:04:21.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:21.598" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:21.570" endtime="20201115 22:04:21.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.610" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:04:21.607" endtime="20201115 22:04:21.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.616" level="INFO">VALUE: [4.637999999994313e-06, 4.58400000000192e-06, 4.666999999999866e-06, 4.625000000001156e-06, 4.652000000000822e-06, 4.652000000000822e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.6949999999990055e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.737000000004654e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.680999999999436e-06, 4.625000000001156e-06, 4.639000000000726e-06, 4.651999999993883e-06, 4.653000000000296e-06, 4.596999999995077e-06, 4.639000000000726e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.652999999993357e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.637999999994313e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.722000000005611e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.680999999999436e-06, 4.6949999999990055e-06, 4.679999999999962e-06, 4.652000000000822e-06, 4.639000000000726e-06, 4.693999999999532e-06]</msg>
<status status="PASS" starttime="20201115 22:04:21.612" endtime="20201115 22:04:21.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.600" endtime="20201115 22:04:21.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.625" endtime="20201115 22:04:21.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:21.634" endtime="20201115 22:04:21.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.629" endtime="20201115 22:04:21.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.620" endtime="20201115 22:04:21.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.099" endtime="20201115 22:04:21.659"></status>
</kw>
<msg timestamp="20201115 22:04:21.660" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.683" endtime="20201115 22:04:21.705"></status>
</kw>
<msg timestamp="20201115 22:04:21.706" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:21.680" endtime="20201115 22:04:21.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:21.713" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:21.709" endtime="20201115 22:04:21.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.715" endtime="20201115 22:04:21.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.672" endtime="20201115 22:04:21.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.666" endtime="20201115 22:04:21.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:21.739" endtime="20201115 22:04:22.081"></status>
</kw>
<msg timestamp="20201115 22:04:22.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04338425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043388889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:21.736" endtime="20201115 22:04:22.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04338425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043388889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:22.090" endtime="20201115 22:04:22.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.109" endtime="20201115 22:04:22.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.728" endtime="20201115 22:04:22.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.723" endtime="20201115 22:04:22.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:22.130" level="INFO">${RESULT} = [{'time': 0.043388889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.043556597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:22.121" endtime="20201115 22:04:22.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:22.161" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:22.132" endtime="20201115 22:04:22.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.173" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:04:22.170" endtime="20201115 22:04:22.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.178" level="INFO">VALUE: [4.639000000000726e-06, 4.597000000002016e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.651999999993883e-06, 4.6949999999990055e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.596999999995077e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.6949999999990055e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.693999999999532e-06, 4.611000000001586e-06, 4.639000000000726e-06, 4.596999999995077e-06, 4.652000000000822e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.638000000001252e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.638999999993787e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.611000000001586e-06, 4.653000000000296e-06, 4.611000000001586e-06, 4.679999999999962e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.638000000001252e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.625000000001156e-06, 4.582999999995507e-06]</msg>
<status status="PASS" starttime="20201115 22:04:22.175" endtime="20201115 22:04:22.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.163" endtime="20201115 22:04:22.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.187" endtime="20201115 22:04:22.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:22.195" endtime="20201115 22:04:22.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.191" endtime="20201115 22:04:22.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.182" endtime="20201115 22:04:22.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.661" endtime="20201115 22:04:22.221"></status>
</kw>
<msg timestamp="20201115 22:04:22.222" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.245" endtime="20201115 22:04:22.267"></status>
</kw>
<msg timestamp="20201115 22:04:22.268" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:22.242" endtime="20201115 22:04:22.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.274" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:22.270" endtime="20201115 22:04:22.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.277" endtime="20201115 22:04:22.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.234" endtime="20201115 22:04:22.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.228" endtime="20201115 22:04:22.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.300" endtime="20201115 22:04:22.645"></status>
</kw>
<msg timestamp="20201115 22:04:22.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043540167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043544819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:22.297" endtime="20201115 22:04:22.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043540167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043544819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:22.654" endtime="20201115 22:04:22.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.673" endtime="20201115 22:04:22.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.290" endtime="20201115 22:04:22.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.285" endtime="20201115 22:04:22.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:22.692" level="INFO">${RESULT} = [{'time': 0.043544819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.043714847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:22.683" endtime="20201115 22:04:22.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:22.723" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:22.695" endtime="20201115 22:04:22.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.735" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:04:22.733" endtime="20201115 22:04:22.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.740" level="INFO">VALUE: [4.652000000000822e-06, 4.639000000000726e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.61200000000106e-06, 4.693999999999532e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.637999999994313e-06, 4.666000000000392e-06, 4.639000000000726e-06, 4.596999999995077e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.651999999993883e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.625000000001156e-06, 4.638000000001252e-06, 4.653000000000296e-06, 4.58400000000192e-06, 4.611000000001586e-06, 4.652999999993357e-06, 4.652000000000822e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.7089999999985754e-06, 4.639000000000726e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.652000000000822e-06]</msg>
<status status="PASS" starttime="20201115 22:04:22.737" endtime="20201115 22:04:22.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.725" endtime="20201115 22:04:22.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.749" endtime="20201115 22:04:22.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:22.758" endtime="20201115 22:04:22.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.753" endtime="20201115 22:04:22.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.745" endtime="20201115 22:04:22.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.223" endtime="20201115 22:04:22.783"></status>
</kw>
<msg timestamp="20201115 22:04:22.784" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.807" endtime="20201115 22:04:22.829"></status>
</kw>
<msg timestamp="20201115 22:04:22.830" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:22.804" endtime="20201115 22:04:22.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:22.836" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:22.832" endtime="20201115 22:04:22.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.839" endtime="20201115 22:04:22.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.796" endtime="20201115 22:04:22.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.791" endtime="20201115 22:04:22.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:22.863" endtime="20201115 22:04:23.206"></status>
</kw>
<msg timestamp="20201115 22:04:23.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043276972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043281653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:22.859" endtime="20201115 22:04:23.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043276972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043281653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:23.215" endtime="20201115 22:04:23.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.234" endtime="20201115 22:04:23.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.852" endtime="20201115 22:04:23.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.847" endtime="20201115 22:04:23.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:23.254" level="INFO">${RESULT} = [{'time': 0.043281653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6810000000063745e-06, 'source_diff': 4.6810000000063745e-06}, {'time': 0.043452472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:23.245" endtime="20201115 22:04:23.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:23.285" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:23.256" endtime="20201115 22:04:23.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.296" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:04:23.293" endtime="20201115 22:04:23.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.301" level="INFO">VALUE: [4.6810000000063745e-06, 4.639000000000726e-06, 4.652000000000822e-06, 4.639000000000726e-06, 4.652000000000822e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.695000000005944e-06, 4.638000000001252e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.695000000005944e-06, 4.652000000000822e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.611000000001586e-06, 4.653000000000296e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.653000000000296e-06, 4.707999999999102e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.652000000000822e-06, 4.666999999999866e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.693999999999532e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.721999999998672e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.639000000000726e-06]</msg>
<status status="PASS" starttime="20201115 22:04:23.298" endtime="20201115 22:04:23.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.286" endtime="20201115 22:04:23.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.310" endtime="20201115 22:04:23.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:23.319" endtime="20201115 22:04:23.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.314" endtime="20201115 22:04:23.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.306" endtime="20201115 22:04:23.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:22.785" endtime="20201115 22:04:23.345"></status>
</kw>
<msg timestamp="20201115 22:04:23.345" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.368" endtime="20201115 22:04:23.390"></status>
</kw>
<msg timestamp="20201115 22:04:23.392" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:23.365" endtime="20201115 22:04:23.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.398" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:23.394" endtime="20201115 22:04:23.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.400" endtime="20201115 22:04:23.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.358" endtime="20201115 22:04:23.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.352" endtime="20201115 22:04:23.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.424" endtime="20201115 22:04:23.769"></status>
</kw>
<msg timestamp="20201115 22:04:23.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043251278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043255931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:23.421" endtime="20201115 22:04:23.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043251278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043255931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:23.779" endtime="20201115 22:04:23.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.798" endtime="20201115 22:04:23.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.413" endtime="20201115 22:04:23.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.408" endtime="20201115 22:04:23.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:23.817" level="INFO">${RESULT} = [{'time': 0.043255931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.043422597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:23.808" endtime="20201115 22:04:23.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:23.848" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:23.819" endtime="20201115 22:04:23.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.859" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:04:23.856" endtime="20201115 22:04:23.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.864" level="INFO">VALUE: [4.653000000000296e-06, 4.666000000000392e-06, 4.624999999994217e-06, 4.652999999993357e-06, 4.61200000000106e-06, 4.653000000000296e-06, 4.610999999994647e-06, 4.639000000000726e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.625000000001156e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.721999999998672e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.610999999994647e-06, 4.638000000001252e-06, 4.625000000001156e-06, 4.639000000000726e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.57000000000235e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.61200000000106e-06, 4.652999999993357e-06, 4.653000000000296e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.652000000000822e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.639000000000726e-06, 4.652999999993357e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201115 22:04:23.861" endtime="20201115 22:04:23.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.849" endtime="20201115 22:04:23.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.873" endtime="20201115 22:04:23.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:23.882" endtime="20201115 22:04:23.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.877" endtime="20201115 22:04:23.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.869" endtime="20201115 22:04:23.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.346" endtime="20201115 22:04:23.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.095" endtime="20201115 22:04:23.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:21.094" endtime="20201115 22:04:23.908"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.913" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.937" endtime="20201115 22:04:23.958"></status>
</kw>
<msg timestamp="20201115 22:04:23.959" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:23.933" endtime="20201115 22:04:23.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:23.966" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:23.962" endtime="20201115 22:04:23.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.968" endtime="20201115 22:04:23.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.926" endtime="20201115 22:04:23.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.920" endtime="20201115 22:04:23.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:23.993" endtime="20201115 22:04:24.318"></status>
</kw>
<msg timestamp="20201115 22:04:24.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048557653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048562625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:23.989" endtime="20201115 22:04:24.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048557653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048562625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:24.328" endtime="20201115 22:04:24.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.347" endtime="20201115 22:04:24.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.982" endtime="20201115 22:04:24.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.977" endtime="20201115 22:04:24.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:24.364" level="INFO">${RESULT} = [{'time': 0.048562625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.048741083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:24.355" endtime="20201115 22:04:24.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:24.395" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:24.367" endtime="20201115 22:04:24.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.406" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:04:24.404" endtime="20201115 22:04:24.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.412" level="INFO">VALUE: [4.971999999998922e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.943999999999782e-06, 5.0139999999976315e-06, 4.916000000000642e-06, 4.9449999999992555e-06, 4.9589999999988255e-06, 4.917000000000116e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.9589999999988255e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.943999999999782e-06, 5.012999999998158e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.9449999999992555e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.916000000000642e-06, 4.930999999999686e-06, 4.874999999994467e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.9450000000061944e-06, 4.943999999999782e-06, 4.929999999993273e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.957999999999352e-06]</msg>
<status status="PASS" starttime="20201115 22:04:24.409" endtime="20201115 22:04:24.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.397" endtime="20201115 22:04:24.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.421" endtime="20201115 22:04:24.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:24.429" endtime="20201115 22:04:24.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.425" endtime="20201115 22:04:24.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.416" endtime="20201115 22:04:24.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.915" endtime="20201115 22:04:24.455"></status>
</kw>
<msg timestamp="20201115 22:04:24.456" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.479" endtime="20201115 22:04:24.501"></status>
</kw>
<msg timestamp="20201115 22:04:24.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:24.475" endtime="20201115 22:04:24.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.514" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:24.505" endtime="20201115 22:04:24.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.516" endtime="20201115 22:04:24.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.468" endtime="20201115 22:04:24.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.462" endtime="20201115 22:04:24.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.541" endtime="20201115 22:04:24.886"></status>
</kw>
<msg timestamp="20201115 22:04:24.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043179667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043184569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:24.538" endtime="20201115 22:04:24.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043179667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043184569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:24.896" endtime="20201115 22:04:24.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.914" endtime="20201115 22:04:24.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.530" endtime="20201115 22:04:24.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.525" endtime="20201115 22:04:24.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:24.934" level="INFO">${RESULT} = [{'time': 0.043184569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.902000000001072e-06, 'source_diff': 4.902000000001072e-06}, {'time': 0.043364931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:24.924" endtime="20201115 22:04:24.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:24.964" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:24.936" endtime="20201115 22:04:24.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.975" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:04:24.973" endtime="20201115 22:04:24.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:24.981" level="INFO">VALUE: [4.902000000001072e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 5.027999999997201e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.903000000000546e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.889000000000976e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.958000000006291e-06, 4.929999999993273e-06, 4.903000000000546e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.9589999999988255e-06, 4.930999999999686e-06, 4.944000000006721e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.875000000001406e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.973000000005334e-06, 4.888000000001502e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.930000000000212e-06, 5.0000000000050004e-06, 4.930000000000212e-06, 4.889000000000976e-06, 4.930000000000212e-06, 5.0000000000050004e-06, 4.957999999999352e-06, 4.929999999993273e-06, 4.9589999999988255e-06, 4.943999999999782e-06, 4.9449999999992555e-06]</msg>
<status status="PASS" starttime="20201115 22:04:24.978" endtime="20201115 22:04:24.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.966" endtime="20201115 22:04:24.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:24.990" endtime="20201115 22:04:24.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:24.998" endtime="20201115 22:04:25.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.994" endtime="20201115 22:04:25.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.985" endtime="20201115 22:04:25.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:24.457" endtime="20201115 22:04:25.024"></status>
</kw>
<msg timestamp="20201115 22:04:25.025" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.049" endtime="20201115 22:04:25.071"></status>
</kw>
<msg timestamp="20201115 22:04:25.072" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:25.045" endtime="20201115 22:04:25.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.078" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:25.074" endtime="20201115 22:04:25.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.081" endtime="20201115 22:04:25.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.037" endtime="20201115 22:04:25.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.031" endtime="20201115 22:04:25.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.104" endtime="20201115 22:04:25.447"></status>
</kw>
<msg timestamp="20201115 22:04:25.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044311667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044316597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:25.101" endtime="20201115 22:04:25.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044311667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044316597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:25.456" endtime="20201115 22:04:25.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.475" endtime="20201115 22:04:25.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.094" endtime="20201115 22:04:25.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.089" endtime="20201115 22:04:25.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:25.494" level="INFO">${RESULT} = [{'time': 0.044316597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.044498014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:25.485" endtime="20201115 22:04:25.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:25.525" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:25.496" endtime="20201115 22:04:25.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.537" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:04:25.534" endtime="20201115 22:04:25.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.542" level="INFO">VALUE: [4.930000000000212e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.9589999999988255e-06, 4.943999999999782e-06, 4.971999999998922e-06, 4.943999999999782e-06, 5.013000000005097e-06, 4.9449999999992555e-06, 4.930000000000212e-06, 4.930999999999686e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.917000000000116e-06, 4.9310000000066245e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.903000000000546e-06, 4.9310000000066245e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.903000000000546e-06, 4.902000000001072e-06, 4.9450000000061944e-06, 4.903000000000546e-06, 4.9589999999988255e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.9450000000061944e-06, 4.930000000000212e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.943999999999782e-06, 5.02800000000414e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.985999999998492e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.889000000000976e-06, 4.9589999999988255e-06]</msg>
<status status="PASS" starttime="20201115 22:04:25.539" endtime="20201115 22:04:25.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.527" endtime="20201115 22:04:25.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.552" endtime="20201115 22:04:25.555"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:25.561" endtime="20201115 22:04:25.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.556" endtime="20201115 22:04:25.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.547" endtime="20201115 22:04:25.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.026" endtime="20201115 22:04:25.587"></status>
</kw>
<msg timestamp="20201115 22:04:25.588" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.612" endtime="20201115 22:04:25.634"></status>
</kw>
<msg timestamp="20201115 22:04:25.635" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:25.608" endtime="20201115 22:04:25.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:25.642" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:25.638" endtime="20201115 22:04:25.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.644" endtime="20201115 22:04:25.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.601" endtime="20201115 22:04:25.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.595" endtime="20201115 22:04:25.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:25.668" endtime="20201115 22:04:26.012"></status>
</kw>
<msg timestamp="20201115 22:04:26.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044202264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044207208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:25.664" endtime="20201115 22:04:26.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044202264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044207208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:26.021" endtime="20201115 22:04:26.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.040" endtime="20201115 22:04:26.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.657" endtime="20201115 22:04:26.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.652" endtime="20201115 22:04:26.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:26.059" level="INFO">${RESULT} = [{'time': 0.044207208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.044398, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:04:26.050" endtime="20201115 22:04:26.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:26.090" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:26.061" endtime="20201115 22:04:26.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.101" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:04:26.099" endtime="20201115 22:04:26.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.106" level="INFO">VALUE: [4.943999999999782e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.917000000000116e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.902999999993607e-06, 4.9589999999988255e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.889000000000976e-06, 4.9589999999988255e-06, 4.971999999998922e-06, 4.957999999999352e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.903000000000546e-06, 4.943999999999782e-06, 4.9450000000061944e-06, 4.943999999999782e-06, 4.9450000000061944e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.929999999993273e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.916000000000642e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.973000000005334e-06, 4.9589999999988255e-06, 4.930999999999686e-06, 4.971999999998922e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.930000000000212e-06, 4.930999999999686e-06]</msg>
<status status="PASS" starttime="20201115 22:04:26.103" endtime="20201115 22:04:26.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.092" endtime="20201115 22:04:26.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.115" endtime="20201115 22:04:26.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:26.125" endtime="20201115 22:04:26.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.120" endtime="20201115 22:04:26.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.111" endtime="20201115 22:04:26.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:25.589" endtime="20201115 22:04:26.150"></status>
</kw>
<msg timestamp="20201115 22:04:26.151" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.174" endtime="20201115 22:04:26.196"></status>
</kw>
<msg timestamp="20201115 22:04:26.197" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:26.171" endtime="20201115 22:04:26.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.203" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:26.199" endtime="20201115 22:04:26.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.206" endtime="20201115 22:04:26.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.163" endtime="20201115 22:04:26.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.157" endtime="20201115 22:04:26.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.229" endtime="20201115 22:04:26.572"></status>
</kw>
<msg timestamp="20201115 22:04:26.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043234792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04323975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:26.226" endtime="20201115 22:04:26.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043234792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04323975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:26.582" endtime="20201115 22:04:26.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.601" endtime="20201115 22:04:26.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.219" endtime="20201115 22:04:26.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.214" endtime="20201115 22:04:26.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:26.623" level="INFO">${RESULT} = [{'time': 0.04323975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.043425528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:04:26.614" endtime="20201115 22:04:26.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:26.653" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:26.625" endtime="20201115 22:04:26.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.664" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:04:26.662" endtime="20201115 22:04:26.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.670" level="INFO">VALUE: [4.957999999999352e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.985999999998492e-06, 4.930999999999686e-06, 4.930000000000212e-06, 4.958000000006291e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.9589999999988255e-06, 4.903000000000546e-06, 4.917000000000116e-06, 5.0000000000050004e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.930000000000212e-06, 4.9449999999992555e-06, 5.0000000000050004e-06, 5.0139999999976315e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.9860000000054305e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 5.013000000005097e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.943999999999782e-06]</msg>
<status status="PASS" starttime="20201115 22:04:26.667" endtime="20201115 22:04:26.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.655" endtime="20201115 22:04:26.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.680" endtime="20201115 22:04:26.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:26.688" endtime="20201115 22:04:26.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.684" endtime="20201115 22:04:26.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.675" endtime="20201115 22:04:26.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.152" endtime="20201115 22:04:26.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.911" endtime="20201115 22:04:26.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:23.909" endtime="20201115 22:04:26.715"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.720" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.743" endtime="20201115 22:04:26.766"></status>
</kw>
<msg timestamp="20201115 22:04:26.768" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:26.740" endtime="20201115 22:04:26.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:26.774" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:26.770" endtime="20201115 22:04:26.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.776" endtime="20201115 22:04:26.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.733" endtime="20201115 22:04:26.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.727" endtime="20201115 22:04:26.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:26.800" endtime="20201115 22:04:27.145"></status>
</kw>
<msg timestamp="20201115 22:04:27.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048810458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048815708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:26.797" endtime="20201115 22:04:27.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048810458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048815708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:27.155" endtime="20201115 22:04:27.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.173" endtime="20201115 22:04:27.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.789" endtime="20201115 22:04:27.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.785" endtime="20201115 22:04:27.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:27.191" level="INFO">${RESULT} = [{'time': 0.048815708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.049012278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:27.182" endtime="20201115 22:04:27.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:27.222" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:27.193" endtime="20201115 22:04:27.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.233" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:04:27.231" endtime="20201115 22:04:27.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.239" level="INFO">VALUE: [5.2499999999983116e-06, 5.221999999999172e-06, 5.2360000000056806e-06, 5.235999999998742e-06, 5.194000000000032e-06, 5.2499999999983116e-06, 5.166999999993427e-06, 5.221999999999172e-06, 5.2499999999983116e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.207999999999602e-06, 5.305999999996591e-06, 5.222999999998645e-06, 5.180000000000462e-06, 5.2089999999990755e-06, 5.235999999998742e-06, 5.222999999998645e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.236999999998215e-06, 5.235999999998742e-06, 5.222000000006111e-06, 5.2499999999983116e-06, 5.1949999999995056e-06, 5.235999999998742e-06, 5.167000000000366e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.221999999999172e-06, 5.207999999999602e-06, 5.235999999998742e-06, 5.263000000005347e-06, 5.194000000000032e-06, 5.2360000000056806e-06, 5.2360000000056806e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.2500000000052505e-06, 5.207999999999602e-06, 5.276999999997978e-06]</msg>
<status status="PASS" starttime="20201115 22:04:27.236" endtime="20201115 22:04:27.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.224" endtime="20201115 22:04:27.242"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.248" endtime="20201115 22:04:27.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:27.257" endtime="20201115 22:04:27.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.253" endtime="20201115 22:04:27.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.244" endtime="20201115 22:04:27.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.721" endtime="20201115 22:04:27.283"></status>
</kw>
<msg timestamp="20201115 22:04:27.283" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.306" endtime="20201115 22:04:27.329"></status>
</kw>
<msg timestamp="20201115 22:04:27.330" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:27.303" endtime="20201115 22:04:27.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.336" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:27.332" endtime="20201115 22:04:27.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.338" endtime="20201115 22:04:27.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.296" endtime="20201115 22:04:27.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.290" endtime="20201115 22:04:27.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.362" endtime="20201115 22:04:27.667"></status>
</kw>
<msg timestamp="20201115 22:04:27.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043125181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043130417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:27.359" endtime="20201115 22:04:27.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043125181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043130417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:27.671" endtime="20201115 22:04:27.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.680" endtime="20201115 22:04:27.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.352" endtime="20201115 22:04:27.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.347" endtime="20201115 22:04:27.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:27.689" level="INFO">${RESULT} = [{'time': 0.043130417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.043325556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:27.685" endtime="20201115 22:04:27.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:27.719" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:27.690" endtime="20201115 22:04:27.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.731" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:04:27.728" endtime="20201115 22:04:27.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.736" level="INFO">VALUE: [5.235999999998742e-06, 5.2499999999983116e-06, 5.167000000000366e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.222000000006111e-06, 5.221999999999172e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.221999999999172e-06, 5.207999999999602e-06, 5.179999999993523e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.2089999999990755e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.2500000000052505e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.221999999999172e-06, 5.2500000000052505e-06, 5.235999999998742e-06, 5.236999999998215e-06, 5.221999999999172e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.221999999999172e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.1949999999995056e-06, 5.2360000000056806e-06, 5.221999999999172e-06, 5.2089999999990755e-06, 5.1950000000064445e-06, 5.180999999999936e-06, 5.235999999998742e-06, 5.291999999997021e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.277999999997451e-06, 5.30600000000353e-06, 5.235999999998742e-06]</msg>
<status status="PASS" starttime="20201115 22:04:27.733" endtime="20201115 22:04:27.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.721" endtime="20201115 22:04:27.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.745" endtime="20201115 22:04:27.748"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:27.754" endtime="20201115 22:04:27.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.749" endtime="20201115 22:04:27.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.741" endtime="20201115 22:04:27.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.284" endtime="20201115 22:04:27.779"></status>
</kw>
<msg timestamp="20201115 22:04:27.780" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.803" endtime="20201115 22:04:27.826"></status>
</kw>
<msg timestamp="20201115 22:04:27.827" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:27.800" endtime="20201115 22:04:27.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:27.833" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:27.829" endtime="20201115 22:04:27.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.836" endtime="20201115 22:04:27.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.793" endtime="20201115 22:04:27.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.787" endtime="20201115 22:04:27.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:27.860" endtime="20201115 22:04:28.203"></status>
</kw>
<msg timestamp="20201115 22:04:28.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043332542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043337764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:27.856" endtime="20201115 22:04:28.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043332542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043337764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:28.212" endtime="20201115 22:04:28.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.231" endtime="20201115 22:04:28.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.849" endtime="20201115 22:04:28.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.844" endtime="20201115 22:04:28.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:28.250" level="INFO">${RESULT} = [{'time': 0.043337764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.043539736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:28.241" endtime="20201115 22:04:28.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:28.282" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:28.253" endtime="20201115 22:04:28.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.293" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:04:28.290" endtime="20201115 22:04:28.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.298" level="INFO">VALUE: [5.221999999999172e-06, 5.2360000000056806e-06, 5.222000000006111e-06, 5.2639999999978815e-06, 5.291999999997021e-06, 5.304999999997118e-06, 5.2360000000056806e-06, 5.223000000005584e-06, 5.2499999999983116e-06, 5.207999999999602e-06, 5.2499999999983116e-06, 5.221999999999172e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.26400000000482e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.237000000005154e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.153000000000796e-06, 5.27800000000439e-06, 5.221999999999172e-06, 5.235999999998742e-06, 5.236999999998215e-06, 5.207999999999602e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.167000000000366e-06, 5.2360000000056806e-06, 5.235999999998742e-06, 5.221999999999172e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.27800000000439e-06, 5.235999999998742e-06, 5.221999999999172e-06, 5.221999999999172e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.235999999998742e-06]</msg>
<status status="PASS" starttime="20201115 22:04:28.295" endtime="20201115 22:04:28.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.283" endtime="20201115 22:04:28.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.307" endtime="20201115 22:04:28.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:28.316" endtime="20201115 22:04:28.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.311" endtime="20201115 22:04:28.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.303" endtime="20201115 22:04:28.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:27.781" endtime="20201115 22:04:28.341"></status>
</kw>
<msg timestamp="20201115 22:04:28.342" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.365" endtime="20201115 22:04:28.388"></status>
</kw>
<msg timestamp="20201115 22:04:28.389" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:28.362" endtime="20201115 22:04:28.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.395" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:28.391" endtime="20201115 22:04:28.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.398" endtime="20201115 22:04:28.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.354" endtime="20201115 22:04:28.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.349" endtime="20201115 22:04:28.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.421" endtime="20201115 22:04:28.765"></status>
</kw>
<msg timestamp="20201115 22:04:28.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043208444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043213653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:28.418" endtime="20201115 22:04:28.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043208444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043213653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:28.774" endtime="20201115 22:04:28.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.793" endtime="20201115 22:04:28.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.411" endtime="20201115 22:04:28.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.406" endtime="20201115 22:04:28.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:28.815" level="INFO">${RESULT} = [{'time': 0.043213653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.043407931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:28.806" endtime="20201115 22:04:28.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:28.845" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:28.817" endtime="20201115 22:04:28.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.857" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:04:28.854" endtime="20201115 22:04:28.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.862" level="INFO">VALUE: [5.2089999999990755e-06, 5.222999999998645e-06, 5.235999999998742e-06, 5.222000000006111e-06, 5.235999999998742e-06, 5.2500000000052505e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.2360000000056806e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.236999999998215e-06, 5.1949999999995056e-06, 5.235999999998742e-06, 5.207999999999602e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.221999999999172e-06, 5.235999999998742e-06, 5.2360000000056806e-06, 5.305999999996591e-06, 5.222999999998645e-06, 5.2499999999983116e-06, 5.2500000000052505e-06, 5.291999999997021e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.236999999998215e-06, 5.194000000000032e-06, 5.221999999999172e-06, 5.221999999999172e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.222999999998645e-06, 5.2639999999978815e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.2360000000056806e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.2639999999978815e-06]</msg>
<status status="PASS" starttime="20201115 22:04:28.859" endtime="20201115 22:04:28.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.847" endtime="20201115 22:04:28.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.871" endtime="20201115 22:04:28.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:28.880" endtime="20201115 22:04:28.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.875" endtime="20201115 22:04:28.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.866" endtime="20201115 22:04:28.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.343" endtime="20201115 22:04:28.905"></status>
</kw>
<msg timestamp="20201115 22:04:28.906" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.929" endtime="20201115 22:04:28.952"></status>
</kw>
<msg timestamp="20201115 22:04:28.953" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:28.926" endtime="20201115 22:04:28.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:28.959" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:28.955" endtime="20201115 22:04:28.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.961" endtime="20201115 22:04:28.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.918" endtime="20201115 22:04:28.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.913" endtime="20201115 22:04:28.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:28.985" endtime="20201115 22:04:29.329"></status>
</kw>
<msg timestamp="20201115 22:04:29.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043354042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043359264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:28.982" endtime="20201115 22:04:29.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043354042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043359264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:29.339" endtime="20201115 22:04:29.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.358" endtime="20201115 22:04:29.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.974" endtime="20201115 22:04:29.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.970" endtime="20201115 22:04:29.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:29.378" level="INFO">${RESULT} = [{'time': 0.043359264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.043563333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:29.368" endtime="20201115 22:04:29.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:29.408" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:29.380" endtime="20201115 22:04:29.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.419" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:04:29.417" endtime="20201115 22:04:29.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.425" level="INFO">VALUE: [5.221999999999172e-06, 5.2360000000056806e-06, 5.166000000000892e-06, 5.236999999998215e-06, 5.235999999998742e-06, 5.26400000000482e-06, 5.291999999997021e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.222000000006111e-06, 5.2360000000056806e-06, 5.236999999998215e-06, 5.223000000005584e-06, 5.2360000000056806e-06, 5.221999999999172e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.221999999999172e-06, 5.222000000006111e-06, 5.223000000005584e-06, 5.236999999998215e-06, 5.2360000000056806e-06, 5.235999999998742e-06, 5.194000000000032e-06, 5.235999999998742e-06, 5.223000000005584e-06, 5.236999999998215e-06, 5.235999999998742e-06, 5.2360000000056806e-06, 5.235999999998742e-06, 5.1949999999995056e-06, 5.207999999999602e-06, 5.2499999999983116e-06, 5.180999999999936e-06, 5.235999999998742e-06, 5.237000000005154e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.2089999999990755e-06, 5.2500000000052505e-06, 5.236999999998215e-06, 5.2639999999978815e-06, 5.221999999999172e-06, 5.2639999999978815e-06, 5.2360000000056806e-06]</msg>
<status status="PASS" starttime="20201115 22:04:29.422" endtime="20201115 22:04:29.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.410" endtime="20201115 22:04:29.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.434" endtime="20201115 22:04:29.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:29.442" endtime="20201115 22:04:29.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.438" endtime="20201115 22:04:29.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.429" endtime="20201115 22:04:29.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:28.907" endtime="20201115 22:04:29.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.717" endtime="20201115 22:04:29.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:26.716" endtime="20201115 22:04:29.469"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.474" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.497" endtime="20201115 22:04:29.521"></status>
</kw>
<msg timestamp="20201115 22:04:29.522" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:29.494" endtime="20201115 22:04:29.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.528" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:29.524" endtime="20201115 22:04:29.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.531" endtime="20201115 22:04:29.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.487" endtime="20201115 22:04:29.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.481" endtime="20201115 22:04:29.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.560" endtime="20201115 22:04:29.904"></status>
</kw>
<msg timestamp="20201115 22:04:29.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048744861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048750375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:29.556" endtime="20201115 22:04:29.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048744861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048750375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:29.914" endtime="20201115 22:04:29.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:29.932" endtime="20201115 22:04:29.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.549" endtime="20201115 22:04:29.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.544" endtime="20201115 22:04:29.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:29.950" level="INFO">${RESULT} = [{'time': 0.048750375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.048968528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:29.941" endtime="20201115 22:04:29.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:29.981" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:29.952" endtime="20201115 22:04:29.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.992" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:04:29.990" endtime="20201115 22:04:29.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:29.998" level="INFO">VALUE: [5.5139999999981315e-06, 5.527999999997701e-06, 5.51400000000507e-06, 5.540999999997798e-06, 5.540999999997798e-06, 5.527999999997701e-06, 5.52800000000464e-06, 5.541999999997271e-06, 5.527999999997701e-06, 5.527999999997701e-06, 5.5139999999981315e-06, 5.540999999997798e-06, 5.52800000000464e-06, 5.527000000005167e-06, 5.55600000000378e-06, 5.512999999998658e-06, 5.527999999997701e-06, 5.52800000000464e-06, 5.526999999998228e-06, 5.527999999997701e-06, 5.527999999997701e-06, 5.527999999997701e-06, 5.527999999997701e-06, 5.541000000004737e-06, 5.5689999999969375e-06, 5.569999999996411e-06, 5.5139999999981315e-06, 5.541999999997271e-06, 5.527999999997701e-06, 5.555999999996841e-06, 5.527999999997701e-06, 5.527999999997701e-06, 5.610999999995647e-06, 5.51400000000507e-06, 5.527999999997701e-06, 5.52800000000464e-06, 5.457999999999852e-06, 5.541999999997271e-06, 5.526999999998228e-06, 5.52800000000464e-06, 5.513000000005597e-06, 5.527999999997701e-06, 5.52800000000464e-06, 5.52800000000464e-06, 5.527999999997701e-06, 5.527000000005167e-06, 5.52800000000464e-06, 5.527999999997701e-06, 5.5000000000055005e-06, 5.596999999996077e-06]</msg>
<status status="PASS" starttime="20201115 22:04:29.994" endtime="20201115 22:04:29.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.983" endtime="20201115 22:04:30.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.007" endtime="20201115 22:04:30.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:30.015" endtime="20201115 22:04:30.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.011" endtime="20201115 22:04:30.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.002" endtime="20201115 22:04:30.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.475" endtime="20201115 22:04:30.041"></status>
</kw>
<msg timestamp="20201115 22:04:30.041" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.065" endtime="20201115 22:04:30.088"></status>
</kw>
<msg timestamp="20201115 22:04:30.090" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:30.061" endtime="20201115 22:04:30.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.097" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:30.092" endtime="20201115 22:04:30.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.099" endtime="20201115 22:04:30.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.054" endtime="20201115 22:04:30.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.048" endtime="20201115 22:04:30.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.123" endtime="20201115 22:04:30.465"></status>
</kw>
<msg timestamp="20201115 22:04:30.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043209181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043214694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:30.119" endtime="20201115 22:04:30.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043209181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043214694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:30.475" endtime="20201115 22:04:30.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.493" endtime="20201115 22:04:30.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.112" endtime="20201115 22:04:30.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.107" endtime="20201115 22:04:30.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:30.513" level="INFO">${RESULT} = [{'time': 0.043214694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.512999999998658e-06, 'source_diff': 5.512999999998658e-06}, {'time': 0.043428861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:30.504" endtime="20201115 22:04:30.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:30.543" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:30.515" endtime="20201115 22:04:30.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.554" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:04:30.552" endtime="20201115 22:04:30.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.560" level="INFO">VALUE: [5.512999999998658e-06, 5.5139999999981315e-06, 5.5139999999981315e-06, 5.471999999999422e-06, 5.51400000000507e-06, 5.527999999997701e-06, 5.527999999997701e-06, 5.541999999997271e-06, 5.5139999999981315e-06, 5.540999999997798e-06, 5.541999999997271e-06, 5.54200000000421e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.540999999997798e-06, 5.527000000005167e-06, 5.55600000000378e-06, 5.527999999997701e-06, 5.569000000003876e-06, 5.512999999998658e-06, 5.55600000000378e-06, 5.5139999999981315e-06, 5.5000000000055005e-06, 5.52800000000464e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.527999999997701e-06, 5.52800000000464e-06, 5.52800000000464e-06, 5.541999999997271e-06, 5.526999999998228e-06, 5.52800000000464e-06, 5.526999999998228e-06, 5.541999999997271e-06, 5.526999999998228e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.527000000005167e-06, 5.526999999998228e-06, 5.59800000000249e-06, 5.499999999998562e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.526999999998228e-06, 5.527999999997701e-06, 5.52800000000464e-06, 5.52800000000464e-06, 5.527999999997701e-06, 5.472999999998895e-06, 5.541999999997271e-06]</msg>
<status status="PASS" starttime="20201115 22:04:30.557" endtime="20201115 22:04:30.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.545" endtime="20201115 22:04:30.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.569" endtime="20201115 22:04:30.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:30.577" endtime="20201115 22:04:30.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.573" endtime="20201115 22:04:30.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.564" endtime="20201115 22:04:30.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.043" endtime="20201115 22:04:30.603"></status>
</kw>
<msg timestamp="20201115 22:04:30.603" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.628" endtime="20201115 22:04:30.652"></status>
</kw>
<msg timestamp="20201115 22:04:30.653" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:30.624" endtime="20201115 22:04:30.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:30.659" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:30.655" endtime="20201115 22:04:30.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.662" endtime="20201115 22:04:30.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.616" endtime="20201115 22:04:30.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.610" endtime="20201115 22:04:30.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:30.686" endtime="20201115 22:04:31.012"></status>
</kw>
<msg timestamp="20201115 22:04:31.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044331528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044337042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:30.683" endtime="20201115 22:04:31.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044331528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044337042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:31.016" endtime="20201115 22:04:31.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.024" endtime="20201115 22:04:31.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.675" endtime="20201115 22:04:31.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.670" endtime="20201115 22:04:31.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:31.040" level="INFO">${RESULT} = [{'time': 0.044337042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.044546472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:31.030" endtime="20201115 22:04:31.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:31.071" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:31.042" endtime="20201115 22:04:31.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.082" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:04:31.080" endtime="20201115 22:04:31.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.088" level="INFO">VALUE: [5.5139999999981315e-06, 5.5689999999969375e-06, 5.527999999997701e-06, 5.527999999997701e-06, 5.52800000000464e-06, 5.526999999998228e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.540999999997798e-06, 5.51400000000507e-06, 5.527999999997701e-06, 5.527999999997701e-06, 5.541000000004737e-06, 5.527999999997701e-06, 5.527999999997701e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.52800000000464e-06, 5.527999999997701e-06, 5.527999999997701e-06, 5.527999999997701e-06, 5.51400000000507e-06, 5.610999999995647e-06, 5.540999999997798e-06, 5.512999999998658e-06, 5.499999999998562e-06, 5.527000000005167e-06, 5.526999999998228e-06, 5.540999999997798e-06, 5.52800000000464e-06, 5.57000000000335e-06, 5.569000000003876e-06, 5.541999999997271e-06, 5.527999999997701e-06, 5.512999999998658e-06, 5.457999999999852e-06, 5.527999999997701e-06, 5.527999999997701e-06, 5.527999999997701e-06, 5.597000000003016e-06, 5.5000000000055005e-06, 5.597000000003016e-06, 5.512999999998658e-06, 5.527999999997701e-06, 5.486000000005931e-06, 5.555999999996841e-06, 5.471999999999422e-06, 5.5139999999981315e-06, 5.541000000004737e-06, 5.541999999997271e-06]</msg>
<status status="PASS" starttime="20201115 22:04:31.085" endtime="20201115 22:04:31.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.073" endtime="20201115 22:04:31.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.097" endtime="20201115 22:04:31.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:31.105" endtime="20201115 22:04:31.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.101" endtime="20201115 22:04:31.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.092" endtime="20201115 22:04:31.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:30.605" endtime="20201115 22:04:31.132"></status>
</kw>
<msg timestamp="20201115 22:04:31.132" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.156" endtime="20201115 22:04:31.180"></status>
</kw>
<msg timestamp="20201115 22:04:31.181" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:31.152" endtime="20201115 22:04:31.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.188" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:31.184" endtime="20201115 22:04:31.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.190" endtime="20201115 22:04:31.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.145" endtime="20201115 22:04:31.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.139" endtime="20201115 22:04:31.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.214" endtime="20201115 22:04:31.556"></status>
</kw>
<msg timestamp="20201115 22:04:31.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044538875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044544403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:31.210" endtime="20201115 22:04:31.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044538875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044544403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:31.566" endtime="20201115 22:04:31.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.584" endtime="20201115 22:04:31.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.203" endtime="20201115 22:04:31.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.198" endtime="20201115 22:04:31.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:31.604" level="INFO">${RESULT} = [{'time': 0.044544403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.52800000000464e-06, 'source_diff': 5.52800000000464e-06}, {'time': 0.044762778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:04:31.595" endtime="20201115 22:04:31.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:31.635" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:31.606" endtime="20201115 22:04:31.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.646" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:04:31.644" endtime="20201115 22:04:31.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.651" level="INFO">VALUE: [5.52800000000464e-06, 5.52800000000464e-06, 5.52800000000464e-06, 5.471999999999422e-06, 5.527999999997701e-06, 5.583999999995981e-06, 5.485999999998992e-06, 5.5139999999981315e-06, 5.555999999996841e-06, 5.526999999998228e-06, 5.526999999998228e-06, 5.5139999999981315e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.54200000000421e-06, 5.5139999999981315e-06, 5.526999999998228e-06, 5.596999999996077e-06, 5.5139999999981315e-06, 5.51400000000507e-06, 5.51400000000507e-06, 5.526999999998228e-06, 5.5139999999981315e-06, 5.51400000000507e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.52800000000464e-06, 5.526999999998228e-06, 5.527000000005167e-06, 5.541999999997271e-06, 5.527999999997701e-06, 5.52800000000464e-06, 5.485999999998992e-06, 5.541000000004737e-06, 5.541999999997271e-06, 5.597000000003016e-06, 5.4589999999993255e-06, 5.526999999998228e-06, 5.541999999997271e-06, 5.526999999998228e-06, 5.527999999997701e-06, 5.527999999997701e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.540999999997798e-06, 5.541999999997271e-06, 5.527999999997701e-06, 5.52800000000464e-06, 5.471999999999422e-06, 5.54200000000421e-06]</msg>
<status status="PASS" starttime="20201115 22:04:31.648" endtime="20201115 22:04:31.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.637" endtime="20201115 22:04:31.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.661" endtime="20201115 22:04:31.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:31.670" endtime="20201115 22:04:31.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.665" endtime="20201115 22:04:31.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.656" endtime="20201115 22:04:31.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.133" endtime="20201115 22:04:31.695"></status>
</kw>
<msg timestamp="20201115 22:04:31.696" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.719" endtime="20201115 22:04:31.744"></status>
</kw>
<msg timestamp="20201115 22:04:31.745" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:31.716" endtime="20201115 22:04:31.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:31.752" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:31.747" endtime="20201115 22:04:31.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.754" endtime="20201115 22:04:31.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.708" endtime="20201115 22:04:31.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.702" endtime="20201115 22:04:31.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:31.778" endtime="20201115 22:04:32.121"></status>
</kw>
<msg timestamp="20201115 22:04:32.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044089181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044094722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:31.774" endtime="20201115 22:04:32.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044089181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044094722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:32.131" endtime="20201115 22:04:32.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.149" endtime="20201115 22:04:32.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.767" endtime="20201115 22:04:32.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.762" endtime="20201115 22:04:32.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:32.169" level="INFO">${RESULT} = [{'time': 0.044094722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.541000000004737e-06, 'source_diff': 5.541000000004737e-06}, {'time': 0.044309111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:32.160" endtime="20201115 22:04:32.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:32.200" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:32.171" endtime="20201115 22:04:32.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.211" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:04:32.209" endtime="20201115 22:04:32.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.216" level="INFO">VALUE: [5.541000000004737e-06, 5.5139999999981315e-06, 5.541999999997271e-06, 5.541999999997271e-06, 5.457999999999852e-06, 5.540999999997798e-06, 5.5000000000055005e-06, 5.527000000005167e-06, 5.526999999998228e-06, 5.52800000000464e-06, 5.527999999997701e-06, 5.499999999998562e-06, 5.54200000000421e-06, 5.527999999997701e-06, 5.526999999998228e-06, 5.51400000000507e-06, 5.527000000005167e-06, 5.527999999997701e-06, 5.5139999999981315e-06, 5.540999999997798e-06, 5.457999999999852e-06, 5.540999999997798e-06, 5.51400000000507e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.541999999997271e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.5550000000043065e-06, 5.485999999998992e-06, 5.527999999997701e-06, 5.52800000000464e-06, 5.5139999999981315e-06, 5.597000000003016e-06, 5.5139999999981315e-06, 5.597000000003016e-06, 5.5139999999981315e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.52800000000464e-06, 5.527999999997701e-06, 5.597000000003016e-06, 5.527999999997701e-06, 5.554999999997368e-06, 5.527999999997701e-06, 5.5550000000043065e-06, 5.5139999999981315e-06, 5.541999999997271e-06, 5.51400000000507e-06, 5.527999999997701e-06]</msg>
<status status="PASS" starttime="20201115 22:04:32.213" endtime="20201115 22:04:32.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.202" endtime="20201115 22:04:32.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.226" endtime="20201115 22:04:32.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:32.235" endtime="20201115 22:04:32.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.230" endtime="20201115 22:04:32.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.221" endtime="20201115 22:04:32.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:31.697" endtime="20201115 22:04:32.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.472" endtime="20201115 22:04:32.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:29.470" endtime="20201115 22:04:32.261"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.266" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.289" endtime="20201115 22:04:32.314"></status>
</kw>
<msg timestamp="20201115 22:04:32.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:32.286" endtime="20201115 22:04:32.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.322" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:32.318" endtime="20201115 22:04:32.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.324" endtime="20201115 22:04:32.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.279" endtime="20201115 22:04:32.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.273" endtime="20201115 22:04:32.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.348" endtime="20201115 22:04:32.691"></status>
</kw>
<msg timestamp="20201115 22:04:32.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049109861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049115681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:32.345" endtime="20201115 22:04:32.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049109861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049115681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:32.701" endtime="20201115 22:04:32.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.719" endtime="20201115 22:04:32.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.337" endtime="20201115 22:04:32.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.333" endtime="20201115 22:04:32.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:32.737" level="INFO">${RESULT} = [{'time': 0.049115681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8200000000036e-06, 'source_diff': 5.8200000000036e-06}, {'time': 0.049347653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201115 22:04:32.728" endtime="20201115 22:04:32.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:32.768" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:32.739" endtime="20201115 22:04:32.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.780" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:04:32.778" endtime="20201115 22:04:32.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.787" level="INFO">VALUE: [5.8200000000036e-06, 5.819999999996661e-06, 5.833999999996231e-06, 5.8189999999971875e-06, 5.819999999996661e-06, 5.749999999998812e-06, 5.8189999999971875e-06, 5.8189999999971875e-06, 5.833000000003696e-06, 5.8200000000036e-06, 5.846999999996327e-06, 5.819999999996661e-06, 5.819999999996661e-06, 5.819999999996661e-06, 5.8200000000036e-06, 5.7639999999983815e-06, 5.805999999997091e-06, 5.8200000000036e-06, 5.8190000000041264e-06, 5.8189999999971875e-06, 5.805999999997091e-06, 5.819999999996661e-06, 5.8189999999971875e-06, 5.8200000000036e-06, 5.8190000000041264e-06, 5.8329999999967574e-06, 5.805999999997091e-06, 5.735999999999242e-06, 5.833000000003696e-06, 5.805999999997091e-06, 5.83400000000317e-06, 5.8200000000036e-06, 5.8200000000036e-06, 5.8190000000041264e-06, 5.8190000000041264e-06, 5.8189999999971875e-06, 5.819999999996661e-06, 5.80600000000403e-06, 5.8190000000041264e-06, 5.846999999996327e-06, 5.819999999996661e-06, 5.805999999997091e-06, 5.833000000003696e-06, 5.875000000002406e-06, 5.7500000000057505e-06, 5.804999999997618e-06, 5.8050000000045565e-06, 5.8200000000036e-06, 5.819999999996661e-06, 5.8200000000036e-06]</msg>
<status status="PASS" starttime="20201115 22:04:32.783" endtime="20201115 22:04:32.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.771" endtime="20201115 22:04:32.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.796" endtime="20201115 22:04:32.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:32.805" endtime="20201115 22:04:32.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.800" endtime="20201115 22:04:32.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.791" endtime="20201115 22:04:32.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.267" endtime="20201115 22:04:32.830"></status>
</kw>
<msg timestamp="20201115 22:04:32.831" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.854" endtime="20201115 22:04:32.878"></status>
</kw>
<msg timestamp="20201115 22:04:32.880" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:32.851" endtime="20201115 22:04:32.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:32.886" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:32.882" endtime="20201115 22:04:32.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.888" endtime="20201115 22:04:32.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.844" endtime="20201115 22:04:32.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.838" endtime="20201115 22:04:32.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:32.912" endtime="20201115 22:04:33.255"></status>
</kw>
<msg timestamp="20201115 22:04:33.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043366097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043371917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:32.909" endtime="20201115 22:04:33.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043366097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043371917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:33.264" endtime="20201115 22:04:33.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.283" endtime="20201115 22:04:33.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.902" endtime="20201115 22:04:33.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.897" endtime="20201115 22:04:33.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:33.305" level="INFO">${RESULT} = [{'time': 0.043371917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8200000000036e-06, 'source_diff': 5.8200000000036e-06}, {'time': 0.043603708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201115 22:04:33.295" endtime="20201115 22:04:33.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:33.335" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:33.307" endtime="20201115 22:04:33.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.347" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:04:33.345" endtime="20201115 22:04:33.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.353" level="INFO">VALUE: [5.8200000000036e-06, 5.8329999999967574e-06, 5.819999999996661e-06, 5.8329999999967574e-06, 5.8200000000036e-06, 5.805999999997091e-06, 5.805999999997091e-06, 5.8329999999967574e-06, 5.8189999999971875e-06, 5.8200000000036e-06, 5.8189999999971875e-06, 5.8189999999971875e-06, 5.80600000000403e-06, 5.791999999997521e-06, 5.875000000002406e-06, 5.7779999999979514e-06, 5.875000000002406e-06, 5.804999999997618e-06, 5.776999999998478e-06, 5.8050000000045565e-06, 5.8050000000045565e-06, 5.8200000000036e-06, 5.860999999995897e-06, 5.791999999997521e-06, 5.83400000000317e-06, 5.7639999999983815e-06, 5.833999999996231e-06, 5.833999999996231e-06, 5.833999999996231e-06, 5.80600000000403e-06, 5.804999999997618e-06, 5.8190000000041264e-06, 5.819999999996661e-06, 5.833000000003696e-06, 5.847000000003266e-06, 5.8190000000041264e-06, 5.888999999995037e-06, 5.8190000000041264e-06, 5.804999999997618e-06, 5.819999999996661e-06, 5.8200000000036e-06, 5.8190000000041264e-06, 5.791999999997521e-06, 5.7779999999979514e-06, 5.8189999999971875e-06, 5.804999999997618e-06, 5.8190000000041264e-06, 5.902000000002072e-06, 5.847000000003266e-06, 5.8200000000036e-06]</msg>
<status status="PASS" starttime="20201115 22:04:33.349" endtime="20201115 22:04:33.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.338" endtime="20201115 22:04:33.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.361" endtime="20201115 22:04:33.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:33.370" endtime="20201115 22:04:33.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.365" endtime="20201115 22:04:33.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.357" endtime="20201115 22:04:33.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.832" endtime="20201115 22:04:33.396"></status>
</kw>
<msg timestamp="20201115 22:04:33.396" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.419" endtime="20201115 22:04:33.444"></status>
</kw>
<msg timestamp="20201115 22:04:33.445" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:33.416" endtime="20201115 22:04:33.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.451" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:33.447" endtime="20201115 22:04:33.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.454" endtime="20201115 22:04:33.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.409" endtime="20201115 22:04:33.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.403" endtime="20201115 22:04:33.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.477" endtime="20201115 22:04:33.822"></status>
</kw>
<msg timestamp="20201115 22:04:33.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043430194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043436014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:33.474" endtime="20201115 22:04:33.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043430194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043436014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:33.831" endtime="20201115 22:04:33.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.850" endtime="20201115 22:04:33.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.467" endtime="20201115 22:04:33.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.462" endtime="20201115 22:04:33.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:33.870" level="INFO">${RESULT} = [{'time': 0.043436014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8200000000036e-06, 'source_diff': 5.8200000000036e-06}, {'time': 0.043660292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201115 22:04:33.860" endtime="20201115 22:04:33.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:33.901" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:33.872" endtime="20201115 22:04:33.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.912" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:04:33.910" endtime="20201115 22:04:33.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:33.918" level="INFO">VALUE: [5.8200000000036e-06, 5.8200000000036e-06, 5.776999999998478e-06, 5.83400000000317e-06, 5.819999999996661e-06, 5.8190000000041264e-06, 5.8190000000041264e-06, 5.833999999996231e-06, 5.8190000000041264e-06, 5.8200000000036e-06, 5.8200000000036e-06, 5.7779999999979514e-06, 5.8190000000041264e-06, 5.8189999999971875e-06, 5.861000000002836e-06, 5.8050000000045565e-06, 5.805999999997091e-06, 5.833000000003696e-06, 5.8190000000041264e-06, 5.8329999999967574e-06, 5.805999999997091e-06, 5.8189999999971875e-06, 5.8329999999967574e-06, 5.8050000000045565e-06, 5.804999999997618e-06, 5.861000000002836e-06, 5.8190000000041264e-06, 5.7639999999983815e-06, 5.819999999996661e-06, 5.80600000000403e-06, 5.805999999997091e-06, 5.805999999997091e-06, 5.819999999996661e-06, 5.80600000000403e-06, 5.7639999999983815e-06, 5.8190000000041264e-06, 5.8200000000036e-06, 5.846999999996327e-06, 5.84800000000274e-06, 5.8200000000036e-06, 5.7779999999979514e-06, 5.79200000000446e-06, 5.8189999999971875e-06, 5.833000000003696e-06, 5.8200000000036e-06, 5.804999999997618e-06, 5.83400000000317e-06, 5.819999999996661e-06, 5.8200000000036e-06, 5.8200000000036e-06]</msg>
<status status="PASS" starttime="20201115 22:04:33.915" endtime="20201115 22:04:33.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.903" endtime="20201115 22:04:33.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.927" endtime="20201115 22:04:33.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:33.935" endtime="20201115 22:04:33.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.931" endtime="20201115 22:04:33.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.922" endtime="20201115 22:04:33.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.397" endtime="20201115 22:04:33.961"></status>
</kw>
<msg timestamp="20201115 22:04:33.961" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:33.985" endtime="20201115 22:04:34.010"></status>
</kw>
<msg timestamp="20201115 22:04:34.011" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:33.981" endtime="20201115 22:04:34.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.018" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:34.014" endtime="20201115 22:04:34.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.020" endtime="20201115 22:04:34.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.974" endtime="20201115 22:04:34.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.968" endtime="20201115 22:04:34.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.044" endtime="20201115 22:04:34.363"></status>
</kw>
<msg timestamp="20201115 22:04:34.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043431458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04343725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:34.040" endtime="20201115 22:04:34.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043431458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04343725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:34.367" endtime="20201115 22:04:34.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.375" endtime="20201115 22:04:34.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.033" endtime="20201115 22:04:34.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.028" endtime="20201115 22:04:34.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:34.385" level="INFO">${RESULT} = [{'time': 0.04343725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.043672778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:04:34.380" endtime="20201115 22:04:34.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:34.398" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:34.386" endtime="20201115 22:04:34.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.404" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:04:34.402" endtime="20201115 22:04:34.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.406" level="INFO">VALUE: [5.791999999997521e-06, 5.77800000000489e-06, 5.8190000000041264e-06, 5.846999999996327e-06, 5.8200000000036e-06, 5.7779999999979514e-06, 5.8189999999971875e-06, 5.8189999999971875e-06, 5.80600000000403e-06, 5.833000000003696e-06, 2.02090000000002e-05, 5.805999999997091e-06, 5.8050000000045565e-06, 5.8189999999971875e-06, 5.804999999997618e-06, 5.819999999996661e-06, 5.8200000000036e-06, 5.8189999999971875e-06, 5.805999999997091e-06, 5.8200000000036e-06, 5.8329999999967574e-06, 5.901999999995133e-06, 5.805999999997091e-06, 5.8190000000041264e-06, 5.833000000003696e-06, 5.833000000003696e-06, 5.8329999999967574e-06, 5.8190000000041264e-06, 5.8200000000036e-06, 5.8200000000036e-06, 5.790999999998048e-06, 5.8189999999971875e-06, 5.8200000000036e-06, 5.804999999997618e-06, 5.8190000000041264e-06, 5.8189999999971875e-06, 5.804999999997618e-06, 5.8189999999971875e-06, 5.8200000000036e-06, 5.860999999995897e-06, 5.8190000000041264e-06, 5.804999999997618e-06, 5.83400000000317e-06, 5.889000000001976e-06, 5.80600000000403e-06, 5.8200000000036e-06, 5.8329999999967574e-06, 5.8189999999971875e-06, 5.8190000000041264e-06, 5.8189999999971875e-06]</msg>
<status status="PASS" starttime="20201115 22:04:34.405" endtime="20201115 22:04:34.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.399" endtime="20201115 22:04:34.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.410" endtime="20201115 22:04:34.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:34.414" endtime="20201115 22:04:34.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.412" endtime="20201115 22:04:34.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.408" endtime="20201115 22:04:34.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:33.962" endtime="20201115 22:04:34.436"></status>
</kw>
<msg timestamp="20201115 22:04:34.436" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.447" endtime="20201115 22:04:34.469"></status>
</kw>
<msg timestamp="20201115 22:04:34.470" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:34.445" endtime="20201115 22:04:34.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.475" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:34.471" endtime="20201115 22:04:34.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.477" endtime="20201115 22:04:34.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.442" endtime="20201115 22:04:34.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.439" endtime="20201115 22:04:34.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.501" endtime="20201115 22:04:34.846"></status>
</kw>
<msg timestamp="20201115 22:04:34.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025790667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025796542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:34.497" endtime="20201115 22:04:34.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025790667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025796542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:34.860" endtime="20201115 22:04:34.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.879" endtime="20201115 22:04:34.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.490" endtime="20201115 22:04:34.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.485" endtime="20201115 22:04:34.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:34.898" level="INFO">${RESULT} = [{'time': 0.025796542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.026045194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:34.889" endtime="20201115 22:04:34.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:34.929" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:34.900" endtime="20201115 22:04:34.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.940" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:04:34.938" endtime="20201115 22:04:34.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.946" level="INFO">VALUE: [5.874999999998937e-06, 5.750000000002281e-06, 5.749999999998812e-06, 5.820000000000131e-06, 5.805000000001087e-06, 5.819000000000657e-06, 5.791000000001517e-06, 5.820000000000131e-06, 5.8339999999997005e-06, 5.805000000001087e-06, 5.791000000001517e-06, 5.819000000000657e-06, 5.750000000002281e-06, 5.805000000001087e-06, 5.833000000000227e-06, 5.833000000000227e-06, 5.833000000000227e-06, 5.792000000000991e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.846999999999797e-06, 5.806000000000561e-06, 5.805999999997091e-06, 5.846999999999797e-06, 5.819999999996661e-06, 5.804999999997618e-06, 5.8190000000041264e-06, 5.805999999997091e-06, 5.846999999996327e-06, 5.8189999999971875e-06, 5.8189999999971875e-06, 5.833999999996231e-06, 5.8190000000041264e-06, 5.8329999999967574e-06, 5.8329999999967574e-06, 5.8200000000036e-06, 5.833000000003696e-06, 5.860999999995897e-06, 5.804999999997618e-06, 5.804999999997618e-06, 5.819999999996661e-06, 5.833000000003696e-06, 5.833000000003696e-06, 5.80600000000403e-06, 5.8200000000036e-06, 5.846999999996327e-06, 5.8190000000041264e-06, 5.7779999999979514e-06, 5.80600000000403e-06, 5.846999999996327e-06]</msg>
<status status="PASS" starttime="20201115 22:04:34.943" endtime="20201115 22:04:34.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.931" endtime="20201115 22:04:34.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:34.955" endtime="20201115 22:04:34.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:34.963" endtime="20201115 22:04:34.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.959" endtime="20201115 22:04:34.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.950" endtime="20201115 22:04:34.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.436" endtime="20201115 22:04:34.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.264" endtime="20201115 22:04:34.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:32.262" endtime="20201115 22:04:34.990"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:34.995" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:35.018" endtime="20201115 22:04:35.045"></status>
</kw>
<msg timestamp="20201115 22:04:35.046" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:35.015" endtime="20201115 22:04:35.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:35.052" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:35.048" endtime="20201115 22:04:35.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:35.054" endtime="20201115 22:04:35.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.008" endtime="20201115 22:04:35.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.002" endtime="20201115 22:04:35.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:35.079" endtime="20201115 22:04:35.427"></status>
</kw>
<msg timestamp="20201115 22:04:35.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049137097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049143208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:35.076" endtime="20201115 22:04:35.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:35.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049137097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049143208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:35.437" endtime="20201115 22:04:35.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:35.455" endtime="20201115 22:04:35.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.068" endtime="20201115 22:04:35.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.063" endtime="20201115 22:04:35.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:35.473" level="INFO">${RESULT} = [{'time': 0.049143208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.049393611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:35.464" endtime="20201115 22:04:35.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:35.503" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:35.475" endtime="20201115 22:04:35.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:35.515" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:04:35.512" endtime="20201115 22:04:35.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:35.520" level="INFO">VALUE: [6.111000000003086e-06, 6.124999999995717e-06, 6.110999999996147e-06, 6.125000000002656e-06, 6.0690000000043764e-06, 6.110999999996147e-06, 6.111000000003086e-06, 6.124999999995717e-06, 6.166999999994427e-06, 6.096999999996577e-06, 6.181000000000936e-06, 6.110999999996147e-06, 6.110999999996147e-06, 6.111000000003086e-06, 6.110999999996147e-06, 6.111000000003086e-06, 6.096999999996577e-06, 6.026999999998728e-06, 6.110999999996147e-06, 6.097000000003516e-06, 6.110999999996147e-06, 6.194000000001032e-06, 6.124999999995717e-06, 6.096999999996577e-06, 6.125000000002656e-06, 6.111000000003086e-06, 6.097000000003516e-06, 6.111000000003086e-06, 6.139000000002226e-06, 6.110999999996147e-06, 6.111000000003086e-06, 6.096999999996577e-06, 6.153000000001796e-06, 6.111000000003086e-06, 6.11200000000256e-06, 6.110999999996147e-06, 6.125000000002656e-06, 6.11200000000256e-06, 6.096999999996577e-06, 6.180000000001462e-06, 6.111000000003086e-06, 6.0829999999970075e-06, 6.0829999999970075e-06, 6.083999999996481e-06, 6.139000000002226e-06, 6.111000000003086e-06, 6.111000000003086e-06, 6.097000000003516e-06, 6.111000000003086e-06, 6.124999999995717e-06]</msg>
<status status="PASS" starttime="20201115 22:04:35.517" endtime="20201115 22:04:35.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.505" endtime="20201115 22:04:35.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:35.529" endtime="20201115 22:04:35.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:35.537" endtime="20201115 22:04:35.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.533" endtime="20201115 22:04:35.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.524" endtime="20201115 22:04:35.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.996" endtime="20201115 22:04:35.563"></status>
</kw>
<msg timestamp="20201115 22:04:35.564" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:35.587" endtime="20201115 22:04:35.612"></status>
</kw>
<msg timestamp="20201115 22:04:35.613" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:35.583" endtime="20201115 22:04:35.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:35.620" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:35.616" endtime="20201115 22:04:35.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:35.623" endtime="20201115 22:04:35.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.576" endtime="20201115 22:04:35.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.570" endtime="20201115 22:04:35.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:35.647" endtime="20201115 22:04:35.991"></status>
</kw>
<msg timestamp="20201115 22:04:35.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043264083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043270194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:35.643" endtime="20201115 22:04:35.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:36.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043264083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043270194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:36.000" endtime="20201115 22:04:36.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.019" endtime="20201115 22:04:36.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.636" endtime="20201115 22:04:36.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.631" endtime="20201115 22:04:36.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:36.038" level="INFO">${RESULT} = [{'time': 0.043270194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999996147e-06, 'source_diff': 6.110999999996147e-06}, {'time': 0.043521597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:36.029" endtime="20201115 22:04:36.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:36.069" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:36.041" endtime="20201115 22:04:36.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:36.080" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:04:36.078" endtime="20201115 22:04:36.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:36.086" level="INFO">VALUE: [6.110999999996147e-06, 6.097000000003516e-06, 6.055999999997341e-06, 6.111000000003086e-06, 6.125000000002656e-06, 6.097999999996051e-06, 6.111000000003086e-06, 6.110999999996147e-06, 6.11200000000256e-06, 6.125000000002656e-06, 6.097000000003516e-06, 6.110999999996147e-06, 6.040999999998298e-06, 6.110999999996147e-06, 6.111000000003086e-06, 6.097000000003516e-06, 6.125000000002656e-06, 6.124999999995717e-06, 6.097000000003516e-06, 6.125000000002656e-06, 6.125000000002656e-06, 6.083000000003946e-06, 6.096999999996577e-06, 6.096999999996577e-06, 6.111000000003086e-06, 6.124999999995717e-06, 6.097000000003516e-06, 6.153000000001796e-06, 6.096999999996577e-06, 6.111999999995621e-06, 6.111000000003086e-06, 6.125000000002656e-06, 6.125000000002656e-06, 6.139000000002226e-06, 6.0279999999982015e-06, 6.125000000002656e-06, 6.096999999996577e-06, 6.110999999996147e-06, 6.125000000002656e-06, 6.110999999996147e-06, 6.110999999996147e-06, 6.097000000003516e-06, 6.111999999995621e-06, 6.110999999996147e-06, 6.110999999996147e-06, 6.110999999996147e-06, 6.055999999997341e-06, 6.111000000003086e-06, 6.110999999996147e-06, 6.125000000002656e-06]</msg>
<status status="PASS" starttime="20201115 22:04:36.083" endtime="20201115 22:04:36.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.071" endtime="20201115 22:04:36.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.095" endtime="20201115 22:04:36.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:36.103" endtime="20201115 22:04:36.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.099" endtime="20201115 22:04:36.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.090" endtime="20201115 22:04:36.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:35.565" endtime="20201115 22:04:36.129"></status>
</kw>
<msg timestamp="20201115 22:04:36.129" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.154" endtime="20201115 22:04:36.180"></status>
</kw>
<msg timestamp="20201115 22:04:36.181" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:36.149" endtime="20201115 22:04:36.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:36.187" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:36.183" endtime="20201115 22:04:36.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.190" endtime="20201115 22:04:36.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.142" endtime="20201115 22:04:36.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.136" endtime="20201115 22:04:36.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.213" endtime="20201115 22:04:36.556"></status>
</kw>
<msg timestamp="20201115 22:04:36.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044395681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044401806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:36.210" endtime="20201115 22:04:36.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:36.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044395681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044401806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:36.565" endtime="20201115 22:04:36.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.584" endtime="20201115 22:04:36.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.203" endtime="20201115 22:04:36.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.198" endtime="20201115 22:04:36.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:36.603" level="INFO">${RESULT} = [{'time': 0.044401806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.125000000002656e-06, 'source_diff': 6.125000000002656e-06}, {'time': 0.044646778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:36.594" endtime="20201115 22:04:36.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:36.634" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:36.605" endtime="20201115 22:04:36.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:36.645" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:04:36.643" endtime="20201115 22:04:36.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:36.651" level="INFO">VALUE: [6.125000000002656e-06, 6.152999999994857e-06, 6.111000000003086e-06, 6.11200000000256e-06, 6.125000000002656e-06, 6.110999999996147e-06, 6.110999999996147e-06, 6.096999999996577e-06, 6.153000000001796e-06, 6.124999999995717e-06, 6.125000000002656e-06, 6.153000000001796e-06, 6.096999999996577e-06, 6.097999999996051e-06, 6.110999999996147e-06, 6.11200000000256e-06, 6.124999999995717e-06, 6.111000000003086e-06, 6.055999999997341e-06, 6.111000000003086e-06, 6.110999999996147e-06, 6.097000000003516e-06, 6.111000000003086e-06, 6.111000000003086e-06, 6.111000000003086e-06, 6.181000000000936e-06, 6.096999999996577e-06, 6.179999999994523e-06, 6.110999999996147e-06, 6.0829999999970075e-06, 6.02800000000514e-06, 6.111000000003086e-06, 6.055999999997341e-06, 6.096999999996577e-06, 6.152999999994857e-06, 6.124999999995717e-06, 6.110999999996147e-06, 6.138999999995287e-06, 6.096999999996577e-06, 6.09800000000299e-06, 6.110999999996147e-06, 6.166999999994427e-06, 6.097999999996051e-06, 6.0690000000043764e-06, 6.111000000003086e-06, 6.096999999996577e-06, 6.097000000003516e-06, 6.124999999995717e-06, 6.125000000002656e-06, 6.138999999995287e-06]</msg>
<status status="PASS" starttime="20201115 22:04:36.647" endtime="20201115 22:04:36.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.636" endtime="20201115 22:04:36.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.660" endtime="20201115 22:04:36.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:36.668" endtime="20201115 22:04:36.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.664" endtime="20201115 22:04:36.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.655" endtime="20201115 22:04:36.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.131" endtime="20201115 22:04:36.694"></status>
</kw>
<msg timestamp="20201115 22:04:36.695" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.718" endtime="20201115 22:04:36.744"></status>
</kw>
<msg timestamp="20201115 22:04:36.745" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:36.715" endtime="20201115 22:04:36.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:36.751" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:36.747" endtime="20201115 22:04:36.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.754" endtime="20201115 22:04:36.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.708" endtime="20201115 22:04:36.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.702" endtime="20201115 22:04:36.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:36.777" endtime="20201115 22:04:37.121"></status>
</kw>
<msg timestamp="20201115 22:04:37.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04410375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044109861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:36.774" endtime="20201115 22:04:37.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:37.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04410375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044109861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:37.131" endtime="20201115 22:04:37.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.149" endtime="20201115 22:04:37.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.767" endtime="20201115 22:04:37.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.762" endtime="20201115 22:04:37.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:37.169" level="INFO">${RESULT} = [{'time': 0.044109861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.044357528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:37.159" endtime="20201115 22:04:37.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:37.199" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:37.171" endtime="20201115 22:04:37.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:37.210" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:04:37.208" endtime="20201115 22:04:37.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:37.216" level="INFO">VALUE: [6.111000000003086e-06, 6.125000000002656e-06, 6.08400000000342e-06, 6.111999999995621e-06, 6.096999999996577e-06, 6.124999999995717e-06, 6.111000000003086e-06, 6.069999999996911e-06, 6.097000000003516e-06, 6.09800000000299e-06, 6.124999999995717e-06, 6.110999999996147e-06, 6.124999999995717e-06, 6.110999999996147e-06, 6.0829999999970075e-06, 6.110999999996147e-06, 6.111000000003086e-06, 6.110999999996147e-06, 6.166999999994427e-06, 6.111000000003086e-06, 6.097000000003516e-06, 6.181000000000936e-06, 6.0690000000043764e-06, 6.167000000001366e-06, 6.110999999996147e-06, 6.054999999997868e-06, 6.111000000003086e-06, 6.097000000003516e-06, 6.111000000003086e-06, 6.153000000001796e-06, 6.125000000002656e-06, 6.09800000000299e-06, 6.111000000003086e-06, 6.110999999996147e-06, 6.111000000003086e-06, 6.111000000003086e-06, 6.110999999996147e-06, 6.096999999996577e-06, 6.097000000003516e-06, 6.138999999995287e-06, 6.096999999996577e-06, 6.097000000003516e-06, 6.125000000002656e-06, 6.096999999996577e-06, 6.097999999996051e-06, 6.07000000000385e-06, 6.125000000002656e-06, 6.111000000003086e-06, 6.09800000000299e-06, 6.125000000002656e-06]</msg>
<status status="PASS" starttime="20201115 22:04:37.213" endtime="20201115 22:04:37.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.201" endtime="20201115 22:04:37.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.226" endtime="20201115 22:04:37.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:37.234" endtime="20201115 22:04:37.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.230" endtime="20201115 22:04:37.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.220" endtime="20201115 22:04:37.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:36.696" endtime="20201115 22:04:37.260"></status>
</kw>
<msg timestamp="20201115 22:04:37.260" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.284" endtime="20201115 22:04:37.309"></status>
</kw>
<msg timestamp="20201115 22:04:37.310" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:37.280" endtime="20201115 22:04:37.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:37.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:37.312" endtime="20201115 22:04:37.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.319" endtime="20201115 22:04:37.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.273" endtime="20201115 22:04:37.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.267" endtime="20201115 22:04:37.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.342" endtime="20201115 22:04:37.685"></status>
</kw>
<msg timestamp="20201115 22:04:37.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043298431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043304542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:37.339" endtime="20201115 22:04:37.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:37.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043298431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043304542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:37.695" endtime="20201115 22:04:37.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.712" endtime="20201115 22:04:37.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.332" endtime="20201115 22:04:37.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.327" endtime="20201115 22:04:37.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:37.722" level="INFO">${RESULT} = [{'time': 0.043304542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.043553889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:37.718" endtime="20201115 22:04:37.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:37.736" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:37.723" endtime="20201115 22:04:37.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:37.741" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:04:37.740" endtime="20201115 22:04:37.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:37.744" level="INFO">VALUE: [6.111000000003086e-06, 6.138999999995287e-06, 6.07000000000385e-06, 6.111999999995621e-06, 6.0550000000048065e-06, 6.111000000003086e-06, 6.125000000002656e-06, 6.097000000003516e-06, 6.096999999996577e-06, 6.11200000000256e-06, 6.097000000003516e-06, 6.125000000002656e-06, 6.097000000003516e-06, 6.111999999995621e-06, 6.111000000003086e-06, 6.097000000003516e-06, 6.110999999996147e-06, 6.167000000001366e-06, 6.096999999996577e-06, 6.152999999994857e-06, 6.124999999995717e-06, 6.097999999996051e-06, 6.111999999995621e-06, 6.09800000000299e-06, 6.11200000000256e-06, 6.083999999996481e-06, 6.153000000001796e-06, 6.124999999995717e-06, 6.110999999996147e-06, 6.055999999997341e-06, 6.138000000002752e-06, 6.111999999995621e-06, 6.11200000000256e-06, 6.069999999996911e-06, 6.111000000003086e-06, 6.111000000003086e-06, 6.111000000003086e-06, 6.097000000003516e-06, 6.097000000003516e-06, 6.069999999996911e-06, 6.110999999996147e-06, 6.069999999996911e-06, 6.124999999995717e-06, 6.083000000003946e-06, 6.111000000003086e-06, 6.083999999996481e-06, 6.111000000003086e-06, 6.111000000003086e-06, 6.0690000000043764e-06, 6.111000000003086e-06]</msg>
<status status="PASS" starttime="20201115 22:04:37.742" endtime="20201115 22:04:37.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.737" endtime="20201115 22:04:37.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.748" endtime="20201115 22:04:37.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:37.753" endtime="20201115 22:04:37.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.751" endtime="20201115 22:04:37.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.746" endtime="20201115 22:04:37.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.261" endtime="20201115 22:04:37.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.993" endtime="20201115 22:04:37.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:34.991" endtime="20201115 22:04:37.774"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:37.777" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.788" endtime="20201115 22:04:37.812"></status>
</kw>
<msg timestamp="20201115 22:04:37.813" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:37.786" endtime="20201115 22:04:37.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:37.819" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:37.815" endtime="20201115 22:04:37.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.822" endtime="20201115 22:04:37.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.783" endtime="20201115 22:04:37.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.780" endtime="20201115 22:04:37.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:37.846" endtime="20201115 22:04:38.192"></status>
</kw>
<msg timestamp="20201115 22:04:38.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028038069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028044472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:37.842" endtime="20201115 22:04:38.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:38.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028038069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028044472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:38.201" endtime="20201115 22:04:38.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.220" endtime="20201115 22:04:38.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.835" endtime="20201115 22:04:38.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.830" endtime="20201115 22:04:38.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:38.237" level="INFO">${RESULT} = [{'time': 0.028044472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.028316972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:38.228" endtime="20201115 22:04:38.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:38.268" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:38.239" endtime="20201115 22:04:38.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:38.279" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:04:38.277" endtime="20201115 22:04:38.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:38.285" level="INFO">VALUE: [6.403000000002046e-06, 6.429999999998243e-06, 6.401999999999103e-06, 6.347000000000297e-06, 6.4029999999985765e-06, 6.402000000002572e-06, 6.401999999999103e-06, 6.4029999999985765e-06, 6.387999999999533e-06, 6.4029999999985765e-06, 6.403000000002046e-06, 6.388999999999007e-06, 6.403000000002046e-06, 6.388999999995537e-06, 6.431000000001186e-06, 6.416000000002142e-06, 6.402000000002572e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.430000000001712e-06, 6.403000000002046e-06, 6.401999999995633e-06, 6.431000000001186e-06, 6.415999999995203e-06, 6.388999999995537e-06, 6.403000000002046e-06, 6.388999999995537e-06, 6.459000000000326e-06, 6.415999999995203e-06, 6.333999999996731e-06, 6.388999999995537e-06, 6.360999999996397e-06, 6.401999999995633e-06, 6.375000000002906e-06, 6.402000000002572e-06, 6.374999999995967e-06, 6.388000000003002e-06, 6.416999999994677e-06, 6.417000000001616e-06, 6.458000000000852e-06, 6.319999999997161e-06, 6.403000000002046e-06, 6.416999999994677e-06, 6.403000000002046e-06, 6.416999999994677e-06, 6.388999999995537e-06]</msg>
<status status="PASS" starttime="20201115 22:04:38.282" endtime="20201115 22:04:38.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.270" endtime="20201115 22:04:38.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.295" endtime="20201115 22:04:38.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:38.303" endtime="20201115 22:04:38.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.298" endtime="20201115 22:04:38.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.290" endtime="20201115 22:04:38.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.777" endtime="20201115 22:04:38.329"></status>
</kw>
<msg timestamp="20201115 22:04:38.329" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.353" endtime="20201115 22:04:38.381"></status>
</kw>
<msg timestamp="20201115 22:04:38.382" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:38.349" endtime="20201115 22:04:38.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:38.388" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:38.384" endtime="20201115 22:04:38.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.390" endtime="20201115 22:04:38.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.342" endtime="20201115 22:04:38.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.336" endtime="20201115 22:04:38.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.415" endtime="20201115 22:04:38.757"></status>
</kw>
<msg timestamp="20201115 22:04:38.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043698111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043704514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:38.411" endtime="20201115 22:04:38.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:38.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043698111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043704514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:38.767" endtime="20201115 22:04:38.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.785" endtime="20201115 22:04:38.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.403" endtime="20201115 22:04:38.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.399" endtime="20201115 22:04:38.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:38.804" level="INFO">${RESULT} = [{'time': 0.043704514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.043966569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:38.795" endtime="20201115 22:04:38.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:38.835" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:38.807" endtime="20201115 22:04:38.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:38.847" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:04:38.845" endtime="20201115 22:04:38.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:38.853" level="INFO">VALUE: [6.403000000002046e-06, 6.401999999995633e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.401999999995633e-06, 6.403000000002046e-06, 6.388999999995537e-06, 6.417000000001616e-06, 6.402999999995107e-06, 6.403000000002046e-06, 6.402000000002572e-06, 6.402999999995107e-06, 6.402999999995107e-06, 6.417000000001616e-06, 6.389000000002476e-06, 6.401999999995633e-06, 6.444000000001282e-06, 6.375000000002906e-06, 6.402999999995107e-06, 6.375000000002906e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.388999999995537e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.374999999995967e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.417000000001616e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.402999999995107e-06, 6.403000000002046e-06, 6.402000000002572e-06, 6.402000000002572e-06, 6.388999999995537e-06, 6.389000000002476e-06, 6.429999999994773e-06, 6.417000000001616e-06, 6.403000000002046e-06, 6.416999999994677e-06, 6.388999999995537e-06, 6.361000000003336e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.402000000002572e-06]</msg>
<status status="PASS" starttime="20201115 22:04:38.850" endtime="20201115 22:04:38.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.838" endtime="20201115 22:04:38.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.862" endtime="20201115 22:04:38.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:38.871" endtime="20201115 22:04:38.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.866" endtime="20201115 22:04:38.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.857" endtime="20201115 22:04:38.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.331" endtime="20201115 22:04:38.896"></status>
</kw>
<msg timestamp="20201115 22:04:38.897" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.920" endtime="20201115 22:04:38.947"></status>
</kw>
<msg timestamp="20201115 22:04:38.949" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:38.917" endtime="20201115 22:04:38.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:38.955" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:38.951" endtime="20201115 22:04:38.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.958" endtime="20201115 22:04:38.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.909" endtime="20201115 22:04:38.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.904" endtime="20201115 22:04:38.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:38.983" endtime="20201115 22:04:39.326"></status>
</kw>
<msg timestamp="20201115 22:04:39.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043882625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043889042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:38.979" endtime="20201115 22:04:39.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:39.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043882625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043889042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:39.336" endtime="20201115 22:04:39.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:39.354" endtime="20201115 22:04:39.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.971" endtime="20201115 22:04:39.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.966" endtime="20201115 22:04:39.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:39.373" level="INFO">${RESULT} = [{'time': 0.043889042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.044158167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:39.364" endtime="20201115 22:04:39.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:39.404" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:39.376" endtime="20201115 22:04:39.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:39.416" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:04:39.413" endtime="20201115 22:04:39.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:39.421" level="INFO">VALUE: [6.417000000001616e-06, 6.388999999995537e-06, 6.431000000001186e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.444000000001282e-06, 6.403000000002046e-06, 6.402000000002572e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.34800000000324e-06, 6.402999999995107e-06, 6.402000000002572e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.458000000000852e-06, 6.431000000001186e-06, 6.458000000000852e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.402000000002572e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.388999999995537e-06, 6.388999999995537e-06, 6.417000000001616e-06, 6.402000000002572e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.361000000003336e-06, 6.403000000002046e-06, 6.402999999995107e-06, 6.388999999995537e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.402999999995107e-06, 6.403000000002046e-06, 6.415999999995203e-06, 6.388000000003002e-06, 6.402999999995107e-06, 6.430000000001712e-06, 6.402999999995107e-06, 6.360999999996397e-06, 6.375000000002906e-06, 6.401999999995633e-06, 6.389000000002476e-06, 6.417000000001616e-06, 6.415999999995203e-06]</msg>
<status status="PASS" starttime="20201115 22:04:39.418" endtime="20201115 22:04:39.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.406" endtime="20201115 22:04:39.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:39.430" endtime="20201115 22:04:39.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:39.439" endtime="20201115 22:04:39.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.434" endtime="20201115 22:04:39.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.426" endtime="20201115 22:04:39.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:38.898" endtime="20201115 22:04:39.465"></status>
</kw>
<msg timestamp="20201115 22:04:39.466" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:39.489" endtime="20201115 22:04:39.516"></status>
</kw>
<msg timestamp="20201115 22:04:39.518" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:39.486" endtime="20201115 22:04:39.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:39.524" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:39.520" endtime="20201115 22:04:39.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:39.526" endtime="20201115 22:04:39.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.478" endtime="20201115 22:04:39.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.473" endtime="20201115 22:04:39.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:39.550" endtime="20201115 22:04:39.893"></status>
</kw>
<msg timestamp="20201115 22:04:39.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044044403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044050806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:39.547" endtime="20201115 22:04:39.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:39.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044044403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044050806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:39.903" endtime="20201115 22:04:39.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:39.926" endtime="20201115 22:04:39.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.539" endtime="20201115 22:04:39.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.535" endtime="20201115 22:04:39.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:39.948" level="INFO">${RESULT} = [{'time': 0.044050806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.402999999995107e-06, 'source_diff': 6.402999999995107e-06}, {'time': 0.044314111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:39.938" endtime="20201115 22:04:39.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:39.978" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:39.950" endtime="20201115 22:04:39.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:39.989" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:04:39.987" endtime="20201115 22:04:39.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:39.995" level="INFO">VALUE: [6.402999999995107e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.36200000000281e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.374999999995967e-06, 6.402000000002572e-06, 6.402999999995107e-06, 6.402999999995107e-06, 6.375000000002906e-06, 6.417000000001616e-06, 6.402999999995107e-06, 6.416999999994677e-06, 6.389000000002476e-06, 6.360999999996397e-06, 6.389000000002476e-06, 6.374999999995967e-06, 6.417000000001616e-06, 6.389000000002476e-06, 6.445000000000756e-06, 6.403000000002046e-06, 6.361000000003336e-06, 6.402999999995107e-06, 6.374999999995967e-06, 6.417000000001616e-06, 6.444000000001282e-06, 6.389000000002476e-06, 6.388000000003002e-06, 6.375000000002906e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.402000000002572e-06, 6.416000000002142e-06, 6.429999999994773e-06, 6.388999999995537e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.430000000001712e-06, 6.402000000002572e-06, 6.3190000000046265e-06, 6.388000000003002e-06, 6.402999999995107e-06, 6.416000000002142e-06, 6.402000000002572e-06, 6.333999999996731e-06, 6.403000000002046e-06, 6.444000000001282e-06]</msg>
<status status="PASS" starttime="20201115 22:04:39.992" endtime="20201115 22:04:39.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.980" endtime="20201115 22:04:39.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.005" endtime="20201115 22:04:40.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:40.014" endtime="20201115 22:04:40.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.009" endtime="20201115 22:04:40.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.000" endtime="20201115 22:04:40.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:39.467" endtime="20201115 22:04:40.040"></status>
</kw>
<msg timestamp="20201115 22:04:40.041" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.064" endtime="20201115 22:04:40.090"></status>
</kw>
<msg timestamp="20201115 22:04:40.092" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:40.061" endtime="20201115 22:04:40.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:40.098" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:40.094" endtime="20201115 22:04:40.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.100" endtime="20201115 22:04:40.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.053" endtime="20201115 22:04:40.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.047" endtime="20201115 22:04:40.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.124" endtime="20201115 22:04:40.467"></status>
</kw>
<msg timestamp="20201115 22:04:40.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043720722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043727125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:40.121" endtime="20201115 22:04:40.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:40.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043720722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043727125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:40.477" endtime="20201115 22:04:40.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.496" endtime="20201115 22:04:40.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.113" endtime="20201115 22:04:40.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.109" endtime="20201115 22:04:40.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:40.515" level="INFO">${RESULT} = [{'time': 0.043727125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.043987111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:40.506" endtime="20201115 22:04:40.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:40.545" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:40.517" endtime="20201115 22:04:40.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:40.557" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:04:40.554" endtime="20201115 22:04:40.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:40.562" level="INFO">VALUE: [6.403000000002046e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.375000000002906e-06, 6.34800000000324e-06, 6.403000000002046e-06, 6.374999999995967e-06, 6.3879999999960635e-06, 6.402999999995107e-06, 6.417000000001616e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.3879999999960635e-06, 6.402999999995107e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.459000000000326e-06, 6.402000000002572e-06, 6.443999999994343e-06, 6.403000000002046e-06, 6.416999999994677e-06, 6.388999999995537e-06, 6.389000000002476e-06, 6.402000000002572e-06, 6.402000000002572e-06, 6.403000000002046e-06, 6.402999999995107e-06, 6.389000000002476e-06, 6.417000000001616e-06, 6.375000000002906e-06, 6.401999999995633e-06, 6.402999999995107e-06, 6.402999999995107e-06, 6.417000000001616e-06, 6.403000000002046e-06, 6.402999999995107e-06, 6.416000000002142e-06, 6.374999999995967e-06, 6.388999999995537e-06, 6.416999999994677e-06, 6.417000000001616e-06, 6.402999999995107e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.360999999996397e-06, 6.402999999995107e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.389000000002476e-06]</msg>
<status status="PASS" starttime="20201115 22:04:40.559" endtime="20201115 22:04:40.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.547" endtime="20201115 22:04:40.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.571" endtime="20201115 22:04:40.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:40.580" endtime="20201115 22:04:40.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.575" endtime="20201115 22:04:40.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.567" endtime="20201115 22:04:40.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.042" endtime="20201115 22:04:40.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.776" endtime="20201115 22:04:40.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:37.775" endtime="20201115 22:04:40.606"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:40.612" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.635" endtime="20201115 22:04:40.662"></status>
</kw>
<msg timestamp="20201115 22:04:40.664" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:40.631" endtime="20201115 22:04:40.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:40.670" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:40.666" endtime="20201115 22:04:40.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.672" endtime="20201115 22:04:40.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.624" endtime="20201115 22:04:40.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.618" endtime="20201115 22:04:40.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:40.697" endtime="20201115 22:04:41.042"></status>
</kw>
<msg timestamp="20201115 22:04:41.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048811583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048818278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:40.693" endtime="20201115 22:04:41.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:41.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048811583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048818278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:41.051" endtime="20201115 22:04:41.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.060" endtime="20201115 22:04:41.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.686" endtime="20201115 22:04:41.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.681" endtime="20201115 22:04:41.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:41.068" level="INFO">${RESULT} = [{'time': 0.048818278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.049102847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:41.064" endtime="20201115 22:04:41.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:41.082" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:41.069" endtime="20201115 22:04:41.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:41.087" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:04:41.086" endtime="20201115 22:04:41.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:41.089" level="INFO">VALUE: [6.695000000001006e-06, 6.708000000001102e-06, 6.679999999995023e-06, 6.722000000000672e-06, 6.709000000000576e-06, 6.681000000001436e-06, 6.708000000001102e-06, 6.625000000003156e-06, 6.708000000001102e-06, 6.693999999994593e-06, 6.666999999994927e-06, 6.695000000001006e-06, 6.709000000000576e-06, 6.639000000002726e-06, 6.722000000000672e-06, 6.749999999999812e-06, 6.708000000001102e-06, 6.681000000001436e-06, 6.667000000001866e-06, 6.694000000001532e-06, 6.679999999995023e-06, 6.694000000001532e-06, 6.722000000000672e-06, 6.681000000001436e-06, 6.695000000001006e-06, 6.708000000001102e-06, 6.693999999994593e-06, 6.694000000001532e-06, 6.695000000001006e-06, 6.694000000001532e-06, 6.665999999995453e-06, 6.666000000002392e-06, 6.749999999999812e-06, 6.653000000002296e-06, 6.694000000001532e-06, 6.709000000000576e-06, 6.694000000001532e-06, 6.666999999994927e-06, 6.680000000001962e-06, 6.695000000001006e-06, 6.722000000000672e-06, 6.680999999994497e-06, 6.708000000001102e-06, 6.679999999995023e-06, 6.695000000001006e-06, 6.694000000001532e-06, 6.693999999994593e-06, 6.707999999994163e-06, 6.694000000001532e-06, 6.735999999993303e-06]</msg>
<status status="PASS" starttime="20201115 22:04:41.088" endtime="20201115 22:04:41.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.083" endtime="20201115 22:04:41.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.094" endtime="20201115 22:04:41.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:41.098" endtime="20201115 22:04:41.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.096" endtime="20201115 22:04:41.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.092" endtime="20201115 22:04:41.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.613" endtime="20201115 22:04:41.119"></status>
</kw>
<msg timestamp="20201115 22:04:41.119" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.130" endtime="20201115 22:04:41.156"></status>
</kw>
<msg timestamp="20201115 22:04:41.157" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:41.129" endtime="20201115 22:04:41.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:41.164" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:41.159" endtime="20201115 22:04:41.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.167" endtime="20201115 22:04:41.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.125" endtime="20201115 22:04:41.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.123" endtime="20201115 22:04:41.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.190" endtime="20201115 22:04:41.532"></status>
</kw>
<msg timestamp="20201115 22:04:41.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025662264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025668903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:41.187" endtime="20201115 22:04:41.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:41.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025662264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025668903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:41.541" endtime="20201115 22:04:41.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.560" endtime="20201115 22:04:41.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.180" endtime="20201115 22:04:41.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.175" endtime="20201115 22:04:41.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:41.579" level="INFO">${RESULT} = [{'time': 0.025668903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.638999999999257e-06, 'source_diff': 6.638999999999257e-06}, {'time': 0.025959931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:41.570" endtime="20201115 22:04:41.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:41.610" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:41.581" endtime="20201115 22:04:41.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:41.621" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:04:41.619" endtime="20201115 22:04:41.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:41.626" level="INFO">VALUE: [6.638999999999257e-06, 6.708999999997106e-06, 6.749999999999812e-06, 6.637999999999783e-06, 6.695000000001006e-06, 6.680000000001962e-06, 6.681000000001436e-06, 6.680999999997966e-06, 6.708000000001102e-06, 6.694999999997536e-06, 6.680000000001962e-06, 6.694999999997536e-06, 6.694999999997536e-06, 6.693999999998063e-06, 6.665999999998923e-06, 6.693999999998063e-06, 6.681000000001436e-06, 6.695000000001006e-06, 6.694000000001532e-06, 6.679999999998493e-06, 6.694999999994067e-06, 6.708000000001102e-06, 6.694000000001532e-06, 6.695000000001006e-06, 6.693999999994593e-06, 6.708000000001102e-06, 6.638999999995787e-06, 6.695000000001006e-06, 6.681000000001436e-06, 6.694000000001532e-06, 6.695000000001006e-06, 6.708000000001102e-06, 6.694000000001532e-06, 6.707999999994163e-06, 6.7230000000001455e-06, 6.638999999995787e-06, 6.7779999999989515e-06, 6.694000000001532e-06, 6.694000000001532e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.693999999994593e-06, 6.709000000000576e-06, 6.694000000001532e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.666000000002392e-06, 6.695000000001006e-06, 6.694000000001532e-06, 6.693999999994593e-06]</msg>
<status status="PASS" starttime="20201115 22:04:41.623" endtime="20201115 22:04:41.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.612" endtime="20201115 22:04:41.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.635" endtime="20201115 22:04:41.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:41.644" endtime="20201115 22:04:41.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.639" endtime="20201115 22:04:41.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.631" endtime="20201115 22:04:41.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.120" endtime="20201115 22:04:41.669"></status>
</kw>
<msg timestamp="20201115 22:04:41.670" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.694" endtime="20201115 22:04:41.721"></status>
</kw>
<msg timestamp="20201115 22:04:41.722" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:41.690" endtime="20201115 22:04:41.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:41.729" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:41.724" endtime="20201115 22:04:41.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.731" endtime="20201115 22:04:41.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.683" endtime="20201115 22:04:41.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.677" endtime="20201115 22:04:41.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:41.755" endtime="20201115 22:04:42.098"></status>
</kw>
<msg timestamp="20201115 22:04:42.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044048444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044055139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:41.751" endtime="20201115 22:04:42.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:42.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044048444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044055139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:42.107" endtime="20201115 22:04:42.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:42.126" endtime="20201115 22:04:42.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.744" endtime="20201115 22:04:42.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.739" endtime="20201115 22:04:42.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:42.147" level="INFO">${RESULT} = [{'time': 0.044055139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.044344931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:42.138" endtime="20201115 22:04:42.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:42.178" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:42.149" endtime="20201115 22:04:42.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:42.189" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:04:42.186" endtime="20201115 22:04:42.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:42.194" level="INFO">VALUE: [6.695000000001006e-06, 6.694999999994067e-06, 6.694000000001532e-06, 6.695000000001006e-06, 6.694000000001532e-06, 6.694000000001532e-06, 6.695000000001006e-06, 6.695000000001006e-06, 6.695000000001006e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.694000000001532e-06, 6.708000000001102e-06, 6.653000000002296e-06, 6.694000000001532e-06, 6.736000000000242e-06, 6.709000000000576e-06, 6.681000000001436e-06, 6.625000000003156e-06, 6.639000000002726e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.695000000001006e-06, 6.709000000000576e-06, 6.694000000001532e-06, 6.693999999994593e-06, 6.680999999994497e-06, 6.680000000001962e-06, 6.694000000001532e-06, 6.695000000001006e-06, 6.679999999995023e-06, 6.709000000000576e-06, 6.694000000001532e-06, 6.639000000002726e-06, 6.694000000001532e-06, 6.722000000000672e-06, 6.709000000000576e-06, 6.681000000001436e-06, 6.694999999994067e-06, 6.653000000002296e-06, 6.693999999994593e-06, 6.707999999994163e-06, 6.693999999994593e-06, 6.709000000000576e-06, 6.639000000002726e-06, 6.694000000001532e-06, 6.695000000001006e-06, 6.694000000001532e-06, 6.679999999995023e-06, 6.763999999999382e-06]</msg>
<status status="PASS" starttime="20201115 22:04:42.191" endtime="20201115 22:04:42.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.179" endtime="20201115 22:04:42.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:42.203" endtime="20201115 22:04:42.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:42.212" endtime="20201115 22:04:42.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.207" endtime="20201115 22:04:42.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.198" endtime="20201115 22:04:42.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:41.671" endtime="20201115 22:04:42.238"></status>
</kw>
<msg timestamp="20201115 22:04:42.238" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:42.262" endtime="20201115 22:04:42.290"></status>
</kw>
<msg timestamp="20201115 22:04:42.291" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:42.258" endtime="20201115 22:04:42.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:42.297" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:42.293" endtime="20201115 22:04:42.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:42.300" endtime="20201115 22:04:42.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.251" endtime="20201115 22:04:42.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.245" endtime="20201115 22:04:42.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:42.324" endtime="20201115 22:04:42.667"></status>
</kw>
<msg timestamp="20201115 22:04:42.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044560319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044567014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:42.320" endtime="20201115 22:04:42.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:42.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044560319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044567014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:42.677" endtime="20201115 22:04:42.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:42.695" endtime="20201115 22:04:42.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.313" endtime="20201115 22:04:42.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.308" endtime="20201115 22:04:42.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:42.715" level="INFO">${RESULT} = [{'time': 0.044567014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.044848861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:42.705" endtime="20201115 22:04:42.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:42.745" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:42.717" endtime="20201115 22:04:42.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:42.756" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:04:42.754" endtime="20201115 22:04:42.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:42.762" level="INFO">VALUE: [6.695000000001006e-06, 6.679999999995023e-06, 6.665999999995453e-06, 6.722000000000672e-06, 6.679999999995023e-06, 6.709000000000576e-06, 6.695000000001006e-06, 6.7230000000001455e-06, 6.695000000001006e-06, 6.694000000001532e-06, 6.694000000001532e-06, 6.694000000001532e-06, 6.708000000001102e-06, 6.694999999994067e-06, 6.681000000001436e-06, 6.694000000001532e-06, 6.694000000001532e-06, 6.707999999994163e-06, 6.694000000001532e-06, 6.722000000000672e-06, 6.694000000001532e-06, 6.709000000000576e-06, 6.694999999994067e-06, 6.693999999994593e-06, 6.6519999999958834e-06, 6.707999999994163e-06, 6.695000000001006e-06, 6.722000000000672e-06, 6.694999999994067e-06, 6.694000000001532e-06, 6.695000000001006e-06, 6.708000000001102e-06, 6.695000000001006e-06, 6.624999999996217e-06, 6.681000000001436e-06, 6.694000000001532e-06, 6.695000000001006e-06, 6.693999999994593e-06, 6.749999999999812e-06, 6.708000000001102e-06, 6.694000000001532e-06, 6.735999999993303e-06, 6.694000000001532e-06, 6.763999999999382e-06, 6.708000000001102e-06, 6.709000000000576e-06, 6.695000000001006e-06, 6.695000000001006e-06, 6.695000000001006e-06, 6.695000000001006e-06]</msg>
<status status="PASS" starttime="20201115 22:04:42.759" endtime="20201115 22:04:42.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.747" endtime="20201115 22:04:42.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:42.772" endtime="20201115 22:04:42.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:42.780" endtime="20201115 22:04:42.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.776" endtime="20201115 22:04:42.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.767" endtime="20201115 22:04:42.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.240" endtime="20201115 22:04:42.806"></status>
</kw>
<msg timestamp="20201115 22:04:42.807" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:42.830" endtime="20201115 22:04:42.857"></status>
</kw>
<msg timestamp="20201115 22:04:42.858" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:42.827" endtime="20201115 22:04:42.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:42.864" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:42.860" endtime="20201115 22:04:42.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:42.867" endtime="20201115 22:04:42.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.819" endtime="20201115 22:04:42.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.814" endtime="20201115 22:04:42.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:42.890" endtime="20201115 22:04:43.234"></status>
</kw>
<msg timestamp="20201115 22:04:43.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043629458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043636153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:42.887" endtime="20201115 22:04:43.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:43.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043629458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043636153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:43.243" endtime="20201115 22:04:43.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:43.262" endtime="20201115 22:04:43.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.880" endtime="20201115 22:04:43.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.875" endtime="20201115 22:04:43.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:43.281" level="INFO">${RESULT} = [{'time': 0.043636153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.694999999994067e-06, 'source_diff': 6.694999999994067e-06}, {'time': 0.043925306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:43.272" endtime="20201115 22:04:43.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:43.311" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:43.283" endtime="20201115 22:04:43.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:43.323" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:04:43.320" endtime="20201115 22:04:43.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:43.328" level="INFO">VALUE: [6.694999999994067e-06, 6.709000000000576e-06, 6.695000000001006e-06, 6.695000000001006e-06, 6.694000000001532e-06, 6.708000000001102e-06, 6.763999999999382e-06, 6.694000000001532e-06, 6.681000000001436e-06, 6.695000000001006e-06, 6.695000000001006e-06, 6.763999999999382e-06, 6.667000000001866e-06, 6.680999999994497e-06, 6.7230000000001455e-06, 6.709000000000576e-06, 6.680000000001962e-06, 6.695000000001006e-06, 6.722000000000672e-06, 6.708000000001102e-06, 6.652999999995357e-06, 6.708000000001102e-06, 6.695000000001006e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.680000000001962e-06, 6.709000000000576e-06, 6.681000000001436e-06, 6.681000000001436e-06, 6.694000000001532e-06, 6.694000000001532e-06, 6.681000000001436e-06, 6.667000000001866e-06, 6.653000000002296e-06, 6.708000000001102e-06, 6.695000000001006e-06, 6.694000000001532e-06, 6.695000000001006e-06, 6.708000000001102e-06, 6.693999999994593e-06, 6.695000000001006e-06, 6.694000000001532e-06, 6.681000000001436e-06, 6.695000000001006e-06, 6.722000000000672e-06, 6.695000000001006e-06, 6.695000000001006e-06, 6.695000000001006e-06, 6.681000000001436e-06, 6.695000000001006e-06]</msg>
<status status="PASS" starttime="20201115 22:04:43.325" endtime="20201115 22:04:43.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.313" endtime="20201115 22:04:43.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:43.338" endtime="20201115 22:04:43.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:43.346" endtime="20201115 22:04:43.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.342" endtime="20201115 22:04:43.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.333" endtime="20201115 22:04:43.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:42.808" endtime="20201115 22:04:43.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.609" endtime="20201115 22:04:43.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:40.607" endtime="20201115 22:04:43.373"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:43.378" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:43.401" endtime="20201115 22:04:43.429"></status>
</kw>
<msg timestamp="20201115 22:04:43.431" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:43.398" endtime="20201115 22:04:43.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:43.437" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:43.433" endtime="20201115 22:04:43.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:43.439" endtime="20201115 22:04:43.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.391" endtime="20201115 22:04:43.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.385" endtime="20201115 22:04:43.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:43.463" endtime="20201115 22:04:43.804"></status>
</kw>
<msg timestamp="20201115 22:04:43.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048823375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048830361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:43.460" endtime="20201115 22:04:43.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:43.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048823375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048830361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:43.814" endtime="20201115 22:04:43.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:43.832" endtime="20201115 22:04:43.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.453" endtime="20201115 22:04:43.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.448" endtime="20201115 22:04:43.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:43.850" level="INFO">${RESULT} = [{'time': 0.048830361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.049135722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:43.841" endtime="20201115 22:04:43.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:43.881" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:43.852" endtime="20201115 22:04:43.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:43.892" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:04:43.890" endtime="20201115 22:04:43.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:43.898" level="INFO">VALUE: [6.986000000000492e-06, 6.972000000000922e-06, 6.9869999999999655e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.972000000000922e-06, 7.000000000000062e-06, 6.972000000000922e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.930999999994747e-06, 7.000000000000062e-06, 6.986000000000492e-06, 7.000000000000062e-06, 6.9869999999999655e-06, 7.000000000000062e-06, 6.972000000000922e-06, 6.9869999999999655e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.931000000001686e-06, 7.000000000000062e-06, 6.985999999993553e-06, 6.986000000000492e-06, 7.0279999999992016e-06, 6.972000000000922e-06, 6.959000000000826e-06, 6.931000000001686e-06, 6.986000000000492e-06, 6.972000000000922e-06, 6.986000000000492e-06, 6.971999999993983e-06, 7.000000000000062e-06, 6.9869999999999655e-06, 6.9869999999999655e-06, 6.986000000000492e-06, 6.945000000001256e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.986000000000492e-06, 7.000000000000062e-06, 6.958000000001352e-06, 7.013000000000158e-06, 6.986000000000492e-06, 7.0280000000061404e-06, 6.986000000000492e-06]</msg>
<status status="PASS" starttime="20201115 22:04:43.894" endtime="20201115 22:04:43.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.883" endtime="20201115 22:04:43.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:43.907" endtime="20201115 22:04:43.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:43.916" endtime="20201115 22:04:43.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.911" endtime="20201115 22:04:43.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.903" endtime="20201115 22:04:43.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.379" endtime="20201115 22:04:43.942"></status>
</kw>
<msg timestamp="20201115 22:04:43.942" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:43.965" endtime="20201115 22:04:43.994"></status>
</kw>
<msg timestamp="20201115 22:04:43.995" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:43.962" endtime="20201115 22:04:43.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:44.001" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:43.997" endtime="20201115 22:04:44.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.004" endtime="20201115 22:04:44.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.955" endtime="20201115 22:04:44.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.949" endtime="20201115 22:04:44.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.028" endtime="20201115 22:04:44.372"></status>
</kw>
<msg timestamp="20201115 22:04:44.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043777375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043784417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:44.024" endtime="20201115 22:04:44.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:44.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043777375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043784417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:44.381" endtime="20201115 22:04:44.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.395" endtime="20201115 22:04:44.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.017" endtime="20201115 22:04:44.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.012" endtime="20201115 22:04:44.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:44.405" level="INFO">${RESULT} = [{'time': 0.043784417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.044086194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:44.401" endtime="20201115 22:04:44.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:44.462" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:44.406" endtime="20201115 22:04:44.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:44.468" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:04:44.467" endtime="20201115 22:04:44.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:44.471" level="INFO">VALUE: [7.0419999999987715e-06, 6.986000000000492e-06, 6.985999999993553e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.9869999999999655e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.971999999993983e-06, 6.986000000000492e-06, 6.972000000000922e-06, 6.959000000000826e-06, 6.9869999999999655e-06, 6.972000000000922e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.986000000000492e-06, 7.000000000000062e-06, 7.054999999998868e-06, 6.986000000000492e-06, 6.986000000000492e-06, 7.000000000000062e-06, 6.9730000000003955e-06, 7.000000000000062e-06, 7.0279999999992016e-06, 6.986000000000492e-06, 7.000000000000062e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.971999999993983e-06, 7.026999999999728e-06, 6.972000000000922e-06, 6.986000000000492e-06, 6.985999999993553e-06, 6.986000000000492e-06, 7.040999999999298e-06, 7.000000000000062e-06, 7.000000000000062e-06, 7.000000000000062e-06, 6.972000000000922e-06, 7.013999999999632e-06, 6.9869999999999655e-06, 6.972000000000922e-06, 6.986000000000492e-06, 7.000000000000062e-06, 6.9869999999999655e-06]</msg>
<status status="PASS" starttime="20201115 22:04:44.469" endtime="20201115 22:04:44.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.463" endtime="20201115 22:04:44.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.475" endtime="20201115 22:04:44.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:44.479" endtime="20201115 22:04:44.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.477" endtime="20201115 22:04:44.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.473" endtime="20201115 22:04:44.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.943" endtime="20201115 22:04:44.504"></status>
</kw>
<msg timestamp="20201115 22:04:44.504" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.529" endtime="20201115 22:04:44.556"></status>
</kw>
<msg timestamp="20201115 22:04:44.558" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:44.524" endtime="20201115 22:04:44.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:44.564" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:44.560" endtime="20201115 22:04:44.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.566" endtime="20201115 22:04:44.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.517" endtime="20201115 22:04:44.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.511" endtime="20201115 22:04:44.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.590" endtime="20201115 22:04:44.935"></status>
</kw>
<msg timestamp="20201115 22:04:44.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044702542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044709528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:44.587" endtime="20201115 22:04:44.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:44.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044702542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044709528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:44.944" endtime="20201115 22:04:44.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:44.962" endtime="20201115 22:04:44.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.579" endtime="20201115 22:04:44.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.575" endtime="20201115 22:04:44.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:44.980" level="INFO">${RESULT} = [{'time': 0.044709528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.045012597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:44.971" endtime="20201115 22:04:44.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:45.016" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:44.987" endtime="20201115 22:04:45.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:45.027" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:04:45.025" endtime="20201115 22:04:45.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:45.032" level="INFO">VALUE: [6.986000000000492e-06, 6.986000000000492e-06, 6.972000000000922e-06, 6.9869999999999655e-06, 6.9869999999999655e-06, 6.945000000001256e-06, 6.972000000000922e-06, 7.013999999999632e-06, 6.943999999994843e-06, 7.000000000000062e-06, 6.985999999993553e-06, 6.9869999999999655e-06, 7.0419999999987715e-06, 6.9730000000003955e-06, 7.000000000000062e-06, 6.985999999993553e-06, 6.986000000000492e-06, 6.959000000000826e-06, 6.986000000000492e-06, 6.930999999994747e-06, 6.986000000000492e-06, 6.972000000000922e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.9730000000003955e-06, 6.9730000000003955e-06, 7.000000000000062e-06, 7.000000000000062e-06, 7.000000000000062e-06, 7.000000000000062e-06, 7.000000000000062e-06, 6.9869999999999655e-06, 6.986000000000492e-06, 7.000000000000062e-06, 6.902999999995607e-06, 6.986000000000492e-06, 6.959000000000826e-06, 6.986000000000492e-06, 6.972000000000922e-06, 6.986000000000492e-06, 6.986000000000492e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.985999999993553e-06]</msg>
<status status="PASS" starttime="20201115 22:04:45.029" endtime="20201115 22:04:45.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.018" endtime="20201115 22:04:45.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.041" endtime="20201115 22:04:45.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:45.050" endtime="20201115 22:04:45.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.045" endtime="20201115 22:04:45.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.037" endtime="20201115 22:04:45.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:44.505" endtime="20201115 22:04:45.075"></status>
</kw>
<msg timestamp="20201115 22:04:45.076" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.099" endtime="20201115 22:04:45.129"></status>
</kw>
<msg timestamp="20201115 22:04:45.130" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:45.096" endtime="20201115 22:04:45.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:45.137" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:45.133" endtime="20201115 22:04:45.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.139" endtime="20201115 22:04:45.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.088" endtime="20201115 22:04:45.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.083" endtime="20201115 22:04:45.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.163" endtime="20201115 22:04:45.508"></status>
</kw>
<msg timestamp="20201115 22:04:45.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045001639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045008611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:45.160" endtime="20201115 22:04:45.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:45.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045001639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045008611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:45.518" endtime="20201115 22:04:45.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.537" endtime="20201115 22:04:45.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.152" endtime="20201115 22:04:45.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.147" endtime="20201115 22:04:45.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:45.555" level="INFO">${RESULT} = [{'time': 0.045008611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.971999999993983e-06, 'source_diff': 6.971999999993983e-06}, {'time': 0.045310444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:45.546" endtime="20201115 22:04:45.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:45.586" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:45.557" endtime="20201115 22:04:45.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:45.597" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:04:45.594" endtime="20201115 22:04:45.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:45.602" level="INFO">VALUE: [6.971999999993983e-06, 7.000000000000062e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.986000000000492e-06, 7.000000000000062e-06, 7.026999999999728e-06, 6.9869999999999655e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.945000000001256e-06, 6.9730000000003955e-06, 6.972000000000922e-06, 7.000000000000062e-06, 6.985999999993553e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.9730000000003955e-06, 7.000000000000062e-06, 6.9869999999999655e-06, 6.986000000000492e-06, 6.9869999999999655e-06, 7.0280000000061404e-06, 6.9869999999999655e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 6.986000000000492e-06, 6.972000000000922e-06, 6.986000000000492e-06, 7.04200000000571e-06, 7.0279999999992016e-06, 6.958000000001352e-06, 6.972000000000922e-06, 7.0279999999992016e-06, 6.971999999993983e-06, 6.972000000000922e-06, 6.986000000000492e-06, 6.972000000000922e-06, 7.040999999999298e-06, 6.986000000000492e-06, 7.055999999998341e-06, 6.959000000000826e-06, 6.9869999999999655e-06, 6.9869999999999655e-06, 6.959000000000826e-06, 6.9730000000003955e-06]</msg>
<status status="PASS" starttime="20201115 22:04:45.599" endtime="20201115 22:04:45.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.587" endtime="20201115 22:04:45.605"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.611" endtime="20201115 22:04:45.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:45.620" endtime="20201115 22:04:45.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.615" endtime="20201115 22:04:45.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.606" endtime="20201115 22:04:45.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.077" endtime="20201115 22:04:45.645"></status>
</kw>
<msg timestamp="20201115 22:04:45.646" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.669" endtime="20201115 22:04:45.698"></status>
</kw>
<msg timestamp="20201115 22:04:45.699" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:45.666" endtime="20201115 22:04:45.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:45.705" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:45.701" endtime="20201115 22:04:45.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.708" endtime="20201115 22:04:45.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.658" endtime="20201115 22:04:45.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.652" endtime="20201115 22:04:45.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:45.733" endtime="20201115 22:04:46.077"></status>
</kw>
<msg timestamp="20201115 22:04:46.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04324675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043253722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:45.730" endtime="20201115 22:04:46.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:46.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04324675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043253722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:46.087" endtime="20201115 22:04:46.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:46.105" endtime="20201115 22:04:46.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.721" endtime="20201115 22:04:46.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.716" endtime="20201115 22:04:46.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:46.123" level="INFO">${RESULT} = [{'time': 0.043253722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.043555569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:46.114" endtime="20201115 22:04:46.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:46.154" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:46.125" endtime="20201115 22:04:46.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:46.165" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:04:46.162" endtime="20201115 22:04:46.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:46.170" level="INFO">VALUE: [6.972000000000922e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 7.000000000000062e-06, 6.972000000000922e-06, 7.000000000000062e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.972000000000922e-06, 6.985999999993553e-06, 6.986000000000492e-06, 7.013999999999632e-06, 6.986000000000492e-06, 7.013999999999632e-06, 6.986000000000492e-06, 6.986000000000492e-06, 7.013999999999632e-06, 7.000000000000062e-06, 6.9869999999999655e-06, 6.9869999999999655e-06, 7.000000000000062e-06, 6.972000000000922e-06, 6.986000000000492e-06, 6.958000000001352e-06, 6.986000000000492e-06, 6.972000000000922e-06, 6.971999999993983e-06, 7.000000000000062e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.986000000000492e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.986000000000492e-06, 7.000000000000062e-06, 6.972000000000922e-06, 7.000000000000062e-06, 6.986000000000492e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.972000000000922e-06, 6.971999999993983e-06, 6.986000000000492e-06, 7.000000000000062e-06]</msg>
<status status="PASS" starttime="20201115 22:04:46.167" endtime="20201115 22:04:46.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.155" endtime="20201115 22:04:46.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:46.179" endtime="20201115 22:04:46.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:46.188" endtime="20201115 22:04:46.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.183" endtime="20201115 22:04:46.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.174" endtime="20201115 22:04:46.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:45.647" endtime="20201115 22:04:46.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.376" endtime="20201115 22:04:46.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:43.374" endtime="20201115 22:04:46.215"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:46.220" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:46.244" endtime="20201115 22:04:46.274"></status>
</kw>
<msg timestamp="20201115 22:04:46.275" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:46.241" endtime="20201115 22:04:46.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:46.281" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:46.277" endtime="20201115 22:04:46.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:46.283" endtime="20201115 22:04:46.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.233" endtime="20201115 22:04:46.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.227" endtime="20201115 22:04:46.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:46.309" endtime="20201115 22:04:46.653"></status>
</kw>
<msg timestamp="20201115 22:04:46.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050843694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050850972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:46.305" endtime="20201115 22:04:46.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:46.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050843694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050850972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:46.663" endtime="20201115 22:04:46.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:46.682" endtime="20201115 22:04:46.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.297" endtime="20201115 22:04:46.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.292" endtime="20201115 22:04:46.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:46.700" level="INFO">${RESULT} = [{'time': 0.050850972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.05117925, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:04:46.691" endtime="20201115 22:04:46.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:46.733" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:46.702" endtime="20201115 22:04:46.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:46.744" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:04:46.742" endtime="20201115 22:04:46.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:46.749" level="INFO">VALUE: [7.2779999999994516e-06, 7.30600000000553e-06, 7.290999999999548e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.305999999998591e-06, 7.263999999999882e-06, 7.194000000002032e-06, 7.347999999997301e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.3200000000051e-06, 7.276999999999978e-06, 7.305999999998591e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.305999999998591e-06, 7.290999999999548e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.2780000000063905e-06, 7.276999999999978e-06, 7.263999999999882e-06, 7.276999999999978e-06, 7.2779999999994516e-06, 7.333999999997731e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.29200000000596e-06, 7.263999999999882e-06, 7.290999999999548e-06, 7.2779999999994516e-06, 7.347999999990362e-06, 7.278000000013329e-06, 7.3200000000051e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.222000000001172e-06, 7.304999999999118e-06, 7.207999999994663e-06, 7.2779999999994516e-06, 7.236000000007681e-06, 7.263999999992943e-06]</msg>
<status status="PASS" starttime="20201115 22:04:46.746" endtime="20201115 22:04:46.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.735" endtime="20201115 22:04:46.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:46.758" endtime="20201115 22:04:46.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:46.767" endtime="20201115 22:04:46.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.762" endtime="20201115 22:04:46.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.754" endtime="20201115 22:04:46.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.221" endtime="20201115 22:04:46.792"></status>
</kw>
<msg timestamp="20201115 22:04:46.793" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:46.816" endtime="20201115 22:04:46.845"></status>
</kw>
<msg timestamp="20201115 22:04:46.846" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:46.813" endtime="20201115 22:04:46.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:46.854" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:46.849" endtime="20201115 22:04:46.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:46.856" endtime="20201115 22:04:46.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.806" endtime="20201115 22:04:46.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.800" endtime="20201115 22:04:46.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:46.880" endtime="20201115 22:04:47.225"></status>
</kw>
<msg timestamp="20201115 22:04:47.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043316403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043323681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:46.876" endtime="20201115 22:04:47.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:47.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043316403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043323681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:47.235" endtime="20201115 22:04:47.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.254" endtime="20201115 22:04:47.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.869" endtime="20201115 22:04:47.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.864" endtime="20201115 22:04:47.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:47.273" level="INFO">${RESULT} = [{'time': 0.043323681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.043653375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:47.264" endtime="20201115 22:04:47.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:47.304" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:47.275" endtime="20201115 22:04:47.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:47.315" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:04:47.313" endtime="20201115 22:04:47.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:47.320" level="INFO">VALUE: [7.2779999999994516e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.290999999999548e-06, 7.236000000000742e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.276999999999978e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.304999999999118e-06, 7.29200000000596e-06, 7.263999999999882e-06, 7.33400000000467e-06, 7.347000000004766e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.2919999999990215e-06, 7.2779999999994516e-06, 7.222000000001172e-06, 7.2779999999994516e-06, 7.304999999999118e-06, 7.290999999999548e-06, 7.236000000000742e-06, 7.222000000001172e-06, 7.2919999999990215e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.263999999999882e-06]</msg>
<status status="PASS" starttime="20201115 22:04:47.317" endtime="20201115 22:04:47.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.306" endtime="20201115 22:04:47.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.329" endtime="20201115 22:04:47.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:47.338" endtime="20201115 22:04:47.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.333" endtime="20201115 22:04:47.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.325" endtime="20201115 22:04:47.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.794" endtime="20201115 22:04:47.364"></status>
</kw>
<msg timestamp="20201115 22:04:47.364" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.388" endtime="20201115 22:04:47.418"></status>
</kw>
<msg timestamp="20201115 22:04:47.419" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:47.385" endtime="20201115 22:04:47.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:47.425" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:47.421" endtime="20201115 22:04:47.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.428" endtime="20201115 22:04:47.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.377" endtime="20201115 22:04:47.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.371" endtime="20201115 22:04:47.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.451" endtime="20201115 22:04:47.784"></status>
</kw>
<msg timestamp="20201115 22:04:47.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044339125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044346347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:47.448" endtime="20201115 22:04:47.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:47.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044339125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044346347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:47.788" endtime="20201115 22:04:47.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.796" endtime="20201115 22:04:47.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.441" endtime="20201115 22:04:47.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.436" endtime="20201115 22:04:47.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:47.805" level="INFO">${RESULT} = [{'time': 0.044346347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.044670222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:47.801" endtime="20201115 22:04:47.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:47.819" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:47.807" endtime="20201115 22:04:47.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:47.824" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:04:47.823" endtime="20201115 22:04:47.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:47.827" level="INFO">VALUE: [7.222000000001172e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.2919999999990215e-06, 7.276999999999978e-06, 7.250000000000312e-06, 7.276999999999978e-06, 7.263999999999882e-06, 7.305999999998591e-06, 7.263999999999882e-06, 7.3469999999978275e-06, 7.222000000001172e-06, 7.236000000000742e-06, 7.305999999998591e-06, 7.3469999999978275e-06, 7.2780000000063905e-06, 7.276999999999978e-06, 7.263999999999882e-06, 7.304999999999118e-06, 7.2230000000006456e-06, 7.276999999999978e-06, 7.290999999999548e-06, 7.2779999999994516e-06, 7.263000000000408e-06, 7.276999999999978e-06, 7.236000000000742e-06, 7.208000000001602e-06, 7.3200000000051e-06, 7.208000000001602e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.3330000000051965e-06, 7.263999999999882e-06, 7.3200000000051e-06, 7.2779999999994516e-06, 7.304999999999118e-06, 7.304999999999118e-06, 7.276999999999978e-06, 7.2779999999994516e-06, 7.2919999999990215e-06, 7.263999999999882e-06, 7.29200000000596e-06, 7.2230000000006456e-06, 7.2779999999994516e-06, 7.30600000000553e-06, 7.208000000001602e-06]</msg>
<status status="PASS" starttime="20201115 22:04:47.825" endtime="20201115 22:04:47.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.820" endtime="20201115 22:04:47.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.831" endtime="20201115 22:04:47.833"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:47.838" endtime="20201115 22:04:47.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.834" endtime="20201115 22:04:47.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.829" endtime="20201115 22:04:47.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.365" endtime="20201115 22:04:47.864"></status>
</kw>
<msg timestamp="20201115 22:04:47.865" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.888" endtime="20201115 22:04:47.917"></status>
</kw>
<msg timestamp="20201115 22:04:47.919" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:47.885" endtime="20201115 22:04:47.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:47.925" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:47.921" endtime="20201115 22:04:47.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.927" endtime="20201115 22:04:47.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.878" endtime="20201115 22:04:47.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.872" endtime="20201115 22:04:47.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:47.951" endtime="20201115 22:04:48.295"></status>
</kw>
<msg timestamp="20201115 22:04:48.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044127125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044134417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:47.948" endtime="20201115 22:04:48.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:48.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044127125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044134417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:48.305" endtime="20201115 22:04:48.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:48.323" endtime="20201115 22:04:48.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.940" endtime="20201115 22:04:48.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.936" endtime="20201115 22:04:48.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:48.343" level="INFO">${RESULT} = [{'time': 0.044134417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.044458931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:04:48.334" endtime="20201115 22:04:48.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:48.374" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:48.345" endtime="20201115 22:04:48.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:48.385" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:04:48.382" endtime="20201115 22:04:48.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:48.390" level="INFO">VALUE: [7.2919999999990215e-06, 7.305999999998591e-06, 7.304999999999118e-06, 7.263000000000408e-06, 7.304999999999118e-06, 7.2779999999994516e-06, 7.221999999994233e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.29200000000596e-06, 7.263999999999882e-06, 7.193999999995093e-06, 7.276999999999978e-06, 7.236000000000742e-06, 7.333999999997731e-06, 7.290999999999548e-06, 7.236000000000742e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.290999999999548e-06, 7.2640000000068206e-06, 7.208000000001602e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.236000000000742e-06, 7.263000000000408e-06, 7.2779999999994516e-06, 7.305999999998591e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.2919999999990215e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.304999999999118e-06, 7.290999999999548e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.2919999999990215e-06, 7.2919999999990215e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.304999999999118e-06, 7.276999999999978e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.207999999994663e-06]</msg>
<status status="PASS" starttime="20201115 22:04:48.387" endtime="20201115 22:04:48.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.375" endtime="20201115 22:04:48.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:48.400" endtime="20201115 22:04:48.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:48.408" endtime="20201115 22:04:48.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.404" endtime="20201115 22:04:48.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.395" endtime="20201115 22:04:48.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:47.866" endtime="20201115 22:04:48.434"></status>
</kw>
<msg timestamp="20201115 22:04:48.435" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:48.458" endtime="20201115 22:04:48.488"></status>
</kw>
<msg timestamp="20201115 22:04:48.489" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:48.454" endtime="20201115 22:04:48.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:48.495" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:48.491" endtime="20201115 22:04:48.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:48.498" endtime="20201115 22:04:48.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.447" endtime="20201115 22:04:48.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.441" endtime="20201115 22:04:48.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:48.522" endtime="20201115 22:04:48.866"></status>
</kw>
<msg timestamp="20201115 22:04:48.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043444792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043452097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:48.518" endtime="20201115 22:04:48.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:48.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043444792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043452097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:48.875" endtime="20201115 22:04:48.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:48.894" endtime="20201115 22:04:48.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.511" endtime="20201115 22:04:48.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.506" endtime="20201115 22:04:48.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:48.913" level="INFO">${RESULT} = [{'time': 0.043452097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.043778819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:48.904" endtime="20201115 22:04:48.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:48.946" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:48.915" endtime="20201115 22:04:48.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:48.957" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:04:48.955" endtime="20201115 22:04:48.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:48.963" level="INFO">VALUE: [7.304999999999118e-06, 7.276999999999978e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.222000000001172e-06, 7.318999999998688e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.304999999999118e-06, 7.305999999998591e-06, 7.263000000000408e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2919999999990215e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.236000000000742e-06, 7.3469999999978275e-06, 7.276999999999978e-06, 7.304999999999118e-06, 7.263999999999882e-06, 7.276999999999978e-06, 7.250000000000312e-06, 7.29200000000596e-06, 7.207999999994663e-06, 7.2919999999990215e-06, 7.2779999999994516e-06, 7.236000000000742e-06, 7.290999999999548e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.29200000000596e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.347000000004766e-06, 7.276999999999978e-06, 7.2919999999990215e-06, 7.2919999999990215e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.263999999999882e-06]</msg>
<status status="PASS" starttime="20201115 22:04:48.960" endtime="20201115 22:04:48.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.948" endtime="20201115 22:04:48.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:48.973" endtime="20201115 22:04:48.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:48.981" endtime="20201115 22:04:49.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.977" endtime="20201115 22:04:49.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.968" endtime="20201115 22:04:49.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:48.436" endtime="20201115 22:04:49.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.217" endtime="20201115 22:04:49.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:46.216" endtime="20201115 22:04:49.008"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:49.013" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:49.036" endtime="20201115 22:04:49.066"></status>
</kw>
<msg timestamp="20201115 22:04:49.068" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:49.033" endtime="20201115 22:04:49.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:49.074" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:49.070" endtime="20201115 22:04:49.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:49.076" endtime="20201115 22:04:49.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.025" endtime="20201115 22:04:49.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.019" endtime="20201115 22:04:49.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:49.100" endtime="20201115 22:04:49.444"></status>
</kw>
<msg timestamp="20201115 22:04:49.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048875597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048883167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:49.097" endtime="20201115 22:04:49.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:49.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048875597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048883167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:49.453" endtime="20201115 22:04:49.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:49.472" endtime="20201115 22:04:49.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.089" endtime="20201115 22:04:49.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.085" endtime="20201115 22:04:49.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:49.491" level="INFO">${RESULT} = [{'time': 0.048883167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.049227986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:49.482" endtime="20201115 22:04:49.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:49.522" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:49.493" endtime="20201115 22:04:49.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:49.533" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:04:49.531" endtime="20201115 22:04:49.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:49.539" level="INFO">VALUE: [7.569999999998411e-06, 7.582999999998508e-06, 7.582999999998508e-06, 7.583999999997981e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.569000000005877e-06, 7.653000000003296e-06, 7.555999999998841e-06, 7.59800000000449e-06, 7.57000000000535e-06, 7.555999999998841e-06, 7.583999999997981e-06, 7.57000000000535e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.624999999997217e-06, 7.5419999999992715e-06, 7.5969999999980775e-06, 7.568999999998938e-06, 7.639000000003726e-06, 7.582999999998508e-06, 7.583999999997981e-06, 7.5969999999980775e-06, 7.55600000000578e-06, 7.5419999999992715e-06, 7.500000000000562e-06, 7.555999999998841e-06, 7.582999999998508e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.5419999999992715e-06, 7.625000000004156e-06, 7.582999999998508e-06, 7.597000000005016e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.57000000000535e-06, 7.5419999999992715e-06, 7.5830000000054465e-06, 7.5969999999980775e-06, 7.5559999999919025e-06, 7.5690000000128155e-06, 7.55600000000578e-06, 7.5969999999980775e-06, 7.583999999991042e-06, 7.5559999999919025e-06, 7.597999999997551e-06]</msg>
<status status="PASS" starttime="20201115 22:04:49.535" endtime="20201115 22:04:49.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.524" endtime="20201115 22:04:49.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:49.548" endtime="20201115 22:04:49.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:49.557" endtime="20201115 22:04:49.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.552" endtime="20201115 22:04:49.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.544" endtime="20201115 22:04:49.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.014" endtime="20201115 22:04:49.582"></status>
</kw>
<msg timestamp="20201115 22:04:49.583" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:49.606" endtime="20201115 22:04:49.637"></status>
</kw>
<msg timestamp="20201115 22:04:49.638" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:49.603" endtime="20201115 22:04:49.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:49.644" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:49.640" endtime="20201115 22:04:49.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:49.647" endtime="20201115 22:04:49.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.595" endtime="20201115 22:04:49.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.590" endtime="20201115 22:04:49.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:49.671" endtime="20201115 22:04:50.014"></status>
</kw>
<msg timestamp="20201115 22:04:50.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04350475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043512319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:49.667" endtime="20201115 22:04:50.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:50.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04350475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043512319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:50.024" endtime="20201115 22:04:50.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.042" endtime="20201115 22:04:50.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.660" endtime="20201115 22:04:50.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.655" endtime="20201115 22:04:50.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:50.062" level="INFO">${RESULT} = [{'time': 0.043512319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.043855903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:50.052" endtime="20201115 22:04:50.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:50.092" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:50.064" endtime="20201115 22:04:50.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:50.109" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:04:50.106" endtime="20201115 22:04:50.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:50.114" level="INFO">VALUE: [7.568999999998938e-06, 7.555999999998841e-06, 7.5969999999980775e-06, 7.583999999997981e-06, 7.569999999998411e-06, 7.582999999998508e-06, 7.554999999999368e-06, 7.569999999998411e-06, 7.569000000005877e-06, 7.569999999998411e-06, 7.639000000003726e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.569999999998411e-06, 7.527999999999702e-06, 7.582999999998508e-06, 7.527999999999702e-06, 7.57000000000535e-06, 7.554999999999368e-06, 7.569999999998411e-06, 7.569999999998411e-06, 7.500000000000562e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.57000000000535e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.582999999998508e-06, 7.568999999998938e-06, 7.597000000005016e-06, 7.554999999999368e-06, 7.57000000000535e-06, 7.555999999998841e-06, 7.57000000000535e-06, 7.582999999998508e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.540999999999798e-06, 7.555999999998841e-06, 7.500000000000562e-06, 7.583999999997981e-06, 7.527999999999702e-06, 7.555999999998841e-06, 7.569999999998411e-06, 7.569999999998411e-06, 7.554999999999368e-06, 7.568999999998938e-06, 7.540999999999798e-06, 7.568999999998938e-06, 7.57000000000535e-06]</msg>
<status status="PASS" starttime="20201115 22:04:50.111" endtime="20201115 22:04:50.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.099" endtime="20201115 22:04:50.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.123" endtime="20201115 22:04:50.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:50.132" endtime="20201115 22:04:50.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.127" endtime="20201115 22:04:50.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.118" endtime="20201115 22:04:50.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.584" endtime="20201115 22:04:50.157"></status>
</kw>
<msg timestamp="20201115 22:04:50.158" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.181" endtime="20201115 22:04:50.211"></status>
</kw>
<msg timestamp="20201115 22:04:50.212" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:50.178" endtime="20201115 22:04:50.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:50.219" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:50.215" endtime="20201115 22:04:50.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.221" endtime="20201115 22:04:50.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.170" endtime="20201115 22:04:50.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.165" endtime="20201115 22:04:50.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.245" endtime="20201115 22:04:50.588"></status>
</kw>
<msg timestamp="20201115 22:04:50.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043464903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043472458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:50.241" endtime="20201115 22:04:50.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:50.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043464903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043472458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:50.597" endtime="20201115 22:04:50.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.616" endtime="20201115 22:04:50.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.234" endtime="20201115 22:04:50.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.229" endtime="20201115 22:04:50.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:50.636" level="INFO">${RESULT} = [{'time': 0.043472458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.043820847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:50.626" endtime="20201115 22:04:50.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:50.667" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:50.638" endtime="20201115 22:04:50.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:50.678" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:04:50.676" endtime="20201115 22:04:50.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:50.684" level="INFO">VALUE: [7.554999999999368e-06, 7.5830000000054465e-06, 7.624999999997217e-06, 7.569999999998411e-06, 7.5280000000066405e-06, 7.582999999998508e-06, 7.582999999998508e-06, 7.554999999999368e-06, 7.568999999998938e-06, 7.5830000000054465e-06, 7.57000000000535e-06, 7.569999999998411e-06, 7.582999999998508e-06, 7.569999999998411e-06, 7.569999999998411e-06, 7.582999999998508e-06, 7.583999999997981e-06, 7.625000000004156e-06, 7.568999999998938e-06, 7.597999999997551e-06, 7.57000000000535e-06, 7.57000000000535e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.58400000000492e-06, 7.5830000000054465e-06, 7.568999999998938e-06, 7.57000000000535e-06, 7.554999999999368e-06, 7.569999999998411e-06, 7.57000000000535e-06, 7.624999999997217e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.57000000000535e-06, 7.582999999998508e-06, 7.527000000000228e-06, 7.582999999998508e-06, 7.582999999998508e-06, 7.58400000000492e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.569999999998411e-06, 7.569999999998411e-06]</msg>
<status status="PASS" starttime="20201115 22:04:50.680" endtime="20201115 22:04:50.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.669" endtime="20201115 22:04:50.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.693" endtime="20201115 22:04:50.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:50.701" endtime="20201115 22:04:50.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.697" endtime="20201115 22:04:50.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.688" endtime="20201115 22:04:50.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.159" endtime="20201115 22:04:50.727"></status>
</kw>
<msg timestamp="20201115 22:04:50.728" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.751" endtime="20201115 22:04:50.781"></status>
</kw>
<msg timestamp="20201115 22:04:50.782" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:50.748" endtime="20201115 22:04:50.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:50.789" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:50.785" endtime="20201115 22:04:50.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.791" endtime="20201115 22:04:50.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.740" endtime="20201115 22:04:50.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.734" endtime="20201115 22:04:50.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:50.815" endtime="20201115 22:04:51.141"></status>
</kw>
<msg timestamp="20201115 22:04:51.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04383075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043838319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:50.811" endtime="20201115 22:04:51.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:51.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04383075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043838319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:51.146" endtime="20201115 22:04:51.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.154" endtime="20201115 22:04:51.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.804" endtime="20201115 22:04:51.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.799" endtime="20201115 22:04:51.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:51.163" level="INFO">${RESULT} = [{'time': 0.043838319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.044178972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:51.159" endtime="20201115 22:04:51.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:51.184" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:51.164" endtime="20201115 22:04:51.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:51.196" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:04:51.193" endtime="20201115 22:04:51.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:51.201" level="INFO">VALUE: [7.568999999998938e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.569000000005877e-06, 7.5419999999992715e-06, 7.568999999998938e-06, 7.652000000003822e-06, 7.569999999998411e-06, 7.514000000000132e-06, 7.569999999998411e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.555000000006307e-06, 7.569999999998411e-06, 7.5969999999980775e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.582999999998508e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.597999999997551e-06, 7.583999999997981e-06, 7.540999999999798e-06, 7.5969999999980775e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.58400000000492e-06, 7.554999999999368e-06, 7.57000000000535e-06, 7.554999999999368e-06, 7.569999999998411e-06, 7.582999999998508e-06, 7.583999999997981e-06, 7.568999999998938e-06, 7.500000000000562e-06, 7.555999999998841e-06, 7.568999999998938e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.569000000005877e-06, 7.568999999998938e-06, 7.555999999998841e-06, 7.639000000003726e-06, 7.57000000000535e-06, 7.555999999998841e-06, 7.582999999998508e-06, 7.568999999998938e-06]</msg>
<status status="PASS" starttime="20201115 22:04:51.198" endtime="20201115 22:04:51.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.186" endtime="20201115 22:04:51.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.210" endtime="20201115 22:04:51.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:51.219" endtime="20201115 22:04:51.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.214" endtime="20201115 22:04:51.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.206" endtime="20201115 22:04:51.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:50.729" endtime="20201115 22:04:51.244"></status>
</kw>
<msg timestamp="20201115 22:04:51.245" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.268" endtime="20201115 22:04:51.299"></status>
</kw>
<msg timestamp="20201115 22:04:51.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:51.265" endtime="20201115 22:04:51.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:51.306" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:51.302" endtime="20201115 22:04:51.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.308" endtime="20201115 22:04:51.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.257" endtime="20201115 22:04:51.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.252" endtime="20201115 22:04:51.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.333" endtime="20201115 22:04:51.676"></status>
</kw>
<msg timestamp="20201115 22:04:51.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043285472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043293042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:51.329" endtime="20201115 22:04:51.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:51.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043285472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043293042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:51.686" endtime="20201115 22:04:51.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.705" endtime="20201115 22:04:51.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.322" endtime="20201115 22:04:51.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.317" endtime="20201115 22:04:51.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:51.723" level="INFO">${RESULT} = [{'time': 0.043293042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.043642028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:51.714" endtime="20201115 22:04:51.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:51.757" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:51.726" endtime="20201115 22:04:51.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:51.768" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:04:51.766" endtime="20201115 22:04:51.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:51.774" level="INFO">VALUE: [7.569999999998411e-06, 7.555999999998841e-06, 7.569999999998411e-06, 7.555999999998841e-06, 7.58400000000492e-06, 7.569999999998411e-06, 7.582999999998508e-06, 7.569999999998411e-06, 7.527999999999702e-06, 7.582999999998508e-06, 7.569999999998411e-06, 7.582999999998508e-06, 7.569000000005877e-06, 7.514000000000132e-06, 7.582999999998508e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.583999999997981e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.58400000000492e-06, 7.527999999999702e-06, 7.569999999998411e-06, 7.554999999999368e-06, 7.569999999998411e-06, 7.57000000000535e-06, 7.55600000000578e-06, 7.582999999998508e-06, 7.582999999998508e-06, 7.527999999999702e-06, 7.568999999998938e-06, 7.582999999998508e-06, 7.5830000000054465e-06, 7.582999999998508e-06, 7.625000000004156e-06, 7.514000000000132e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.554999999999368e-06, 7.569999999998411e-06, 7.554999999999368e-06, 7.5280000000066405e-06, 7.554999999999368e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.57000000000535e-06, 7.5969999999980775e-06, 7.555999999998841e-06, 7.569000000005877e-06]</msg>
<status status="PASS" starttime="20201115 22:04:51.771" endtime="20201115 22:04:51.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.759" endtime="20201115 22:04:51.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.783" endtime="20201115 22:04:51.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:51.791" endtime="20201115 22:04:51.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.787" endtime="20201115 22:04:51.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.778" endtime="20201115 22:04:51.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.246" endtime="20201115 22:04:51.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.011" endtime="20201115 22:04:51.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:49.009" endtime="20201115 22:04:51.818"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:51.823" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.846" endtime="20201115 22:04:51.878"></status>
</kw>
<msg timestamp="20201115 22:04:51.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:51.843" endtime="20201115 22:04:51.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:51.885" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:51.881" endtime="20201115 22:04:51.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.888" endtime="20201115 22:04:51.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.836" endtime="20201115 22:04:51.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.830" endtime="20201115 22:04:51.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:51.912" endtime="20201115 22:04:52.255"></status>
</kw>
<msg timestamp="20201115 22:04:52.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048967514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048975375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:51.909" endtime="20201115 22:04:52.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:52.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048967514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048975375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:52.265" endtime="20201115 22:04:52.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:52.283" endtime="20201115 22:04:52.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.902" endtime="20201115 22:04:52.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.897" endtime="20201115 22:04:52.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:52.301" level="INFO">${RESULT} = [{'time': 0.048975375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.861000000004836e-06, 'source_diff': 7.861000000004836e-06}, {'time': 0.049349264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:52.292" endtime="20201115 22:04:52.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:52.333" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:52.303" endtime="20201115 22:04:52.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:52.344" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:04:52.342" endtime="20201115 22:04:52.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:52.350" level="INFO">VALUE: [7.861000000004836e-06, 7.874999999997467e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.846999999998328e-06, 7.804999999999618e-06, 7.847999999997801e-06, 7.874999999997467e-06, 7.84800000000474e-06, 7.832999999998758e-06, 7.875000000004406e-06, 7.861000000004836e-06, 7.804999999999618e-06, 7.860999999997897e-06, 7.805999999999091e-06, 7.791999999999522e-06, 7.860999999997897e-06, 7.861000000004836e-06, 7.944000000002782e-06, 7.861000000004836e-06, 7.860999999997897e-06, 7.888999999997037e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.860999999997897e-06, 7.86200000000431e-06, 7.805999999999091e-06, 7.860999999997897e-06, 7.861999999997371e-06, 7.860999999997897e-06, 7.861999999997371e-06, 7.901999999997134e-06, 7.847999999997801e-06, 7.875000000004406e-06, 7.860999999997897e-06, 7.791999999999522e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.929999999989334e-06, 7.860999999997897e-06, 7.874999999990528e-06, 7.875000000004406e-06, 7.860999999997897e-06, 7.818999999992249e-06, 7.874999999990528e-06, 7.861999999997371e-06, 7.847000000005266e-06, 7.832999999998758e-06, 7.860999999997897e-06, 7.861999999997371e-06]</msg>
<status status="PASS" starttime="20201115 22:04:52.347" endtime="20201115 22:04:52.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.335" endtime="20201115 22:04:52.353"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:52.359" endtime="20201115 22:04:52.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:52.367" endtime="20201115 22:04:52.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.363" endtime="20201115 22:04:52.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.354" endtime="20201115 22:04:52.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.824" endtime="20201115 22:04:52.393"></status>
</kw>
<msg timestamp="20201115 22:04:52.393" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:52.418" endtime="20201115 22:04:52.450"></status>
</kw>
<msg timestamp="20201115 22:04:52.451" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:52.414" endtime="20201115 22:04:52.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:52.458" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:52.454" endtime="20201115 22:04:52.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:52.461" endtime="20201115 22:04:52.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.407" endtime="20201115 22:04:52.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.400" endtime="20201115 22:04:52.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:52.485" endtime="20201115 22:04:52.829"></status>
</kw>
<msg timestamp="20201115 22:04:52.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044854014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044861861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:52.481" endtime="20201115 22:04:52.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:52.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044854014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044861861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:52.838" endtime="20201115 22:04:52.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:52.857" endtime="20201115 22:04:52.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.474" endtime="20201115 22:04:52.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.469" endtime="20201115 22:04:52.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:52.875" level="INFO">${RESULT} = [{'time': 0.044861861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.847000000005266e-06, 'source_diff': 7.847000000005266e-06}, {'time': 0.045234708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:52.866" endtime="20201115 22:04:52.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:52.907" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:52.877" endtime="20201115 22:04:52.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:52.918" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:04:52.916" endtime="20201115 22:04:52.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:52.924" level="INFO">VALUE: [7.847000000005266e-06, 7.860999999997897e-06, 7.874999999997467e-06, 7.819999999998661e-06, 7.847000000005266e-06, 7.875000000004406e-06, 7.860999999997897e-06, 7.861000000004836e-06, 7.874999999997467e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.832999999998758e-06, 7.860999999997897e-06, 7.861000000004836e-06, 7.874999999997467e-06, 7.860999999997897e-06, 7.846999999998328e-06, 7.860999999997897e-06, 7.846999999998328e-06, 7.83400000000517e-06, 7.861999999997371e-06, 7.832999999998758e-06, 7.875000000004406e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.875000000004406e-06, 7.875000000004406e-06, 7.860999999997897e-06, 7.902999999996607e-06, 7.846999999998328e-06, 7.860999999997897e-06, 7.846999999998328e-06, 7.860999999997897e-06, 7.874999999997467e-06, 7.846999999998328e-06, 7.847000000005266e-06, 7.846999999998328e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.846999999998328e-06, 7.874999999997467e-06, 7.86200000000431e-06, 7.846999999998328e-06, 7.875000000004406e-06, 7.847000000005266e-06, 7.860999999997897e-06, 7.833999999998231e-06, 7.860999999997897e-06, 7.819999999991722e-06]</msg>
<status status="PASS" starttime="20201115 22:04:52.921" endtime="20201115 22:04:52.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.909" endtime="20201115 22:04:52.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:52.933" endtime="20201115 22:04:52.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:52.941" endtime="20201115 22:04:52.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.937" endtime="20201115 22:04:52.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.928" endtime="20201115 22:04:52.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.395" endtime="20201115 22:04:52.967"></status>
</kw>
<msg timestamp="20201115 22:04:52.968" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:52.992" endtime="20201115 22:04:53.023"></status>
</kw>
<msg timestamp="20201115 22:04:53.024" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:52.987" endtime="20201115 22:04:53.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:53.030" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:53.026" endtime="20201115 22:04:53.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:53.033" endtime="20201115 22:04:53.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.980" endtime="20201115 22:04:53.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.974" endtime="20201115 22:04:53.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:53.056" endtime="20201115 22:04:53.399"></status>
</kw>
<msg timestamp="20201115 22:04:53.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044211708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044219556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:53.053" endtime="20201115 22:04:53.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:53.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044211708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044219556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:53.408" endtime="20201115 22:04:53.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:53.427" endtime="20201115 22:04:53.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.046" endtime="20201115 22:04:53.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.041" endtime="20201115 22:04:53.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:53.445" level="INFO">${RESULT} = [{'time': 0.044219556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.847999999997801e-06, 'source_diff': 7.847999999997801e-06}, {'time': 0.044585306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:53.436" endtime="20201115 22:04:53.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:53.480" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:53.448" endtime="20201115 22:04:53.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:53.491" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:04:53.489" endtime="20201115 22:04:53.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:53.496" level="INFO">VALUE: [7.847999999997801e-06, 7.874999999997467e-06, 7.846999999998328e-06, 7.861000000004836e-06, 7.846999999998328e-06, 7.874999999997467e-06, 7.860999999997897e-06, 7.875000000004406e-06, 7.875000000004406e-06, 7.846999999998328e-06, 7.861000000004836e-06, 7.875000000004406e-06, 7.860999999997897e-06, 7.888999999997037e-06, 7.791999999999522e-06, 7.889000000003976e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.861000000004836e-06, 7.901999999997134e-06, 7.860999999997897e-06, 7.861000000004836e-06, 7.860999999997897e-06, 7.86200000000431e-06, 7.860999999997897e-06, 7.861999999997371e-06, 7.860999999997897e-06, 7.861000000004836e-06, 7.860999999997897e-06, 7.916999999996177e-06, 7.847999999997801e-06, 7.860999999997897e-06, 7.875000000004406e-06, 7.846999999998328e-06, 7.846999999998328e-06, 7.860999999997897e-06, 7.832999999998758e-06, 7.846999999998328e-06, 7.847000000005266e-06, 7.875000000004406e-06, 7.860999999997897e-06, 7.819999999998661e-06, 7.847000000005266e-06, 7.861000000004836e-06, 7.861999999997371e-06, 7.861000000004836e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.860999999997897e-06, 7.846999999998328e-06]</msg>
<status status="PASS" starttime="20201115 22:04:53.493" endtime="20201115 22:04:53.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.482" endtime="20201115 22:04:53.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:53.506" endtime="20201115 22:04:53.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:53.514" endtime="20201115 22:04:53.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.510" endtime="20201115 22:04:53.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.501" endtime="20201115 22:04:53.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:52.969" endtime="20201115 22:04:53.540"></status>
</kw>
<msg timestamp="20201115 22:04:53.541" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:53.564" endtime="20201115 22:04:53.596"></status>
</kw>
<msg timestamp="20201115 22:04:53.597" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:53.561" endtime="20201115 22:04:53.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:53.603" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:53.599" endtime="20201115 22:04:53.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:53.606" endtime="20201115 22:04:53.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.554" endtime="20201115 22:04:53.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.548" endtime="20201115 22:04:53.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:53.629" endtime="20201115 22:04:53.972"></status>
</kw>
<msg timestamp="20201115 22:04:53.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044208444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044216319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:53.626" endtime="20201115 22:04:53.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:53.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044208444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044216319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:53.982" endtime="20201115 22:04:53.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.000" endtime="20201115 22:04:54.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.619" endtime="20201115 22:04:54.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.614" endtime="20201115 22:04:54.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:54.018" level="INFO">${RESULT} = [{'time': 0.044216319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.044579972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:54.009" endtime="20201115 22:04:54.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:54.050" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:54.020" endtime="20201115 22:04:54.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:54.062" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:04:54.059" endtime="20201115 22:04:54.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:54.068" level="INFO">VALUE: [7.874999999997467e-06, 7.875000000004406e-06, 7.847000000005266e-06, 7.847000000005266e-06, 7.861999999997371e-06, 7.874999999997467e-06, 7.860999999997897e-06, 7.847000000005266e-06, 7.874999999997467e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.847000000005266e-06, 7.861999999997371e-06, 7.875000000004406e-06, 7.902999999996607e-06, 7.874999999997467e-06, 7.846999999998328e-06, 7.861999999997371e-06, 7.888999999997037e-06, 7.804999999999618e-06, 7.874999999997467e-06, 7.832999999998758e-06, 7.805999999999091e-06, 7.833999999998231e-06, 7.930999999995747e-06, 7.860999999997897e-06, 7.874999999997467e-06, 7.791999999999522e-06, 7.846999999998328e-06, 7.860999999997897e-06, 7.861000000004836e-06, 7.860999999997897e-06, 7.846999999998328e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.846999999998328e-06, 7.861000000004836e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.861000000004836e-06, 7.847000000005266e-06, 7.84800000000474e-06, 7.860999999997897e-06, 7.846999999998328e-06, 7.818999999999188e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.819999999998661e-06]</msg>
<status status="PASS" starttime="20201115 22:04:54.064" endtime="20201115 22:04:54.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.052" endtime="20201115 22:04:54.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.077" endtime="20201115 22:04:54.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:54.086" endtime="20201115 22:04:54.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.081" endtime="20201115 22:04:54.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.072" endtime="20201115 22:04:54.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:53.542" endtime="20201115 22:04:54.112"></status>
</kw>
<msg timestamp="20201115 22:04:54.112" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.135" endtime="20201115 22:04:54.167"></status>
</kw>
<msg timestamp="20201115 22:04:54.168" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:54.132" endtime="20201115 22:04:54.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:54.174" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:54.170" endtime="20201115 22:04:54.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.177" endtime="20201115 22:04:54.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.125" endtime="20201115 22:04:54.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.119" endtime="20201115 22:04:54.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.201" endtime="20201115 22:04:54.517"></status>
</kw>
<msg timestamp="20201115 22:04:54.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043526806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043534667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:54.197" endtime="20201115 22:04:54.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:54.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043526806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043534667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:54.527" endtime="20201115 22:04:54.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.546" endtime="20201115 22:04:54.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.190" endtime="20201115 22:04:54.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.185" endtime="20201115 22:04:54.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:54.564" level="INFO">${RESULT} = [{'time': 0.043534667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.043896458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:54.554" endtime="20201115 22:04:54.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:54.595" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:54.566" endtime="20201115 22:04:54.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:54.606" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:04:54.604" endtime="20201115 22:04:54.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:54.612" level="INFO">VALUE: [7.860999999997897e-06, 7.860999999997897e-06, 7.875000000004406e-06, 7.860999999997897e-06, 7.861000000004836e-06, 7.804999999999618e-06, 7.860999999997897e-06, 7.875000000004406e-06, 7.861999999997371e-06, 7.846999999998328e-06, 7.819000000006127e-06, 7.860999999997897e-06, 7.945000000002256e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.861000000004836e-06, 7.860999999997897e-06, 7.861000000004836e-06, 7.846999999998328e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.832999999998758e-06, 7.861000000004836e-06, 7.80600000000603e-06, 7.861000000004836e-06, 7.861000000004836e-06, 7.846999999998328e-06, 7.861999999997371e-06, 7.861000000004836e-06, 7.777999999999952e-06, 7.874999999997467e-06, 7.874999999997467e-06, 7.861000000004836e-06, 7.819999999998661e-06, 7.833000000005697e-06, 7.943999999995843e-06, 7.860999999997897e-06, 7.846999999998328e-06, 7.875000000004406e-06, 7.805999999999091e-06, 7.860999999997897e-06, 7.875000000004406e-06, 7.847999999997801e-06, 7.818999999999188e-06, 7.846999999998328e-06, 7.860999999997897e-06, 7.860999999997897e-06, 7.860999999997897e-06]</msg>
<status status="PASS" starttime="20201115 22:04:54.608" endtime="20201115 22:04:54.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.597" endtime="20201115 22:04:54.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.623" endtime="20201115 22:04:54.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:54.631" endtime="20201115 22:04:54.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.627" endtime="20201115 22:04:54.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.618" endtime="20201115 22:04:54.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.113" endtime="20201115 22:04:54.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.821" endtime="20201115 22:04:54.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:51.819" endtime="20201115 22:04:54.658"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:54.663" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.686" endtime="20201115 22:04:54.718"></status>
</kw>
<msg timestamp="20201115 22:04:54.720" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:54.682" endtime="20201115 22:04:54.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:54.726" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:54.722" endtime="20201115 22:04:54.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.729" endtime="20201115 22:04:54.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.675" endtime="20201115 22:04:54.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.669" endtime="20201115 22:04:54.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:54.753" endtime="20201115 22:04:55.096"></status>
</kw>
<msg timestamp="20201115 22:04:55.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048795208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048803347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:54.749" endtime="20201115 22:04:55.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:55.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048795208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048803347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:55.106" endtime="20201115 22:04:55.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.124" endtime="20201115 22:04:55.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.742" endtime="20201115 22:04:55.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.737" endtime="20201115 22:04:55.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:55.142" level="INFO">${RESULT} = [{'time': 0.048803347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.049192931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:55.133" endtime="20201115 22:04:55.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:55.173" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:55.144" endtime="20201115 22:04:55.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:55.184" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:04:55.182" endtime="20201115 22:04:55.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:55.196" level="INFO">VALUE: [8.138999999997287e-06, 8.167000000003366e-06, 8.153000000003796e-06, 8.152999999996857e-06, 8.167000000003366e-06, 8.137999999997814e-06, 8.167000000003366e-06, 8.138999999997287e-06, 8.165999999996953e-06, 8.138999999997287e-06, 8.152999999996857e-06, 8.181000000002936e-06, 8.153000000003796e-06, 8.151999999997384e-06, 8.139000000004226e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.194999999995567e-06, 8.124999999997717e-06, 8.181000000002936e-06, 8.138000000004753e-06, 8.153000000003796e-06, 8.165999999996953e-06, 8.138999999997287e-06, 8.167000000003366e-06, 8.137999999997814e-06, 8.153000000003796e-06, 8.223000000001646e-06, 8.181000000002936e-06, 8.181000000002936e-06, 8.152999999996857e-06, 8.153000000003796e-06, 8.069999999998911e-06, 8.152000000004322e-06, 8.139000000004226e-06, 8.138999999997287e-06, 8.151999999997384e-06, 8.151999999997384e-06, 8.139000000004226e-06, 8.139000000004226e-06, 8.181000000009875e-06, 8.151999999997384e-06, 8.125000000011595e-06, 8.167000000003366e-06, 8.139000000004226e-06, 8.152999999996857e-06, 8.151999999997384e-06, 8.082999999992069e-06, 8.139000000004226e-06, 8.181000000009875e-06]</msg>
<status status="PASS" starttime="20201115 22:04:55.186" endtime="20201115 22:04:55.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.175" endtime="20201115 22:04:55.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.205" endtime="20201115 22:04:55.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:55.214" endtime="20201115 22:04:55.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.209" endtime="20201115 22:04:55.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.200" endtime="20201115 22:04:55.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.664" endtime="20201115 22:04:55.239"></status>
</kw>
<msg timestamp="20201115 22:04:55.240" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.263" endtime="20201115 22:04:55.295"></status>
</kw>
<msg timestamp="20201115 22:04:55.296" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:55.260" endtime="20201115 22:04:55.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:55.303" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:55.299" endtime="20201115 22:04:55.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.305" endtime="20201115 22:04:55.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.252" endtime="20201115 22:04:55.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.247" endtime="20201115 22:04:55.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.329" endtime="20201115 22:04:55.672"></status>
</kw>
<msg timestamp="20201115 22:04:55.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043321194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043329347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:55.325" endtime="20201115 22:04:55.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:55.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043321194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043329347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:55.681" endtime="20201115 22:04:55.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.700" endtime="20201115 22:04:55.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.318" endtime="20201115 22:04:55.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.313" endtime="20201115 22:04:55.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:55.718" level="INFO">${RESULT} = [{'time': 0.043329347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.043716417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:55.708" endtime="20201115 22:04:55.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:55.751" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:55.720" endtime="20201115 22:04:55.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:55.763" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:04:55.761" endtime="20201115 22:04:55.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:55.768" level="INFO">VALUE: [8.152999999996857e-06, 8.153000000003796e-06, 8.138999999997287e-06, 8.167000000003366e-06, 8.139000000004226e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.153000000003796e-06, 8.096999999998578e-06, 8.153000000003796e-06, 8.138999999997287e-06, 8.151999999997384e-06, 8.153000000003796e-06, 8.069999999998911e-06, 8.153000000003796e-06, 8.195000000002506e-06, 8.151999999997384e-06, 8.138999999997287e-06, 8.209000000002076e-06, 8.138999999997287e-06, 8.152999999996857e-06, 8.153000000003796e-06, 8.152999999996857e-06, 8.181000000002936e-06, 8.195000000002506e-06, 8.153000000003796e-06, 8.138999999997287e-06, 8.139000000004226e-06, 8.193999999996093e-06, 8.152999999996857e-06, 8.152000000004322e-06, 8.139000000004226e-06, 8.152999999996857e-06, 8.152000000004322e-06, 8.139000000004226e-06, 8.151999999997384e-06, 8.166999999996427e-06, 8.194999999995567e-06, 8.153000000003796e-06, 8.166999999996427e-06, 8.167000000003366e-06, 8.139000000004226e-06, 8.153000000003796e-06, 8.152999999996857e-06, 8.222999999994707e-06, 8.152999999996857e-06, 8.138999999997287e-06, 8.151999999997384e-06, 8.139000000004226e-06]</msg>
<status status="PASS" starttime="20201115 22:04:55.765" endtime="20201115 22:04:55.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.754" endtime="20201115 22:04:55.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.777" endtime="20201115 22:04:55.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:55.787" endtime="20201115 22:04:55.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.783" endtime="20201115 22:04:55.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.773" endtime="20201115 22:04:55.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.241" endtime="20201115 22:04:55.813"></status>
</kw>
<msg timestamp="20201115 22:04:55.813" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.837" endtime="20201115 22:04:55.869"></status>
</kw>
<msg timestamp="20201115 22:04:55.870" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:55.833" endtime="20201115 22:04:55.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:55.876" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:55.872" endtime="20201115 22:04:55.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.879" endtime="20201115 22:04:55.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.826" endtime="20201115 22:04:55.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.820" endtime="20201115 22:04:55.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:55.902" endtime="20201115 22:04:56.244"></status>
</kw>
<msg timestamp="20201115 22:04:56.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043304514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043312667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:55.899" endtime="20201115 22:04:56.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:56.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043304514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043312667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:56.253" endtime="20201115 22:04:56.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:56.272" endtime="20201115 22:04:56.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.892" endtime="20201115 22:04:56.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.887" endtime="20201115 22:04:56.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:56.289" level="INFO">${RESULT} = [{'time': 0.043312667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.043707667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:56.280" endtime="20201115 22:04:56.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:56.321" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:56.292" endtime="20201115 22:04:56.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:56.332" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:04:56.330" endtime="20201115 22:04:56.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:56.338" level="INFO">VALUE: [8.152999999996857e-06, 8.152999999996857e-06, 8.153000000003796e-06, 8.166000000003892e-06, 8.097999999998051e-06, 8.153000000003796e-06, 8.166999999996427e-06, 8.152999999996857e-06, 8.167000000003366e-06, 8.167000000003366e-06, 8.138999999997287e-06, 8.181000000002936e-06, 8.152000000004322e-06, 8.138999999997287e-06, 8.153000000003796e-06, 8.138999999997287e-06, 8.194000000003032e-06, 8.152999999996857e-06, 8.110999999998147e-06, 8.153000000003796e-06, 8.195000000002506e-06, 8.138999999997287e-06, 8.166999999996427e-06, 8.083000000005947e-06, 8.138999999997287e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.139000000004226e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.166000000003892e-06, 8.152999999996857e-06, 8.153000000003796e-06, 8.138999999997287e-06, 8.138999999997287e-06, 8.09800000000499e-06, 8.138999999997287e-06, 8.208000000002602e-06, 8.152999999996857e-06, 8.111000000005086e-06, 8.207999999995663e-06, 8.166000000003892e-06, 8.151999999997384e-06, 8.165999999996953e-06, 8.153000000003796e-06, 8.152999999996857e-06, 8.208999999995137e-06, 8.153000000003796e-06, 8.139000000004226e-06, 8.153000000003796e-06]</msg>
<status status="PASS" starttime="20201115 22:04:56.335" endtime="20201115 22:04:56.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.323" endtime="20201115 22:04:56.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:56.347" endtime="20201115 22:04:56.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:56.355" endtime="20201115 22:04:56.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.351" endtime="20201115 22:04:56.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.342" endtime="20201115 22:04:56.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:55.815" endtime="20201115 22:04:56.382"></status>
</kw>
<msg timestamp="20201115 22:04:56.383" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:56.406" endtime="20201115 22:04:56.440"></status>
</kw>
<msg timestamp="20201115 22:04:56.441" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:56.403" endtime="20201115 22:04:56.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:56.447" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:56.443" endtime="20201115 22:04:56.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:56.449" endtime="20201115 22:04:56.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.396" endtime="20201115 22:04:56.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.389" endtime="20201115 22:04:56.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:56.473" endtime="20201115 22:04:56.816"></status>
</kw>
<msg timestamp="20201115 22:04:56.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043664889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043673056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:56.470" endtime="20201115 22:04:56.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:56.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043664889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043673056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:56.826" endtime="20201115 22:04:56.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:56.845" endtime="20201115 22:04:56.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.462" endtime="20201115 22:04:56.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.458" endtime="20201115 22:04:56.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:56.863" level="INFO">${RESULT} = [{'time': 0.043673056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.167000000003366e-06, 'source_diff': 8.167000000003366e-06}, {'time': 0.044063861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:56.854" endtime="20201115 22:04:56.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:56.894" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:56.866" endtime="20201115 22:04:56.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:56.906" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:04:56.903" endtime="20201115 22:04:56.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:56.911" level="INFO">VALUE: [8.167000000003366e-06, 8.139000000004226e-06, 8.166000000003892e-06, 8.138999999997287e-06, 8.138999999997287e-06, 8.166000000003892e-06, 8.209000000002076e-06, 8.152000000004322e-06, 8.208000000002602e-06, 8.138000000004753e-06, 8.153000000003796e-06, 8.110999999998147e-06, 8.153000000003796e-06, 8.152999999996857e-06, 8.165999999996953e-06, 8.194000000003032e-06, 8.151999999997384e-06, 8.139000000004226e-06, 8.180000000003462e-06, 8.152000000004322e-06, 8.166999999996427e-06, 8.153000000003796e-06, 8.151999999997384e-06, 8.083000000005947e-06, 8.153000000003796e-06, 8.125000000004656e-06, 8.097000000005516e-06, 8.152000000004322e-06, 8.223000000001646e-06, 8.138999999997287e-06, 8.180999999995997e-06, 8.151999999997384e-06, 8.138999999997287e-06, 8.138999999997287e-06, 8.152999999996857e-06, 8.096999999998578e-06, 8.139000000004226e-06, 8.139000000004226e-06, 8.152999999996857e-06, 8.138999999997287e-06, 8.167000000003366e-06, 8.151999999997384e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.195000000002506e-06, 8.138999999997287e-06, 8.152999999996857e-06]</msg>
<status status="PASS" starttime="20201115 22:04:56.908" endtime="20201115 22:04:56.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.896" endtime="20201115 22:04:56.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:56.920" endtime="20201115 22:04:56.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:56.929" endtime="20201115 22:04:56.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.924" endtime="20201115 22:04:56.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.915" endtime="20201115 22:04:56.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.384" endtime="20201115 22:04:56.954"></status>
</kw>
<msg timestamp="20201115 22:04:56.955" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:56.980" endtime="20201115 22:04:57.012"></status>
</kw>
<msg timestamp="20201115 22:04:57.014" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:56.976" endtime="20201115 22:04:57.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:57.020" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:57.016" endtime="20201115 22:04:57.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:57.022" endtime="20201115 22:04:57.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.969" endtime="20201115 22:04:57.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.962" endtime="20201115 22:04:57.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:57.046" endtime="20201115 22:04:57.390"></status>
</kw>
<msg timestamp="20201115 22:04:57.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045089889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045098042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:57.043" endtime="20201115 22:04:57.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:57.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045089889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045098042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:57.401" endtime="20201115 22:04:57.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:57.419" endtime="20201115 22:04:57.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.035" endtime="20201115 22:04:57.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.031" endtime="20201115 22:04:57.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:57.437" level="INFO">${RESULT} = [{'time': 0.045098042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.045493861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:57.428" endtime="20201115 22:04:57.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:57.468" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:57.439" endtime="20201115 22:04:57.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:57.479" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:04:57.477" endtime="20201115 22:04:57.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:57.485" level="INFO">VALUE: [8.152999999996857e-06, 8.138999999997287e-06, 8.195000000002506e-06, 8.138999999997287e-06, 8.139000000004226e-06, 8.166999999996427e-06, 8.166000000003892e-06, 8.153000000003796e-06, 8.207999999995663e-06, 8.082999999999008e-06, 8.208000000002602e-06, 8.068999999999438e-06, 8.139000000004226e-06, 8.153000000003796e-06, 8.096999999998578e-06, 8.153000000003796e-06, 8.237000000001216e-06, 8.166999999996427e-06, 8.153000000003796e-06, 8.082999999999008e-06, 8.153000000003796e-06, 8.208000000002602e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.152999999996857e-06, 8.139000000004226e-06, 8.166000000003892e-06, 8.195000000002506e-06, 8.139000000004226e-06, 8.194999999995567e-06, 8.110999999998147e-06, 8.179999999996523e-06, 8.152999999996857e-06, 8.152999999996857e-06, 8.125000000004656e-06, 8.152999999996857e-06, 8.096999999998578e-06, 8.151999999997384e-06, 8.152999999996857e-06, 8.195000000002506e-06, 8.166000000003892e-06, 8.153000000003796e-06, 8.139000000004226e-06, 8.153000000003796e-06, 8.208000000002602e-06, 8.153000000010735e-06, 8.08400000000542e-06, 8.152999999996857e-06, 8.111000000005086e-06, 8.152999999996857e-06]</msg>
<status status="PASS" starttime="20201115 22:04:57.482" endtime="20201115 22:04:57.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.470" endtime="20201115 22:04:57.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:57.494" endtime="20201115 22:04:57.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:57.503" endtime="20201115 22:04:57.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.498" endtime="20201115 22:04:57.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.489" endtime="20201115 22:04:57.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:56.956" endtime="20201115 22:04:57.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.660" endtime="20201115 22:04:57.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:54.659" endtime="20201115 22:04:57.529"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:04:57.534" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:57.558" endtime="20201115 22:04:57.594"></status>
</kw>
<msg timestamp="20201115 22:04:57.595" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:57.554" endtime="20201115 22:04:57.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:57.602" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:57.597" endtime="20201115 22:04:57.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:57.604" endtime="20201115 22:04:57.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.547" endtime="20201115 22:04:57.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.541" endtime="20201115 22:04:57.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:57.629" endtime="20201115 22:04:57.978"></status>
</kw>
<msg timestamp="20201115 22:04:57.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051215847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051224292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:57.625" endtime="20201115 22:04:57.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:58.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051215847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051224292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:57.987" endtime="20201115 22:04:58.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.006" endtime="20201115 22:04:58.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.618" endtime="20201115 22:04:58.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.613" endtime="20201115 22:04:58.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:58.024" level="INFO">${RESULT} = [{'time': 0.051224292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.444999999995817e-06, 'source_diff': 8.444999999995817e-06}, {'time': 0.051633764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:58.015" endtime="20201115 22:04:58.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:58.057" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:58.026" endtime="20201115 22:04:58.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:58.068" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:04:58.066" endtime="20201115 22:04:58.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:58.074" level="INFO">VALUE: [8.444999999995817e-06, 8.500000000001562e-06, 8.472000000002422e-06, 8.445000000002756e-06, 8.430000000003712e-06, 8.431000000003186e-06, 8.444000000003282e-06, 8.416999999996677e-06, 8.443999999996343e-06, 8.457999999995913e-06, 8.458000000002852e-06, 8.401999999997634e-06, 8.514000000001132e-06, 8.444999999995817e-06, 8.431000000003186e-06, 8.445000000002756e-06, 8.389000000004476e-06, 8.459000000002326e-06, 8.485999999995053e-06, 8.458000000002852e-06, 8.430000000003712e-06, 8.416000000004142e-06, 8.444000000003282e-06, 8.402999999997107e-06, 8.417000000003616e-06, 8.444999999995817e-06, 8.443999999996343e-06, 8.443999999996343e-06, 8.444999999995817e-06, 8.443999999996343e-06, 8.443999999996343e-06, 8.389000000011415e-06, 8.444999999995817e-06, 8.402999999990168e-06, 8.444999999995817e-06, 8.443999999996343e-06, 8.444999999995817e-06, 8.473000000008835e-06, 8.443999999996343e-06, 8.458000000002852e-06, 8.444999999995817e-06, 8.430000000003712e-06, 8.389000000011415e-06, 8.443999999996343e-06, 8.5000000000085e-06, 8.486000000001992e-06, 8.403000000004046e-06, 8.471999999995483e-06, 8.457999999988974e-06, 8.416999999996677e-06]</msg>
<status status="PASS" starttime="20201115 22:04:58.070" endtime="20201115 22:04:58.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.059" endtime="20201115 22:04:58.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.083" endtime="20201115 22:04:58.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:58.091" endtime="20201115 22:04:58.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.086" endtime="20201115 22:04:58.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.078" endtime="20201115 22:04:58.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.535" endtime="20201115 22:04:58.117"></status>
</kw>
<msg timestamp="20201115 22:04:58.117" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.141" endtime="20201115 22:04:58.175"></status>
</kw>
<msg timestamp="20201115 22:04:58.176" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:58.137" endtime="20201115 22:04:58.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:58.183" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:58.178" endtime="20201115 22:04:58.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.185" endtime="20201115 22:04:58.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.130" endtime="20201115 22:04:58.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.124" endtime="20201115 22:04:58.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.211" endtime="20201115 22:04:58.555"></status>
</kw>
<msg timestamp="20201115 22:04:58.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043829556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043838014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:58.207" endtime="20201115 22:04:58.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:58.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043829556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043838014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:58.564" endtime="20201115 22:04:58.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.583" endtime="20201115 22:04:58.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.199" endtime="20201115 22:04:58.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.194" endtime="20201115 22:04:58.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:58.602" level="INFO">${RESULT} = [{'time': 0.043838014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.458000000002852e-06, 'source_diff': 8.458000000002852e-06}, {'time': 0.044255542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:58.592" endtime="20201115 22:04:58.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:58.633" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:58.604" endtime="20201115 22:04:58.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:58.644" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:04:58.642" endtime="20201115 22:04:58.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:58.650" level="INFO">VALUE: [8.458000000002852e-06, 8.445000000002756e-06, 8.431000000003186e-06, 8.443999999996343e-06, 8.485999999995053e-06, 8.431000000003186e-06, 8.374999999997967e-06, 8.430000000003712e-06, 8.457999999995913e-06, 8.472000000002422e-06, 8.444999999995817e-06, 8.486000000001992e-06, 8.445000000002756e-06, 8.430000000003712e-06, 8.457999999995913e-06, 8.445000000002756e-06, 8.458000000002852e-06, 8.403000000004046e-06, 8.444000000003282e-06, 8.389000000004476e-06, 8.388999999997537e-06, 8.415999999997203e-06, 8.444000000003282e-06, 8.459000000002326e-06, 8.445000000002756e-06, 8.486000000001992e-06, 8.444999999995817e-06, 8.431000000003186e-06, 8.457999999995913e-06, 8.403000000004046e-06, 8.459000000002326e-06, 8.443999999996343e-06, 8.528000000000702e-06, 8.444999999995817e-06, 8.443999999996343e-06, 8.444000000003282e-06, 8.417000000003616e-06, 8.374999999997967e-06, 8.445000000002756e-06, 8.444999999995817e-06, 8.443999999996343e-06, 8.471999999995483e-06, 8.458999999995387e-06, 8.458999999995387e-06, 8.486000000001992e-06, 8.457999999995913e-06, 8.430000000003712e-06, 8.415999999997203e-06, 8.443999999996343e-06, 8.459000000002326e-06]</msg>
<status status="PASS" starttime="20201115 22:04:58.646" endtime="20201115 22:04:58.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.635" endtime="20201115 22:04:58.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.659" endtime="20201115 22:04:58.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:58.667" endtime="20201115 22:04:58.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.663" endtime="20201115 22:04:58.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.654" endtime="20201115 22:04:58.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.118" endtime="20201115 22:04:58.693"></status>
</kw>
<msg timestamp="20201115 22:04:58.693" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.718" endtime="20201115 22:04:58.752"></status>
</kw>
<msg timestamp="20201115 22:04:58.753" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:58.713" endtime="20201115 22:04:58.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:58.759" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:58.755" endtime="20201115 22:04:58.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.762" endtime="20201115 22:04:58.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.706" endtime="20201115 22:04:58.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.700" endtime="20201115 22:04:58.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:58.785" endtime="20201115 22:04:59.132"></status>
</kw>
<msg timestamp="20201115 22:04:59.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044333042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044341472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:58.782" endtime="20201115 22:04:59.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:59.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044333042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044341472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:59.141" endtime="20201115 22:04:59.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.160" endtime="20201115 22:04:59.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.775" endtime="20201115 22:04:59.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.770" endtime="20201115 22:04:59.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:59.178" level="INFO">${RESULT} = [{'time': 0.044341472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.429999999996773e-06, 'source_diff': 8.429999999996773e-06}, {'time': 0.044759431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:04:59.168" endtime="20201115 22:04:59.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:59.208" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:59.180" endtime="20201115 22:04:59.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:59.219" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:04:59.217" endtime="20201115 22:04:59.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:59.225" level="INFO">VALUE: [8.429999999996773e-06, 8.445000000002756e-06, 8.486000000001992e-06, 8.445000000002756e-06, 8.445000000002756e-06, 8.431000000003186e-06, 8.429999999996773e-06, 8.431000000003186e-06, 8.458000000002852e-06, 8.457999999995913e-06, 8.443999999996343e-06, 8.472000000002422e-06, 8.458000000002852e-06, 8.444000000003282e-06, 8.444000000003282e-06, 8.430999999996247e-06, 8.374999999997967e-06, 8.445000000002756e-06, 8.444999999995817e-06, 8.443999999996343e-06, 8.473000000001896e-06, 8.485999999995053e-06, 8.445000000002756e-06, 8.429999999996773e-06, 8.444999999995817e-06, 8.445000000002756e-06, 8.402999999997107e-06, 8.430999999996247e-06, 8.457999999995913e-06, 8.500000000001562e-06, 8.429999999996773e-06, 8.445000000002756e-06, 8.444000000003282e-06, 8.429999999996773e-06, 8.388999999997537e-06, 8.443999999996343e-06, 8.431000000003186e-06, 8.415999999997203e-06, 8.403000000004046e-06, 8.457999999995913e-06, 8.444000000003282e-06, 8.444999999995817e-06, 8.445000000002756e-06, 8.471999999995483e-06, 8.458000000002852e-06, 8.430000000003712e-06, 8.430000000003712e-06, 8.444000000010221e-06, 8.443999999996343e-06, 8.444999999995817e-06]</msg>
<status status="PASS" starttime="20201115 22:04:59.222" endtime="20201115 22:04:59.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.210" endtime="20201115 22:04:59.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.234" endtime="20201115 22:04:59.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:59.242" endtime="20201115 22:04:59.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.238" endtime="20201115 22:04:59.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.229" endtime="20201115 22:04:59.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:58.695" endtime="20201115 22:04:59.268"></status>
</kw>
<msg timestamp="20201115 22:04:59.269" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.293" endtime="20201115 22:04:59.328"></status>
</kw>
<msg timestamp="20201115 22:04:59.329" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:59.290" endtime="20201115 22:04:59.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:59.335" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:59.331" endtime="20201115 22:04:59.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.338" endtime="20201115 22:04:59.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.282" endtime="20201115 22:04:59.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.276" endtime="20201115 22:04:59.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.362" endtime="20201115 22:04:59.707"></status>
</kw>
<msg timestamp="20201115 22:04:59.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04492325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044931681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:59.358" endtime="20201115 22:04:59.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:59.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04492325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044931681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:04:59.717" endtime="20201115 22:04:59.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.736" endtime="20201115 22:04:59.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.351" endtime="20201115 22:04:59.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.346" endtime="20201115 22:04:59.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:04:59.753" level="INFO">${RESULT} = [{'time': 0.044931681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.431000000003186e-06, 'source_diff': 8.431000000003186e-06}, {'time': 0.04534025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:04:59.744" endtime="20201115 22:04:59.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:04:59.784" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:04:59.756" endtime="20201115 22:04:59.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:04:59.795" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:04:59.793" endtime="20201115 22:04:59.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:04:59.801" level="INFO">VALUE: [8.431000000003186e-06, 8.443999999996343e-06, 8.445000000002756e-06, 8.444000000003282e-06, 8.375000000004906e-06, 8.445000000002756e-06, 8.443999999996343e-06, 8.444999999995817e-06, 8.443999999996343e-06, 8.457999999995913e-06, 8.430999999996247e-06, 8.430999999996247e-06, 8.431000000003186e-06, 8.444000000003282e-06, 8.458000000002852e-06, 8.430000000003712e-06, 8.445000000002756e-06, 8.430999999996247e-06, 8.430000000003712e-06, 8.458999999995387e-06, 8.459000000002326e-06, 8.444000000003282e-06, 8.444999999995817e-06, 8.458000000002852e-06, 8.429999999996773e-06, 8.430999999996247e-06, 8.445000000002756e-06, 8.471999999995483e-06, 8.458999999995387e-06, 8.444000000003282e-06, 8.445000000002756e-06, 8.430000000003712e-06, 8.513999999994193e-06, 8.429999999996773e-06, 8.403000000004046e-06, 8.445000000002756e-06, 8.444000000003282e-06, 8.444000000003282e-06, 8.513999999994193e-06, 8.457999999995913e-06, 8.430999999996247e-06, 8.444000000003282e-06, 8.445000000002756e-06, 8.430000000003712e-06, 8.443999999996343e-06, 8.444999999995817e-06, 8.444999999995817e-06, 8.5000000000085e-06, 8.443999999996343e-06, 8.458000000002852e-06]</msg>
<status status="PASS" starttime="20201115 22:04:59.798" endtime="20201115 22:04:59.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.786" endtime="20201115 22:04:59.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.810" endtime="20201115 22:04:59.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:04:59.819" endtime="20201115 22:04:59.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.815" endtime="20201115 22:04:59.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.805" endtime="20201115 22:04:59.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.271" endtime="20201115 22:04:59.845"></status>
</kw>
<msg timestamp="20201115 22:04:59.845" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.869" endtime="20201115 22:04:59.903"></status>
</kw>
<msg timestamp="20201115 22:04:59.904" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:59.865" endtime="20201115 22:04:59.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:04:59.911" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:04:59.907" endtime="20201115 22:04:59.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.913" endtime="20201115 22:04:59.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.858" endtime="20201115 22:04:59.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.852" endtime="20201115 22:04:59.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:04:59.937" endtime="20201115 22:05:00.278"></status>
</kw>
<msg timestamp="20201115 22:05:00.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043482597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043491042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:04:59.933" endtime="20201115 22:05:00.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:05:00.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043482597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043491042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:05:00.288" endtime="20201115 22:05:00.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:00.306" endtime="20201115 22:05:00.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.926" endtime="20201115 22:05:00.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.921" endtime="20201115 22:05:00.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:05:00.325" level="INFO">${RESULT} = [{'time': 0.043491042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.445000000002756e-06, 'source_diff': 8.445000000002756e-06}, {'time': 0.043901708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:05:00.316" endtime="20201115 22:05:00.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:05:00.358" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:05:00.327" endtime="20201115 22:05:00.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:05:00.370" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:05:00.367" endtime="20201115 22:05:00.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:05:00.375" level="INFO">VALUE: [8.445000000002756e-06, 8.443999999996343e-06, 8.459000000002326e-06, 8.443999999996343e-06, 8.458000000002852e-06, 8.417000000003616e-06, 8.473000000001896e-06, 8.431000000003186e-06, 8.444000000003282e-06, 8.445000000002756e-06, 8.500000000001562e-06, 8.443999999996343e-06, 8.429999999996773e-06, 8.458000000002852e-06, 8.487000000001466e-06, 8.443999999996343e-06, 8.444000000003282e-06, 8.389000000004476e-06, 8.416999999996677e-06, 8.459000000002326e-06, 8.389000000004476e-06, 8.445000000002756e-06, 8.429999999996773e-06, 8.445000000002756e-06, 8.459000000002326e-06, 8.444000000003282e-06, 8.445000000002756e-06, 8.417000000003616e-06, 8.486000000001992e-06, 8.500000000001562e-06, 8.486999999994527e-06, 8.443999999996343e-06, 8.443999999996343e-06, 8.417000000003616e-06, 8.443999999996343e-06, 8.443999999996343e-06, 8.457999999995913e-06, 8.444000000003282e-06, 8.457999999995913e-06, 8.500000000001562e-06, 8.430999999996247e-06, 8.459000000002326e-06, 8.458000000002852e-06, 8.417000000003616e-06, 8.416000000004142e-06, 8.500000000001562e-06, 8.444999999995817e-06, 8.431000000003186e-06, 8.514000000001132e-06, 8.457999999988974e-06]</msg>
<status status="PASS" starttime="20201115 22:05:00.372" endtime="20201115 22:05:00.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:00.360" endtime="20201115 22:05:00.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:05:00.389" endtime="20201115 22:05:00.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:00.397" endtime="20201115 22:05:00.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:00.393" endtime="20201115 22:05:00.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:00.384" endtime="20201115 22:05:00.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:59.846" endtime="20201115 22:05:00.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.532" endtime="20201115 22:05:00.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:04:57.530" endtime="20201115 22:05:00.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:50.639" endtime="20201115 22:05:00.424"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:05:00.435" endtime="20201115 22:05:00.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:00.431" endtime="20201115 22:05:00.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:05:00.428" endtime="20201115 22:05:00.459"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:03:50.509" endtime="20201115 22:05:00.460" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:02:31.959" endtime="20201115 22:05:00.475"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:02:28.149" endtime="20201115 22:05:00.523"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
