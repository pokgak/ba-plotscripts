<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 21:59:46.153" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 21:59:46.717" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 21:59:46.725" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 21:59:47.831" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 21:59:46.716" endtime="20201115 21:59:47.832"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 21:59:47.835" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 21:59:47.833" endtime="20201115 21:59:47.835"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.714" endtime="20201115 21:59:47.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:47.838" endtime="20201115 21:59:48.023"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.836" endtime="20201115 21:59:48.023"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.036" endtime="20201115 21:59:48.051"></status>
</kw>
<msg timestamp="20201115 21:59:48.051" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.034" endtime="20201115 21:59:48.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.054" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.052" endtime="20201115 21:59:48.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.057" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:48.055" endtime="20201115 21:59:48.057"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:48.032" endtime="20201115 21:59:48.058"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:48.030" endtime="20201115 21:59:48.058"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.028" endtime="20201115 21:59:48.059"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:48.062" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:48.062" endtime="20201115 21:59:48.063"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.059" endtime="20201115 21:59:48.063"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.028" endtime="20201115 21:59:48.063"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.027" endtime="20201115 21:59:48.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.064" endtime="20201115 21:59:48.066"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.025" endtime="20201115 21:59:48.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.067" endtime="20201115 21:59:48.068"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.024" endtime="20201115 21:59:48.069"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.712" endtime="20201115 21:59:48.069"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:48.075" endtime="20201115 21:59:48.095"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.074" endtime="20201115 21:59:48.095"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.110" endtime="20201115 21:59:48.124"></status>
</kw>
<msg timestamp="20201115 21:59:48.125" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.107" endtime="20201115 21:59:48.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.127" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.126" endtime="20201115 21:59:48.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.130" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:48.128" endtime="20201115 21:59:48.130"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:48.105" endtime="20201115 21:59:48.131"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:48.102" endtime="20201115 21:59:48.132"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.101" endtime="20201115 21:59:48.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:48.136" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:48.135" endtime="20201115 21:59:48.136"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.133" endtime="20201115 21:59:48.136"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.100" endtime="20201115 21:59:48.136"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.099" endtime="20201115 21:59:48.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.137" endtime="20201115 21:59:48.139"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.098" endtime="20201115 21:59:48.139"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.096" endtime="20201115 21:59:48.140"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.073" endtime="20201115 21:59:48.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.147" endtime="20201115 21:59:48.157"></status>
</kw>
<msg timestamp="20201115 21:59:48.157" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.145" endtime="20201115 21:59:48.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.160" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.158" endtime="20201115 21:59:48.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.161" endtime="20201115 21:59:48.162"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.143" endtime="20201115 21:59:48.163"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.141" endtime="20201115 21:59:48.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.168" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 21:59:48.166" endtime="20201115 21:59:48.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.170" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 21:59:48.169" endtime="20201115 21:59:48.170"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.164" endtime="20201115 21:59:48.170"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:48.070" endtime="20201115 21:59:48.171" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 21:59:46.264" endtime="20201115 21:59:48.174"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.226" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 21:59:48.235" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 21:59:49.418" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 21:59:48.225" endtime="20201115 21:59:49.419"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.422" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 21:59:49.420" endtime="20201115 21:59:49.422"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.224" endtime="20201115 21:59:49.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:49.425" endtime="20201115 21:59:49.646"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.423" endtime="20201115 21:59:49.647"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.659" endtime="20201115 21:59:49.672"></status>
</kw>
<msg timestamp="20201115 21:59:49.673" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.657" endtime="20201115 21:59:49.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.675" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.674" endtime="20201115 21:59:49.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.678" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:49.676" endtime="20201115 21:59:49.679"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:49.655" endtime="20201115 21:59:49.679"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:49.653" endtime="20201115 21:59:49.680"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.652" endtime="20201115 21:59:49.680"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:49.684" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:49.683" endtime="20201115 21:59:49.684"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.681" endtime="20201115 21:59:49.684"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.651" endtime="20201115 21:59:49.685"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.650" endtime="20201115 21:59:49.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.686" endtime="20201115 21:59:49.687"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.649" endtime="20201115 21:59:49.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.688" endtime="20201115 21:59:49.690"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.647" endtime="20201115 21:59:49.690"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.222" endtime="20201115 21:59:49.691"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:49.697" endtime="20201115 21:59:49.717"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.695" endtime="20201115 21:59:49.717"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.730" endtime="20201115 21:59:49.744"></status>
</kw>
<msg timestamp="20201115 21:59:49.745" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.729" endtime="20201115 21:59:49.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.748" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.746" endtime="20201115 21:59:49.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.751" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:49.749" endtime="20201115 21:59:49.751"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:49.726" endtime="20201115 21:59:49.752"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:49.724" endtime="20201115 21:59:49.752"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.723" endtime="20201115 21:59:49.752"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:49.756" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:49.755" endtime="20201115 21:59:49.757"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.753" endtime="20201115 21:59:49.757"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.722" endtime="20201115 21:59:49.757"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.721" endtime="20201115 21:59:49.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.758" endtime="20201115 21:59:49.759"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.720" endtime="20201115 21:59:49.760"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.718" endtime="20201115 21:59:49.760"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.693" endtime="20201115 21:59:49.761"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 21:59:49.763" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.779" endtime="20201115 21:59:49.793"></status>
</kw>
<msg timestamp="20201115 21:59:49.794" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.776" endtime="20201115 21:59:49.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.800" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.797" endtime="20201115 21:59:49.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.802" endtime="20201115 21:59:49.805"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.770" endtime="20201115 21:59:49.806"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.767" endtime="20201115 21:59:49.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.820" endtime="20201115 21:59:50.099"></status>
</kw>
<msg timestamp="20201115 21:59:50.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074569861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074571806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:49.817" endtime="20201115 21:59:50.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074569861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074571806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:50.102" endtime="20201115 21:59:50.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.107" endtime="20201115 21:59:50.109"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.812" endtime="20201115 21:59:50.109"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.808" endtime="20201115 21:59:50.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:50.113" level="INFO">${RESULT} = [{'time': 0.074571806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.945000000003194e-06, 'source_diff': 1.945000000003194e-06}, {'time': 0.07457525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 21:59:50.111" endtime="20201115 21:59:50.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:50.122" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:50.114" endtime="20201115 21:59:50.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.126" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:50.125" endtime="20201115 21:59:50.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.128" level="INFO">VALUE: [1.945000000003194e-06, 1.7360000000021802e-06, 1.596999999992077e-06, 1.9029999999975455e-06, 2.041000000008175e-06, 1.8750000000122835e-06, 1.582999999999446e-06, 2.041999999993771e-06, 1.52800000000064e-06, 2.000000000002e-06, 1.8199999999995997e-06, 1.8199999999995997e-06, 1.541999999993271e-06, 1.7360000000021802e-06, 2.05600000000028e-06, 1.5559999999997798e-06, 1.4859999999949913e-06, 1.9029999999975455e-06, 1.6389999999977256e-06, 1.5839999999989196e-06, 1.709000000002514e-06, 1.8610000000057747e-06, 2.042000000007649e-06, 1.7080000000030404e-06, 1.805000000007495e-06]</msg>
<status status="PASS" starttime="20201115 21:59:50.127" endtime="20201115 21:59:50.129"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.123" endtime="20201115 21:59:50.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.131" endtime="20201115 21:59:50.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:50.135" endtime="20201115 21:59:50.154"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.133" endtime="20201115 21:59:50.154"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.130" endtime="20201115 21:59:50.155"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.764" endtime="20201115 21:59:50.155"></status>
</kw>
<msg timestamp="20201115 21:59:50.155" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.163" endtime="20201115 21:59:50.173"></status>
</kw>
<msg timestamp="20201115 21:59:50.173" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.161" endtime="20201115 21:59:50.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.175" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.174" endtime="20201115 21:59:50.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.176" endtime="20201115 21:59:50.178"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.159" endtime="20201115 21:59:50.179"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.157" endtime="20201115 21:59:50.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.185" endtime="20201115 21:59:50.450"></status>
</kw>
<msg timestamp="20201115 21:59:50.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018296014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018297917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:50.184" endtime="20201115 21:59:50.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018296014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018297917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:50.453" endtime="20201115 21:59:50.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.459" endtime="20201115 21:59:50.460"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.181" endtime="20201115 21:59:50.461"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.180" endtime="20201115 21:59:50.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:50.465" level="INFO">${RESULT} = [{'time': 0.018297917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018301389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:50.462" endtime="20201115 21:59:50.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:50.481" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:50.473" endtime="20201115 21:59:50.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.485" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:50.484" endtime="20201115 21:59:50.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.487" level="INFO">VALUE: [1.903000000001015e-06, 1.4720000000023603e-06, 1.5420000000002099e-06, 1.7220000000026103e-06, 1.6659999999973918e-06, 1.5969999999990159e-06, 1.930000000000681e-06, 1.8889999999979756e-06, 1.9169999999971155e-06, 1.5700000000028191e-06, 1.8749999999984057e-06, 1.985999999998961e-06, 2.096999999999516e-06, 1.4859999999984608e-06, 2.04200000000071e-06, 1.653000000000765e-06, 1.8060000000000298e-06, 2.221999999999641e-06, 1.8889999999979756e-06, 2.0270000000016664e-06, 1.6670000000003349e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 2.01400000000157e-06, 2.040999999997767e-06]</msg>
<status status="PASS" starttime="20201115 21:59:50.486" endtime="20201115 21:59:50.488"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.481" endtime="20201115 21:59:50.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.490" endtime="20201115 21:59:50.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:50.494" endtime="20201115 21:59:50.513"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.492" endtime="20201115 21:59:50.513"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.489" endtime="20201115 21:59:50.514"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.156" endtime="20201115 21:59:50.514"></status>
</kw>
<msg timestamp="20201115 21:59:50.514" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.522" endtime="20201115 21:59:50.532"></status>
</kw>
<msg timestamp="20201115 21:59:50.533" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.521" endtime="20201115 21:59:50.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.535" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.534" endtime="20201115 21:59:50.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.536" endtime="20201115 21:59:50.538"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.518" endtime="20201115 21:59:50.538"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.516" endtime="20201115 21:59:50.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.545" endtime="20201115 21:59:50.809"></status>
</kw>
<msg timestamp="20201115 21:59:50.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018405069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018407208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:50.544" endtime="20201115 21:59:50.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018405069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018407208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:50.812" endtime="20201115 21:59:50.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.817" endtime="20201115 21:59:50.819"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.541" endtime="20201115 21:59:50.819"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.539" endtime="20201115 21:59:50.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:50.823" level="INFO">${RESULT} = [{'time': 0.018407208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.139000000001695e-06, 'source_diff': 2.139000000001695e-06}, {'time': 0.018410764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:50.821" endtime="20201115 21:59:50.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:50.832" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:50.824" endtime="20201115 21:59:50.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.836" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:50.835" endtime="20201115 21:59:50.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.839" level="INFO">VALUE: [2.139000000001695e-06, 1.832999999999696e-06, 1.930000000000681e-06, 1.931000000000155e-06, 2.333000000000196e-06, 1.7369999999981844e-06, 1.7499999999982807e-06, 1.944000000000251e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.889000000001445e-06, 2.02800000000114e-06, 2.0130000000020964e-06, 1.8050000000005562e-06, 2.01400000000157e-06, 1.5000000000015001e-06, 1.6529999999972955e-06, 2.055000000000806e-06, 1.7499999999982807e-06, 1.8199999999995997e-06, 1.971999999999391e-06, 1.5969999999990159e-06, 1.52800000000064e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201115 21:59:50.837" endtime="20201115 21:59:50.839"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.833" endtime="20201115 21:59:50.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.842" endtime="20201115 21:59:50.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:50.845" endtime="20201115 21:59:50.864"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.843" endtime="20201115 21:59:50.865"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.840" endtime="20201115 21:59:50.865"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.515" endtime="20201115 21:59:50.866"></status>
</kw>
<msg timestamp="20201115 21:59:50.866" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.873" endtime="20201115 21:59:50.883"></status>
</kw>
<msg timestamp="20201115 21:59:50.884" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.872" endtime="20201115 21:59:50.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.886" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.885" endtime="20201115 21:59:50.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.887" endtime="20201115 21:59:50.889"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.869" endtime="20201115 21:59:50.889"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.868" endtime="20201115 21:59:50.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.896" endtime="20201115 21:59:51.161"></status>
</kw>
<msg timestamp="20201115 21:59:51.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018297764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018299486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:50.895" endtime="20201115 21:59:51.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018297764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018299486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:51.164" endtime="20201115 21:59:51.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.169" endtime="20201115 21:59:51.171"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.892" endtime="20201115 21:59:51.171"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.890" endtime="20201115 21:59:51.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:51.175" level="INFO">${RESULT} = [{'time': 0.018299486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018303125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:51.172" endtime="20201115 21:59:51.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:51.184" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:51.176" endtime="20201115 21:59:51.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.189" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:51.187" endtime="20201115 21:59:51.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.191" level="INFO">VALUE: [1.7219999999991409e-06, 2.02800000000114e-06, 1.944000000000251e-06, 1.7500000000017502e-06, 1.6109999999985858e-06, 1.5420000000002099e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 2.000000000002e-06, 1.9029999999975455e-06, 1.9729999999988646e-06, 2.000000000002e-06, 1.7370000000016539e-06, 1.4859999999984608e-06, 1.6799999999969617e-06, 2.04200000000071e-06, 1.4310000000031242e-06, 1.5979999999984895e-06, 2.04200000000071e-06, 1.5410000000007362e-06, 1.8199999999995997e-06, 1.6389999999977256e-06, 1.9720000000028604e-06, 1.9029999999975455e-06, 1.4860000000019302e-06]</msg>
<status status="PASS" starttime="20201115 21:59:51.190" endtime="20201115 21:59:51.191"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.185" endtime="20201115 21:59:51.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.194" endtime="20201115 21:59:51.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:51.198" endtime="20201115 21:59:51.217"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.196" endtime="20201115 21:59:51.218"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.193" endtime="20201115 21:59:51.218"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.866" endtime="20201115 21:59:51.218"></status>
</kw>
<msg timestamp="20201115 21:59:51.219" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.226" endtime="20201115 21:59:51.236"></status>
</kw>
<msg timestamp="20201115 21:59:51.236" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.225" endtime="20201115 21:59:51.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.239" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.237" endtime="20201115 21:59:51.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.240" endtime="20201115 21:59:51.241"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.222" endtime="20201115 21:59:51.242"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.220" endtime="20201115 21:59:51.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.249" endtime="20201115 21:59:51.514"></status>
</kw>
<msg timestamp="20201115 21:59:51.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018385528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018387167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:51.247" endtime="20201115 21:59:51.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018385528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018387167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:51.516" endtime="20201115 21:59:51.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.522" endtime="20201115 21:59:51.523"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.245" endtime="20201115 21:59:51.524"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.243" endtime="20201115 21:59:51.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:51.528" level="INFO">${RESULT} = [{'time': 0.018387167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.01839075, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 21:59:51.525" endtime="20201115 21:59:51.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:51.537" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:51.529" endtime="20201115 21:59:51.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.541" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:51.540" endtime="20201115 21:59:51.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.544" level="INFO">VALUE: [1.6389999999977256e-06, 1.8610000000023053e-06, 2.082999999999946e-06, 1.5699999999993497e-06, 1.944000000000251e-06, 1.930000000000681e-06, 1.917000000000585e-06, 1.6670000000003349e-06, 1.846999999999266e-06, 1.957999999999821e-06, 1.9299999999972117e-06, 1.6799999999969617e-06, 1.52800000000064e-06, 1.7499999999982807e-06, 1.9449999999997247e-06, 1.944000000000251e-06, 1.639000000001195e-06, 1.971999999999391e-06, 1.653000000000765e-06, 1.52800000000064e-06, 1.5969999999990159e-06, 1.9860000000024303e-06, 1.9860000000024303e-06, 1.52800000000064e-06, 1.8199999999995997e-06]</msg>
<status status="PASS" starttime="20201115 21:59:51.542" endtime="20201115 21:59:51.544"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.538" endtime="20201115 21:59:51.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.547" endtime="20201115 21:59:51.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:51.550" endtime="20201115 21:59:51.570"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.549" endtime="20201115 21:59:51.571"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.545" endtime="20201115 21:59:51.571"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.219" endtime="20201115 21:59:51.571"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.762" endtime="20201115 21:59:51.572"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:51.576" endtime="20201115 21:59:51.595"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.574" endtime="20201115 21:59:51.596"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.573" endtime="20201115 21:59:51.596"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:49.691" endtime="20201115 21:59:51.596" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:51.604" endtime="20201115 21:59:51.623"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.602" endtime="20201115 21:59:51.624"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.637" endtime="20201115 21:59:51.651"></status>
</kw>
<msg timestamp="20201115 21:59:51.652" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.635" endtime="20201115 21:59:51.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.654" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.653" endtime="20201115 21:59:51.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.657" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:51.655" endtime="20201115 21:59:51.658"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:51.633" endtime="20201115 21:59:51.658"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:51.630" endtime="20201115 21:59:51.659"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.629" endtime="20201115 21:59:51.659"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:51.663" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:51.662" endtime="20201115 21:59:51.663"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.660" endtime="20201115 21:59:51.664"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.628" endtime="20201115 21:59:51.664"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.628" endtime="20201115 21:59:51.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.665" endtime="20201115 21:59:51.666"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.626" endtime="20201115 21:59:51.667"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.624" endtime="20201115 21:59:51.667"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.601" endtime="20201115 21:59:51.668"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 21:59:51.670" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.679" endtime="20201115 21:59:51.689"></status>
</kw>
<msg timestamp="20201115 21:59:51.690" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.677" endtime="20201115 21:59:51.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.692" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.691" endtime="20201115 21:59:51.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.693" endtime="20201115 21:59:51.695"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.675" endtime="20201115 21:59:51.695"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.672" endtime="20201115 21:59:51.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.702" endtime="20201115 21:59:51.991"></status>
</kw>
<msg timestamp="20201115 21:59:51.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066040944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066042181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:51.701" endtime="20201115 21:59:51.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066040944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066042181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:51.995" endtime="20201115 21:59:52.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.004" endtime="20201115 21:59:52.005"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.698" endtime="20201115 21:59:52.006"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.696" endtime="20201115 21:59:52.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:52.010" level="INFO">${RESULT} = [{'time': 0.066042181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2370000000011538e-06, 'source_diff': 1.2370000000011538e-06}, {'time': 0.066044403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:52.007" endtime="20201115 21:59:52.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:52.024" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:52.011" endtime="20201115 21:59:52.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.028" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:52.027" endtime="20201115 21:59:52.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.030" level="INFO">VALUE: [1.2370000000011538e-06, 9.309999999956853e-07, 9.300000000100894e-07, 9.300000000100894e-07, 9.170000000030543e-07, 9.030000000104232e-07, 9.030000000104232e-07, 9.450000000021941e-07, 9.030000000104232e-07, 9.170000000030543e-07, 9.170000000030543e-07, 9.160000000035806e-07, 9.030000000104232e-07, 9.170000000030543e-07, 9.299999999962116e-07, 9.160000000035806e-07, 9.299999999962116e-07, 9.170000000030543e-07, 9.299999999962116e-07, 9.029999999965455e-07, 9.160000000035806e-07, 9.300000000100894e-07, 9.450000000021941e-07, 9.300000000100894e-07, 9.160000000035806e-07, 9.160000000035806e-07, 9.170000000030543e-07, 9.019999999970718e-07, 8.609999999908968e-07, 9.160000000035806e-07, 8.469999999982658e-07, 9.160000000035806e-07, 9.169999999891765e-07, 9.299999999962116e-07, 9.029999999965455e-07, 9.030000000104232e-07, 9.030000000104232e-07, 9.169999999891765e-07, 9.029999999965455e-07, 9.160000000035806e-07, 9.170000000030543e-07, 9.169999999891765e-07, 9.170000000030543e-07, 9.170000000030543e-07, 9.579999999953515e-07, 9.029999999965455e-07, 9.160000000035806e-07, 9.170000000030543e-07, 9.170000000030543e-07, 9.160000000035806e-07]</msg>
<status status="PASS" starttime="20201115 21:59:52.029" endtime="20201115 21:59:52.031"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.025" endtime="20201115 21:59:52.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.034" endtime="20201115 21:59:52.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:52.037" endtime="20201115 21:59:52.057"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.036" endtime="20201115 21:59:52.057"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.032" endtime="20201115 21:59:52.058"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.671" endtime="20201115 21:59:52.058"></status>
</kw>
<msg timestamp="20201115 21:59:52.058" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.067" endtime="20201115 21:59:52.078"></status>
</kw>
<msg timestamp="20201115 21:59:52.078" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.065" endtime="20201115 21:59:52.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.081" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.079" endtime="20201115 21:59:52.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.082" endtime="20201115 21:59:52.084"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.062" endtime="20201115 21:59:52.084"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.060" endtime="20201115 21:59:52.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.091" endtime="20201115 21:59:52.371"></status>
</kw>
<msg timestamp="20201115 21:59:52.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020180875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.089" endtime="20201115 21:59:52.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020180875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.376" endtime="20201115 21:59:52.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.384" endtime="20201115 21:59:52.385"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.087" endtime="20201115 21:59:52.386"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.085" endtime="20201115 21:59:52.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:52.390" level="INFO">${RESULT} = [{'time': 0.020182083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.207999999999071e-06, 'source_diff': 1.207999999999071e-06}, {'time': 0.020184806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:52.387" endtime="20201115 21:59:52.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:52.404" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:52.391" endtime="20201115 21:59:52.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.408" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:52.407" endtime="20201115 21:59:52.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.410" level="INFO">VALUE: [1.207999999999071e-06, 9.169999999995848e-07, 9.160000000001112e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.170000000030543e-07, 9.170000000030543e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.589999999982945e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.030000000000149e-07, 9.43999999999251e-07, 8.89000000000445e-07, 9.160000000001112e-07, 9.450000000021941e-07, 9.030000000000149e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.170000000030543e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.159999999966417e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.170000000030543e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.310000000026242e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.160000000001112e-07]</msg>
<status status="PASS" starttime="20201115 21:59:52.409" endtime="20201115 21:59:52.411"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.405" endtime="20201115 21:59:52.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.414" endtime="20201115 21:59:52.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:52.417" endtime="20201115 21:59:52.437"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.416" endtime="20201115 21:59:52.437"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.412" endtime="20201115 21:59:52.438"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.059" endtime="20201115 21:59:52.438"></status>
</kw>
<msg timestamp="20201115 21:59:52.438" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.446" endtime="20201115 21:59:52.458"></status>
</kw>
<msg timestamp="20201115 21:59:52.458" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.445" endtime="20201115 21:59:52.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.461" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.459" endtime="20201115 21:59:52.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.462" endtime="20201115 21:59:52.463"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.442" endtime="20201115 21:59:52.464"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.440" endtime="20201115 21:59:52.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.472" endtime="20201115 21:59:52.753"></status>
</kw>
<msg timestamp="20201115 21:59:52.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020141958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020143194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.470" endtime="20201115 21:59:52.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020141958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020143194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.757" endtime="20201115 21:59:52.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.765" endtime="20201115 21:59:52.767"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.467" endtime="20201115 21:59:52.767"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.465" endtime="20201115 21:59:52.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:52.772" level="INFO">${RESULT} = [{'time': 0.020143194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2359999999982108e-06, 'source_diff': 1.2359999999982108e-06}, {'time': 0.020145556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:52.768" endtime="20201115 21:59:52.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:52.785" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:52.773" endtime="20201115 21:59:52.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.789" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:52.788" endtime="20201115 21:59:52.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.792" level="INFO">VALUE: [1.2359999999982108e-06, 9.169999999995848e-07, 9.57999999998821e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.310000000026242e-07, 9.860000000014302e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.160000000001112e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.020000000005413e-07, 9.160000000001112e-07, 9.310000000026242e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.450000000021941e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.300000000031505e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.57999999998821e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.440000000027204e-07, 9.169999999995848e-07]</msg>
<status status="PASS" starttime="20201115 21:59:52.790" endtime="20201115 21:59:52.793"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.786" endtime="20201115 21:59:52.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.795" endtime="20201115 21:59:52.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:52.799" endtime="20201115 21:59:52.818"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.797" endtime="20201115 21:59:52.819"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.794" endtime="20201115 21:59:52.819"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.439" endtime="20201115 21:59:52.819"></status>
</kw>
<msg timestamp="20201115 21:59:52.820" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.827" endtime="20201115 21:59:52.838"></status>
</kw>
<msg timestamp="20201115 21:59:52.838" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.826" endtime="20201115 21:59:52.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.840" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.839" endtime="20201115 21:59:52.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.842" endtime="20201115 21:59:52.843"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.823" endtime="20201115 21:59:52.844"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.821" endtime="20201115 21:59:52.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.851" endtime="20201115 21:59:53.136"></status>
</kw>
<msg timestamp="20201115 21:59:53.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019414931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019416153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.849" endtime="20201115 21:59:53.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019414931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019416153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.141" endtime="20201115 21:59:53.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.149" endtime="20201115 21:59:53.150"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.846" endtime="20201115 21:59:53.151"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.845" endtime="20201115 21:59:53.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:53.156" level="INFO">${RESULT} = [{'time': 0.019416153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2219999999986408e-06, 'source_diff': 1.2219999999986408e-06}, {'time': 0.019418292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:53.152" endtime="20201115 21:59:53.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:53.170" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:53.157" endtime="20201115 21:59:53.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.174" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:53.173" endtime="20201115 21:59:53.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.176" level="INFO">VALUE: [1.2219999999986408e-06, 9.030000000000149e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.170000000030543e-07, 9.169999999995848e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.479999999977395e-07, 9.169999999995848e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.59000000001764e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.309999999991547e-07, 9.300000000031505e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.170000000030543e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.170000000030543e-07]</msg>
<status status="PASS" starttime="20201115 21:59:53.175" endtime="20201115 21:59:53.177"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.171" endtime="20201115 21:59:53.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.180" endtime="20201115 21:59:53.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.184" endtime="20201115 21:59:53.203"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.182" endtime="20201115 21:59:53.203"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.178" endtime="20201115 21:59:53.204"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.820" endtime="20201115 21:59:53.204"></status>
</kw>
<msg timestamp="20201115 21:59:53.204" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.212" endtime="20201115 21:59:53.224"></status>
</kw>
<msg timestamp="20201115 21:59:53.224" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.211" endtime="20201115 21:59:53.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.226" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.225" endtime="20201115 21:59:53.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.228" endtime="20201115 21:59:53.229"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.208" endtime="20201115 21:59:53.230"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.206" endtime="20201115 21:59:53.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.236" endtime="20201115 21:59:53.520"></status>
</kw>
<msg timestamp="20201115 21:59:53.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019386667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019387917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.235" endtime="20201115 21:59:53.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019386667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019387917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.524" endtime="20201115 21:59:53.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.533" endtime="20201115 21:59:53.534"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.232" endtime="20201115 21:59:53.535"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.231" endtime="20201115 21:59:53.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:53.539" level="INFO">${RESULT} = [{'time': 0.019387917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2500000000012501e-06, 'source_diff': 1.2500000000012501e-06}, {'time': 0.019390125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:53.536" endtime="20201115 21:59:53.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:53.553" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:53.540" endtime="20201115 21:59:53.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.557" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:53.556" endtime="20201115 21:59:53.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.559" level="INFO">VALUE: [1.2500000000012501e-06, 9.030000000000149e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.020000000005413e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.43999999999251e-07, 8.18999999999126e-07, 9.310000000026242e-07, 9.309999999991547e-07, 9.170000000030543e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.299999999996811e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.160000000001112e-07, 8.609999999978357e-07, 9.020000000005413e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.160000000001112e-07, 9.160000000001112e-07, 9.169999999995848e-07]</msg>
<status status="PASS" starttime="20201115 21:59:53.558" endtime="20201115 21:59:53.560"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.553" endtime="20201115 21:59:53.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.563" endtime="20201115 21:59:53.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.566" endtime="20201115 21:59:53.585"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.565" endtime="20201115 21:59:53.586"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.561" endtime="20201115 21:59:53.586"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.205" endtime="20201115 21:59:53.587"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.669" endtime="20201115 21:59:53.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.591" endtime="20201115 21:59:53.611"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.590" endtime="20201115 21:59:53.611"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.588" endtime="20201115 21:59:53.612"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:51.598" endtime="20201115 21:59:53.612" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.619" endtime="20201115 21:59:53.639"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.618" endtime="20201115 21:59:53.639"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.653" endtime="20201115 21:59:53.666"></status>
</kw>
<msg timestamp="20201115 21:59:53.667" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.651" endtime="20201115 21:59:53.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.669" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.668" endtime="20201115 21:59:53.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.672" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:53.670" endtime="20201115 21:59:53.673"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:53.648" endtime="20201115 21:59:53.673"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:53.646" endtime="20201115 21:59:53.674"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.645" endtime="20201115 21:59:53.674"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:53.678" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:53.677" endtime="20201115 21:59:53.678"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.675" endtime="20201115 21:59:53.678"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.644" endtime="20201115 21:59:53.679"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.643" endtime="20201115 21:59:53.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.680" endtime="20201115 21:59:53.681"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.642" endtime="20201115 21:59:53.682"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.640" endtime="20201115 21:59:53.682"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.617" endtime="20201115 21:59:53.682"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.686" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.695" endtime="20201115 21:59:53.707"></status>
</kw>
<msg timestamp="20201115 21:59:53.707" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.693" endtime="20201115 21:59:53.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.710" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.708" endtime="20201115 21:59:53.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.711" endtime="20201115 21:59:53.712"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.690" endtime="20201115 21:59:53.713"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.688" endtime="20201115 21:59:53.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.720" endtime="20201115 21:59:54.006"></status>
</kw>
<msg timestamp="20201115 21:59:54.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067483861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067488125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.718" endtime="20201115 21:59:54.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067483861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067488125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.011" endtime="20201115 21:59:54.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.019" endtime="20201115 21:59:54.021"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.716" endtime="20201115 21:59:54.021"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.714" endtime="20201115 21:59:54.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:54.026" level="INFO">${RESULT} = [{'time': 0.067488125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2639999999899425e-06, 'source_diff': 4.2639999999899425e-06}, {'time': 0.067521917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:54.022" endtime="20201115 21:59:54.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:54.039" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:54.027" endtime="20201115 21:59:54.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.043" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:54.042" endtime="20201115 21:59:54.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.046" level="INFO">VALUE: [4.2639999999899425e-06, 3.541999999995271e-06, 3.319000000001626e-06, 3.652999999992357e-06, 3.4859999999969915e-06, 3.652999999992357e-06, 3.514000000010009e-06, 3.6800000000059008e-06, 3.5000000000035003e-06, 3.652999999992357e-06, 3.5000000000035003e-06, 3.6669999999988656e-06, 3.4860000000108693e-06, 3.6669999999988656e-06, 3.541999999995271e-06, 3.6669999999988656e-06, 3.5269999999892887e-06, 3.6800000000059008e-06, 3.514000000010009e-06, 3.6949999999980054e-06, 3.5139999999961313e-06, 3.6669999999988656e-06, 3.541999999995271e-06, 3.6250000000070948e-06, 3.5139999999961313e-06, 3.5980000000074286e-06, 3.514000000010009e-06, 3.7499999999968114e-06, 3.52800000000264e-06, 3.665999999999392e-06, 3.5129999999966577e-06, 3.6530000000062346e-06, 3.5000000000035003e-06, 3.6670000000127434e-06, 3.514000000010009e-06, 3.6389999999997258e-06, 3.4999999999896225e-06, 3.6389999999997258e-06, 3.5139999999961313e-06, 3.6389999999997258e-06, 3.597000000007955e-06, 3.597999999993551e-06, 3.4999999999896225e-06, 3.6669999999988656e-06, 3.5139999999961313e-06, 3.6389999999997258e-06, 3.4580000000117295e-06, 3.6530000000062346e-06, 3.5129999999966577e-06, 3.6530000000062346e-06]</msg>
<status status="PASS" starttime="20201115 21:59:54.044" endtime="20201115 21:59:54.046"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.040" endtime="20201115 21:59:54.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.049" endtime="20201115 21:59:54.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:54.052" endtime="20201115 21:59:54.071"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.051" endtime="20201115 21:59:54.072"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.047" endtime="20201115 21:59:54.073"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.686" endtime="20201115 21:59:54.073"></status>
</kw>
<msg timestamp="20201115 21:59:54.073" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.082" endtime="20201115 21:59:54.093"></status>
</kw>
<msg timestamp="20201115 21:59:54.094" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.081" endtime="20201115 21:59:54.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.096" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.095" endtime="20201115 21:59:54.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.097" endtime="20201115 21:59:54.099"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.078" endtime="20201115 21:59:54.100"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.076" endtime="20201115 21:59:54.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.106" endtime="20201115 21:59:54.392"></status>
</kw>
<msg timestamp="20201115 21:59:54.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022550972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.105" endtime="20201115 21:59:54.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022550972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.396" endtime="20201115 21:59:54.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.405" endtime="20201115 21:59:54.406"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.102" endtime="20201115 21:59:54.407"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.101" endtime="20201115 21:59:54.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:54.412" level="INFO">${RESULT} = [{'time': 0.022550972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.022584653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:54.408" endtime="20201115 21:59:54.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:54.425" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:54.413" endtime="20201115 21:59:54.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.429" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:54.428" endtime="20201115 21:59:54.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.432" level="INFO">VALUE: [4.264000000000351e-06, 3.5419999999987406e-06, 3.445000000001225e-06, 3.6660000000028614e-06, 3.5139999999996008e-06, 3.6389999999997258e-06, 3.5139999999996008e-06, 3.611000000000586e-06, 3.5279999999991707e-06, 3.6940000000020012e-06, 3.500000000000031e-06, 3.6529999999992957e-06, 3.4719999999974216e-06, 3.653000000002765e-06, 3.5559999999983105e-06, 3.5829999999979767e-06, 3.500000000000031e-06, 3.611000000000586e-06, 3.5139999999996008e-06, 3.6389999999997258e-06, 3.500000000000031e-06, 3.667000000002335e-06, 3.5139999999996008e-06, 3.665999999999392e-06, 3.526999999999697e-06, 3.6529999999992957e-06, 3.5139999999996008e-06, 3.6389999999997258e-06, 3.500000000000031e-06, 3.6529999999992957e-06, 3.5139999999996008e-06, 3.6529999999992957e-06, 3.4579999999978517e-06, 3.6669999999988656e-06, 3.5139999999996008e-06, 3.6529999999992957e-06, 3.500000000000031e-06, 3.653000000002765e-06, 3.500000000000031e-06, 3.665999999999392e-06, 3.486000000000461e-06, 3.6389999999997258e-06, 3.5139999999996008e-06, 3.736000000000711e-06, 3.513000000000127e-06, 3.693999999998532e-06, 3.4440000000017512e-06, 3.653000000002765e-06, 3.540999999999267e-06, 3.6800000000024313e-06]</msg>
<status status="PASS" starttime="20201115 21:59:54.430" endtime="20201115 21:59:54.432"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.426" endtime="20201115 21:59:54.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.435" endtime="20201115 21:59:54.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:54.439" endtime="20201115 21:59:54.458"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.437" endtime="20201115 21:59:54.459"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.434" endtime="20201115 21:59:54.459"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.074" endtime="20201115 21:59:54.459"></status>
</kw>
<msg timestamp="20201115 21:59:54.460" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.468" endtime="20201115 21:59:54.481"></status>
</kw>
<msg timestamp="20201115 21:59:54.481" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.467" endtime="20201115 21:59:54.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.484" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.482" endtime="20201115 21:59:54.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.485" endtime="20201115 21:59:54.487"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.464" endtime="20201115 21:59:54.487"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.462" endtime="20201115 21:59:54.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.494" endtime="20201115 21:59:54.783"></status>
</kw>
<msg timestamp="20201115 21:59:54.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.493" endtime="20201115 21:59:54.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.787" endtime="20201115 21:59:54.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.795" endtime="20201115 21:59:54.797"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.490" endtime="20201115 21:59:54.798"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.489" endtime="20201115 21:59:54.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:54.802" level="INFO">${RESULT} = [{'time': 0.021979097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.022012431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:54.799" endtime="20201115 21:59:54.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:54.815" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:54.803" endtime="20201115 21:59:54.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.820" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:54.819" endtime="20201115 21:59:54.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.822" level="INFO">VALUE: [4.304999999999587e-06, 3.5559999999983105e-06, 3.4439999999982818e-06, 3.6669999999988656e-06, 3.500000000000031e-06, 3.6809999999984355e-06, 3.4859999999969915e-06, 3.6529999999992957e-06, 3.500000000000031e-06, 3.6529999999992957e-06, 3.5279999999991707e-06, 3.6529999999992957e-06, 3.5140000000030702e-06, 3.6389999999997258e-06, 3.5139999999996008e-06, 3.6389999999997258e-06, 3.500000000000031e-06, 3.665999999999392e-06, 3.500000000000031e-06, 3.6529999999992957e-06, 3.500000000000031e-06, 3.651999999999822e-06, 3.5139999999996008e-06, 3.665999999999392e-06, 3.52800000000264e-06, 3.6390000000031952e-06, 3.472000000000891e-06, 3.6529999999992957e-06, 3.5140000000030702e-06, 3.6660000000028614e-06, 3.5139999999996008e-06, 3.6389999999997258e-06, 3.500000000000031e-06, 3.6389999999997258e-06, 3.500000000000031e-06, 3.625000000000156e-06, 3.5279999999991707e-06, 3.6389999999997258e-06, 3.52800000000264e-06, 3.6529999999992957e-06, 3.5139999999996008e-06, 3.667000000002335e-06, 3.500000000000031e-06, 3.638000000000252e-06, 3.500000000000031e-06, 3.6669999999988656e-06, 3.500000000000031e-06, 3.653000000002765e-06, 3.486000000000461e-06, 3.6669999999988656e-06]</msg>
<status status="PASS" starttime="20201115 21:59:54.821" endtime="20201115 21:59:54.823"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.816" endtime="20201115 21:59:54.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.826" endtime="20201115 21:59:54.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:54.829" endtime="20201115 21:59:54.848"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.828" endtime="20201115 21:59:54.849"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.824" endtime="20201115 21:59:54.850"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.460" endtime="20201115 21:59:54.850"></status>
</kw>
<msg timestamp="20201115 21:59:54.850" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.859" endtime="20201115 21:59:54.870"></status>
</kw>
<msg timestamp="20201115 21:59:54.871" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.857" endtime="20201115 21:59:54.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.873" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.872" endtime="20201115 21:59:54.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.874" endtime="20201115 21:59:54.876"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.855" endtime="20201115 21:59:54.876"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.853" endtime="20201115 21:59:54.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.883" endtime="20201115 21:59:55.169"></status>
</kw>
<msg timestamp="20201115 21:59:55.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021842306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.882" endtime="20201115 21:59:55.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021842306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.173" endtime="20201115 21:59:55.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.182" endtime="20201115 21:59:55.183"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.879" endtime="20201115 21:59:55.184"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.877" endtime="20201115 21:59:55.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:55.188" level="INFO">${RESULT} = [{'time': 0.021846569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.263000000000877e-06, 'source_diff': 4.263000000000877e-06}, {'time': 0.021880292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:55.185" endtime="20201115 21:59:55.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:55.202" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:55.189" endtime="20201115 21:59:55.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.206" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:55.205" endtime="20201115 21:59:55.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.209" level="INFO">VALUE: [4.263000000000877e-06, 3.5139999999996008e-06, 3.472000000000891e-06, 3.6529999999992957e-06, 3.500000000000031e-06, 3.6669999999988656e-06, 3.486000000000461e-06, 3.5829999999979767e-06, 3.5139999999996008e-06, 3.6529999999992957e-06, 3.540999999999267e-06, 3.6389999999997258e-06, 3.472000000000891e-06, 3.665999999999392e-06, 3.5139999999996008e-06, 3.653000000002765e-06, 3.5279999999991707e-06, 3.651999999999822e-06, 3.5139999999996008e-06, 3.667000000002335e-06, 3.5139999999996008e-06, 3.722000000001141e-06, 3.4440000000017512e-06, 3.6389999999997258e-06, 3.513000000000127e-06, 3.667000000002335e-06, 3.500000000000031e-06, 3.695000000001475e-06, 3.5279999999991707e-06, 3.665999999999392e-06, 3.5840000000009198e-06, 3.6389999999997258e-06, 3.500000000000031e-06, 3.6529999999992957e-06, 3.5139999999996008e-06, 3.6669999999988656e-06, 3.55600000000178e-06, 3.6389999999997258e-06, 3.5139999999996008e-06, 3.5829999999979767e-06, 3.5139999999996008e-06, 3.6529999999992957e-06, 3.5139999999996008e-06, 3.611000000000586e-06, 3.5139999999996008e-06, 3.611000000000586e-06, 3.540999999999267e-06, 3.6390000000031952e-06, 3.5270000000031665e-06, 3.6109999999971165e-06]</msg>
<status status="PASS" starttime="20201115 21:59:55.207" endtime="20201115 21:59:55.209"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.202" endtime="20201115 21:59:55.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.212" endtime="20201115 21:59:55.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:55.215" endtime="20201115 21:59:55.235"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.214" endtime="20201115 21:59:55.235"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.210" endtime="20201115 21:59:55.236"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.851" endtime="20201115 21:59:55.236"></status>
</kw>
<msg timestamp="20201115 21:59:55.236" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.245" endtime="20201115 21:59:55.256"></status>
</kw>
<msg timestamp="20201115 21:59:55.257" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.244" endtime="20201115 21:59:55.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.259" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.258" endtime="20201115 21:59:55.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.260" endtime="20201115 21:59:55.262"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.241" endtime="20201115 21:59:55.262"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.239" endtime="20201115 21:59:55.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.269" endtime="20201115 21:59:55.554"></status>
</kw>
<msg timestamp="20201115 21:59:55.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021735569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.268" endtime="20201115 21:59:55.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021735569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.558" endtime="20201115 21:59:55.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.567" endtime="20201115 21:59:55.568"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.265" endtime="20201115 21:59:55.569"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.263" endtime="20201115 21:59:55.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:55.573" level="INFO">${RESULT} = [{'time': 0.021739847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.021773278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:55.570" endtime="20201115 21:59:55.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:55.586" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:55.574" endtime="20201115 21:59:55.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.591" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:55.590" endtime="20201115 21:59:55.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.593" level="INFO">VALUE: [4.277999999999921e-06, 3.5419999999987406e-06, 3.333000000001196e-06, 3.667000000002335e-06, 3.500000000000031e-06, 3.6669999999988656e-06, 3.5279999999991707e-06, 3.653000000002765e-06, 3.5139999999996008e-06, 3.625000000000156e-06, 3.5139999999996008e-06, 3.6669999999988656e-06, 3.52800000000264e-06, 3.6389999999997258e-06, 3.486000000000461e-06, 3.665999999999392e-06, 3.554999999998837e-06, 3.695000000001475e-06, 3.5559999999983105e-06, 3.6390000000031952e-06, 3.486000000000461e-06, 3.667000000002335e-06, 3.4440000000017512e-06, 3.695000000001475e-06, 3.486000000000461e-06, 3.653000000002765e-06, 3.500000000000031e-06, 3.665999999999392e-06, 3.5139999999996008e-06, 3.6109999999971165e-06, 3.5559999999983105e-06, 3.6669999999988656e-06, 3.486000000000461e-06, 3.6389999999997258e-06, 3.472000000000891e-06, 3.708000000001571e-06, 3.526999999999697e-06, 3.667000000002335e-06, 3.5279999999991707e-06, 3.625000000000156e-06, 3.4589999999973253e-06, 3.695000000001475e-06, 3.5139999999996008e-06, 3.667000000002335e-06, 3.5840000000009198e-06, 3.6529999999992957e-06, 3.5139999999996008e-06, 3.6529999999992957e-06, 3.526999999999697e-06, 3.6529999999992957e-06]</msg>
<status status="PASS" starttime="20201115 21:59:55.592" endtime="20201115 21:59:55.598"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.587" endtime="20201115 21:59:55.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.601" endtime="20201115 21:59:55.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:55.604" endtime="20201115 21:59:55.623"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.603" endtime="20201115 21:59:55.624"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.599" endtime="20201115 21:59:55.624"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.237" endtime="20201115 21:59:55.625"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.684" endtime="20201115 21:59:55.625"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.684" endtime="20201115 21:59:55.625"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.627" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.636" endtime="20201115 21:59:55.647"></status>
</kw>
<msg timestamp="20201115 21:59:55.648" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.635" endtime="20201115 21:59:55.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.650" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.649" endtime="20201115 21:59:55.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.651" endtime="20201115 21:59:55.653"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.632" endtime="20201115 21:59:55.653"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.630" endtime="20201115 21:59:55.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.660" endtime="20201115 21:59:55.948"></status>
</kw>
<msg timestamp="20201115 21:59:55.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024245319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024247722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.659" endtime="20201115 21:59:55.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024245319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024247722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.952" endtime="20201115 21:59:55.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.960" endtime="20201115 21:59:55.962"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.656" endtime="20201115 21:59:55.962"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.654" endtime="20201115 21:59:55.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:55.967" level="INFO">${RESULT} = [{'time': 0.024247722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.024287778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:55.963" endtime="20201115 21:59:55.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:55.980" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:55.968" endtime="20201115 21:59:55.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.984" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:55.983" endtime="20201115 21:59:55.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.987" level="INFO">VALUE: [2.4029999999980456e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.4860000000029303e-06, 2.458000000000321e-06, 2.4450000000002248e-06, 2.4860000000029303e-06, 2.4999999999990308e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.4999999999990308e-06, 2.485999999999461e-06, 2.5139999999986007e-06, 2.487000000002404e-06, 2.4999999999990308e-06, 2.4729999999993646e-06, 2.583000000000446e-06, 2.4860000000029303e-06, 2.5139999999986007e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.5139999999986007e-06, 2.4720000000033604e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.431000000000655e-06, 2.5279999999981706e-06, 2.4450000000002248e-06, 2.4999999999990308e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.4450000000002248e-06, 2.5000000000025002e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4999999999990308e-06, 2.4589999999997947e-06, 2.485999999999461e-06, 2.485999999999461e-06, 2.4589999999997947e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.5279999999981706e-06, 2.471999999999891e-06]</msg>
<status status="PASS" starttime="20201115 21:59:55.985" endtime="20201115 21:59:55.988"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.981" endtime="20201115 21:59:55.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.990" endtime="20201115 21:59:55.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:55.994" endtime="20201115 21:59:56.013"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.992" endtime="20201115 21:59:56.014"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.989" endtime="20201115 21:59:56.014"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.628" endtime="20201115 21:59:56.015"></status>
</kw>
<msg timestamp="20201115 21:59:56.015" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.024" endtime="20201115 21:59:56.036"></status>
</kw>
<msg timestamp="20201115 21:59:56.036" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.022" endtime="20201115 21:59:56.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.039" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.038" endtime="20201115 21:59:56.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.040" endtime="20201115 21:59:56.042"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.019" endtime="20201115 21:59:56.042"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.017" endtime="20201115 21:59:56.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.049" endtime="20201115 21:59:56.337"></status>
</kw>
<msg timestamp="20201115 21:59:56.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022219014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.047" endtime="20201115 21:59:56.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022219014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.341" endtime="20201115 21:59:56.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.350" endtime="20201115 21:59:56.351"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.045" endtime="20201115 21:59:56.352"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.043" endtime="20201115 21:59:56.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:56.356" level="INFO">${RESULT} = [{'time': 0.022221403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.389000000001945e-06, 'source_diff': 2.389000000001945e-06}, {'time': 0.022261736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:56.353" endtime="20201115 21:59:56.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:56.369" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:56.357" endtime="20201115 21:59:56.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.374" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:56.373" endtime="20201115 21:59:56.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.377" level="INFO">VALUE: [2.389000000001945e-06, 2.51400000000207e-06, 2.485999999999461e-06, 2.4999999999990308e-06, 2.4869999999989345e-06, 2.4869999999989345e-06, 2.485999999999461e-06, 2.458000000000321e-06, 2.485999999999461e-06, 2.4999999999990308e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.5279999999981706e-06, 2.5139999999986007e-06, 2.4450000000002248e-06, 2.4999999999990308e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.473000000002834e-06, 2.4999999999990308e-06, 2.52800000000164e-06, 2.4579999999968516e-06, 2.487000000002404e-06, 2.485999999999461e-06, 2.459000000003264e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4999999999990308e-06, 2.51400000000207e-06, 2.471999999999891e-06, 2.4999999999990308e-06, 2.5000000000025002e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.485999999999461e-06, 2.4999999999990308e-06, 2.4869999999989345e-06, 2.485999999999461e-06, 2.4589999999997947e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.4999999999990308e-06, 2.471999999999891e-06, 2.4729999999993646e-06, 2.51400000000207e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4999999999990308e-06, 2.4999999999990308e-06]</msg>
<status status="PASS" starttime="20201115 21:59:56.375" endtime="20201115 21:59:56.377"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.371" endtime="20201115 21:59:56.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.380" endtime="20201115 21:59:56.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.383" endtime="20201115 21:59:56.402"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.382" endtime="20201115 21:59:56.403"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.378" endtime="20201115 21:59:56.403"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.015" endtime="20201115 21:59:56.404"></status>
</kw>
<msg timestamp="20201115 21:59:56.404" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.413" endtime="20201115 21:59:56.425"></status>
</kw>
<msg timestamp="20201115 21:59:56.426" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.411" endtime="20201115 21:59:56.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.428" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.427" endtime="20201115 21:59:56.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.429" endtime="20201115 21:59:56.431"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.409" endtime="20201115 21:59:56.431"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.406" endtime="20201115 21:59:56.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.438" endtime="20201115 21:59:56.724"></status>
</kw>
<msg timestamp="20201115 21:59:56.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021741653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.436" endtime="20201115 21:59:56.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021741653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.728" endtime="20201115 21:59:56.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.736" endtime="20201115 21:59:56.738"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.434" endtime="20201115 21:59:56.739"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.432" endtime="20201115 21:59:56.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:56.743" level="INFO">${RESULT} = [{'time': 0.021741653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.021781917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:56.740" endtime="20201115 21:59:56.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:56.757" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:56.744" endtime="20201115 21:59:56.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.761" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:56.760" endtime="20201115 21:59:56.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.764" level="INFO">VALUE: [2.360999999999336e-06, 2.4860000000029303e-06, 2.5139999999986007e-06, 2.485999999999461e-06, 2.458000000000321e-06, 2.485999999999461e-06, 2.4729999999993646e-06, 2.485999999999461e-06, 2.4299999999977118e-06, 2.4999999999990308e-06, 2.4860000000029303e-06, 2.5130000000025965e-06, 2.4729999999993646e-06, 2.485999999999461e-06, 2.403000000001515e-06, 2.52800000000164e-06, 2.4729999999993646e-06, 2.4999999999990308e-06, 2.471999999999891e-06, 2.403000000001515e-06, 2.485999999999461e-06, 2.51400000000207e-06, 2.4729999999993646e-06, 2.4999999999990308e-06, 2.458000000000321e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.485999999999461e-06, 2.485999999999461e-06, 2.458000000000321e-06, 2.4300000000011812e-06, 2.4860000000029303e-06, 2.485999999999461e-06, 2.4999999999990308e-06, 2.5139999999986007e-06, 2.4439999999972817e-06, 2.4449999999967553e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.4999999999990308e-06, 2.471999999999891e-06, 2.5279999999981706e-06, 2.471999999999891e-06, 2.4999999999990308e-06, 2.4999999999990308e-06, 2.485999999999461e-06, 2.4860000000029303e-06, 2.4860000000029303e-06, 2.5139999999986007e-06]</msg>
<status status="PASS" starttime="20201115 21:59:56.762" endtime="20201115 21:59:56.764"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.758" endtime="20201115 21:59:56.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.767" endtime="20201115 21:59:56.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.770" endtime="20201115 21:59:56.789"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.769" endtime="20201115 21:59:56.790"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.765" endtime="20201115 21:59:56.790"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.404" endtime="20201115 21:59:56.791"></status>
</kw>
<msg timestamp="20201115 21:59:56.791" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.800" endtime="20201115 21:59:56.812"></status>
</kw>
<msg timestamp="20201115 21:59:56.813" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.798" endtime="20201115 21:59:56.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.815" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.814" endtime="20201115 21:59:56.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.816" endtime="20201115 21:59:56.818"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.796" endtime="20201115 21:59:56.819"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.794" endtime="20201115 21:59:56.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.825" endtime="20201115 21:59:57.111"></status>
</kw>
<msg timestamp="20201115 21:59:57.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.824" endtime="20201115 21:59:57.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.116" endtime="20201115 21:59:57.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.124" endtime="20201115 21:59:57.126"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.821" endtime="20201115 21:59:57.126"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.820" endtime="20201115 21:59:57.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:57.131" level="INFO">${RESULT} = [{'time': 0.021907403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3339999999996697e-06, 'source_diff': 2.3339999999996697e-06}, {'time': 0.021948014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:57.128" endtime="20201115 21:59:57.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:57.144" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:57.132" endtime="20201115 21:59:57.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.149" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:57.148" endtime="20201115 21:59:57.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.151" level="INFO">VALUE: [2.3339999999996697e-06, 2.4999999999990308e-06, 2.4999999999990308e-06, 2.485999999999461e-06, 2.4729999999993646e-06, 2.4999999999990308e-06, 2.485999999999461e-06, 2.485999999999461e-06, 2.4999999999990308e-06, 2.485999999999461e-06, 2.4439999999972817e-06, 2.471999999999891e-06, 2.5279999999981706e-06, 2.5000000000025002e-06, 2.485999999999461e-06, 2.5270000000021664e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.4999999999990308e-06, 2.485999999999461e-06, 2.4589999999997947e-06, 2.471999999999891e-06, 2.5270000000021664e-06, 2.51400000000207e-06, 2.473000000002834e-06, 2.4860000000029303e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.485999999999461e-06, 2.485999999999461e-06, 2.485999999999461e-06, 2.51400000000207e-06, 2.4869999999989345e-06, 2.4860000000029303e-06, 2.4860000000029303e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.51400000000207e-06, 2.473000000002834e-06, 2.444000000000751e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.4869999999989345e-06, 2.4860000000029303e-06, 2.485999999999461e-06, 2.485999999999461e-06, 2.485999999999461e-06, 2.4999999999990308e-06]</msg>
<status status="PASS" starttime="20201115 21:59:57.150" endtime="20201115 21:59:57.151"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.145" endtime="20201115 21:59:57.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.154" endtime="20201115 21:59:57.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:57.157" endtime="20201115 21:59:57.177"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.156" endtime="20201115 21:59:57.177"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.152" endtime="20201115 21:59:57.178"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.791" endtime="20201115 21:59:57.178"></status>
</kw>
<msg timestamp="20201115 21:59:57.178" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.187" endtime="20201115 21:59:57.199"></status>
</kw>
<msg timestamp="20201115 21:59:57.199" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.186" endtime="20201115 21:59:57.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.202" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.200" endtime="20201115 21:59:57.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.203" endtime="20201115 21:59:57.204"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.183" endtime="20201115 21:59:57.205"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.181" endtime="20201115 21:59:57.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.212" endtime="20201115 21:59:57.498"></status>
</kw>
<msg timestamp="20201115 21:59:57.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021789875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.210" endtime="20201115 21:59:57.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021789875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.502" endtime="20201115 21:59:57.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.511" endtime="20201115 21:59:57.512"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.208" endtime="20201115 21:59:57.513"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.206" endtime="20201115 21:59:57.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:57.517" level="INFO">${RESULT} = [{'time': 0.021789875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.021830278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:57.514" endtime="20201115 21:59:57.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:57.531" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:57.518" endtime="20201115 21:59:57.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.536" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:57.535" endtime="20201115 21:59:57.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.538" level="INFO">VALUE: [2.403000000001515e-06, 2.5000000000025002e-06, 2.471999999999891e-06, 2.4860000000029303e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.5410000000017363e-06, 2.4579999999968516e-06, 2.5700000000003498e-06, 2.485999999999461e-06, 2.569000000000876e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.485999999999461e-06, 2.4860000000029303e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.4589999999997947e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.4999999999990308e-06, 2.471999999999891e-06, 2.4589999999997947e-06, 2.485999999999461e-06, 2.471999999999891e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.4869999999989345e-06, 2.485999999999461e-06, 2.431000000000655e-06, 2.485999999999461e-06, 2.5139999999986007e-06, 2.487000000002404e-06, 2.458000000000321e-06, 2.4729999999993646e-06, 2.403000000001515e-06, 2.485999999999461e-06, 2.4729999999993646e-06, 2.4999999999990308e-06, 2.4300000000011812e-06, 2.458000000000321e-06, 2.5139999999986007e-06, 2.458000000000321e-06, 2.4589999999997947e-06, 2.458000000000321e-06, 2.4729999999993646e-06, 2.4589999999997947e-06, 2.485999999999461e-06, 2.485999999999461e-06]</msg>
<status status="PASS" starttime="20201115 21:59:57.537" endtime="20201115 21:59:57.539"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.532" endtime="20201115 21:59:57.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.542" endtime="20201115 21:59:57.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:57.545" endtime="20201115 21:59:57.564"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.543" endtime="20201115 21:59:57.565"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.540" endtime="20201115 21:59:57.565"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.179" endtime="20201115 21:59:57.566"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.626" endtime="20201115 21:59:57.566"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.625" endtime="20201115 21:59:57.566"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.568" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.577" endtime="20201115 21:59:57.589"></status>
</kw>
<msg timestamp="20201115 21:59:57.590" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.575" endtime="20201115 21:59:57.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.592" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.591" endtime="20201115 21:59:57.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.593" endtime="20201115 21:59:57.595"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.573" endtime="20201115 21:59:57.596"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.571" endtime="20201115 21:59:57.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.603" endtime="20201115 21:59:57.891"></status>
</kw>
<msg timestamp="20201115 21:59:57.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024327653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024329653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.601" endtime="20201115 21:59:57.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024327653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024329653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.895" endtime="20201115 21:59:57.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.903" endtime="20201115 21:59:57.905"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.599" endtime="20201115 21:59:57.905"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.597" endtime="20201115 21:59:57.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:57.910" level="INFO">${RESULT} = [{'time': 0.024329653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.024373944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:57.906" endtime="20201115 21:59:57.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:57.923" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:57.911" endtime="20201115 21:59:57.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.927" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:57.926" endtime="20201115 21:59:57.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.930" level="INFO">VALUE: [1.9999999999985307e-06, 2.3880000000024715e-06, 1.971999999999391e-06, 1.985999999998961e-06, 2.2499999999987808e-06, 1.9860000000024303e-06, 1.9860000000024303e-06, 2.2639999999983507e-06, 2.040999999997767e-06, 2.000000000002e-06, 2.26400000000182e-06, 1.931000000000155e-06, 2.0270000000016664e-06, 2.25000000000225e-06, 1.985999999998961e-06, 1.985999999998961e-06, 2.3200000000000998e-06, 1.9589999999992946e-06, 1.9999999999985307e-06, 2.2639999999983507e-06, 1.9999999999985307e-06, 1.930000000000681e-06, 2.27800000000139e-06, 1.9999999999985307e-06, 2.01400000000157e-06, 2.26400000000182e-06, 1.944000000000251e-06, 1.971999999999391e-06, 2.2779999999979206e-06, 2.05600000000028e-06, 2.000000000002e-06, 2.276999999998447e-06, 1.9869999999984345e-06, 1.9999999999985307e-06, 2.2639999999983507e-06, 2.02800000000114e-06, 1.973000000002334e-06, 2.30600000000053e-06, 2.01400000000157e-06, 1.987000000001904e-06, 2.2910000000014863e-06, 1.985999999998961e-06, 1.985999999998961e-06, 2.2499999999987808e-06, 1.957999999999821e-06, 1.9860000000024303e-06, 2.2639999999983507e-06, 1.9860000000024303e-06, 1.9999999999985307e-06, 2.305000000001056e-06]</msg>
<status status="PASS" starttime="20201115 21:59:57.928" endtime="20201115 21:59:57.930"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.924" endtime="20201115 21:59:57.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.933" endtime="20201115 21:59:57.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:57.936" endtime="20201115 21:59:57.956"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.935" endtime="20201115 21:59:57.956"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.931" endtime="20201115 21:59:57.957"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.569" endtime="20201115 21:59:57.957"></status>
</kw>
<msg timestamp="20201115 21:59:57.957" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.966" endtime="20201115 21:59:57.978"></status>
</kw>
<msg timestamp="20201115 21:59:57.978" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.964" endtime="20201115 21:59:57.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.981" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.979" endtime="20201115 21:59:57.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.982" endtime="20201115 21:59:57.984"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.962" endtime="20201115 21:59:57.984"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.960" endtime="20201115 21:59:57.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.991" endtime="20201115 21:59:58.277"></status>
</kw>
<msg timestamp="20201115 21:59:58.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021811806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.990" endtime="20201115 21:59:58.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021811806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.281" endtime="20201115 21:59:58.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.289" endtime="20201115 21:59:58.291"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.987" endtime="20201115 21:59:58.292"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.985" endtime="20201115 21:59:58.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:58.296" level="INFO">${RESULT} = [{'time': 0.021813792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.021858486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:58.293" endtime="20201115 21:59:58.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:58.309" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:58.297" endtime="20201115 21:59:58.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.314" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:58.313" endtime="20201115 21:59:58.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.316" level="INFO">VALUE: [1.985999999998961e-06, 2.3749999999989058e-06, 1.9999999999985307e-06, 2.01400000000157e-06, 2.25000000000225e-06, 1.971999999999391e-06, 1.9999999999985307e-06, 2.26400000000182e-06, 1.9999999999985307e-06, 2.04200000000071e-06, 2.290999999998017e-06, 1.971999999999391e-06, 1.973000000002334e-06, 2.27800000000139e-06, 1.985999999998961e-06, 1.8889999999979756e-06, 2.27800000000139e-06, 1.9999999999985307e-06, 1.9860000000024303e-06, 2.276999999998447e-06, 1.9860000000024303e-06, 1.9999999999985307e-06, 2.2499999999987808e-06, 2.0139999999981006e-06, 1.985999999998961e-06, 2.27800000000139e-06, 1.9729999999988646e-06, 1.9720000000028604e-06, 2.276999999998447e-06, 1.985999999998961e-06, 1.985999999998961e-06, 2.276999999998447e-06, 1.9860000000024303e-06, 1.9449999999997247e-06, 2.26400000000182e-06, 1.971999999999391e-06, 1.9449999999997247e-06, 2.305000000001056e-06, 2.000000000002e-06, 1.9999999999985307e-06, 2.2639999999983507e-06, 1.957999999999821e-06, 1.944000000000251e-06, 2.319000000000626e-06, 1.9860000000024303e-06, 2.000000000002e-06, 2.29200000000096e-06, 1.9860000000024303e-06, 1.985999999998961e-06, 2.2779999999979206e-06]</msg>
<status status="PASS" starttime="20201115 21:59:58.315" endtime="20201115 21:59:58.316"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.310" endtime="20201115 21:59:58.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.319" endtime="20201115 21:59:58.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:58.323" endtime="20201115 21:59:58.342"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.321" endtime="20201115 21:59:58.342"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.318" endtime="20201115 21:59:58.343"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.958" endtime="20201115 21:59:58.343"></status>
</kw>
<msg timestamp="20201115 21:59:58.343" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.353" endtime="20201115 21:59:58.365"></status>
</kw>
<msg timestamp="20201115 21:59:58.365" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.351" endtime="20201115 21:59:58.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.368" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.366" endtime="20201115 21:59:58.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.369" endtime="20201115 21:59:58.371"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.348" endtime="20201115 21:59:58.371"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.346" endtime="20201115 21:59:58.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.378" endtime="20201115 21:59:58.665"></status>
</kw>
<msg timestamp="20201115 21:59:58.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022298083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022300042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.376" endtime="20201115 21:59:58.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022298083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022300042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.670" endtime="20201115 21:59:58.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.678" endtime="20201115 21:59:58.679"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.374" endtime="20201115 21:59:58.680"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.372" endtime="20201115 21:59:58.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:58.684" level="INFO">${RESULT} = [{'time': 0.022300042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.022344875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:58.681" endtime="20201115 21:59:58.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:58.698" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:58.685" endtime="20201115 21:59:58.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.702" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:58.701" endtime="20201115 21:59:58.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.704" level="INFO">VALUE: [1.9589999999992946e-06, 2.3749999999989058e-06, 1.985999999998961e-06, 1.985999999998961e-06, 2.2639999999983507e-06, 1.971999999999391e-06, 1.985999999998961e-06, 2.2639999999983507e-06, 1.985999999998961e-06, 2.01400000000157e-06, 2.2779999999979206e-06, 1.9729999999988646e-06, 1.9729999999988646e-06, 2.2639999999983507e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 2.26400000000182e-06, 1.9729999999988646e-06, 1.9999999999985307e-06, 2.2639999999983507e-06, 1.971999999999391e-06, 1.944000000000251e-06, 2.26400000000182e-06, 2.000000000002e-06, 1.9999999999985307e-06, 2.276999999998447e-06, 1.971999999999391e-06, 1.903000000001015e-06, 2.3200000000000998e-06, 1.9860000000024303e-06, 1.9999999999985307e-06, 2.2639999999983507e-06, 1.987000000001904e-06, 2.000000000002e-06, 2.29200000000096e-06, 2.01400000000157e-06, 2.026999999998197e-06, 2.2639999999983507e-06, 1.9860000000024303e-06, 2.000000000002e-06, 2.30600000000053e-06, 1.971999999999391e-06, 1.971999999999391e-06, 2.235999999999211e-06, 1.971999999999391e-06, 1.9999999999985307e-06, 2.290999999998017e-06, 1.985999999998961e-06, 2.01400000000157e-06, 2.235999999999211e-06]</msg>
<status status="PASS" starttime="20201115 21:59:58.703" endtime="20201115 21:59:58.705"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.698" endtime="20201115 21:59:58.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.708" endtime="20201115 21:59:58.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:58.711" endtime="20201115 21:59:58.730"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.710" endtime="20201115 21:59:58.731"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.706" endtime="20201115 21:59:58.731"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.344" endtime="20201115 21:59:58.732"></status>
</kw>
<msg timestamp="20201115 21:59:58.732" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.741" endtime="20201115 21:59:58.753"></status>
</kw>
<msg timestamp="20201115 21:59:58.753" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.740" endtime="20201115 21:59:58.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.755" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.754" endtime="20201115 21:59:58.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.757" endtime="20201115 21:59:58.758"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.737" endtime="20201115 21:59:58.759"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.735" endtime="20201115 21:59:58.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.766" endtime="20201115 21:59:59.053"></status>
</kw>
<msg timestamp="20201115 21:59:59.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022269597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.764" endtime="20201115 21:59:59.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022269597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.057" endtime="20201115 21:59:59.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.065" endtime="20201115 21:59:59.067"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.761" endtime="20201115 21:59:59.067"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.760" endtime="20201115 21:59:59.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:59.072" level="INFO">${RESULT} = [{'time': 0.022271597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.022315889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4...</msg>
<status status="PASS" starttime="20201115 21:59:59.068" endtime="20201115 21:59:59.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:59.085" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:59.073" endtime="20201115 21:59:59.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.090" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:59.088" endtime="20201115 21:59:59.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.092" level="INFO">VALUE: [2.000000000002e-06, 2.4029999999980456e-06, 2.0139999999981006e-06, 1.9589999999992946e-06, 2.2499999999987808e-06, 2.026999999998197e-06, 1.9860000000024303e-06, 2.2639999999983507e-06, 1.985999999998961e-06, 1.9999999999985307e-06, 2.30600000000053e-06, 1.985999999998961e-06, 2.01400000000157e-06, 2.3189999999971567e-06, 1.9860000000024303e-06, 1.985999999998961e-06, 2.27800000000139e-06, 1.971999999999391e-06, 2.0279999999976706e-06, 2.2639999999983507e-06, 1.985999999998961e-06, 1.971999999999391e-06, 2.2499999999987808e-06, 1.985999999998961e-06, 1.985999999998961e-06, 2.2919999999974905e-06, 1.9729999999988646e-06, 1.985999999998961e-06, 2.26400000000182e-06, 1.985999999998961e-06, 1.9449999999997247e-06, 2.262999999998877e-06, 1.985999999998961e-06, 1.985999999998961e-06, 2.26400000000182e-06, 1.9729999999988646e-06, 1.959000000002764e-06, 2.2910000000014863e-06, 1.9860000000024303e-06, 2.000000000002e-06, 2.319000000000626e-06, 1.971999999999391e-06, 1.931000000000155e-06, 2.26400000000182e-06, 1.971999999999391e-06, 2.0279999999976706e-06, 2.2639999999983507e-06, 2.000000000002e-06, 1.985999999998961e-06, 2.276999999998447e-06]</msg>
<status status="PASS" starttime="20201115 21:59:59.091" endtime="20201115 21:59:59.092"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.086" endtime="20201115 21:59:59.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.095" endtime="20201115 21:59:59.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:59.099" endtime="20201115 21:59:59.118"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.097" endtime="20201115 21:59:59.119"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.093" endtime="20201115 21:59:59.119"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.733" endtime="20201115 21:59:59.120"></status>
</kw>
<msg timestamp="20201115 21:59:59.120" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.129" endtime="20201115 21:59:59.141"></status>
</kw>
<msg timestamp="20201115 21:59:59.142" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.127" endtime="20201115 21:59:59.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.144" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.143" endtime="20201115 21:59:59.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.145" endtime="20201115 21:59:59.147"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.125" endtime="20201115 21:59:59.147"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.123" endtime="20201115 21:59:59.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.154" endtime="20201115 21:59:59.442"></status>
</kw>
<msg timestamp="20201115 21:59:59.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022196139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022198111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.153" endtime="20201115 21:59:59.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022196139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022198111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.446" endtime="20201115 21:59:59.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.454" endtime="20201115 21:59:59.456"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.150" endtime="20201115 21:59:59.456"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.148" endtime="20201115 21:59:59.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:59.461" level="INFO">${RESULT} = [{'time': 0.022198111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.022242597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:59.458" endtime="20201115 21:59:59.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:59.474" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:59.462" endtime="20201115 21:59:59.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.478" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:59.477" endtime="20201115 21:59:59.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.481" level="INFO">VALUE: [1.971999999999391e-06, 2.3749999999989058e-06, 1.9589999999992946e-06, 1.9860000000024303e-06, 2.2499999999987808e-06, 1.985999999998961e-06, 1.9720000000028604e-06, 2.2910000000014863e-06, 1.971999999999391e-06, 1.9999999999985307e-06, 2.221999999999641e-06, 1.9860000000024303e-06, 1.971999999999391e-06, 2.221999999999641e-06, 1.957999999999821e-06, 1.971999999999391e-06, 2.2499999999987808e-06, 2.02800000000114e-06, 1.931000000000155e-06, 2.2630000000023465e-06, 1.9860000000024303e-06, 1.9720000000028604e-06, 2.319000000000626e-06, 1.985999999998961e-06, 1.985999999998961e-06, 2.29200000000096e-06, 2.000000000002e-06, 1.971999999999391e-06, 2.27800000000139e-06, 1.9720000000028604e-06, 2.0699999999998497e-06, 2.2499999999987808e-06, 1.9999999999985307e-06, 1.971999999999391e-06, 2.2639999999983507e-06, 1.903000000001015e-06, 1.987000000001904e-06, 2.2779999999979206e-06, 1.985999999998961e-06, 1.9729999999988646e-06, 2.27800000000139e-06, 1.9860000000024303e-06, 1.987000000001904e-06, 2.2779999999979206e-06, 1.9449999999997247e-06, 1.985999999998961e-06, 2.29200000000096e-06, 1.985999999998961e-06, 1.985999999998961e-06, 2.25000000000225e-06]</msg>
<status status="PASS" starttime="20201115 21:59:59.480" endtime="20201115 21:59:59.482"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.475" endtime="20201115 21:59:59.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.484" endtime="20201115 21:59:59.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:59.488" endtime="20201115 21:59:59.507"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.486" endtime="20201115 21:59:59.508"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.483" endtime="20201115 21:59:59.508"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.120" endtime="20201115 21:59:59.509"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.567" endtime="20201115 21:59:59.509"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.566" endtime="20201115 21:59:59.509"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.511" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.520" endtime="20201115 21:59:59.533"></status>
</kw>
<msg timestamp="20201115 21:59:59.533" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.518" endtime="20201115 21:59:59.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.536" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.534" endtime="20201115 21:59:59.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.537" endtime="20201115 21:59:59.538"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.516" endtime="20201115 21:59:59.539"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.514" endtime="20201115 21:59:59.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.546" endtime="20201115 21:59:59.852"></status>
</kw>
<msg timestamp="20201115 21:59:59.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024375778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024377917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.544" endtime="20201115 21:59:59.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024375778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024377917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.860" endtime="20201115 21:59:59.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.868" endtime="20201115 21:59:59.870"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.542" endtime="20201115 21:59:59.871"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.540" endtime="20201115 21:59:59.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:59.875" level="INFO">${RESULT} = [{'time': 0.024377917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1389999999982257e-06, 'source_diff': 2.1389999999982257e-06}, {'time': 0.024426861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:59.872" endtime="20201115 21:59:59.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:59.888" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 21:59:59.876" endtime="20201115 21:59:59.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.893" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 21:59:59.892" endtime="20201115 21:59:59.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.896" level="INFO">VALUE: [2.1389999999982257e-06, 2.403000000001515e-06, 2.1249999999986557e-06, 2.1110000000025553e-06, 2.346999999999766e-06, 2.153000000001265e-06, 2.1249999999986557e-06, 2.4029999999980456e-06, 2.1249999999986557e-06, 2.0979999999989896e-06, 2.389000000001945e-06, 2.125000000002125e-06, 2.110999999999086e-06, 2.401999999998572e-06, 2.110999999999086e-06, 2.139000000001695e-06, 2.360999999999336e-06, 2.0699999999998497e-06, 2.153000000001265e-06, 2.4020000000020414e-06, 2.096999999999516e-06, 2.0970000000029854e-06, 2.403000000001515e-06, 2.1529999999977956e-06, 2.112000000002029e-06, 2.4029999999980456e-06, 2.1249999999986557e-06, 2.1249999999986557e-06, 2.4029999999980456e-06, 2.167000000000835e-06, 2.125000000002125e-06, 2.401999999998572e-06, 2.110999999999086e-06, 2.0699999999998497e-06, 2.3889999999984757e-06, 2.125000000002125e-06, 2.112000000002029e-06, 2.360999999999336e-06, 2.110999999999086e-06, 2.110999999999086e-06, 2.403000000001515e-06, 2.181000000000405e-06, 2.110999999999086e-06, 2.4020000000020414e-06, 2.1249999999986557e-06, 2.139000000001695e-06, 2.3749999999989058e-06, 2.139000000001695e-06, 2.1119999999985595e-06, 2.375000000002375e-06]</msg>
<status status="PASS" starttime="20201115 21:59:59.894" endtime="20201115 21:59:59.896"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.889" endtime="20201115 21:59:59.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.899" endtime="20201115 21:59:59.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:59.902" endtime="20201115 21:59:59.922"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.901" endtime="20201115 21:59:59.922"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.897" endtime="20201115 21:59:59.923"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.512" endtime="20201115 21:59:59.923"></status>
</kw>
<msg timestamp="20201115 21:59:59.923" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.932" endtime="20201115 21:59:59.945"></status>
</kw>
<msg timestamp="20201115 21:59:59.945" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.931" endtime="20201115 21:59:59.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.948" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.946" endtime="20201115 21:59:59.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.949" endtime="20201115 21:59:59.950"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.928" endtime="20201115 21:59:59.951"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.926" endtime="20201115 21:59:59.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.958" endtime="20201115 22:00:00.244"></status>
</kw>
<msg timestamp="20201115 22:00:00.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022001556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022003667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.956" endtime="20201115 22:00:00.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022001556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022003667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.248" endtime="20201115 22:00:00.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.257" endtime="20201115 22:00:00.258"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.954" endtime="20201115 22:00:00.259"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.952" endtime="20201115 22:00:00.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:00.263" level="INFO">${RESULT} = [{'time': 0.022003667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1110000000025553e-06, 'source_diff': 2.1110000000025553e-06}, {'time': 0.022052153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:00.260" endtime="20201115 22:00:00.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:00.276" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:00.264" endtime="20201115 22:00:00.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.281" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:00.280" endtime="20201115 22:00:00.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.284" level="INFO">VALUE: [2.1110000000025553e-06, 2.403000000001515e-06, 2.125000000002125e-06, 2.0689999999969066e-06, 2.403000000001515e-06, 2.096999999999516e-06, 2.125000000002125e-06, 2.3200000000000998e-06, 2.110999999999086e-06, 2.165999999997892e-06, 2.431000000000655e-06, 2.1249999999986557e-06, 2.069000000000376e-06, 2.3749999999989058e-06, 2.139000000001695e-06, 2.125000000002125e-06, 2.417000000001085e-06, 2.110999999999086e-06, 2.1669999999973655e-06, 2.4029999999980456e-06, 2.082999999999946e-06, 2.069000000000376e-06, 2.431000000000655e-06, 2.1389999999982257e-06, 2.1249999999986557e-06, 2.4020000000020414e-06, 2.1249999999986557e-06, 2.1389999999982257e-06, 2.403000000001515e-06, 2.139000000001695e-06, 2.110999999999086e-06, 2.3889999999984757e-06, 2.110999999999086e-06, 2.125000000002125e-06, 2.3889999999984757e-06, 2.1249999999986557e-06, 2.1249999999986557e-06, 2.4450000000002248e-06, 2.1249999999986557e-06, 2.110999999999086e-06, 2.4300000000011812e-06, 2.125000000002125e-06, 2.110999999999086e-06, 2.3889999999984757e-06, 2.167000000000835e-06, 2.1249999999986557e-06, 2.3610000000028053e-06, 2.069000000000376e-06, 2.153000000001265e-06, 2.417000000001085e-06]</msg>
<status status="PASS" starttime="20201115 22:00:00.282" endtime="20201115 22:00:00.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.278" endtime="20201115 22:00:00.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.287" endtime="20201115 22:00:00.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:00.290" endtime="20201115 22:00:00.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.289" endtime="20201115 22:00:00.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.285" endtime="20201115 22:00:00.311"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.924" endtime="20201115 22:00:00.311"></status>
</kw>
<msg timestamp="20201115 22:00:00.311" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.320" endtime="20201115 22:00:00.332"></status>
</kw>
<msg timestamp="20201115 22:00:00.333" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.318" endtime="20201115 22:00:00.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.335" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.334" endtime="20201115 22:00:00.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.336" endtime="20201115 22:00:00.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.316" endtime="20201115 22:00:00.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.314" endtime="20201115 22:00:00.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.345" endtime="20201115 22:00:00.633"></status>
</kw>
<msg timestamp="20201115 22:00:00.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.344" endtime="20201115 22:00:00.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.637" endtime="20201115 22:00:00.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.645" endtime="20201115 22:00:00.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.341" endtime="20201115 22:00:00.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.339" endtime="20201115 22:00:00.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:00.652" level="INFO">${RESULT} = [{'time': 0.022182167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1249999999986557e-06, 'source_diff': 2.1249999999986557e-06}, {'time': 0.022230694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:00.649" endtime="20201115 22:00:00.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:00.673" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:00.660" endtime="20201115 22:00:00.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.677" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:00.676" endtime="20201115 22:00:00.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.680" level="INFO">VALUE: [2.1249999999986557e-06, 2.415999999998142e-06, 2.110999999999086e-06, 2.1669999999973655e-06, 2.3749999999989058e-06, 2.110999999999086e-06, 2.125000000002125e-06, 2.403000000001515e-06, 2.1249999999986557e-06, 2.110999999999086e-06, 2.431000000000655e-06, 2.1110000000025553e-06, 2.110999999999086e-06, 2.4029999999980456e-06, 2.110999999999086e-06, 2.139000000001695e-06, 2.389000000001945e-06, 2.05600000000028e-06, 2.1389999999982257e-06, 2.417000000001085e-06, 2.139000000001695e-06, 2.110999999999086e-06, 2.4020000000020414e-06, 2.125000000002125e-06, 2.0689999999969066e-06, 2.4029999999980456e-06, 2.125000000002125e-06, 2.125000000002125e-06, 2.4020000000020414e-06, 2.125000000002125e-06, 2.110999999999086e-06, 2.417000000001085e-06, 2.125000000002125e-06, 2.1249999999986557e-06, 2.3889999999984757e-06, 2.0549999999973367e-06, 2.125000000002125e-06, 2.4029999999980456e-06, 2.167000000000835e-06, 2.110999999999086e-06, 2.415999999998142e-06, 2.1249999999986557e-06, 2.112000000002029e-06, 2.4169999999976155e-06, 2.110999999999086e-06, 2.1249999999986557e-06, 2.417000000001085e-06, 2.1249999999986557e-06, 2.110999999999086e-06, 2.403000000001515e-06]</msg>
<status status="PASS" starttime="20201115 22:00:00.678" endtime="20201115 22:00:00.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.674" endtime="20201115 22:00:00.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.683" endtime="20201115 22:00:00.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:00.686" endtime="20201115 22:00:00.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.685" endtime="20201115 22:00:00.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.681" endtime="20201115 22:00:00.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.312" endtime="20201115 22:00:00.707"></status>
</kw>
<msg timestamp="20201115 22:00:00.707" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.716" endtime="20201115 22:00:00.728"></status>
</kw>
<msg timestamp="20201115 22:00:00.728" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.714" endtime="20201115 22:00:00.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.731" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.729" endtime="20201115 22:00:00.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.732" endtime="20201115 22:00:00.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.712" endtime="20201115 22:00:00.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.710" endtime="20201115 22:00:00.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.741" endtime="20201115 22:00:01.029"></status>
</kw>
<msg timestamp="20201115 22:00:01.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.739" endtime="20201115 22:00:01.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.033" endtime="20201115 22:00:01.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.042" endtime="20201115 22:00:01.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.737" endtime="20201115 22:00:01.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.735" endtime="20201115 22:00:01.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:01.048" level="INFO">${RESULT} = [{'time': 0.021921639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.110999999999086e-06, 'source_diff': 2.110999999999086e-06}, {'time': 0.021970278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:01.045" endtime="20201115 22:00:01.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:01.062" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:01.049" endtime="20201115 22:00:01.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.066" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:01.065" endtime="20201115 22:00:01.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.068" level="INFO">VALUE: [2.110999999999086e-06, 2.3749999999989058e-06, 2.153000000001265e-06, 2.153000000001265e-06, 2.403000000001515e-06, 2.1529999999977956e-06, 2.110999999999086e-06, 2.4160000000016113e-06, 2.1249999999986557e-06, 2.125000000002125e-06, 2.415999999998142e-06, 2.1389999999982257e-06, 2.1249999999986557e-06, 2.417000000001085e-06, 2.1249999999986557e-06, 2.153000000001265e-06, 2.4309999999971854e-06, 2.1249999999986557e-06, 2.1249999999986557e-06, 2.4029999999980456e-06, 2.125000000002125e-06, 2.1669999999973655e-06, 2.3479999999992396e-06, 2.139000000001695e-06, 2.082999999999946e-06, 2.3889999999984757e-06, 2.139000000001695e-06, 2.110999999999086e-06, 2.417000000001085e-06, 2.1249999999986557e-06, 2.1249999999986557e-06, 2.403000000001515e-06, 2.110999999999086e-06, 2.1110000000025553e-06, 2.4029999999980456e-06, 2.1249999999986557e-06, 2.153000000001265e-06, 2.401999999998572e-06, 2.181000000000405e-06, 2.125000000002125e-06, 2.403000000001515e-06, 2.110999999999086e-06, 2.1249999999986557e-06, 2.417000000001085e-06, 2.110999999999086e-06, 2.1249999999986557e-06, 2.3889999999984757e-06, 2.1249999999986557e-06, 2.125000000002125e-06, 2.417000000001085e-06]</msg>
<status status="PASS" starttime="20201115 22:00:01.067" endtime="20201115 22:00:01.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.062" endtime="20201115 22:00:01.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.072" endtime="20201115 22:00:01.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:01.075" endtime="20201115 22:00:01.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.073" endtime="20201115 22:00:01.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.070" endtime="20201115 22:00:01.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.708" endtime="20201115 22:00:01.096"></status>
</kw>
<msg timestamp="20201115 22:00:01.096" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.105" endtime="20201115 22:00:01.117"></status>
</kw>
<msg timestamp="20201115 22:00:01.117" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.103" endtime="20201115 22:00:01.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.120" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.118" endtime="20201115 22:00:01.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.121" endtime="20201115 22:00:01.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.101" endtime="20201115 22:00:01.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.098" endtime="20201115 22:00:01.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.130" endtime="20201115 22:00:01.416"></status>
</kw>
<msg timestamp="20201115 22:00:01.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.128" endtime="20201115 22:00:01.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.421" endtime="20201115 22:00:01.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.429" endtime="20201115 22:00:01.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.125" endtime="20201115 22:00:01.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.124" endtime="20201115 22:00:01.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:01.436" level="INFO">${RESULT} = [{'time': 0.022189764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.139000000001695e-06, 'source_diff': 2.139000000001695e-06}, {'time': 0.022238333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:01.433" endtime="20201115 22:00:01.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:01.449" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:01.437" endtime="20201115 22:00:01.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.454" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:01.453" endtime="20201115 22:00:01.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.456" level="INFO">VALUE: [2.139000000001695e-06, 2.444000000000751e-06, 2.1119999999985595e-06, 2.125000000002125e-06, 2.4029999999980456e-06, 2.1949999999999747e-06, 2.110999999999086e-06, 2.471999999999891e-06, 2.1249999999986557e-06, 2.1249999999986557e-06, 2.4160000000016113e-06, 2.1249999999986557e-06, 2.0970000000029854e-06, 2.403000000001515e-06, 2.1119999999985595e-06, 2.165999999997892e-06, 2.417000000001085e-06, 2.139000000001695e-06, 2.1949999999999747e-06, 2.4299999999977118e-06, 2.125000000002125e-06, 2.139000000001695e-06, 2.417000000001085e-06, 2.125000000002125e-06, 2.125000000002125e-06, 2.444000000000751e-06, 2.1249999999986557e-06, 2.1249999999986557e-06, 2.4020000000020414e-06, 2.125000000002125e-06, 2.125000000002125e-06, 2.403000000001515e-06, 2.1249999999986557e-06, 2.1119999999985595e-06, 2.417000000001085e-06, 2.125000000002125e-06, 2.1249999999986557e-06, 2.387999999999002e-06, 2.1249999999986557e-06, 2.153000000001265e-06, 2.4029999999980456e-06, 2.125000000002125e-06, 2.125000000002125e-06, 2.3749999999989058e-06, 2.1249999999986557e-06, 2.139000000001695e-06, 2.3619999999988095e-06, 2.125000000002125e-06, 2.098000000002459e-06, 2.3889999999984757e-06]</msg>
<status status="PASS" starttime="20201115 22:00:01.455" endtime="20201115 22:00:01.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.450" endtime="20201115 22:00:01.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.459" endtime="20201115 22:00:01.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:01.463" endtime="20201115 22:00:01.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.461" endtime="20201115 22:00:01.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.458" endtime="20201115 22:00:01.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.096" endtime="20201115 22:00:01.483"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.510" endtime="20201115 22:00:01.483"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.509" endtime="20201115 22:00:01.484"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.486" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.494" endtime="20201115 22:00:01.507"></status>
</kw>
<msg timestamp="20201115 22:00:01.507" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.493" endtime="20201115 22:00:01.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.510" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.508" endtime="20201115 22:00:01.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.511" endtime="20201115 22:00:01.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.490" endtime="20201115 22:00:01.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.488" endtime="20201115 22:00:01.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.520" endtime="20201115 22:00:01.809"></status>
</kw>
<msg timestamp="20201115 22:00:01.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024484083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024486361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.519" endtime="20201115 22:00:01.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024484083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024486361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.813" endtime="20201115 22:00:01.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.821" endtime="20201115 22:00:01.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.516" endtime="20201115 22:00:01.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.514" endtime="20201115 22:00:01.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:01.828" level="INFO">${RESULT} = [{'time': 0.024486361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.024539264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:01.824" endtime="20201115 22:00:01.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:01.841" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:01.829" endtime="20201115 22:00:01.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.846" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:01.845" endtime="20201115 22:00:01.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.848" level="INFO">VALUE: [2.27800000000139e-06, 2.54200000000121e-06, 2.2639999999983507e-06, 2.25000000000225e-06, 2.569000000000876e-06, 2.2630000000023465e-06, 2.2499999999987808e-06, 2.54200000000121e-06, 2.2220000000031104e-06, 2.262999999998877e-06, 2.5549999999978368e-06, 2.27800000000139e-06, 2.2499999999987808e-06, 2.459000000003264e-06, 2.29200000000096e-06, 2.2639999999983507e-06, 2.55600000000078e-06, 2.235999999999211e-06, 2.235999999999211e-06, 2.5419999999977405e-06, 2.2639999999983507e-06, 2.27800000000139e-06, 2.55600000000078e-06, 2.2639999999983507e-06, 2.27800000000139e-06, 2.5419999999977405e-06, 2.27800000000139e-06, 2.2919999999974905e-06, 2.54200000000121e-06, 2.2499999999987808e-06, 2.2499999999987808e-06, 2.54200000000121e-06, 2.26400000000182e-06, 2.26400000000182e-06, 2.5139999999986007e-06, 2.2499999999987808e-06, 2.333000000000196e-06, 2.54200000000121e-06, 2.26400000000182e-06, 2.27800000000139e-06, 2.5419999999977405e-06, 2.26400000000182e-06, 2.2639999999983507e-06, 2.5419999999977405e-06, 2.208000000000071e-06, 2.27800000000139e-06, 2.52800000000164e-06, 2.27800000000139e-06, 2.30600000000053e-06, 2.54200000000121e-06]</msg>
<status status="PASS" starttime="20201115 22:00:01.847" endtime="20201115 22:00:01.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.842" endtime="20201115 22:00:01.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.851" endtime="20201115 22:00:01.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:01.855" endtime="20201115 22:00:01.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.853" endtime="20201115 22:00:01.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.850" endtime="20201115 22:00:01.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.486" endtime="20201115 22:00:01.875"></status>
</kw>
<msg timestamp="20201115 22:00:01.875" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.884" endtime="20201115 22:00:01.897"></status>
</kw>
<msg timestamp="20201115 22:00:01.898" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.883" endtime="20201115 22:00:01.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.901" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.899" endtime="20201115 22:00:01.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.902" endtime="20201115 22:00:01.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.880" endtime="20201115 22:00:01.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.878" endtime="20201115 22:00:01.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.911" endtime="20201115 22:00:02.211"></status>
</kw>
<msg timestamp="20201115 22:00:02.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022014153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.909" endtime="20201115 22:00:02.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022014153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.216" endtime="20201115 22:00:02.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.224" endtime="20201115 22:00:02.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.907" endtime="20201115 22:00:02.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.905" endtime="20201115 22:00:02.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:02.231" level="INFO">${RESULT} = [{'time': 0.022014153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.25000000000225e-06, 'source_diff': 2.25000000000225e-06}, {'time': 0.022067292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:02.227" endtime="20201115 22:00:02.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:02.244" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:02.232" endtime="20201115 22:00:02.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.248" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:02.247" endtime="20201115 22:00:02.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.251" level="INFO">VALUE: [2.25000000000225e-06, 2.5419999999977405e-06, 2.25000000000225e-06, 2.27800000000139e-06, 2.5550000000013062e-06, 2.276999999998447e-06, 2.25000000000225e-06, 2.52800000000164e-06, 2.2499999999987808e-06, 2.27800000000139e-06, 2.5550000000013062e-06, 2.25000000000225e-06, 2.25000000000225e-06, 2.5279999999981706e-06, 2.2499999999987808e-06, 2.194000000000501e-06, 2.5550000000013062e-06, 2.26400000000182e-06, 2.26400000000182e-06, 2.5549999999978368e-06, 2.25000000000225e-06, 2.27800000000139e-06, 2.5419999999977405e-06, 2.2770000000019164e-06, 2.2499999999987808e-06, 2.5419999999977405e-06, 2.26400000000182e-06, 2.262999999998877e-06, 2.55600000000078e-06, 2.2499999999987808e-06, 2.26400000000182e-06, 2.54200000000121e-06, 2.3049999999975868e-06, 2.29200000000096e-06, 2.55600000000078e-06, 2.2639999999983507e-06, 2.2639999999983507e-06, 2.5700000000003498e-06, 2.2779999999979206e-06, 2.208000000000071e-06, 2.569000000000876e-06, 2.26400000000182e-06, 2.3339999999996697e-06, 2.569000000000876e-06, 2.27800000000139e-06, 2.2779999999979206e-06, 2.583000000000446e-06, 2.25000000000225e-06, 2.3200000000000998e-06, 2.55600000000078e-06]</msg>
<status status="PASS" starttime="20201115 22:00:02.249" endtime="20201115 22:00:02.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.245" endtime="20201115 22:00:02.251"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.254" endtime="20201115 22:00:02.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:02.257" endtime="20201115 22:00:02.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.256" endtime="20201115 22:00:02.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.252" endtime="20201115 22:00:02.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.876" endtime="20201115 22:00:02.278"></status>
</kw>
<msg timestamp="20201115 22:00:02.278" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.287" endtime="20201115 22:00:02.300"></status>
</kw>
<msg timestamp="20201115 22:00:02.301" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.285" endtime="20201115 22:00:02.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.303" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.302" endtime="20201115 22:00:02.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.304" endtime="20201115 22:00:02.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.283" endtime="20201115 22:00:02.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.281" endtime="20201115 22:00:02.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.313" endtime="20201115 22:00:02.600"></status>
</kw>
<msg timestamp="20201115 22:00:02.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02239075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:02.312" endtime="20201115 22:00:02.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02239075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:02.605" endtime="20201115 22:00:02.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.613" endtime="20201115 22:00:02.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.309" endtime="20201115 22:00:02.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.307" endtime="20201115 22:00:02.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:02.620" level="INFO">${RESULT} = [{'time': 0.022393028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2779999999979206e-06, 'source_diff': 2.2779999999979206e-06}, {'time': 0.022445861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:02.617" endtime="20201115 22:00:02.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:02.634" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:02.621" endtime="20201115 22:00:02.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.638" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:02.637" endtime="20201115 22:00:02.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.640" level="INFO">VALUE: [2.2779999999979206e-06, 2.583000000000446e-06, 2.26400000000182e-06, 2.2639999999983507e-06, 2.5419999999977405e-06, 2.2499999999987808e-06, 2.2369999999986845e-06, 2.5419999999977405e-06, 2.3189999999971567e-06, 2.305000000001056e-06, 2.55600000000078e-06, 2.27800000000139e-06, 2.2639999999983507e-06, 2.5559999999973104e-06, 2.2639999999983507e-06, 2.2639999999983507e-06, 2.5559999999973104e-06, 2.26400000000182e-06, 2.29200000000096e-06, 2.55600000000078e-06, 2.2639999999983507e-06, 2.26400000000182e-06, 2.55600000000078e-06, 2.2639999999983507e-06, 2.180000000000931e-06, 2.54200000000121e-06, 2.2779999999979206e-06, 2.2630000000023465e-06, 2.583000000000446e-06, 2.27800000000139e-06, 2.26400000000182e-06, 2.54200000000121e-06, 2.2639999999983507e-06, 2.2499999999987808e-06, 2.5549999999978368e-06, 2.2639999999983507e-06, 2.30600000000053e-06, 2.5419999999977405e-06, 2.235999999999211e-06, 2.2499999999987808e-06, 2.5419999999977405e-06, 2.26400000000182e-06, 2.25000000000225e-06, 2.54200000000121e-06, 2.305000000001056e-06, 2.27800000000139e-06, 2.5549999999978368e-06, 2.2770000000019164e-06, 2.333000000000196e-06, 2.5410000000017363e-06]</msg>
<status status="PASS" starttime="20201115 22:00:02.639" endtime="20201115 22:00:02.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.634" endtime="20201115 22:00:02.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.644" endtime="20201115 22:00:02.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:02.647" endtime="20201115 22:00:02.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.645" endtime="20201115 22:00:02.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.642" endtime="20201115 22:00:02.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.279" endtime="20201115 22:00:02.668"></status>
</kw>
<msg timestamp="20201115 22:00:02.668" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.677" endtime="20201115 22:00:02.689"></status>
</kw>
<msg timestamp="20201115 22:00:02.690" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.676" endtime="20201115 22:00:02.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.692" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.691" endtime="20201115 22:00:02.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.693" endtime="20201115 22:00:02.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.673" endtime="20201115 22:00:02.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.671" endtime="20201115 22:00:02.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.702" endtime="20201115 22:00:02.988"></status>
</kw>
<msg timestamp="20201115 22:00:02.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022336236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022338514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.701" endtime="20201115 22:00:02.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022336236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022338514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.992" endtime="20201115 22:00:03.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.001" endtime="20201115 22:00:03.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.698" endtime="20201115 22:00:03.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.696" endtime="20201115 22:00:03.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:03.007" level="INFO">${RESULT} = [{'time': 0.022338514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.022391222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:03.004" endtime="20201115 22:00:03.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:03.020" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:03.008" endtime="20201115 22:00:03.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.025" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:03.024" endtime="20201115 22:00:03.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.028" level="INFO">VALUE: [2.27800000000139e-06, 2.5139999999986007e-06, 2.26400000000182e-06, 2.305000000001056e-06, 2.5559999999973104e-06, 2.235999999999211e-06, 2.221999999999641e-06, 2.52800000000164e-06, 2.2639999999983507e-06, 2.2779999999979206e-06, 2.5700000000003498e-06, 2.2639999999983507e-06, 2.235999999999211e-06, 2.610999999999586e-06, 2.27800000000139e-06, 2.194000000000501e-06, 2.540999999998267e-06, 2.25000000000225e-06, 2.25000000000225e-06, 2.5410000000017363e-06, 2.2499999999987808e-06, 2.27800000000139e-06, 2.5550000000013062e-06, 2.27800000000139e-06, 2.208000000000071e-06, 2.5139999999986007e-06, 2.2499999999987808e-06, 2.2499999999987808e-06, 2.540999999998267e-06, 2.2499999999987808e-06, 2.2779999999979206e-06, 2.52800000000164e-06, 2.26400000000182e-06, 2.2639999999983507e-06, 2.55600000000078e-06, 2.27800000000139e-06, 2.29200000000096e-06, 2.5419999999977405e-06, 2.2499999999987808e-06, 2.3059999999970604e-06, 2.5700000000003498e-06, 2.1939999999970317e-06, 2.276999999998447e-06, 2.5700000000003498e-06, 2.2499999999987808e-06, 2.2639999999983507e-06, 2.5550000000013062e-06, 2.221999999999641e-06, 2.2639999999983507e-06, 2.55600000000078e-06]</msg>
<status status="PASS" starttime="20201115 22:00:03.026" endtime="20201115 22:00:03.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.021" endtime="20201115 22:00:03.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.031" endtime="20201115 22:00:03.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.034" endtime="20201115 22:00:03.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.033" endtime="20201115 22:00:03.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.029" endtime="20201115 22:00:03.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.669" endtime="20201115 22:00:03.055"></status>
</kw>
<msg timestamp="20201115 22:00:03.055" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.064" endtime="20201115 22:00:03.077"></status>
</kw>
<msg timestamp="20201115 22:00:03.077" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.063" endtime="20201115 22:00:03.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.080" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.078" endtime="20201115 22:00:03.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.081" endtime="20201115 22:00:03.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.060" endtime="20201115 22:00:03.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.058" endtime="20201115 22:00:03.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.090" endtime="20201115 22:00:03.376"></status>
</kw>
<msg timestamp="20201115 22:00:03.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021817597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.088" endtime="20201115 22:00:03.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021817597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.380" endtime="20201115 22:00:03.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.388" endtime="20201115 22:00:03.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.086" endtime="20201115 22:00:03.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.084" endtime="20201115 22:00:03.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:03.395" level="INFO">${RESULT} = [{'time': 0.021817597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2910000000014863e-06, 'source_diff': 2.2910000000014863e-06}, {'time': 0.021870722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:03.392" endtime="20201115 22:00:03.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:03.408" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:03.396" endtime="20201115 22:00:03.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.413" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:03.412" endtime="20201115 22:00:03.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.415" level="INFO">VALUE: [2.2910000000014863e-06, 2.540999999998267e-06, 2.26400000000182e-06, 2.2639999999983507e-06, 2.55600000000078e-06, 2.25000000000225e-06, 2.25000000000225e-06, 2.5839999999999197e-06, 2.2639999999983507e-06, 2.27800000000139e-06, 2.5550000000013062e-06, 2.26400000000182e-06, 2.26400000000182e-06, 2.5550000000013062e-06, 2.2499999999987808e-06, 2.2089999999995447e-06, 2.54200000000121e-06, 2.2639999999983507e-06, 2.2639999999983507e-06, 2.5419999999977405e-06, 2.2770000000019164e-06, 2.2639999999983507e-06, 2.54200000000121e-06, 2.2639999999983507e-06, 2.2639999999983507e-06, 2.540999999998267e-06, 2.262999999998877e-06, 2.26400000000182e-06, 2.5839999999999197e-06, 2.235999999999211e-06, 2.25000000000225e-06, 2.569000000000876e-06, 2.27800000000139e-06, 2.221999999999641e-06, 2.55600000000078e-06, 2.276999999998447e-06, 2.235999999999211e-06, 2.6249999999991558e-06, 2.2499999999987808e-06, 2.26400000000182e-06, 2.471999999999891e-06, 2.2229999999991146e-06, 2.26400000000182e-06, 2.5549999999978368e-06, 2.3189999999971567e-06, 2.235999999999211e-06, 2.5549999999978368e-06, 2.27800000000139e-06, 2.181000000000405e-06, 2.5270000000021664e-06]</msg>
<status status="PASS" starttime="20201115 22:00:03.414" endtime="20201115 22:00:03.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.409" endtime="20201115 22:00:03.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.419" endtime="20201115 22:00:03.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.422" endtime="20201115 22:00:03.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.420" endtime="20201115 22:00:03.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.417" endtime="20201115 22:00:03.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.056" endtime="20201115 22:00:03.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.485" endtime="20201115 22:00:03.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.484" endtime="20201115 22:00:03.443"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.445" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.454" endtime="20201115 22:00:03.467"></status>
</kw>
<msg timestamp="20201115 22:00:03.468" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.452" endtime="20201115 22:00:03.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.470" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.469" endtime="20201115 22:00:03.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.471" endtime="20201115 22:00:03.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.450" endtime="20201115 22:00:03.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.448" endtime="20201115 22:00:03.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.480" endtime="20201115 22:00:03.767"></status>
</kw>
<msg timestamp="20201115 22:00:03.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024173056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024175514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.479" endtime="20201115 22:00:03.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024173056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024175514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.771" endtime="20201115 22:00:03.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.779" endtime="20201115 22:00:03.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.476" endtime="20201115 22:00:03.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.474" endtime="20201115 22:00:03.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:03.786" level="INFO">${RESULT} = [{'time': 0.024175514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.024232847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:03.782" endtime="20201115 22:00:03.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:03.799" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:03.787" endtime="20201115 22:00:03.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.803" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:03.802" endtime="20201115 22:00:03.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.806" level="INFO">VALUE: [2.458000000000321e-06, 2.6939999999975317e-06, 2.3889999999984757e-06, 2.417000000001085e-06, 2.694000000001001e-06, 2.417000000001085e-06, 2.3889999999984757e-06, 2.695000000000475e-06, 2.389000000001945e-06, 2.4160000000016113e-06, 2.651999999998822e-06, 2.415999999998142e-06, 2.3889999999984757e-06, 2.667000000001335e-06, 2.403000000001515e-06, 2.417000000001085e-06, 2.6939999999975317e-06, 2.4029999999980456e-06, 2.4029999999980456e-06, 2.681000000000905e-06, 2.3889999999984757e-06, 2.4029999999980456e-06, 2.681000000000905e-06, 2.431000000000655e-06, 2.3749999999989058e-06, 2.665999999998392e-06, 2.389000000001945e-06, 2.389000000001945e-06, 2.667000000001335e-06, 2.4029999999980456e-06, 2.403000000001515e-06, 2.695000000000475e-06, 2.403000000001515e-06, 2.403000000001515e-06, 2.665999999998392e-06, 2.417000000001085e-06, 2.403000000001515e-06, 2.6800000000014312e-06, 2.3610000000028053e-06, 2.403000000001515e-06, 2.667000000001335e-06, 2.346999999999766e-06, 2.4729999999993646e-06, 2.6809999999974354e-06, 2.403000000001515e-06, 2.403000000001515e-06, 2.708000000000571e-06, 2.375000000002375e-06, 2.401999999998572e-06, 2.6939999999975317e-06]</msg>
<status status="PASS" starttime="20201115 22:00:03.804" endtime="20201115 22:00:03.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.800" endtime="20201115 22:00:03.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.809" endtime="20201115 22:00:03.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.813" endtime="20201115 22:00:03.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.811" endtime="20201115 22:00:03.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.808" endtime="20201115 22:00:03.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.446" endtime="20201115 22:00:03.833"></status>
</kw>
<msg timestamp="20201115 22:00:03.834" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.842" endtime="20201115 22:00:03.855"></status>
</kw>
<msg timestamp="20201115 22:00:03.855" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.841" endtime="20201115 22:00:03.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.858" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.856" endtime="20201115 22:00:03.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.859" endtime="20201115 22:00:03.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.838" endtime="20201115 22:00:03.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.836" endtime="20201115 22:00:03.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.868" endtime="20201115 22:00:04.156"></status>
</kw>
<msg timestamp="20201115 22:00:04.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021824097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218265, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:03.866" endtime="20201115 22:00:04.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021824097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218265, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:04.160" endtime="20201115 22:00:04.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.169" endtime="20201115 22:00:04.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.864" endtime="20201115 22:00:04.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.862" endtime="20201115 22:00:04.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:04.175" level="INFO">${RESULT} = [{'time': 0.0218265, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.021883736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:04.172" endtime="20201115 22:00:04.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:04.188" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:04.176" endtime="20201115 22:00:04.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.193" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:04.192" endtime="20201115 22:00:04.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.195" level="INFO">VALUE: [2.4029999999980456e-06, 2.694000000001001e-06, 2.3749999999989058e-06, 2.431000000000655e-06, 2.637999999999252e-06, 2.403000000001515e-06, 2.403000000001515e-06, 2.6800000000014312e-06, 2.401999999998572e-06, 2.3889999999984757e-06, 2.7779999999984206e-06, 2.403000000001515e-06, 2.375000000002375e-06, 2.597000000000016e-06, 2.3749999999989058e-06, 2.403000000001515e-06, 2.6939999999975317e-06, 2.4449999999967553e-06, 2.360999999999336e-06, 2.695000000000475e-06, 2.4029999999980456e-06, 2.403000000001515e-06, 2.708000000000571e-06, 2.389000000001945e-06, 2.4029999999980456e-06, 2.6800000000014312e-06, 2.417000000001085e-06, 2.403000000001515e-06, 2.665999999998392e-06, 2.3889999999984757e-06, 2.403000000001515e-06, 2.681000000000905e-06, 2.431000000000655e-06, 2.4300000000011812e-06, 2.7090000000000447e-06, 2.4029999999980456e-06, 2.4160000000016113e-06, 2.681000000000905e-06, 2.403000000001515e-06, 2.471999999999891e-06, 2.695000000000475e-06, 2.417000000001085e-06, 2.3610000000028053e-06, 2.6660000000018613e-06, 2.403000000001515e-06, 2.403000000001515e-06, 2.679999999997962e-06, 2.415999999998142e-06, 2.417000000001085e-06, 2.6800000000014312e-06]</msg>
<status status="PASS" starttime="20201115 22:00:04.194" endtime="20201115 22:00:04.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.189" endtime="20201115 22:00:04.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.199" endtime="20201115 22:00:04.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:04.202" endtime="20201115 22:00:04.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.201" endtime="20201115 22:00:04.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.197" endtime="20201115 22:00:04.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.834" endtime="20201115 22:00:04.223"></status>
</kw>
<msg timestamp="20201115 22:00:04.223" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.232" endtime="20201115 22:00:04.244"></status>
</kw>
<msg timestamp="20201115 22:00:04.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.231" endtime="20201115 22:00:04.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.247" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.246" endtime="20201115 22:00:04.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.248" endtime="20201115 22:00:04.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.228" endtime="20201115 22:00:04.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.226" endtime="20201115 22:00:04.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.257" endtime="20201115 22:00:04.544"></status>
</kw>
<msg timestamp="20201115 22:00:04.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022349542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022351931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.256" endtime="20201115 22:00:04.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022349542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022351931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.548" endtime="20201115 22:00:04.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.556" endtime="20201115 22:00:04.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.253" endtime="20201115 22:00:04.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.251" endtime="20201115 22:00:04.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:04.563" level="INFO">${RESULT} = [{'time': 0.022351931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.022409292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:04.560" endtime="20201115 22:00:04.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:04.577" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:04.564" endtime="20201115 22:00:04.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.581" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:04.580" endtime="20201115 22:00:04.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.584" level="INFO">VALUE: [2.3889999999984757e-06, 2.681000000000905e-06, 2.403000000001515e-06, 2.403000000001515e-06, 2.695000000000475e-06, 2.375000000002375e-06, 2.360999999999336e-06, 2.708000000000571e-06, 2.417000000001085e-06, 2.333000000000196e-06, 2.708000000000571e-06, 2.471999999999891e-06, 2.387999999999002e-06, 2.681000000000905e-06, 2.417000000001085e-06, 2.4309999999971854e-06, 2.6949999999970053e-06, 2.4029999999980456e-06, 2.4589999999997947e-06, 2.7090000000000447e-06, 2.403000000001515e-06, 2.417000000001085e-06, 2.681000000000905e-06, 2.4450000000002248e-06, 2.3889999999984757e-06, 2.653000000001765e-06, 2.403000000001515e-06, 2.403000000001515e-06, 2.681000000000905e-06, 2.4169999999976155e-06, 2.4300000000011812e-06, 2.695000000000475e-06, 2.389000000001945e-06, 2.4169999999976155e-06, 2.681000000000905e-06, 2.458000000000321e-06, 2.403000000001515e-06, 2.681000000000905e-06, 2.3200000000000998e-06, 2.403000000001515e-06, 2.681000000000905e-06, 2.375000000002375e-06, 2.403000000001515e-06, 2.695000000000475e-06, 2.458000000000321e-06, 2.4029999999980456e-06, 2.695000000000475e-06, 2.4160000000016113e-06, 2.403000000001515e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201115 22:00:04.582" endtime="20201115 22:00:04.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.578" endtime="20201115 22:00:04.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.587" endtime="20201115 22:00:04.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:04.590" endtime="20201115 22:00:04.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.589" endtime="20201115 22:00:04.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.585" endtime="20201115 22:00:04.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.224" endtime="20201115 22:00:04.611"></status>
</kw>
<msg timestamp="20201115 22:00:04.611" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.620" endtime="20201115 22:00:04.632"></status>
</kw>
<msg timestamp="20201115 22:00:04.632" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.618" endtime="20201115 22:00:04.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.635" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.633" endtime="20201115 22:00:04.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.636" endtime="20201115 22:00:04.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.615" endtime="20201115 22:00:04.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.613" endtime="20201115 22:00:04.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.646" endtime="20201115 22:00:04.933"></status>
</kw>
<msg timestamp="20201115 22:00:04.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02175425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:04.644" endtime="20201115 22:00:04.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02175425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:04.937" endtime="20201115 22:00:04.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.946" endtime="20201115 22:00:04.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.641" endtime="20201115 22:00:04.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.640" endtime="20201115 22:00:04.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:04.952" level="INFO">${RESULT} = [{'time': 0.02175425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.021811694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:04.949" endtime="20201115 22:00:04.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:04.966" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:04.953" endtime="20201115 22:00:04.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.970" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:04.969" endtime="20201115 22:00:04.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.973" level="INFO">VALUE: [2.360999999999336e-06, 2.679999999997962e-06, 2.4160000000016113e-06, 2.3889999999984757e-06, 2.694000000001001e-06, 2.401999999998572e-06, 2.30600000000053e-06, 2.694000000001001e-06, 2.4029999999980456e-06, 2.403000000001515e-06, 2.6529999999982956e-06, 2.3889999999984757e-06, 2.403000000001515e-06, 2.653000000001765e-06, 2.403000000001515e-06, 2.3749999999989058e-06, 2.665999999998392e-06, 2.403000000001515e-06, 2.4160000000016113e-06, 2.667000000001335e-06, 2.403000000001515e-06, 2.415999999998142e-06, 2.695000000000475e-06, 2.4029999999980456e-06, 2.360999999999336e-06, 2.681000000000905e-06, 2.3889999999984757e-06, 2.401999999998572e-06, 2.681000000000905e-06, 2.403000000001515e-06, 2.471999999999891e-06, 2.679999999997962e-06, 2.4029999999980456e-06, 2.403000000001515e-06, 2.6949999999970053e-06, 2.403000000001515e-06, 2.403000000001515e-06, 2.6809999999974354e-06, 2.417000000001085e-06, 2.4589999999997947e-06, 2.694000000001001e-06, 2.389000000001945e-06, 2.471999999999891e-06, 2.637999999999252e-06, 2.389000000001945e-06, 2.389000000001945e-06, 2.679999999997962e-06, 2.4029999999980456e-06, 2.3749999999989058e-06, 2.681000000000905e-06]</msg>
<status status="PASS" starttime="20201115 22:00:04.971" endtime="20201115 22:00:04.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.966" endtime="20201115 22:00:04.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.976" endtime="20201115 22:00:04.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:04.979" endtime="20201115 22:00:04.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.978" endtime="20201115 22:00:04.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.974" endtime="20201115 22:00:05.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.611" endtime="20201115 22:00:05.000"></status>
</kw>
<msg timestamp="20201115 22:00:05.000" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.009" endtime="20201115 22:00:05.022"></status>
</kw>
<msg timestamp="20201115 22:00:05.023" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.007" endtime="20201115 22:00:05.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.025" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.024" endtime="20201115 22:00:05.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.026" endtime="20201115 22:00:05.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.005" endtime="20201115 22:00:05.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.003" endtime="20201115 22:00:05.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.035" endtime="20201115 22:00:05.322"></status>
</kw>
<msg timestamp="20201115 22:00:05.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021956611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021959014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.034" endtime="20201115 22:00:05.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021956611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021959014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.326" endtime="20201115 22:00:05.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.335" endtime="20201115 22:00:05.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.031" endtime="20201115 22:00:05.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.030" endtime="20201115 22:00:05.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:05.341" level="INFO">${RESULT} = [{'time': 0.021959014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.0220165, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:05.338" endtime="20201115 22:00:05.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:05.355" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:05.342" endtime="20201115 22:00:05.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.359" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:05.358" endtime="20201115 22:00:05.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.362" level="INFO">VALUE: [2.4029999999980456e-06, 2.694000000001001e-06, 2.4729999999993646e-06, 2.4029999999980456e-06, 2.6939999999975317e-06, 2.4029999999980456e-06, 2.3749999999989058e-06, 2.6939999999975317e-06, 2.403000000001515e-06, 2.4169999999976155e-06, 2.610999999999586e-06, 2.4169999999976155e-06, 2.3339999999996697e-06, 2.667000000001335e-06, 2.3889999999984757e-06, 2.4029999999980456e-06, 2.6939999999975317e-06, 2.4029999999980456e-06, 2.4169999999976155e-06, 2.681000000000905e-06, 2.4169999999976155e-06, 2.3889999999984757e-06, 2.681000000000905e-06, 2.403000000001515e-06, 2.417000000001085e-06, 2.6669999999978655e-06, 2.4160000000016113e-06, 2.3749999999989058e-06, 2.695000000000475e-06, 2.3889999999984757e-06, 2.3470000000032354e-06, 2.6389999999987257e-06, 2.4029999999980456e-06, 2.4029999999980456e-06, 2.6939999999975317e-06, 2.4169999999976155e-06, 2.471999999999891e-06, 2.6800000000014312e-06, 2.346999999999766e-06, 2.3889999999984757e-06, 2.681000000000905e-06, 2.4029999999980456e-06, 2.403000000001515e-06, 2.6660000000018613e-06, 2.375000000002375e-06, 2.4160000000016113e-06, 2.694000000001001e-06, 2.431000000000655e-06, 2.3889999999984757e-06, 2.6669999999978655e-06]</msg>
<status status="PASS" starttime="20201115 22:00:05.360" endtime="20201115 22:00:05.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.355" endtime="20201115 22:00:05.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.365" endtime="20201115 22:00:05.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:05.368" endtime="20201115 22:00:05.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.367" endtime="20201115 22:00:05.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.363" endtime="20201115 22:00:05.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.001" endtime="20201115 22:00:05.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.444" endtime="20201115 22:00:05.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.443" endtime="20201115 22:00:05.389"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.391" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.400" endtime="20201115 22:00:05.413"></status>
</kw>
<msg timestamp="20201115 22:00:05.414" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.399" endtime="20201115 22:00:05.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.416" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.415" endtime="20201115 22:00:05.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.417" endtime="20201115 22:00:05.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.396" endtime="20201115 22:00:05.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.394" endtime="20201115 22:00:05.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.427" endtime="20201115 22:00:05.716"></status>
</kw>
<msg timestamp="20201115 22:00:05.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024167819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024170361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.425" endtime="20201115 22:00:05.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024167819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024170361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.721" endtime="20201115 22:00:05.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.729" endtime="20201115 22:00:05.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.423" endtime="20201115 22:00:05.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.421" endtime="20201115 22:00:05.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:05.735" level="INFO">${RESULT} = [{'time': 0.024170361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.024232542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:05.732" endtime="20201115 22:00:05.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:05.749" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:05.736" endtime="20201115 22:00:05.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.753" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:05.752" endtime="20201115 22:00:05.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.755" level="INFO">VALUE: [2.54200000000121e-06, 2.8340000000001697e-06, 2.5700000000003498e-06, 2.54200000000121e-06, 2.833000000000696e-06, 2.51400000000207e-06, 2.5139999999986007e-06, 2.819000000001126e-06, 2.5279999999981706e-06, 2.54200000000121e-06, 2.8189999999976567e-06, 2.54200000000121e-06, 2.569000000000876e-06, 2.848000000003209e-06, 2.471999999999891e-06, 2.5139999999986007e-06, 2.819000000001126e-06, 2.5549999999978368e-06, 2.52800000000164e-06, 2.7639999999988507e-06, 2.540999999998267e-06, 2.55600000000078e-06, 2.8340000000001697e-06, 2.54200000000121e-06, 2.55600000000078e-06, 2.819000000001126e-06, 2.5279999999981706e-06, 2.5139999999986007e-06, 2.833000000000696e-06, 2.54200000000121e-06, 2.54200000000121e-06, 2.8059999999975604e-06, 2.5549999999978368e-06, 2.569000000000876e-06, 2.847000000000266e-06, 2.5139999999986007e-06, 2.54200000000121e-06, 2.819000000001126e-06, 2.5410000000017363e-06, 2.485999999999461e-06, 2.8189999999976567e-06, 2.5279999999981706e-06, 2.5700000000003498e-06, 2.790999999998517e-06, 2.485999999999461e-06, 2.526999999998697e-06, 2.833000000000696e-06, 2.54200000000121e-06, 2.5549999999978368e-06, 2.7779999999984206e-06]</msg>
<status status="PASS" starttime="20201115 22:00:05.754" endtime="20201115 22:00:05.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.749" endtime="20201115 22:00:05.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.759" endtime="20201115 22:00:05.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:05.762" endtime="20201115 22:00:05.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.760" endtime="20201115 22:00:05.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.757" endtime="20201115 22:00:05.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.392" endtime="20201115 22:00:05.783"></status>
</kw>
<msg timestamp="20201115 22:00:05.783" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.792" endtime="20201115 22:00:05.805"></status>
</kw>
<msg timestamp="20201115 22:00:05.805" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.791" endtime="20201115 22:00:05.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.815" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.806" endtime="20201115 22:00:05.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.816" endtime="20201115 22:00:05.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.788" endtime="20201115 22:00:05.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.786" endtime="20201115 22:00:05.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.825" endtime="20201115 22:00:06.112"></status>
</kw>
<msg timestamp="20201115 22:00:06.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022299083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.823" endtime="20201115 22:00:06.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022299083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.116" endtime="20201115 22:00:06.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.124" endtime="20201115 22:00:06.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.821" endtime="20201115 22:00:06.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.819" endtime="20201115 22:00:06.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:06.131" level="INFO">${RESULT} = [{'time': 0.022301611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.022363764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:06.128" endtime="20201115 22:00:06.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:06.144" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:06.132" endtime="20201115 22:00:06.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.149" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:06.148" endtime="20201115 22:00:06.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.151" level="INFO">VALUE: [2.5279999999981706e-06, 2.833000000000696e-06, 2.5419999999977405e-06, 2.5839999999999197e-06, 2.8200000000006e-06, 2.471999999999891e-06, 2.540999999998267e-06, 2.8189999999976567e-06, 2.5419999999977405e-06, 2.5419999999977405e-06, 2.8200000000006e-06, 2.5550000000013062e-06, 2.4999999999990308e-06, 2.819000000001126e-06, 2.5839999999999197e-06, 2.5139999999986007e-06, 2.77800000000189e-06, 2.540999999998267e-06, 2.540999999998267e-06, 2.8329999999972266e-06, 2.4999999999990308e-06, 2.55600000000078e-06, 2.8329999999972266e-06, 2.5419999999977405e-06, 2.5559999999973104e-06, 2.819000000001126e-06, 2.5279999999981706e-06, 2.5419999999977405e-06, 2.8189999999976567e-06, 2.5419999999977405e-06, 2.52800000000164e-06, 2.847000000000266e-06, 2.5410000000017363e-06, 2.485999999999461e-06, 2.819000000001126e-06, 2.54200000000121e-06, 2.52800000000164e-06, 2.8200000000006e-06, 2.5279999999981706e-06, 2.5549999999978368e-06, 2.8479999999997396e-06, 2.526999999998697e-06, 2.5419999999977405e-06, 2.8200000000006e-06, 2.5279999999981706e-06, 2.5559999999973104e-06, 2.833000000000696e-06, 2.52800000000164e-06, 2.5279999999981706e-06, 2.8189999999976567e-06]</msg>
<status status="PASS" starttime="20201115 22:00:06.150" endtime="20201115 22:00:06.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.145" endtime="20201115 22:00:06.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.154" endtime="20201115 22:00:06.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:06.158" endtime="20201115 22:00:06.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.156" endtime="20201115 22:00:06.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.153" endtime="20201115 22:00:06.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.784" endtime="20201115 22:00:06.178"></status>
</kw>
<msg timestamp="20201115 22:00:06.179" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.188" endtime="20201115 22:00:06.200"></status>
</kw>
<msg timestamp="20201115 22:00:06.201" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.186" endtime="20201115 22:00:06.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.203" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.202" endtime="20201115 22:00:06.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.204" endtime="20201115 22:00:06.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.183" endtime="20201115 22:00:06.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.181" endtime="20201115 22:00:06.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.213" endtime="20201115 22:00:06.500"></status>
</kw>
<msg timestamp="20201115 22:00:06.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022514958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.212" endtime="20201115 22:00:06.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022514958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.504" endtime="20201115 22:00:06.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.512" endtime="20201115 22:00:06.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.209" endtime="20201115 22:00:06.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.207" endtime="20201115 22:00:06.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:06.519" level="INFO">${RESULT} = [{'time': 0.022514958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5410000000017363e-06, 'source_diff': 2.5410000000017363e-06}, {'time': 0.02257675, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:06.516" endtime="20201115 22:00:06.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:06.532" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:06.520" endtime="20201115 22:00:06.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.537" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:06.536" endtime="20201115 22:00:06.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.539" level="INFO">VALUE: [2.5410000000017363e-06, 2.8889999999989757e-06, 2.54200000000121e-06, 2.52800000000164e-06, 2.819000000001126e-06, 2.54200000000121e-06, 2.5699999999968803e-06, 2.8479999999997396e-06, 2.471999999999891e-06, 2.485999999999461e-06, 2.874999999999406e-06, 2.54200000000121e-06, 2.5550000000013062e-06, 2.8200000000006e-06, 2.5700000000003498e-06, 2.5139999999986007e-06, 2.7779999999984206e-06, 2.55600000000078e-06, 2.55600000000078e-06, 2.8200000000006e-06, 2.583000000000446e-06, 2.55600000000078e-06, 2.8340000000001697e-06, 2.5550000000013062e-06, 2.55600000000078e-06, 2.8189999999976567e-06, 2.5279999999981706e-06, 2.54200000000121e-06, 2.847000000000266e-06, 2.52800000000164e-06, 2.583000000000446e-06, 2.8059999999975604e-06, 2.5419999999977405e-06, 2.540999999998267e-06, 2.833000000000696e-06, 2.569000000000876e-06, 2.52800000000164e-06, 2.77800000000189e-06, 2.5139999999986007e-06, 2.5139999999986007e-06, 2.8479999999997396e-06, 2.5700000000003498e-06, 2.5410000000017363e-06, 2.819000000001126e-06, 2.52800000000164e-06, 2.5279999999981706e-06, 2.80600000000103e-06, 2.4729999999993646e-06, 2.5419999999977405e-06, 2.804999999998087e-06]</msg>
<status status="PASS" starttime="20201115 22:00:06.538" endtime="20201115 22:00:06.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.533" endtime="20201115 22:00:06.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.542" endtime="20201115 22:00:06.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:06.545" endtime="20201115 22:00:06.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.544" endtime="20201115 22:00:06.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.541" endtime="20201115 22:00:06.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.179" endtime="20201115 22:00:06.566"></status>
</kw>
<msg timestamp="20201115 22:00:06.567" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.575" endtime="20201115 22:00:06.589"></status>
</kw>
<msg timestamp="20201115 22:00:06.589" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.574" endtime="20201115 22:00:06.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.592" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.590" endtime="20201115 22:00:06.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.593" endtime="20201115 22:00:06.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.571" endtime="20201115 22:00:06.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.569" endtime="20201115 22:00:06.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.602" endtime="20201115 22:00:06.889"></status>
</kw>
<msg timestamp="20201115 22:00:06.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022188667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022191236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.600" endtime="20201115 22:00:06.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022188667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022191236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.893" endtime="20201115 22:00:06.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.901" endtime="20201115 22:00:06.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.598" endtime="20201115 22:00:06.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.596" endtime="20201115 22:00:06.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:06.908" level="INFO">${RESULT} = [{'time': 0.022191236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.569000000000876e-06, 'source_diff': 2.569000000000876e-06}, {'time': 0.022253014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:06.904" endtime="20201115 22:00:06.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:06.921" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:06.909" endtime="20201115 22:00:06.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.925" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:06.924" endtime="20201115 22:00:06.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.928" level="INFO">VALUE: [2.569000000000876e-06, 2.833000000000696e-06, 2.52800000000164e-06, 2.55600000000078e-06, 2.833000000000696e-06, 2.5410000000017363e-06, 2.54200000000121e-06, 2.8200000000006e-06, 2.5410000000017363e-06, 2.5410000000017363e-06, 2.7500000000027502e-06, 2.5550000000013062e-06, 2.5279999999981706e-06, 2.8889999999989757e-06, 2.5130000000025965e-06, 2.54200000000121e-06, 2.833000000000696e-06, 2.540999999998267e-06, 2.583000000000446e-06, 2.8189999999976567e-06, 2.54200000000121e-06, 2.55600000000078e-06, 2.833000000000696e-06, 2.5000000000025002e-06, 2.5139999999986007e-06, 2.804999999998087e-06, 2.4999999999990308e-06, 2.584000000003389e-06, 2.8479999999997396e-06, 2.4999999999990308e-06, 2.5419999999977405e-06, 2.80600000000103e-06, 2.54200000000121e-06, 2.5839999999999197e-06, 2.833000000000696e-06, 2.569000000000876e-06, 2.5279999999981706e-06, 2.8340000000001697e-06, 2.583000000000446e-06, 2.5410000000017363e-06, 2.8340000000001697e-06, 2.55600000000078e-06, 2.540999999998267e-06, 2.847000000000266e-06, 2.54200000000121e-06, 2.55600000000078e-06, 2.8200000000006e-06, 2.5410000000017363e-06, 2.5700000000003498e-06, 2.819000000001126e-06]</msg>
<status status="PASS" starttime="20201115 22:00:06.926" endtime="20201115 22:00:06.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.922" endtime="20201115 22:00:06.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.931" endtime="20201115 22:00:06.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:06.935" endtime="20201115 22:00:06.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.933" endtime="20201115 22:00:06.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.929" endtime="20201115 22:00:06.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.567" endtime="20201115 22:00:06.955"></status>
</kw>
<msg timestamp="20201115 22:00:06.955" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.964" endtime="20201115 22:00:06.978"></status>
</kw>
<msg timestamp="20201115 22:00:06.978" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.963" endtime="20201115 22:00:06.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.981" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.979" endtime="20201115 22:00:06.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.982" endtime="20201115 22:00:06.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.960" endtime="20201115 22:00:06.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.958" endtime="20201115 22:00:06.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.991" endtime="20201115 22:00:07.278"></status>
</kw>
<msg timestamp="20201115 22:00:07.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.989" endtime="20201115 22:00:07.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.282" endtime="20201115 22:00:07.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.290" endtime="20201115 22:00:07.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.986" endtime="20201115 22:00:07.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.985" endtime="20201115 22:00:07.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:07.297" level="INFO">${RESULT} = [{'time': 0.021992653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.022054403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:07.293" endtime="20201115 22:00:07.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:07.310" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:07.298" endtime="20201115 22:00:07.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.314" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:07.313" endtime="20201115 22:00:07.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.317" level="INFO">VALUE: [2.5000000000025002e-06, 2.749999999999281e-06, 2.5410000000017363e-06, 2.5549999999978368e-06, 2.819000000001126e-06, 2.5419999999977405e-06, 2.54200000000121e-06, 2.847000000000266e-06, 2.5279999999981706e-06, 2.51400000000207e-06, 2.833000000000696e-06, 2.5419999999977405e-06, 2.526999999998697e-06, 2.874999999999406e-06, 2.55600000000078e-06, 2.583000000000446e-06, 2.833000000000696e-06, 2.52800000000164e-06, 2.5139999999986007e-06, 2.8200000000006e-06, 2.4729999999993646e-06, 2.52800000000164e-06, 2.79200000000146e-06, 2.54200000000121e-06, 2.52800000000164e-06, 2.833000000000696e-06, 2.5410000000017363e-06, 2.5410000000017363e-06, 2.874999999999406e-06, 2.526999999998697e-06, 2.54200000000121e-06, 2.847000000000266e-06, 2.52800000000164e-06, 2.54200000000121e-06, 2.8200000000006e-06, 2.54200000000121e-06, 2.54200000000121e-06, 2.8340000000001697e-06, 2.52800000000164e-06, 2.55600000000078e-06, 2.8610000000033053e-06, 2.5419999999977405e-06, 2.485999999999461e-06, 2.833000000000696e-06, 2.54200000000121e-06, 2.54200000000121e-06, 2.8340000000001697e-06, 2.5700000000003498e-06, 2.4999999999990308e-06, 2.833000000000696e-06]</msg>
<status status="PASS" starttime="20201115 22:00:07.315" endtime="20201115 22:00:07.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.311" endtime="20201115 22:00:07.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.320" endtime="20201115 22:00:07.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:07.324" endtime="20201115 22:00:07.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.322" endtime="20201115 22:00:07.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.319" endtime="20201115 22:00:07.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.956" endtime="20201115 22:00:07.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.390" endtime="20201115 22:00:07.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.389" endtime="20201115 22:00:07.345"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.347" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.356" endtime="20201115 22:00:07.368"></status>
</kw>
<msg timestamp="20201115 22:00:07.369" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.354" endtime="20201115 22:00:07.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.371" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.370" endtime="20201115 22:00:07.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.372" endtime="20201115 22:00:07.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.352" endtime="20201115 22:00:07.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.350" endtime="20201115 22:00:07.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.381" endtime="20201115 22:00:07.668"></status>
</kw>
<msg timestamp="20201115 22:00:07.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024323181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024325875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.380" endtime="20201115 22:00:07.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024323181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024325875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.672" endtime="20201115 22:00:07.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.680" endtime="20201115 22:00:07.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.377" endtime="20201115 22:00:07.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.375" endtime="20201115 22:00:07.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:07.687" level="INFO">${RESULT} = [{'time': 0.024325875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.024392403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:07.684" endtime="20201115 22:00:07.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:07.701" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:07.688" endtime="20201115 22:00:07.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.705" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:07.704" endtime="20201115 22:00:07.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.708" level="INFO">VALUE: [2.694000000001001e-06, 2.972000000000391e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.972000000000391e-06, 2.749999999999281e-06, 2.6660000000018613e-06, 2.972000000000391e-06, 2.681000000000905e-06, 2.695000000000475e-06, 2.972000000000391e-06, 2.681000000000905e-06, 2.6809999999974354e-06, 2.972000000000391e-06, 2.653000000001765e-06, 2.6809999999974354e-06, 2.972000000000391e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.915999999998642e-06, 2.6250000000026252e-06, 2.681000000000905e-06, 2.972000000000391e-06, 2.679999999997962e-06, 2.708000000000571e-06, 2.9579999999973516e-06, 2.679999999997962e-06, 2.695000000000475e-06, 2.958000000000821e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.9719999999969215e-06, 2.665999999998392e-06, 2.667000000001335e-06, 3.0000000000030003e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.985999999999961e-06, 2.679999999997962e-06, 2.7079999999971016e-06, 2.985999999999961e-06, 2.708000000000571e-06, 2.722000000000141e-06, 2.945000000000725e-06, 2.681000000000905e-06, 2.6249999999991558e-06, 3.0139999999991007e-06, 2.6809999999974354e-06, 2.679999999997962e-06, 2.9590000000002947e-06]</msg>
<status status="PASS" starttime="20201115 22:00:07.706" endtime="20201115 22:00:07.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.702" endtime="20201115 22:00:07.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.712" endtime="20201115 22:00:07.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:07.715" endtime="20201115 22:00:07.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.713" endtime="20201115 22:00:07.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.710" endtime="20201115 22:00:07.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.347" endtime="20201115 22:00:07.736"></status>
</kw>
<msg timestamp="20201115 22:00:07.736" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.745" endtime="20201115 22:00:07.758"></status>
</kw>
<msg timestamp="20201115 22:00:07.759" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.743" endtime="20201115 22:00:07.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.761" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.760" endtime="20201115 22:00:07.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.762" endtime="20201115 22:00:07.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.740" endtime="20201115 22:00:07.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.738" endtime="20201115 22:00:07.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.771" endtime="20201115 22:00:08.057"></status>
</kw>
<msg timestamp="20201115 22:00:08.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021858375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.770" endtime="20201115 22:00:08.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021858375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.061" endtime="20201115 22:00:08.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.070" endtime="20201115 22:00:08.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.767" endtime="20201115 22:00:08.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.765" endtime="20201115 22:00:08.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:08.076" level="INFO">${RESULT} = [{'time': 0.021861069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.021927722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:08.073" endtime="20201115 22:00:08.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:08.089" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:08.077" endtime="20201115 22:00:08.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.094" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:08.093" endtime="20201115 22:00:08.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.097" level="INFO">VALUE: [2.694000000001001e-06, 2.972000000000391e-06, 2.6249999999991558e-06, 2.7500000000027502e-06, 2.9869999999994346e-06, 2.695000000000475e-06, 2.681000000000905e-06, 2.999999999999531e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.972000000000391e-06, 2.679999999997962e-06, 2.708000000000571e-06, 2.9729999999998646e-06, 2.695000000000475e-06, 2.6939999999975317e-06, 2.9590000000002947e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.945000000000725e-06, 2.679999999997962e-06, 2.679999999997962e-06, 2.9719999999969215e-06, 2.681000000000905e-06, 2.610999999999586e-06, 2.958000000000821e-06, 2.735999999999711e-06, 2.695000000000475e-06, 2.915999999998642e-06, 2.6800000000014312e-06, 2.679999999997962e-06, 2.972000000000391e-06, 2.679999999997962e-06, 2.694000000001001e-06, 2.999999999999531e-06, 2.694000000001001e-06, 2.6249999999991558e-06, 2.958000000000821e-06, 2.667000000001335e-06, 2.7090000000000447e-06, 2.985999999999961e-06, 2.7090000000000447e-06, 2.653000000001765e-06, 3.0139999999991007e-06, 2.667000000001335e-06, 2.695000000000475e-06, 2.958000000000821e-06, 2.679999999997962e-06, 2.6249999999991558e-06, 2.944000000001251e-06]</msg>
<status status="PASS" starttime="20201115 22:00:08.095" endtime="20201115 22:00:08.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.091" endtime="20201115 22:00:08.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.100" endtime="20201115 22:00:08.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:08.103" endtime="20201115 22:00:08.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.102" endtime="20201115 22:00:08.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.098" endtime="20201115 22:00:08.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.736" endtime="20201115 22:00:08.124"></status>
</kw>
<msg timestamp="20201115 22:00:08.124" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.133" endtime="20201115 22:00:08.147"></status>
</kw>
<msg timestamp="20201115 22:00:08.147" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.131" endtime="20201115 22:00:08.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.149" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.148" endtime="20201115 22:00:08.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.151" endtime="20201115 22:00:08.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.129" endtime="20201115 22:00:08.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.127" endtime="20201115 22:00:08.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.159" endtime="20201115 22:00:08.446"></status>
</kw>
<msg timestamp="20201115 22:00:08.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.158" endtime="20201115 22:00:08.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021802167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.450" endtime="20201115 22:00:08.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.458" endtime="20201115 22:00:08.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.155" endtime="20201115 22:00:08.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.154" endtime="20201115 22:00:08.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:08.464" level="INFO">${RESULT} = [{'time': 0.021802167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.021868931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:08.461" endtime="20201115 22:00:08.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:08.478" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:08.466" endtime="20201115 22:00:08.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.483" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:08.482" endtime="20201115 22:00:08.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.485" level="INFO">VALUE: [2.735999999999711e-06, 2.9590000000002947e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.972000000000391e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.958000000000821e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.972000000000391e-06, 2.6800000000014312e-06, 2.6249999999991558e-06, 2.8750000000028753e-06, 2.6520000000022914e-06, 2.6800000000014312e-06, 2.889000000002445e-06, 2.6949999999970053e-06, 2.6809999999974354e-06, 2.972000000000391e-06, 2.6809999999974354e-06, 2.695000000000475e-06, 2.958000000000821e-06, 2.6949999999970053e-06, 2.695000000000475e-06, 2.958000000000821e-06, 2.653000000001765e-06, 2.735999999999711e-06, 2.9579999999973516e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.958000000000821e-06, 2.6669999999978655e-06, 2.6520000000022914e-06, 2.985999999999961e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.9590000000002947e-06, 2.694000000001001e-06, 2.6380000000027215e-06, 2.985999999999961e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.958000000000821e-06, 2.6389999999987257e-06, 2.695000000000475e-06, 2.985999999999961e-06, 2.708000000000571e-06, 2.681000000000905e-06, 2.9590000000002947e-06]</msg>
<status status="PASS" starttime="20201115 22:00:08.484" endtime="20201115 22:00:08.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.479" endtime="20201115 22:00:08.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.488" endtime="20201115 22:00:08.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:08.492" endtime="20201115 22:00:08.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.490" endtime="20201115 22:00:08.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.486" endtime="20201115 22:00:08.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.125" endtime="20201115 22:00:08.512"></status>
</kw>
<msg timestamp="20201115 22:00:08.512" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.521" endtime="20201115 22:00:08.535"></status>
</kw>
<msg timestamp="20201115 22:00:08.535" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.520" endtime="20201115 22:00:08.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.538" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.536" endtime="20201115 22:00:08.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.539" endtime="20201115 22:00:08.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.517" endtime="20201115 22:00:08.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.515" endtime="20201115 22:00:08.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.548" endtime="20201115 22:00:08.836"></status>
</kw>
<msg timestamp="20201115 22:00:08.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.546" endtime="20201115 22:00:08.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.840" endtime="20201115 22:00:08.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.848" endtime="20201115 22:00:08.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.544" endtime="20201115 22:00:08.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.542" endtime="20201115 22:00:08.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:08.855" level="INFO">${RESULT} = [{'time': 0.021925764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.0219925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:08.852" endtime="20201115 22:00:08.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:08.868" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:08.856" endtime="20201115 22:00:08.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.873" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:08.872" endtime="20201115 22:00:08.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.875" level="INFO">VALUE: [2.667000000001335e-06, 2.972000000000391e-06, 2.749999999999281e-06, 2.667000000001335e-06, 2.972000000000391e-06, 2.7639999999988507e-06, 2.667000000001335e-06, 2.9729999999998646e-06, 2.665999999998392e-06, 2.708000000000571e-06, 2.9590000000002947e-06, 2.681000000000905e-06, 2.6249999999991558e-06, 2.972000000000391e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.9860000000034304e-06, 2.665999999998392e-06, 2.694000000001001e-06, 2.915999999998642e-06, 2.6800000000014312e-06, 2.651999999998822e-06, 2.9590000000002947e-06, 2.7079999999971016e-06, 2.679999999997962e-06, 2.9579999999973516e-06, 2.6249999999991558e-06, 2.694000000001001e-06, 2.958000000000821e-06, 2.694000000001001e-06, 2.6389999999987257e-06, 2.945000000000725e-06, 2.6389999999987257e-06, 2.653000000001765e-06, 2.958000000000821e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.958000000000821e-06, 2.7219999999966715e-06, 2.681000000000905e-06, 2.9300000000016813e-06, 2.681000000000905e-06, 2.6809999999974354e-06, 2.985999999999961e-06, 2.735999999999711e-06, 2.681000000000905e-06, 2.972000000000391e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.9449999999972554e-06]</msg>
<status status="PASS" starttime="20201115 22:00:08.874" endtime="20201115 22:00:08.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.869" endtime="20201115 22:00:08.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.878" endtime="20201115 22:00:08.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:08.882" endtime="20201115 22:00:08.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.880" endtime="20201115 22:00:08.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.877" endtime="20201115 22:00:08.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.513" endtime="20201115 22:00:08.905"></status>
</kw>
<msg timestamp="20201115 22:00:08.905" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.918" endtime="20201115 22:00:08.931"></status>
</kw>
<msg timestamp="20201115 22:00:08.932" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.916" endtime="20201115 22:00:08.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.934" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.933" endtime="20201115 22:00:08.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.935" endtime="20201115 22:00:08.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.912" endtime="20201115 22:00:08.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.909" endtime="20201115 22:00:08.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.944" endtime="20201115 22:00:09.231"></status>
</kw>
<msg timestamp="20201115 22:00:09.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029282208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029284889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.943" endtime="20201115 22:00:09.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029282208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029284889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.235" endtime="20201115 22:00:09.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.243" endtime="20201115 22:00:09.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.940" endtime="20201115 22:00:09.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.939" endtime="20201115 22:00:09.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:09.250" level="INFO">${RESULT} = [{'time': 0.029284889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.029351764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:09.247" endtime="20201115 22:00:09.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:09.263" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:09.251" endtime="20201115 22:00:09.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.268" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:09.267" endtime="20201115 22:00:09.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.270" level="INFO">VALUE: [2.681000000000905e-06, 2.9579999999973516e-06, 2.6669999999978655e-06, 2.6939999999975317e-06, 3.0279999999986706e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.945000000000725e-06, 2.6809999999974354e-06, 2.6389999999987257e-06, 2.9729999999998646e-06, 2.6660000000018613e-06, 2.695000000000475e-06, 2.9869999999994346e-06, 2.6669999999978655e-06, 2.6520000000022914e-06, 2.985999999999961e-06, 2.708000000000571e-06, 2.681000000000905e-06, 2.972000000000391e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.972000000000391e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.958000000000821e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.972000000000391e-06, 2.597000000000016e-06, 2.651999999998822e-06, 2.9860000000034304e-06, 2.6939999999975317e-06, 2.665999999998392e-06, 2.9579999999973516e-06, 2.6939999999975317e-06, 2.723000000003084e-06, 2.9450000000041943e-06, 2.6800000000049007e-06, 2.6950000000039442e-06, 2.9589999999968253e-06, 2.76400000000232e-06, 2.6810000000043743e-06, 2.9580000000042905e-06, 2.665999999998392e-06, 2.6949999999970053e-06, 2.972999999996395e-06, 2.6940000000044706e-06, 2.651999999998822e-06, 2.959000000003764e-06]</msg>
<status status="PASS" starttime="20201115 22:00:09.269" endtime="20201115 22:00:09.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.264" endtime="20201115 22:00:09.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.273" endtime="20201115 22:00:09.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:09.277" endtime="20201115 22:00:09.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.275" endtime="20201115 22:00:09.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.272" endtime="20201115 22:00:09.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.906" endtime="20201115 22:00:09.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.346" endtime="20201115 22:00:09.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.345" endtime="20201115 22:00:09.298"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.300" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.309" endtime="20201115 22:00:09.323"></status>
</kw>
<msg timestamp="20201115 22:00:09.324" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.307" endtime="20201115 22:00:09.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.326" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.325" endtime="20201115 22:00:09.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.327" endtime="20201115 22:00:09.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.305" endtime="20201115 22:00:09.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.303" endtime="20201115 22:00:09.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.336" endtime="20201115 22:00:09.623"></status>
</kw>
<msg timestamp="20201115 22:00:09.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024482972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024485806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.335" endtime="20201115 22:00:09.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024482972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024485806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.627" endtime="20201115 22:00:09.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.636" endtime="20201115 22:00:09.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.332" endtime="20201115 22:00:09.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.331" endtime="20201115 22:00:09.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:09.642" level="INFO">${RESULT} = [{'time': 0.024485806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8340000000001697e-06, 'source_diff': 2.8340000000001697e-06}, {'time': 0.024557528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:09.639" endtime="20201115 22:00:09.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:09.655" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:09.643" endtime="20201115 22:00:09.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.660" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:09.659" endtime="20201115 22:00:09.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.662" level="INFO">VALUE: [2.8340000000001697e-06, 3.111000000000086e-06, 2.833000000000696e-06, 2.833000000000696e-06, 3.0979999999999897e-06, 2.80600000000103e-06, 2.819000000001126e-06, 3.097000000000516e-06, 2.8340000000001697e-06, 2.8199999999971304e-06, 3.111000000000086e-06, 2.7639999999988507e-06, 2.874999999999406e-06, 3.097000000000516e-06, 2.7919999999979905e-06, 2.8059999999975604e-06, 3.111000000000086e-06, 2.833000000000696e-06, 2.804999999998087e-06, 3.111000000000086e-06, 2.749999999999281e-06, 2.860999999999836e-06, 3.111000000000086e-06, 2.819000000001126e-06, 2.8329999999972266e-06, 3.0969999999970466e-06, 2.8050000000015562e-06, 2.833000000000696e-06, 3.111000000000086e-06, 2.8199999999971304e-06, 2.819000000001126e-06, 3.097000000000516e-06, 2.8050000000015562e-06, 2.80600000000103e-06, 3.097000000000516e-06, 2.79200000000146e-06, 2.8050000000015562e-06, 3.0840000000004197e-06, 2.8200000000006e-06, 2.847000000000266e-06, 3.111000000000086e-06, 2.8200000000006e-06, 2.819000000001126e-06, 3.0689999999979067e-06, 2.874999999999406e-06, 2.8340000000001697e-06, 3.0979999999999897e-06, 2.8200000000006e-06, 2.804999999998087e-06, 3.1250000000031253e-06]</msg>
<status status="PASS" starttime="20201115 22:00:09.661" endtime="20201115 22:00:09.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.656" endtime="20201115 22:00:09.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.665" endtime="20201115 22:00:09.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:09.669" endtime="20201115 22:00:09.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.667" endtime="20201115 22:00:09.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.664" endtime="20201115 22:00:09.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.301" endtime="20201115 22:00:09.690"></status>
</kw>
<msg timestamp="20201115 22:00:09.690" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.699" endtime="20201115 22:00:09.718"></status>
</kw>
<msg timestamp="20201115 22:00:09.718" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.697" endtime="20201115 22:00:09.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.721" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.719" endtime="20201115 22:00:09.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.723" endtime="20201115 22:00:09.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.694" endtime="20201115 22:00:09.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.692" endtime="20201115 22:00:09.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.732" endtime="20201115 22:00:10.019"></status>
</kw>
<msg timestamp="20201115 22:00:10.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02197925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021982042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:09.731" endtime="20201115 22:00:10.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02197925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021982042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:10.023" endtime="20201115 22:00:10.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.031" endtime="20201115 22:00:10.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.728" endtime="20201115 22:00:10.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.726" endtime="20201115 22:00:10.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:10.038" level="INFO">${RESULT} = [{'time': 0.021982042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.022053778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:10.035" endtime="20201115 22:00:10.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:10.051" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:10.039" endtime="20201115 22:00:10.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.056" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:10.055" endtime="20201115 22:00:10.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.058" level="INFO">VALUE: [2.79200000000146e-06, 3.097000000000516e-06, 2.80600000000103e-06, 2.8200000000006e-06, 3.124999999999656e-06, 2.8200000000006e-06, 2.819000000001126e-06, 3.0840000000004197e-06, 2.8340000000001697e-06, 2.7639999999988507e-06, 3.1250000000031253e-06, 2.8189999999976567e-06, 2.804999999998087e-06, 3.111000000000086e-06, 2.7779999999984206e-06, 2.819000000001126e-06, 3.097000000000516e-06, 2.860999999999836e-06, 2.8200000000006e-06, 3.124999999999656e-06, 2.874999999999406e-06, 2.847000000000266e-06, 3.151999999999322e-06, 2.819000000001126e-06, 2.80600000000103e-06, 3.0969999999970466e-06, 2.833000000000696e-06, 2.819000000001126e-06, 3.151999999999322e-06, 2.8189999999976567e-06, 2.79200000000146e-06, 3.097000000000516e-06, 2.79200000000146e-06, 2.7779999999984206e-06, 3.1529999999987957e-06, 2.819000000001126e-06, 2.8050000000015562e-06, 3.1119999999995596e-06, 2.8050000000015562e-06, 2.8199999999971304e-06, 3.097000000000516e-06, 2.8189999999976567e-06, 2.76400000000232e-06, 3.111000000000086e-06, 2.7910000000019863e-06, 2.8200000000006e-06, 3.124999999999656e-06, 2.819000000001126e-06, 2.8750000000028753e-06, 3.0979999999999897e-06]</msg>
<status status="PASS" starttime="20201115 22:00:10.057" endtime="20201115 22:00:10.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.052" endtime="20201115 22:00:10.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.061" endtime="20201115 22:00:10.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:10.065" endtime="20201115 22:00:10.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.063" endtime="20201115 22:00:10.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.060" endtime="20201115 22:00:10.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.690" endtime="20201115 22:00:10.085"></status>
</kw>
<msg timestamp="20201115 22:00:10.085" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.095" endtime="20201115 22:00:10.108"></status>
</kw>
<msg timestamp="20201115 22:00:10.109" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.093" endtime="20201115 22:00:10.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.111" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.110" endtime="20201115 22:00:10.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.112" endtime="20201115 22:00:10.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.090" endtime="20201115 22:00:10.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.088" endtime="20201115 22:00:10.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.121" endtime="20201115 22:00:10.409"></status>
</kw>
<msg timestamp="20201115 22:00:10.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022383153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022385917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.120" endtime="20201115 22:00:10.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022383153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022385917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.413" endtime="20201115 22:00:10.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.421" endtime="20201115 22:00:10.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.117" endtime="20201115 22:00:10.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.115" endtime="20201115 22:00:10.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:10.428" level="INFO">${RESULT} = [{'time': 0.022385917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.76400000000232e-06, 'source_diff': 2.76400000000232e-06}, {'time': 0.022457167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:10.424" endtime="20201115 22:00:10.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:10.441" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:10.429" endtime="20201115 22:00:10.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.445" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:10.444" endtime="20201115 22:00:10.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.448" level="INFO">VALUE: [2.76400000000232e-06, 3.0979999999999897e-06, 2.80600000000103e-06, 2.7910000000019863e-06, 3.153000000002265e-06, 2.8189999999976567e-06, 2.80600000000103e-06, 3.097000000000516e-06, 2.804999999998087e-06, 2.8329999999972266e-06, 3.0979999999999897e-06, 2.8200000000006e-06, 2.8340000000001697e-06, 3.0969999999970466e-06, 2.80600000000103e-06, 2.833000000000696e-06, 3.111000000000086e-06, 2.874999999999406e-06, 2.804999999998087e-06, 3.111000000000086e-06, 2.819000000001126e-06, 2.833000000000696e-06, 3.0840000000004197e-06, 2.8340000000001697e-06, 2.8200000000006e-06, 3.1389999999992257e-06, 2.819000000001126e-06, 2.8200000000006e-06, 3.1389999999992257e-06, 2.819000000001126e-06, 2.8189999999976567e-06, 3.069000000001376e-06, 2.8339999999967003e-06, 2.80600000000103e-06, 3.111000000000086e-06, 2.8050000000015562e-06, 2.80600000000103e-06, 3.0979999999999897e-06, 2.7919999999979905e-06, 2.80600000000103e-06, 3.111000000000086e-06, 2.8200000000006e-06, 2.8340000000001697e-06, 3.1660000000023614e-06, 2.833000000000696e-06, 2.7919999999979905e-06, 3.111000000000086e-06, 2.8200000000006e-06, 2.860999999999836e-06, 3.111000000000086e-06]</msg>
<status status="PASS" starttime="20201115 22:00:10.446" endtime="20201115 22:00:10.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.442" endtime="20201115 22:00:10.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.451" endtime="20201115 22:00:10.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:10.454" endtime="20201115 22:00:10.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.453" endtime="20201115 22:00:10.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.449" endtime="20201115 22:00:10.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.086" endtime="20201115 22:00:10.475"></status>
</kw>
<msg timestamp="20201115 22:00:10.475" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.484" endtime="20201115 22:00:10.498"></status>
</kw>
<msg timestamp="20201115 22:00:10.499" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.483" endtime="20201115 22:00:10.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.501" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.500" endtime="20201115 22:00:10.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.502" endtime="20201115 22:00:10.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.480" endtime="20201115 22:00:10.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.478" endtime="20201115 22:00:10.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.511" endtime="20201115 22:00:10.798"></status>
</kw>
<msg timestamp="20201115 22:00:10.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02222125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022224083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:10.509" endtime="20201115 22:00:10.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02222125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022224083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:10.802" endtime="20201115 22:00:10.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.810" endtime="20201115 22:00:10.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.507" endtime="20201115 22:00:10.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.505" endtime="20201115 22:00:10.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:10.816" level="INFO">${RESULT} = [{'time': 0.022224083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8329999999972266e-06, 'source_diff': 2.8329999999972266e-06}, {'time': 0.022295597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:10.813" endtime="20201115 22:00:10.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:10.830" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:10.817" endtime="20201115 22:00:10.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.834" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:10.833" endtime="20201115 22:00:10.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.837" level="INFO">VALUE: [2.8329999999972266e-06, 3.111000000000086e-06, 2.8200000000006e-06, 2.8189999999976567e-06, 3.097000000000516e-06, 2.80600000000103e-06, 2.8050000000015562e-06, 3.069000000001376e-06, 2.819000000001126e-06, 2.8340000000001697e-06, 3.05600000000128e-06, 2.8050000000015562e-06, 2.8189999999976567e-06, 3.083000000000946e-06, 2.8200000000006e-06, 2.8200000000006e-06, 3.111000000000086e-06, 2.8200000000006e-06, 2.8189999999976567e-06, 3.0559999999978105e-06, 2.8199999999971304e-06, 2.819000000001126e-06, 3.111000000000086e-06, 2.804999999998087e-06, 2.8750000000028753e-06, 3.124999999999656e-06, 2.749999999999281e-06, 2.80600000000103e-06, 3.1119999999995596e-06, 2.7639999999988507e-06, 2.8050000000015562e-06, 3.151999999999322e-06, 2.7919999999979905e-06, 2.847000000000266e-06, 3.111000000000086e-06, 2.80600000000103e-06, 2.80600000000103e-06, 3.083000000000946e-06, 2.80600000000103e-06, 2.7919999999979905e-06, 3.124999999999656e-06, 2.8200000000006e-06, 2.8050000000015562e-06, 3.111000000000086e-06, 2.8200000000006e-06, 2.7919999999979905e-06, 3.097000000000516e-06, 2.819000000001126e-06, 2.874999999999406e-06, 3.1809999999979355e-06]</msg>
<status status="PASS" starttime="20201115 22:00:10.835" endtime="20201115 22:00:10.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.831" endtime="20201115 22:00:10.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.840" endtime="20201115 22:00:10.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:10.848" endtime="20201115 22:00:10.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.846" endtime="20201115 22:00:10.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.838" endtime="20201115 22:00:10.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.476" endtime="20201115 22:00:10.869"></status>
</kw>
<msg timestamp="20201115 22:00:10.869" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.878" endtime="20201115 22:00:10.890"></status>
</kw>
<msg timestamp="20201115 22:00:10.891" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.876" endtime="20201115 22:00:10.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.893" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.892" endtime="20201115 22:00:10.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.894" endtime="20201115 22:00:10.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.873" endtime="20201115 22:00:10.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.871" endtime="20201115 22:00:10.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.903" endtime="20201115 22:00:11.189"></status>
</kw>
<msg timestamp="20201115 22:00:11.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021914292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.902" endtime="20201115 22:00:11.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021914292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.194" endtime="20201115 22:00:11.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.202" endtime="20201115 22:00:11.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.899" endtime="20201115 22:00:11.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.897" endtime="20201115 22:00:11.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:11.209" level="INFO">${RESULT} = [{'time': 0.021917111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.819000000001126e-06, 'source_diff': 2.819000000001126e-06}, {'time': 0.021988694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:11.205" endtime="20201115 22:00:11.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:11.222" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:11.210" endtime="20201115 22:00:11.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.226" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:11.225" endtime="20201115 22:00:11.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.229" level="INFO">VALUE: [2.819000000001126e-06, 3.097000000000516e-06, 2.8059999999975604e-06, 2.833000000000696e-06, 3.0979999999999897e-06, 2.874999999999406e-06, 2.80600000000103e-06, 3.1119999999995596e-06, 2.819000000001126e-06, 2.819000000001126e-06, 3.111000000000086e-06, 2.860999999999836e-06, 2.874999999999406e-06, 3.111000000000086e-06, 2.8329999999972266e-06, 2.889000000002445e-06, 3.1389999999992257e-06, 2.8200000000006e-06, 2.8200000000006e-06, 3.111000000000086e-06, 2.7779999999984206e-06, 2.7910000000019863e-06, 3.124999999999656e-06, 2.8469999999967965e-06, 2.8059999999975604e-06, 3.111000000000086e-06, 2.8189999999976567e-06, 2.8200000000006e-06, 3.0969999999970466e-06, 2.819000000001126e-06, 2.80600000000103e-06, 3.097000000000516e-06, 2.7639999999988507e-06, 2.8200000000006e-06, 3.111000000000086e-06, 2.8059999999975604e-06, 2.833000000000696e-06, 3.0840000000004197e-06, 2.80600000000103e-06, 2.7779999999984206e-06, 3.1119999999995596e-06, 2.7919999999979905e-06, 2.8340000000001697e-06, 3.0979999999999897e-06, 2.79200000000146e-06, 2.7639999999988507e-06, 3.124999999999656e-06, 2.80600000000103e-06, 2.8189999999976567e-06, 3.097000000000516e-06]</msg>
<status status="PASS" starttime="20201115 22:00:11.227" endtime="20201115 22:00:11.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.223" endtime="20201115 22:00:11.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.232" endtime="20201115 22:00:11.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.236" endtime="20201115 22:00:11.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.234" endtime="20201115 22:00:11.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.231" endtime="20201115 22:00:11.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.869" endtime="20201115 22:00:11.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.299" endtime="20201115 22:00:11.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.298" endtime="20201115 22:00:11.257"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.259" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.268" endtime="20201115 22:00:11.281"></status>
</kw>
<msg timestamp="20201115 22:00:11.282" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.266" endtime="20201115 22:00:11.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.284" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.283" endtime="20201115 22:00:11.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.285" endtime="20201115 22:00:11.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.263" endtime="20201115 22:00:11.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.261" endtime="20201115 22:00:11.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.294" endtime="20201115 22:00:11.580"></status>
</kw>
<msg timestamp="20201115 22:00:11.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024285306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024288236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.293" endtime="20201115 22:00:11.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024285306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024288236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.584" endtime="20201115 22:00:11.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.592" endtime="20201115 22:00:11.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.290" endtime="20201115 22:00:11.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.288" endtime="20201115 22:00:11.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:11.598" level="INFO">${RESULT} = [{'time': 0.024288236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9300000000016813e-06, 'source_diff': 2.9300000000016813e-06}, {'time': 0.024364722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:11.595" endtime="20201115 22:00:11.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:11.612" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:11.599" endtime="20201115 22:00:11.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.616" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:11.615" endtime="20201115 22:00:11.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.619" level="INFO">VALUE: [2.9300000000016813e-06, 3.2359999999967415e-06, 2.958000000000821e-06, 2.9590000000002947e-06, 3.222000000000641e-06, 2.945000000000725e-06, 2.9579999999973516e-06, 3.249999999999781e-06, 2.958000000000821e-06, 2.944000000001251e-06, 3.3200000000011e-06, 3.01400000000257e-06, 2.9590000000002947e-06, 3.236000000000211e-06, 2.917000000001585e-06, 2.958000000000821e-06, 3.249999999999781e-06, 2.945000000000725e-06, 2.9590000000002947e-06, 3.249999999999781e-06, 2.874999999999406e-06, 2.972000000000391e-06, 3.2779999999989207e-06, 2.917000000001585e-06, 2.9029999999985456e-06, 3.2079999999976017e-06, 2.9300000000016813e-06, 2.8889999999989757e-06, 3.236000000000211e-06, 2.931000000001155e-06, 2.915999999998642e-06, 3.249999999999781e-06, 2.9590000000002947e-06, 2.9579999999973516e-06, 3.249999999999781e-06, 2.958000000000821e-06, 2.972000000000391e-06, 3.236000000000211e-06, 2.958000000000821e-06, 2.958000000000821e-06, 3.249999999999781e-06, 2.985999999999961e-06, 2.9300000000016813e-06, 3.236000000000211e-06, 2.929999999998212e-06, 2.944000000001251e-06, 3.249999999999781e-06, 2.972000000000391e-06, 2.972000000000391e-06, 3.236000000000211e-06]</msg>
<status status="PASS" starttime="20201115 22:00:11.617" endtime="20201115 22:00:11.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.612" endtime="20201115 22:00:11.620"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.622" endtime="20201115 22:00:11.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.626" endtime="20201115 22:00:11.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.624" endtime="20201115 22:00:11.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.621" endtime="20201115 22:00:11.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.259" endtime="20201115 22:00:11.646"></status>
</kw>
<msg timestamp="20201115 22:00:11.646" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.655" endtime="20201115 22:00:11.670"></status>
</kw>
<msg timestamp="20201115 22:00:11.670" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.654" endtime="20201115 22:00:11.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.673" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.671" endtime="20201115 22:00:11.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.674" endtime="20201115 22:00:11.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.651" endtime="20201115 22:00:11.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.649" endtime="20201115 22:00:11.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.683" endtime="20201115 22:00:11.969"></status>
</kw>
<msg timestamp="20201115 22:00:11.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02233, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:00:11.681" endtime="20201115 22:00:11.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02233, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:00:11.974" endtime="20201115 22:00:11.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.982" endtime="20201115 22:00:11.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.679" endtime="20201115 22:00:11.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.677" endtime="20201115 22:00:11.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:11.988" level="INFO">${RESULT} = [{'time': 0.02233, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.958000000000821e-06, 'source_diff': 2.958000000000821e-06}, {'time': 0.022406708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3...</msg>
<status status="PASS" starttime="20201115 22:00:11.985" endtime="20201115 22:00:11.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:12.002" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:11.989" endtime="20201115 22:00:12.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.006" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:12.005" endtime="20201115 22:00:12.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.009" level="INFO">VALUE: [2.958000000000821e-06, 3.249999999999781e-06, 2.901999999999072e-06, 2.945000000000725e-06, 3.236000000000211e-06, 2.972000000000391e-06, 3.01400000000257e-06, 3.2639999999993508e-06, 2.9439999999977817e-06, 2.929999999998212e-06, 3.249999999999781e-06, 2.9719999999969215e-06, 2.9300000000016813e-06, 3.249999999999781e-06, 2.9590000000002947e-06, 3.0000000000030003e-06, 3.2369999999996846e-06, 2.985999999999961e-06, 2.958000000000821e-06, 3.2639999999993508e-06, 2.999999999999531e-06, 2.9439999999977817e-06, 3.2500000000032503e-06, 2.889000000002445e-06, 2.945000000000725e-06, 3.222000000000641e-06, 2.887999999999502e-06, 2.945000000000725e-06, 3.249999999999781e-06, 2.958000000000821e-06, 2.9309999999976855e-06, 3.249999999999781e-06, 2.958000000000821e-06, 2.931000000001155e-06, 3.236000000000211e-06, 2.9590000000002947e-06, 2.972000000000391e-06, 3.236000000000211e-06, 2.945000000000725e-06, 2.9300000000016813e-06, 3.249999999999781e-06, 2.958000000000821e-06, 2.931000000001155e-06, 3.179999999998462e-06, 2.889000000002445e-06, 2.9439999999977817e-06, 3.249999999999781e-06, 2.944000000001251e-06, 2.9729999999998646e-06, 3.236000000000211e-06]</msg>
<status status="PASS" starttime="20201115 22:00:12.008" endtime="20201115 22:00:12.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.003" endtime="20201115 22:00:12.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.012" endtime="20201115 22:00:12.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:12.016" endtime="20201115 22:00:12.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.014" endtime="20201115 22:00:12.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.011" endtime="20201115 22:00:12.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.647" endtime="20201115 22:00:12.036"></status>
</kw>
<msg timestamp="20201115 22:00:12.036" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.045" endtime="20201115 22:00:12.059"></status>
</kw>
<msg timestamp="20201115 22:00:12.059" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.044" endtime="20201115 22:00:12.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.062" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.060" endtime="20201115 22:00:12.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.063" endtime="20201115 22:00:12.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.041" endtime="20201115 22:00:12.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.039" endtime="20201115 22:00:12.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.072" endtime="20201115 22:00:12.358"></status>
</kw>
<msg timestamp="20201115 22:00:12.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021960292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.070" endtime="20201115 22:00:12.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021960292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.362" endtime="20201115 22:00:12.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.370" endtime="20201115 22:00:12.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.068" endtime="20201115 22:00:12.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.066" endtime="20201115 22:00:12.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:12.376" level="INFO">${RESULT} = [{'time': 0.021963264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.022039819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:12.373" endtime="20201115 22:00:12.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:12.390" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:12.378" endtime="20201115 22:00:12.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.394" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:12.393" endtime="20201115 22:00:12.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.397" level="INFO">VALUE: [2.972000000000391e-06, 3.236000000000211e-06, 2.945000000000725e-06, 2.958000000000821e-06, 3.2639999999993508e-06, 2.999999999999531e-06, 2.9449999999972554e-06, 3.2639999999993508e-06, 3.04200000000171e-06, 2.945000000000725e-06, 3.2779999999989207e-06, 2.972000000000391e-06, 3.0000000000030003e-06, 3.249999999999781e-06, 2.929999999998212e-06, 2.972000000000391e-06, 3.194000000001501e-06, 2.9169999999981155e-06, 2.944000000001251e-06, 3.1809999999979355e-06, 2.903000000002015e-06, 2.972000000000391e-06, 3.236000000000211e-06, 2.958000000000821e-06, 2.945000000000725e-06, 3.262999999999877e-06, 2.903000000002015e-06, 2.945000000000725e-06, 3.2219999999971716e-06, 2.931000000001155e-06, 2.972000000000391e-06, 3.249999999999781e-06, 2.9449999999972554e-06, 2.9590000000002947e-06, 3.2230000000001147e-06, 2.958000000000821e-06, 2.944000000001251e-06, 3.236000000000211e-06, 2.972000000000391e-06, 2.958000000000821e-06, 3.208000000001071e-06, 2.9169999999981155e-06, 2.972000000000391e-06, 3.1939999999980317e-06, 2.944000000001251e-06, 2.9590000000002947e-06, 3.249999999999781e-06, 2.9449999999972554e-06, 2.999999999999531e-06, 3.249999999999781e-06]</msg>
<status status="PASS" starttime="20201115 22:00:12.395" endtime="20201115 22:00:12.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.391" endtime="20201115 22:00:12.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.400" endtime="20201115 22:00:12.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:12.403" endtime="20201115 22:00:12.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.402" endtime="20201115 22:00:12.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.398" endtime="20201115 22:00:12.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.037" endtime="20201115 22:00:12.424"></status>
</kw>
<msg timestamp="20201115 22:00:12.424" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.433" endtime="20201115 22:00:12.447"></status>
</kw>
<msg timestamp="20201115 22:00:12.447" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.432" endtime="20201115 22:00:12.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.450" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.448" endtime="20201115 22:00:12.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.451" endtime="20201115 22:00:12.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.429" endtime="20201115 22:00:12.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.427" endtime="20201115 22:00:12.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.460" endtime="20201115 22:00:12.746"></status>
</kw>
<msg timestamp="20201115 22:00:12.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022080806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.458" endtime="20201115 22:00:12.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022080806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.751" endtime="20201115 22:00:12.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.759" endtime="20201115 22:00:12.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.456" endtime="20201115 22:00:12.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.454" endtime="20201115 22:00:12.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:12.766" level="INFO">${RESULT} = [{'time': 0.022080806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9729999999998646e-06, 'source_diff': 2.9729999999998646e-06}, {'time': 0.022157083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:12.763" endtime="20201115 22:00:12.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:12.780" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:12.768" endtime="20201115 22:00:12.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.785" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:12.784" endtime="20201115 22:00:12.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.787" level="INFO">VALUE: [2.9729999999998646e-06, 3.236000000000211e-06, 2.9449999999972554e-06, 2.9590000000002947e-06, 3.236000000000211e-06, 2.9579999999973516e-06, 2.958000000000821e-06, 3.236000000000211e-06, 2.958000000000821e-06, 2.972000000000391e-06, 3.236000000000211e-06, 2.972000000000391e-06, 2.9579999999973516e-06, 3.2639999999993508e-06, 2.972000000000391e-06, 2.9579999999973516e-06, 3.2639999999993508e-06, 2.9579999999973516e-06, 2.958000000000821e-06, 3.2919999999984906e-06, 2.945000000000725e-06, 2.958000000000821e-06, 3.249999999999781e-06, 2.944000000001251e-06, 2.958000000000821e-06, 3.2359999999967415e-06, 2.945000000000725e-06, 2.958000000000821e-06, 3.236000000000211e-06, 2.9439999999977817e-06, 2.9439999999977817e-06, 3.249999999999781e-06, 2.944000000001251e-06, 2.945000000000725e-06, 3.2639999999993508e-06, 2.9579999999973516e-06, 2.945000000000725e-06, 3.2230000000001147e-06, 2.9439999999977817e-06, 2.958000000000821e-06, 3.249999999999781e-06, 3.012999999999627e-06, 2.958000000000821e-06, 3.1939999999980317e-06, 2.944000000001251e-06, 2.958000000000821e-06, 3.249999999999781e-06, 3.0000000000030003e-06, 2.9439999999977817e-06, 3.249999999999781e-06]</msg>
<status status="PASS" starttime="20201115 22:00:12.786" endtime="20201115 22:00:12.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.781" endtime="20201115 22:00:12.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.790" endtime="20201115 22:00:12.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:12.794" endtime="20201115 22:00:12.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.792" endtime="20201115 22:00:12.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.789" endtime="20201115 22:00:12.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.425" endtime="20201115 22:00:12.814"></status>
</kw>
<msg timestamp="20201115 22:00:12.814" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.823" endtime="20201115 22:00:12.837"></status>
</kw>
<msg timestamp="20201115 22:00:12.837" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.822" endtime="20201115 22:00:12.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.840" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.838" endtime="20201115 22:00:12.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.841" endtime="20201115 22:00:12.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.819" endtime="20201115 22:00:12.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.817" endtime="20201115 22:00:12.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.850" endtime="20201115 22:00:13.136"></status>
</kw>
<msg timestamp="20201115 22:00:13.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022123389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.848" endtime="20201115 22:00:13.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022123389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.141" endtime="20201115 22:00:13.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.149" endtime="20201115 22:00:13.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.846" endtime="20201115 22:00:13.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.844" endtime="20201115 22:00:13.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:13.156" level="INFO">${RESULT} = [{'time': 0.022123389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.022199625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:13.153" endtime="20201115 22:00:13.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.169" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:13.157" endtime="20201115 22:00:13.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.174" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:13.173" endtime="20201115 22:00:13.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.176" level="INFO">VALUE: [2.972000000000391e-06, 3.222000000000641e-06, 2.944000000001251e-06, 2.917000000001585e-06, 3.26400000000282e-06, 2.958000000000821e-06, 2.9300000000016813e-06, 3.249999999999781e-06, 2.945000000000725e-06, 2.9590000000002947e-06, 3.236000000000211e-06, 2.9579999999973516e-06, 2.945000000000725e-06, 3.2230000000001147e-06, 2.945000000000725e-06, 2.985999999999961e-06, 3.249999999999781e-06, 2.931000000001155e-06, 2.9589999999968253e-06, 3.2359999999967415e-06, 2.999999999999531e-06, 2.944000000001251e-06, 3.2639999999993508e-06, 2.985999999999961e-06, 2.958000000000821e-06, 3.249999999999781e-06, 2.958000000000821e-06, 2.972000000000391e-06, 3.249999999999781e-06, 2.9449999999972554e-06, 2.945000000000725e-06, 3.2219999999971716e-06, 2.9590000000002947e-06, 2.9590000000002947e-06, 3.27800000000239e-06, 2.958000000000821e-06, 2.931000000001155e-06, 3.222000000000641e-06, 2.917000000001585e-06, 2.958000000000821e-06, 3.27800000000239e-06, 2.9590000000002947e-06, 2.929999999998212e-06, 3.2369999999996846e-06, 2.9590000000002947e-06, 2.917000000001585e-06, 3.236000000000211e-06, 2.944000000001251e-06, 2.958000000000821e-06, 3.249999999999781e-06]</msg>
<status status="PASS" starttime="20201115 22:00:13.175" endtime="20201115 22:00:13.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.170" endtime="20201115 22:00:13.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.179" endtime="20201115 22:00:13.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:13.182" endtime="20201115 22:00:13.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.181" endtime="20201115 22:00:13.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.178" endtime="20201115 22:00:13.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.815" endtime="20201115 22:00:13.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.258" endtime="20201115 22:00:13.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.257" endtime="20201115 22:00:13.203"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.206" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.214" endtime="20201115 22:00:13.229"></status>
</kw>
<msg timestamp="20201115 22:00:13.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.213" endtime="20201115 22:00:13.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.232" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.231" endtime="20201115 22:00:13.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.233" endtime="20201115 22:00:13.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.210" endtime="20201115 22:00:13.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.208" endtime="20201115 22:00:13.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.242" endtime="20201115 22:00:13.529"></status>
</kw>
<msg timestamp="20201115 22:00:13.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024765944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024769042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.241" endtime="20201115 22:00:13.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024765944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024769042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.534" endtime="20201115 22:00:13.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.542" endtime="20201115 22:00:13.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.238" endtime="20201115 22:00:13.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.236" endtime="20201115 22:00:13.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:13.548" level="INFO">${RESULT} = [{'time': 0.024769042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0979999999999897e-06, 'source_diff': 3.0979999999999897e-06}, {'time': 0.024850333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:13.545" endtime="20201115 22:00:13.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.561" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:13.549" endtime="20201115 22:00:13.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.566" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:13.565" endtime="20201115 22:00:13.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.568" level="INFO">VALUE: [3.0979999999999897e-06, 3.3889999999994758e-06, 3.097000000000516e-06, 3.0840000000004197e-06, 3.3889999999994758e-06, 3.124999999999656e-06, 3.083000000000946e-06, 3.3889999999994758e-06, 3.097000000000516e-06, 3.0689999999979067e-06, 3.374999999999906e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.361000000000336e-06, 3.111000000000086e-06, 3.0840000000004197e-06, 3.374999999999906e-06, 3.124999999999656e-06, 3.083000000000946e-06, 3.3889999999994758e-06, 3.097000000000516e-06, 3.0979999999999897e-06, 3.374999999999906e-06, 3.097000000000516e-06, 3.0839999999969503e-06, 3.361000000000336e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.3889999999994758e-06, 3.181000000001405e-06, 3.0550000000018063e-06, 3.3889999999994758e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.388000000000002e-06, 3.153000000002265e-06, 3.083000000000946e-06, 3.319000000001626e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.374999999999906e-06, 3.0840000000004197e-06, 3.0840000000004197e-06, 3.361000000000336e-06, 3.0840000000004197e-06, 3.07000000000085e-06, 3.401999999999572e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.374999999999906e-06]</msg>
<status status="PASS" starttime="20201115 22:00:13.567" endtime="20201115 22:00:13.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.562" endtime="20201115 22:00:13.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.572" endtime="20201115 22:00:13.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:13.575" endtime="20201115 22:00:13.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.573" endtime="20201115 22:00:13.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.570" endtime="20201115 22:00:13.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.206" endtime="20201115 22:00:13.595"></status>
</kw>
<msg timestamp="20201115 22:00:13.596" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.604" endtime="20201115 22:00:13.620"></status>
</kw>
<msg timestamp="20201115 22:00:13.621" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.603" endtime="20201115 22:00:13.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.623" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.622" endtime="20201115 22:00:13.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.625" endtime="20201115 22:00:13.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.600" endtime="20201115 22:00:13.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.598" endtime="20201115 22:00:13.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.634" endtime="20201115 22:00:13.921"></status>
</kw>
<msg timestamp="20201115 22:00:13.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02236275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:13.632" endtime="20201115 22:00:13.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02236275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:13.925" endtime="20201115 22:00:13.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.933" endtime="20201115 22:00:13.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.630" endtime="20201115 22:00:13.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.628" endtime="20201115 22:00:13.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:13.940" level="INFO">${RESULT} = [{'time': 0.02236275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.022444056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:13.937" endtime="20201115 22:00:13.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.953" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:13.941" endtime="20201115 22:00:13.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.958" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:13.956" endtime="20201115 22:00:13.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.960" level="INFO">VALUE: [3.111000000000086e-06, 3.4029999999990457e-06, 3.0139999999991007e-06, 3.097000000000516e-06, 3.374999999999906e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.374999999999906e-06, 3.0840000000004197e-06, 3.0979999999999897e-06, 3.3889999999994758e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.361000000000336e-06, 3.097000000000516e-06, 3.083000000000946e-06, 3.3889999999994758e-06, 3.0840000000004197e-06, 3.0840000000004197e-06, 3.3889999999994758e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.361000000000336e-06, 3.1250000000031253e-06, 3.0969999999970466e-06, 3.374999999999906e-06, 3.1119999999995596e-06, 3.097000000000516e-06, 3.374999999999906e-06, 3.0979999999999897e-06, 3.083000000000946e-06, 3.4590000000007948e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.3889999999994758e-06, 3.097000000000516e-06, 3.0969999999970466e-06, 3.374999999999906e-06, 3.0829999999974766e-06, 3.153000000002265e-06, 3.3890000000029452e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.3340000000006698e-06, 3.0829999999974766e-06, 3.097000000000516e-06, 3.3339999999972003e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.374999999999906e-06]</msg>
<status status="PASS" starttime="20201115 22:00:13.959" endtime="20201115 22:00:13.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.954" endtime="20201115 22:00:13.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.963" endtime="20201115 22:00:13.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:13.966" endtime="20201115 22:00:13.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.965" endtime="20201115 22:00:13.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.962" endtime="20201115 22:00:13.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.596" endtime="20201115 22:00:13.987"></status>
</kw>
<msg timestamp="20201115 22:00:13.987" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.997" endtime="20201115 22:00:14.011"></status>
</kw>
<msg timestamp="20201115 22:00:14.012" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.995" endtime="20201115 22:00:14.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.014" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.013" endtime="20201115 22:00:14.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.015" endtime="20201115 22:00:14.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.992" endtime="20201115 22:00:14.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.990" endtime="20201115 22:00:14.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.024" endtime="20201115 22:00:14.310"></status>
</kw>
<msg timestamp="20201115 22:00:14.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.023" endtime="20201115 22:00:14.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.315" endtime="20201115 22:00:14.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.323" endtime="20201115 22:00:14.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.020" endtime="20201115 22:00:14.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.018" endtime="20201115 22:00:14.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:14.330" level="INFO">${RESULT} = [{'time': 0.022539972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.022621208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:14.326" endtime="20201115 22:00:14.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:14.343" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:14.331" endtime="20201115 22:00:14.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.347" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:14.346" endtime="20201115 22:00:14.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.350" level="INFO">VALUE: [3.111000000000086e-06, 3.361000000000336e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.388000000000002e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.3469999999972966e-06, 3.054999999998337e-06, 3.097000000000516e-06, 3.3889999999994758e-06, 3.0840000000004197e-06, 3.0969999999970466e-06, 3.4300000000021813e-06, 3.1119999999995596e-06, 3.097000000000516e-06, 3.4029999999990457e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.347000000000766e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.401999999999572e-06, 3.0969999999970466e-06, 3.0840000000004197e-06, 3.319000000001626e-06, 3.0969999999970466e-06, 3.0979999999999897e-06, 3.3889999999994758e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.347000000000766e-06, 3.124999999999656e-06, 3.0689999999979067e-06, 3.374999999999906e-06, 3.0979999999999897e-06, 3.097000000000516e-06, 3.374999999999906e-06, 3.026999999999197e-06, 3.097000000000516e-06, 3.3889999999994758e-06, 3.097000000000516e-06, 3.0829999999974766e-06, 3.374999999999906e-06, 3.111000000000086e-06, 3.151999999999322e-06, 3.4169999999986156e-06, 3.069000000001376e-06, 3.083000000000946e-06, 3.3889999999994758e-06]</msg>
<status status="PASS" starttime="20201115 22:00:14.348" endtime="20201115 22:00:14.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.344" endtime="20201115 22:00:14.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.353" endtime="20201115 22:00:14.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.356" endtime="20201115 22:00:14.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.355" endtime="20201115 22:00:14.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.351" endtime="20201115 22:00:14.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.988" endtime="20201115 22:00:14.377"></status>
</kw>
<msg timestamp="20201115 22:00:14.377" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.386" endtime="20201115 22:00:14.400"></status>
</kw>
<msg timestamp="20201115 22:00:14.400" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.385" endtime="20201115 22:00:14.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.403" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.401" endtime="20201115 22:00:14.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.404" endtime="20201115 22:00:14.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.382" endtime="20201115 22:00:14.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.380" endtime="20201115 22:00:14.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.413" endtime="20201115 22:00:14.699"></status>
</kw>
<msg timestamp="20201115 22:00:14.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02241475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:14.411" endtime="20201115 22:00:14.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02241475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:14.703" endtime="20201115 22:00:14.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.711" endtime="20201115 22:00:14.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.409" endtime="20201115 22:00:14.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.407" endtime="20201115 22:00:14.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:14.718" level="INFO">${RESULT} = [{'time': 0.022417847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.022499167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:14.715" endtime="20201115 22:00:14.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:14.731" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:14.719" endtime="20201115 22:00:14.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.736" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:14.735" endtime="20201115 22:00:14.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.738" level="INFO">VALUE: [3.097000000000516e-06, 3.4029999999990457e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.3889999999994758e-06, 3.07000000000085e-06, 3.097000000000516e-06, 3.3889999999994758e-06, 3.02800000000214e-06, 3.0550000000018063e-06, 3.3059999999980605e-06, 3.097000000000516e-06, 3.083000000000946e-06, 3.403000000002515e-06, 3.167000000001835e-06, 3.04200000000171e-06, 3.3189999999981568e-06, 3.124999999999656e-06, 3.083000000000946e-06, 3.374999999999906e-06, 3.0829999999974766e-06, 3.111000000000086e-06, 3.374999999999906e-06, 3.069000000001376e-06, 3.111000000000086e-06, 3.3889999999994758e-06, 3.083000000000946e-06, 3.124999999999656e-06, 3.3890000000029452e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.3200000000011e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.3889999999994758e-06, 3.083000000000946e-06, 3.0829999999974766e-06, 3.374999999999906e-06, 3.0559999999978105e-06, 3.0279999999986706e-06, 3.3889999999994758e-06, 3.0969999999970466e-06, 3.097000000000516e-06, 3.3889999999994758e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.3619999999998096e-06, 3.0969999999970466e-06, 3.097000000000516e-06, 3.333000000001196e-06]</msg>
<status status="PASS" starttime="20201115 22:00:14.737" endtime="20201115 22:00:14.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.732" endtime="20201115 22:00:14.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.741" endtime="20201115 22:00:14.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.745" endtime="20201115 22:00:14.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.744" endtime="20201115 22:00:14.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.740" endtime="20201115 22:00:14.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.378" endtime="20201115 22:00:14.766"></status>
</kw>
<msg timestamp="20201115 22:00:14.766" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.775" endtime="20201115 22:00:14.789"></status>
</kw>
<msg timestamp="20201115 22:00:14.790" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.773" endtime="20201115 22:00:14.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.792" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.791" endtime="20201115 22:00:14.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.793" endtime="20201115 22:00:14.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.771" endtime="20201115 22:00:14.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.769" endtime="20201115 22:00:14.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.803" endtime="20201115 22:00:15.090"></status>
</kw>
<msg timestamp="20201115 22:00:15.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021938639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.802" endtime="20201115 22:00:15.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021938639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.094" endtime="20201115 22:00:15.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.103" endtime="20201115 22:00:15.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.799" endtime="20201115 22:00:15.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.797" endtime="20201115 22:00:15.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.109" level="INFO">${RESULT} = [{'time': 0.021938639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.022020167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:15.106" endtime="20201115 22:00:15.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.122" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:15.110" endtime="20201115 22:00:15.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.127" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:15.126" endtime="20201115 22:00:15.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.129" level="INFO">VALUE: [3.111000000000086e-06, 3.3200000000011e-06, 3.0829999999974766e-06, 3.111000000000086e-06, 3.3889999999994758e-06, 3.0840000000004197e-06, 3.111000000000086e-06, 3.319000000001626e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.374999999999906e-06, 3.05600000000128e-06, 3.0840000000004197e-06, 3.361000000000336e-06, 3.1389999999992257e-06, 3.069000000001376e-06, 3.361000000000336e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.374999999999906e-06, 3.04200000000171e-06, 3.0689999999979067e-06, 3.3469999999972966e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.3889999999994758e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.333000000001196e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.4029999999990457e-06, 3.097000000000516e-06, 3.151999999999322e-06, 3.374999999999906e-06, 3.05600000000128e-06, 3.0979999999999897e-06, 3.374999999999906e-06, 3.069000000001376e-06, 3.083000000000946e-06, 3.4029999999990457e-06, 3.1389999999992257e-06, 3.083000000000946e-06, 3.361000000000336e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.3889999999994758e-06, 3.139000000002695e-06, 3.097000000000516e-06, 3.374999999999906e-06]</msg>
<status status="PASS" starttime="20201115 22:00:15.128" endtime="20201115 22:00:15.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.123" endtime="20201115 22:00:15.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.133" endtime="20201115 22:00:15.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.136" endtime="20201115 22:00:15.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.135" endtime="20201115 22:00:15.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.131" endtime="20201115 22:00:15.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.767" endtime="20201115 22:00:15.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.205" endtime="20201115 22:00:15.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.204" endtime="20201115 22:00:15.157"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.160" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.168" endtime="20201115 22:00:15.183"></status>
</kw>
<msg timestamp="20201115 22:00:15.184" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.167" endtime="20201115 22:00:15.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.186" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.185" endtime="20201115 22:00:15.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.187" endtime="20201115 22:00:15.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.164" endtime="20201115 22:00:15.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.162" endtime="20201115 22:00:15.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.196" endtime="20201115 22:00:15.483"></status>
</kw>
<msg timestamp="20201115 22:00:15.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024848764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024852, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:15.194" endtime="20201115 22:00:15.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024848764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024852, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:15.487" endtime="20201115 22:00:15.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.495" endtime="20201115 22:00:15.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.192" endtime="20201115 22:00:15.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.190" endtime="20201115 22:00:15.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.502" level="INFO">${RESULT} = [{'time': 0.024852, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.024938583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:00:15.499" endtime="20201115 22:00:15.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.515" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:15.503" endtime="20201115 22:00:15.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.520" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:15.519" endtime="20201115 22:00:15.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.522" level="INFO">VALUE: [3.236000000000211e-06, 3.526999999999697e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.5139999999996008e-06, 3.208000000001071e-06, 3.222000000000641e-06, 3.5140000000030702e-06, 3.236000000000211e-06, 3.2230000000001147e-06, 3.5279999999991707e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.5139999999996008e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.500000000000031e-06, 3.236000000000211e-06, 3.2090000000005448e-06, 3.5279999999991707e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.5140000000030702e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.5279999999991707e-06, 3.290999999999017e-06, 3.2359999999967415e-06, 3.5139999999996008e-06, 3.276999999999447e-06, 3.236000000000211e-06, 3.5139999999996008e-06, 3.2230000000001147e-06, 3.249999999999781e-06, 3.5279999999991707e-06, 3.2919999999984906e-06, 3.2219999999971716e-06, 3.526999999999697e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.513000000000127e-06, 3.2639999999993508e-06, 3.236000000000211e-06, 3.4579999999978517e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.5139999999996008e-06, 3.2919999999984906e-06, 3.236000000000211e-06, 3.52800000000264e-06]</msg>
<status status="PASS" starttime="20201115 22:00:15.521" endtime="20201115 22:00:15.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.516" endtime="20201115 22:00:15.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.526" endtime="20201115 22:00:15.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.529" endtime="20201115 22:00:15.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.527" endtime="20201115 22:00:15.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.524" endtime="20201115 22:00:15.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.160" endtime="20201115 22:00:15.550"></status>
</kw>
<msg timestamp="20201115 22:00:15.550" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.559" endtime="20201115 22:00:15.573"></status>
</kw>
<msg timestamp="20201115 22:00:15.574" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.557" endtime="20201115 22:00:15.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.576" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.575" endtime="20201115 22:00:15.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.577" endtime="20201115 22:00:15.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.554" endtime="20201115 22:00:15.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.552" endtime="20201115 22:00:15.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.586" endtime="20201115 22:00:15.873"></status>
</kw>
<msg timestamp="20201115 22:00:15.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022207472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02221075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:15.584" endtime="20201115 22:00:15.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022207472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02221075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:15.877" endtime="20201115 22:00:15.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.885" endtime="20201115 22:00:15.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.582" endtime="20201115 22:00:15.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.580" endtime="20201115 22:00:15.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.892" level="INFO">${RESULT} = [{'time': 0.02221075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.022297722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:00:15.888" endtime="20201115 22:00:15.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.905" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:15.893" endtime="20201115 22:00:15.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.916" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:15.915" endtime="20201115 22:00:15.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.918" level="INFO">VALUE: [3.27800000000239e-06, 3.5139999999996008e-06, 3.222000000000641e-06, 3.1669999999983656e-06, 3.5139999999996008e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.5139999999996008e-06, 3.1939999999980317e-06, 3.2359999999967415e-06, 3.5279999999991707e-06, 3.236000000000211e-06, 3.2219999999971716e-06, 3.5139999999996008e-06, 3.2359999999967415e-06, 3.222000000000641e-06, 3.5139999999996008e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.5419999999987406e-06, 3.2230000000001147e-06, 3.2219999999971716e-06, 3.52800000000264e-06, 3.222000000000641e-06, 3.249999999999781e-06, 3.5139999999996008e-06, 3.195000000000975e-06, 3.236000000000211e-06, 3.5279999999991707e-06, 3.236000000000211e-06, 3.2090000000005448e-06, 3.5279999999991707e-06, 3.194000000001501e-06, 3.236000000000211e-06, 3.5279999999991707e-06, 3.249999999999781e-06, 3.2369999999996846e-06, 3.4859999999969915e-06, 3.222000000000641e-06, 3.249999999999781e-06, 3.5279999999991707e-06, 3.236000000000211e-06, 3.2639999999993508e-06, 3.5139999999996008e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.500000000000031e-06, 3.2230000000001147e-06, 3.179999999998462e-06, 3.5279999999991707e-06]</msg>
<status status="PASS" starttime="20201115 22:00:15.917" endtime="20201115 22:00:15.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.912" endtime="20201115 22:00:15.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.921" endtime="20201115 22:00:15.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.925" endtime="20201115 22:00:15.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.923" endtime="20201115 22:00:15.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.920" endtime="20201115 22:00:15.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.550" endtime="20201115 22:00:15.945"></status>
</kw>
<msg timestamp="20201115 22:00:15.945" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.954" endtime="20201115 22:00:15.969"></status>
</kw>
<msg timestamp="20201115 22:00:15.969" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.953" endtime="20201115 22:00:15.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.972" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.970" endtime="20201115 22:00:15.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.973" endtime="20201115 22:00:15.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.950" endtime="20201115 22:00:15.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.948" endtime="20201115 22:00:15.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.982" endtime="20201115 22:00:16.268"></status>
</kw>
<msg timestamp="20201115 22:00:16.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.980" endtime="20201115 22:00:16.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.272" endtime="20201115 22:00:16.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.280" endtime="20201115 22:00:16.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.978" endtime="20201115 22:00:16.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.976" endtime="20201115 22:00:16.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:16.287" level="INFO">${RESULT} = [{'time': 0.021912514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.021999486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:16.283" endtime="20201115 22:00:16.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:16.300" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:16.288" endtime="20201115 22:00:16.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.305" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:16.304" endtime="20201115 22:00:16.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.308" level="INFO">VALUE: [3.222000000000641e-06, 3.5139999999996008e-06, 3.2219999999971716e-06, 3.2919999999984906e-06, 3.55600000000178e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.5419999999987406e-06, 3.2230000000001147e-06, 3.249999999999781e-06, 3.5279999999991707e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.486000000000461e-06, 3.249999999999781e-06, 3.222000000000641e-06, 3.4579999999978517e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.458000000001321e-06, 3.29200000000196e-06, 3.2230000000001147e-06, 3.500000000000031e-06, 3.249999999999781e-06, 3.222000000000641e-06, 3.5279999999991707e-06, 3.249999999999781e-06, 3.2779999999989207e-06, 3.5139999999996008e-06, 3.222000000000641e-06, 3.29200000000196e-06, 3.5279999999991707e-06, 3.2230000000001147e-06, 3.26400000000282e-06, 3.5279999999991707e-06, 3.249999999999781e-06, 3.2090000000005448e-06, 3.472000000000891e-06, 3.222000000000641e-06, 3.208000000001071e-06, 3.526999999999697e-06, 3.236000000000211e-06, 3.1809999999979355e-06, 3.5139999999996008e-06, 3.249999999999781e-06, 3.222000000000641e-06, 3.513000000000127e-06, 3.236000000000211e-06, 3.2089999999970753e-06, 3.5140000000030702e-06]</msg>
<status status="PASS" starttime="20201115 22:00:16.306" endtime="20201115 22:00:16.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.301" endtime="20201115 22:00:16.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.311" endtime="20201115 22:00:16.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.314" endtime="20201115 22:00:16.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.313" endtime="20201115 22:00:16.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.309" endtime="20201115 22:00:16.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.946" endtime="20201115 22:00:16.335"></status>
</kw>
<msg timestamp="20201115 22:00:16.335" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.344" endtime="20201115 22:00:16.358"></status>
</kw>
<msg timestamp="20201115 22:00:16.358" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.342" endtime="20201115 22:00:16.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.361" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.360" endtime="20201115 22:00:16.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.362" endtime="20201115 22:00:16.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.340" endtime="20201115 22:00:16.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.338" endtime="20201115 22:00:16.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.371" endtime="20201115 22:00:16.658"></status>
</kw>
<msg timestamp="20201115 22:00:16.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.369" endtime="20201115 22:00:16.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.663" endtime="20201115 22:00:16.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.671" endtime="20201115 22:00:16.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.367" endtime="20201115 22:00:16.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.365" endtime="20201115 22:00:16.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:16.678" level="INFO">${RESULT} = [{'time': 0.021942861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.022029722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:16.675" endtime="20201115 22:00:16.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:16.691" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:16.679" endtime="20201115 22:00:16.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.695" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:16.694" endtime="20201115 22:00:16.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.698" level="INFO">VALUE: [3.236000000000211e-06, 3.500000000000031e-06, 3.2639999999993508e-06, 3.249999999999781e-06, 3.52800000000264e-06, 3.208000000001071e-06, 3.2090000000005448e-06, 3.500000000000031e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.526999999999697e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.5279999999991707e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.52800000000264e-06, 3.2230000000001147e-06, 3.222000000000641e-06, 3.52800000000264e-06, 3.2090000000005448e-06, 3.3059999999980605e-06, 3.5279999999991707e-06, 3.222000000000641e-06, 3.2090000000005448e-06, 3.472000000000891e-06, 3.222000000000641e-06, 3.2500000000032503e-06, 3.513000000000127e-06, 3.179999999998462e-06, 3.236000000000211e-06, 3.5559999999983105e-06, 3.222000000000641e-06, 3.2219999999971716e-06, 3.500000000000031e-06, 3.249999999999781e-06, 3.222000000000641e-06, 3.540999999999267e-06, 3.2219999999971716e-06, 3.236000000000211e-06, 3.5139999999996008e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.5140000000030702e-06, 3.2369999999996846e-06, 3.2219999999971716e-06, 3.5140000000030702e-06, 3.236000000000211e-06, 3.181000000001405e-06, 3.4859999999969915e-06]</msg>
<status status="PASS" starttime="20201115 22:00:16.697" endtime="20201115 22:00:16.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.692" endtime="20201115 22:00:16.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.701" endtime="20201115 22:00:16.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.704" endtime="20201115 22:00:16.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.703" endtime="20201115 22:00:16.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.699" endtime="20201115 22:00:16.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.335" endtime="20201115 22:00:16.725"></status>
</kw>
<msg timestamp="20201115 22:00:16.725" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.734" endtime="20201115 22:00:16.749"></status>
</kw>
<msg timestamp="20201115 22:00:16.749" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.732" endtime="20201115 22:00:16.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.752" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.750" endtime="20201115 22:00:16.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.753" endtime="20201115 22:00:16.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.730" endtime="20201115 22:00:16.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.728" endtime="20201115 22:00:16.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.762" endtime="20201115 22:00:17.048"></status>
</kw>
<msg timestamp="20201115 22:00:17.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022203167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.760" endtime="20201115 22:00:17.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022203167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.053" endtime="20201115 22:00:17.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.061" endtime="20201115 22:00:17.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.758" endtime="20201115 22:00:17.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.756" endtime="20201115 22:00:17.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:17.067" level="INFO">${RESULT} = [{'time': 0.022206403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.022293139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:17.064" endtime="20201115 22:00:17.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:17.081" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:17.068" endtime="20201115 22:00:17.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.085" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:17.084" endtime="20201115 22:00:17.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.088" level="INFO">VALUE: [3.236000000000211e-06, 3.500000000000031e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.5279999999991707e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.5139999999996008e-06, 3.165999999998892e-06, 3.236000000000211e-06, 3.5139999999996008e-06, 3.2639999999993508e-06, 3.27800000000239e-06, 3.5139999999996008e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.57000000000135e-06, 3.194000000001501e-06, 3.222000000000641e-06, 3.486000000000461e-06, 3.236000000000211e-06, 3.208000000001071e-06, 3.526999999999697e-06, 3.249999999999781e-06, 3.194000000001501e-06, 3.5139999999996008e-06, 3.27800000000239e-06, 3.222000000000641e-06, 3.5139999999996008e-06, 3.2219999999971716e-06, 3.236000000000211e-06, 3.500000000000031e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.5139999999996008e-06, 3.1809999999979355e-06, 3.236000000000211e-06, 3.540999999999267e-06, 3.222000000000641e-06, 3.165999999998892e-06, 3.5279999999991707e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.5690000000018762e-06, 3.1949999999975054e-06, 3.2910000000024864e-06, 3.5279999999991707e-06, 3.1800000000019313e-06, 3.208000000001071e-06, 3.55600000000178e-06]</msg>
<status status="PASS" starttime="20201115 22:00:17.086" endtime="20201115 22:00:17.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.082" endtime="20201115 22:00:17.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.091" endtime="20201115 22:00:17.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:17.094" endtime="20201115 22:00:17.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.092" endtime="20201115 22:00:17.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.089" endtime="20201115 22:00:17.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.726" endtime="20201115 22:00:17.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.159" endtime="20201115 22:00:17.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.158" endtime="20201115 22:00:17.115"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.117" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.126" endtime="20201115 22:00:17.141"></status>
</kw>
<msg timestamp="20201115 22:00:17.141" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.124" endtime="20201115 22:00:17.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.144" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.142" endtime="20201115 22:00:17.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.145" endtime="20201115 22:00:17.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.122" endtime="20201115 22:00:17.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.120" endtime="20201115 22:00:17.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.154" endtime="20201115 22:00:17.441"></status>
</kw>
<msg timestamp="20201115 22:00:17.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024367458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024370764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.153" endtime="20201115 22:00:17.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024367458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024370764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.445" endtime="20201115 22:00:17.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.453" endtime="20201115 22:00:17.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.150" endtime="20201115 22:00:17.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.148" endtime="20201115 22:00:17.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:17.460" level="INFO">${RESULT} = [{'time': 0.024370764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3059999999980605e-06, 'source_diff': 3.3059999999980605e-06}, {'time': 0.024462792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:17.457" endtime="20201115 22:00:17.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:17.473" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:17.461" endtime="20201115 22:00:17.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.478" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:17.477" endtime="20201115 22:00:17.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.480" level="INFO">VALUE: [3.3059999999980605e-06, 3.625000000000156e-06, 3.3480000000002397e-06, 3.374999999999906e-06, 3.651999999999822e-06, 3.374999999999906e-06, 3.3050000000020563e-06, 3.653000000002765e-06, 3.3480000000002397e-06, 3.3889999999994758e-06, 3.665999999999392e-06, 3.374999999999906e-06, 3.4449999999977554e-06, 3.679999999998962e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.681000000001905e-06, 3.3889999999994758e-06, 3.361000000000336e-06, 3.665999999999392e-06, 3.374999999999906e-06, 3.3609999999968665e-06, 3.681000000001905e-06, 3.374999999999906e-06, 3.417000000002085e-06, 3.693999999998532e-06, 3.3339999999972003e-06, 3.374999999999906e-06, 3.6669999999988656e-06, 3.374999999999906e-06, 3.333000000001196e-06, 3.6809999999984355e-06, 3.374999999999906e-06, 3.3889999999994758e-06, 3.6120000000000596e-06, 3.3619999999998096e-06, 3.361000000000336e-06, 3.6389999999997258e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.665999999999392e-06, 3.374999999999906e-06, 3.319000000001626e-06, 3.6949999999980054e-06, 3.3889999999994758e-06, 3.304999999998587e-06, 3.6389999999997258e-06, 3.374999999999906e-06, 3.388000000000002e-06, 3.665999999999392e-06]</msg>
<status status="PASS" starttime="20201115 22:00:17.479" endtime="20201115 22:00:17.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.474" endtime="20201115 22:00:17.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.483" endtime="20201115 22:00:17.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:17.487" endtime="20201115 22:00:17.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.485" endtime="20201115 22:00:17.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.482" endtime="20201115 22:00:17.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.118" endtime="20201115 22:00:17.507"></status>
</kw>
<msg timestamp="20201115 22:00:17.508" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.516" endtime="20201115 22:00:17.531"></status>
</kw>
<msg timestamp="20201115 22:00:17.531" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.515" endtime="20201115 22:00:17.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.534" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.532" endtime="20201115 22:00:17.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.535" endtime="20201115 22:00:17.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.512" endtime="20201115 22:00:17.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.510" endtime="20201115 22:00:17.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.544" endtime="20201115 22:00:17.830"></status>
</kw>
<msg timestamp="20201115 22:00:17.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.543" endtime="20201115 22:00:17.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.834" endtime="20201115 22:00:17.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.842" endtime="20201115 22:00:17.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.540" endtime="20201115 22:00:17.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.539" endtime="20201115 22:00:17.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:17.850" level="INFO">${RESULT} = [{'time': 0.021949556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.022041861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:17.846" endtime="20201115 22:00:17.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:17.863" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:17.851" endtime="20201115 22:00:17.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.868" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:17.867" endtime="20201115 22:00:17.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.870" level="INFO">VALUE: [3.3889999999994758e-06, 3.6669999999988656e-06, 3.3889999999994758e-06, 3.3889999999994758e-06, 3.6529999999992957e-06, 3.374999999999906e-06, 3.3609999999968665e-06, 3.6669999999988656e-06, 3.3340000000006698e-06, 3.3889999999994758e-06, 3.7219999999976716e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.6389999999997258e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.681000000001905e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.597000000001016e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.665999999999392e-06, 3.361000000000336e-06, 3.347000000000766e-06, 3.6800000000024313e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.611000000000586e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.6809999999984355e-06, 3.374999999999906e-06, 3.333000000001196e-06, 3.6660000000028614e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.667000000002335e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.6669999999988656e-06, 3.3889999999994758e-06, 3.374999999999906e-06, 3.6529999999992957e-06, 3.3619999999998096e-06, 3.374999999999906e-06, 3.6809999999984355e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.653000000002765e-06]</msg>
<status status="PASS" starttime="20201115 22:00:17.869" endtime="20201115 22:00:17.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.864" endtime="20201115 22:00:17.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.873" endtime="20201115 22:00:17.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:17.877" endtime="20201115 22:00:17.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.875" endtime="20201115 22:00:17.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.872" endtime="20201115 22:00:17.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.508" endtime="20201115 22:00:17.898"></status>
</kw>
<msg timestamp="20201115 22:00:17.898" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.907" endtime="20201115 22:00:17.922"></status>
</kw>
<msg timestamp="20201115 22:00:17.922" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.905" endtime="20201115 22:00:17.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.925" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.923" endtime="20201115 22:00:17.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.926" endtime="20201115 22:00:17.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.902" endtime="20201115 22:00:17.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.900" endtime="20201115 22:00:17.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.935" endtime="20201115 22:00:18.222"></status>
</kw>
<msg timestamp="20201115 22:00:18.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022865528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022868903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.933" endtime="20201115 22:00:18.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022865528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022868903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.226" endtime="20201115 22:00:18.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.234" endtime="20201115 22:00:18.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.931" endtime="20201115 22:00:18.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.929" endtime="20201115 22:00:18.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:18.241" level="INFO">${RESULT} = [{'time': 0.022868903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.022960903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:18.238" endtime="20201115 22:00:18.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:18.254" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:18.242" endtime="20201115 22:00:18.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.259" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:18.258" endtime="20201115 22:00:18.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.261" level="INFO">VALUE: [3.374999999999906e-06, 3.6389999999997258e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.6669999999988656e-06, 3.361000000000336e-06, 3.3619999999998096e-06, 3.6529999999992957e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.665999999999392e-06, 3.374999999999906e-06, 3.304999999998587e-06, 3.6389999999997258e-06, 3.361000000000336e-06, 3.3340000000006698e-06, 3.653000000002765e-06, 3.374999999999906e-06, 3.3889999999994758e-06, 3.653000000002765e-06, 3.29200000000196e-06, 3.3889999999994758e-06, 3.6529999999992957e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.597000000001016e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.651999999999822e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.6529999999992957e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.651999999999822e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.665999999999392e-06, 3.374999999999906e-06, 3.3889999999994758e-06, 3.6389999999997258e-06, 3.361000000000336e-06, 3.417000000002085e-06, 3.6520000000032915e-06, 3.361000000000336e-06, 3.3750000000033753e-06, 3.7230000000006147e-06, 3.3480000000002397e-06, 3.4029999999990457e-06, 3.653000000002765e-06]</msg>
<status status="PASS" starttime="20201115 22:00:18.260" endtime="20201115 22:00:18.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.255" endtime="20201115 22:00:18.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.264" endtime="20201115 22:00:18.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:18.268" endtime="20201115 22:00:18.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.266" endtime="20201115 22:00:18.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.263" endtime="20201115 22:00:18.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.898" endtime="20201115 22:00:18.288"></status>
</kw>
<msg timestamp="20201115 22:00:18.289" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.298" endtime="20201115 22:00:18.313"></status>
</kw>
<msg timestamp="20201115 22:00:18.313" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.296" endtime="20201115 22:00:18.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.314" endtime="20201115 22:00:18.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.317" endtime="20201115 22:00:18.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.294" endtime="20201115 22:00:18.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.291" endtime="20201115 22:00:18.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.326" endtime="20201115 22:00:18.612"></status>
</kw>
<msg timestamp="20201115 22:00:18.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022331764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.324" endtime="20201115 22:00:18.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022331764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.616" endtime="20201115 22:00:18.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.624" endtime="20201115 22:00:18.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.322" endtime="20201115 22:00:18.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.320" endtime="20201115 22:00:18.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:18.631" level="INFO">${RESULT} = [{'time': 0.022331764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.022424167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:18.628" endtime="20201115 22:00:18.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:18.644" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:18.632" endtime="20201115 22:00:18.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.649" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:18.648" endtime="20201115 22:00:18.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.651" level="INFO">VALUE: [3.374999999999906e-06, 3.6529999999992957e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.597000000001016e-06, 3.4309999999981855e-06, 3.333000000001196e-06, 3.625000000000156e-06, 3.3469999999972966e-06, 3.347000000000766e-06, 3.6809999999984355e-06, 3.3609999999968665e-06, 3.3889999999994758e-06, 3.651999999999822e-06, 3.3889999999994758e-06, 3.361000000000336e-06, 3.6669999999988656e-06, 3.429999999998712e-06, 3.3189999999981568e-06, 3.6529999999992957e-06, 3.361000000000336e-06, 3.403000000002515e-06, 3.5979999999970202e-06, 3.374999999999906e-06, 3.3889999999994758e-06, 3.667000000002335e-06, 3.3619999999998096e-06, 3.3469999999972966e-06, 3.6529999999992957e-06, 3.361000000000336e-06, 3.361000000000336e-06, 3.6800000000024313e-06, 3.3890000000029452e-06, 3.3890000000029452e-06, 3.6529999999992957e-06, 3.4029999999990457e-06, 3.3890000000029452e-06, 3.6529999999992957e-06, 3.347000000000766e-06, 3.4029999999990457e-06, 3.625000000000156e-06, 3.458000000001321e-06, 3.374999999999906e-06, 3.5980000000004897e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.6389999999997258e-06, 3.361000000000336e-06, 3.29200000000196e-06, 3.6800000000024313e-06]</msg>
<status status="PASS" starttime="20201115 22:00:18.650" endtime="20201115 22:00:18.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.645" endtime="20201115 22:00:18.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.654" endtime="20201115 22:00:18.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:18.658" endtime="20201115 22:00:18.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.656" endtime="20201115 22:00:18.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.652" endtime="20201115 22:00:18.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.289" endtime="20201115 22:00:18.679"></status>
</kw>
<msg timestamp="20201115 22:00:18.679" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.688" endtime="20201115 22:00:18.701"></status>
</kw>
<msg timestamp="20201115 22:00:18.702" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.686" endtime="20201115 22:00:18.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.704" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.703" endtime="20201115 22:00:18.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.705" endtime="20201115 22:00:18.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.683" endtime="20201115 22:00:18.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.681" endtime="20201115 22:00:18.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.714" endtime="20201115 22:00:19.002"></status>
</kw>
<msg timestamp="20201115 22:00:19.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:18.713" endtime="20201115 22:00:19.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:19.006" endtime="20201115 22:00:19.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.014" endtime="20201115 22:00:19.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.710" endtime="20201115 22:00:19.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.709" endtime="20201115 22:00:19.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:19.021" level="INFO">${RESULT} = [{'time': 0.0219185, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.022010472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:19.017" endtime="20201115 22:00:19.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:19.034" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:19.022" endtime="20201115 22:00:19.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.039" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:19.037" endtime="20201115 22:00:19.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.041" level="INFO">VALUE: [3.3889999999994758e-06, 3.6389999999997258e-06, 3.3469999999972966e-06, 3.3480000000002397e-06, 3.651999999999822e-06, 3.3889999999994758e-06, 3.361000000000336e-06, 3.6529999999992957e-06, 3.388000000000002e-06, 3.3889999999994758e-06, 3.651999999999822e-06, 3.3480000000002397e-06, 3.3480000000002397e-06, 3.6529999999992957e-06, 3.361000000000336e-06, 3.374999999999906e-06, 3.6669999999988656e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.651999999999822e-06, 3.374999999999906e-06, 3.374999999999906e-06, 3.709000000001045e-06, 3.3609999999968665e-06, 3.374999999999906e-06, 3.6109999999971165e-06, 3.4169999999986156e-06, 3.361000000000336e-06, 3.681000000001905e-06, 3.3480000000002397e-06, 3.388000000000002e-06, 3.7079999999981017e-06, 3.361000000000336e-06, 3.3889999999994758e-06, 3.6669999999988656e-06, 3.3889999999994758e-06, 3.374999999999906e-06, 3.722000000001141e-06, 3.4160000000026114e-06, 3.3889999999994758e-06, 3.7219999999976716e-06, 3.3889999999994758e-06, 3.374999999999906e-06, 3.651999999999822e-06, 3.374999999999906e-06, 3.3619999999998096e-06, 3.6669999999988656e-06, 3.374999999999906e-06, 3.361000000000336e-06, 3.6669999999988656e-06]</msg>
<status status="PASS" starttime="20201115 22:00:19.040" endtime="20201115 22:00:19.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.035" endtime="20201115 22:00:19.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.045" endtime="20201115 22:00:19.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:19.048" endtime="20201115 22:00:19.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.046" endtime="20201115 22:00:19.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.043" endtime="20201115 22:00:19.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.679" endtime="20201115 22:00:19.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.116" endtime="20201115 22:00:19.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.115" endtime="20201115 22:00:19.069"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.071" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.080" endtime="20201115 22:00:19.095"></status>
</kw>
<msg timestamp="20201115 22:00:19.095" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.079" endtime="20201115 22:00:19.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.098" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.096" endtime="20201115 22:00:19.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.099" endtime="20201115 22:00:19.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.076" endtime="20201115 22:00:19.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.074" endtime="20201115 22:00:19.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.108" endtime="20201115 22:00:19.394"></status>
</kw>
<msg timestamp="20201115 22:00:19.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024710264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024713764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.106" endtime="20201115 22:00:19.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024710264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024713764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.398" endtime="20201115 22:00:19.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.406" endtime="20201115 22:00:19.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.104" endtime="20201115 22:00:19.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.102" endtime="20201115 22:00:19.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:19.413" level="INFO">${RESULT} = [{'time': 0.024713764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.024811278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:19.410" endtime="20201115 22:00:19.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:19.426" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:19.414" endtime="20201115 22:00:19.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.431" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:19.430" endtime="20201115 22:00:19.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.434" level="INFO">VALUE: [3.500000000000031e-06, 3.8059999999985605e-06, 3.5139999999996008e-06, 3.513000000000127e-06, 3.8059999999985605e-06, 3.5139999999996008e-06, 3.513000000000127e-06, 3.8200000000016e-06, 3.500000000000031e-06, 3.5279999999991707e-06, 3.8059999999985605e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.819000000002126e-06, 3.5279999999991707e-06, 3.4859999999969915e-06, 3.7919999999989906e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.7919999999989906e-06, 3.500000000000031e-06, 3.5559999999983105e-06, 3.888999999999976e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.818999999998657e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.790999999999517e-06, 3.5139999999996008e-06, 3.5140000000030702e-06, 3.861000000000836e-06, 3.52800000000264e-06, 3.458000000001321e-06, 3.8059999999985605e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.7779999999994207e-06, 3.486000000000461e-06, 3.5550000000023063e-06, 3.763999999999851e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.79200000000246e-06, 3.5279999999991707e-06, 3.472000000000891e-06, 3.790999999999517e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.8059999999985605e-06]</msg>
<status status="PASS" starttime="20201115 22:00:19.432" endtime="20201115 22:00:19.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.427" endtime="20201115 22:00:19.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.437" endtime="20201115 22:00:19.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:19.440" endtime="20201115 22:00:19.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.439" endtime="20201115 22:00:19.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.435" endtime="20201115 22:00:19.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.072" endtime="20201115 22:00:19.461"></status>
</kw>
<msg timestamp="20201115 22:00:19.461" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.470" endtime="20201115 22:00:19.485"></status>
</kw>
<msg timestamp="20201115 22:00:19.485" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.468" endtime="20201115 22:00:19.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.488" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.486" endtime="20201115 22:00:19.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.489" endtime="20201115 22:00:19.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.466" endtime="20201115 22:00:19.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.464" endtime="20201115 22:00:19.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.498" endtime="20201115 22:00:19.787"></status>
</kw>
<msg timestamp="20201115 22:00:19.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022053431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.496" endtime="20201115 22:00:19.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022053431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.791" endtime="20201115 22:00:19.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.799" endtime="20201115 22:00:19.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.494" endtime="20201115 22:00:19.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.492" endtime="20201115 22:00:19.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:19.806" level="INFO">${RESULT} = [{'time': 0.022056889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.022154583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:19.802" endtime="20201115 22:00:19.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:19.819" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:19.807" endtime="20201115 22:00:19.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.824" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:19.823" endtime="20201115 22:00:19.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.826" level="INFO">VALUE: [3.458000000001321e-06, 3.8749999999969365e-06, 3.5279999999991707e-06, 3.500000000000031e-06, 3.7779999999994207e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.736000000000711e-06, 3.5690000000018762e-06, 3.5139999999996008e-06, 3.8059999999985605e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.846999999997797e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.80600000000203e-06, 3.526999999999697e-06, 3.4449999999977554e-06, 3.8609999999973665e-06, 3.5139999999996008e-06, 3.4859999999969915e-06, 3.7919999999989906e-06, 3.5139999999996008e-06, 3.583000000001446e-06, 3.8059999999985605e-06, 3.5140000000030702e-06, 3.4309999999981855e-06, 3.8059999999985605e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.7919999999989906e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.8059999999985605e-06, 3.513000000000127e-06, 3.500000000000031e-06, 3.7779999999994207e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.80600000000203e-06, 3.54200000000221e-06, 3.4169999999986156e-06, 3.77800000000289e-06, 3.5139999999996008e-06, 3.52800000000264e-06, 3.736000000000711e-06, 3.500000000000031e-06, 3.513000000000127e-06, 3.8200000000016e-06]</msg>
<status status="PASS" starttime="20201115 22:00:19.825" endtime="20201115 22:00:19.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.820" endtime="20201115 22:00:19.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.830" endtime="20201115 22:00:19.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:19.833" endtime="20201115 22:00:19.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.831" endtime="20201115 22:00:19.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.828" endtime="20201115 22:00:19.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.462" endtime="20201115 22:00:19.854"></status>
</kw>
<msg timestamp="20201115 22:00:19.854" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.863" endtime="20201115 22:00:19.878"></status>
</kw>
<msg timestamp="20201115 22:00:19.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.861" endtime="20201115 22:00:19.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.881" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.880" endtime="20201115 22:00:19.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.883" endtime="20201115 22:00:19.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.859" endtime="20201115 22:00:19.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.856" endtime="20201115 22:00:19.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.892" endtime="20201115 22:00:20.179"></status>
</kw>
<msg timestamp="20201115 22:00:20.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02216225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:19.891" endtime="20201115 22:00:20.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02216225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:20.183" endtime="20201115 22:00:20.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.191" endtime="20201115 22:00:20.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.888" endtime="20201115 22:00:20.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.886" endtime="20201115 22:00:20.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.198" level="INFO">${RESULT} = [{'time': 0.02216225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5140000000030702e-06, 'source_diff': 3.5140000000030702e-06}, {'time': 0.022260014, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:20.195" endtime="20201115 22:00:20.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.212" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:20.200" endtime="20201115 22:00:20.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.216" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:20.215" endtime="20201115 22:00:20.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.219" level="INFO">VALUE: [3.5140000000030702e-06, 3.79200000000246e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.80600000000203e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.790999999999517e-06, 3.500000000000031e-06, 3.54200000000221e-06, 3.7919999999989906e-06, 3.5139999999996008e-06, 3.4730000000003647e-06, 3.79200000000246e-06, 3.500000000000031e-06, 3.526999999999697e-06, 3.790999999999517e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.7919999999989906e-06, 3.5139999999996008e-06, 3.5829999999979767e-06, 3.7499999999968114e-06, 3.5139999999996008e-06, 3.445000000001225e-06, 3.804999999999087e-06, 3.500000000000031e-06, 3.55600000000178e-06, 3.7919999999989906e-06, 3.5139999999996008e-06, 3.5140000000030702e-06, 3.7779999999994207e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.7779999999994207e-06, 3.500000000000031e-06, 3.54200000000221e-06, 3.804999999999087e-06, 3.5139999999996008e-06, 3.4440000000017512e-06, 3.8059999999985605e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.763999999999851e-06, 3.500000000000031e-06, 3.54200000000221e-06, 3.7779999999994207e-06, 3.513000000000127e-06, 3.5139999999996008e-06, 3.79200000000246e-06]</msg>
<status status="PASS" starttime="20201115 22:00:20.218" endtime="20201115 22:00:20.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.213" endtime="20201115 22:00:20.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.222" endtime="20201115 22:00:20.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.226" endtime="20201115 22:00:20.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.224" endtime="20201115 22:00:20.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.220" endtime="20201115 22:00:20.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.854" endtime="20201115 22:00:20.246"></status>
</kw>
<msg timestamp="20201115 22:00:20.246" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.255" endtime="20201115 22:00:20.270"></status>
</kw>
<msg timestamp="20201115 22:00:20.270" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.254" endtime="20201115 22:00:20.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.273" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.271" endtime="20201115 22:00:20.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.274" endtime="20201115 22:00:20.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.251" endtime="20201115 22:00:20.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.249" endtime="20201115 22:00:20.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.283" endtime="20201115 22:00:20.569"></status>
</kw>
<msg timestamp="20201115 22:00:20.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022139347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.281" endtime="20201115 22:00:20.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022139347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.573" endtime="20201115 22:00:20.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.581" endtime="20201115 22:00:20.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.279" endtime="20201115 22:00:20.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.277" endtime="20201115 22:00:20.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.588" level="INFO">${RESULT} = [{'time': 0.022139347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.022236903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:20.585" endtime="20201115 22:00:20.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.601" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:20.589" endtime="20201115 22:00:20.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.606" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:20.605" endtime="20201115 22:00:20.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.608" level="INFO">VALUE: [3.5139999999996008e-06, 3.8059999999985605e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.763999999999851e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.79200000000246e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.833000000001696e-06, 3.500000000000031e-06, 3.5140000000030702e-06, 3.8050000000025563e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.804999999999087e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.790999999999517e-06, 3.4169999999986156e-06, 3.57000000000135e-06, 3.7919999999989906e-06, 3.5559999999983105e-06, 3.5139999999996008e-06, 3.7919999999989906e-06, 3.583000000001446e-06, 3.5139999999996008e-06, 3.8050000000025563e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.776999999999947e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.790999999999517e-06, 3.540999999999267e-06, 3.486000000000461e-06, 3.776999999999947e-06, 3.5139999999996008e-06, 3.429999999998712e-06, 3.818999999998657e-06, 3.500000000000031e-06, 3.5279999999991707e-06, 3.7919999999989906e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.804999999999087e-06, 3.5140000000030702e-06, 3.486000000000461e-06, 3.7779999999994207e-06]</msg>
<status status="PASS" starttime="20201115 22:00:20.607" endtime="20201115 22:00:20.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.602" endtime="20201115 22:00:20.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.611" endtime="20201115 22:00:20.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.615" endtime="20201115 22:00:20.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.613" endtime="20201115 22:00:20.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.610" endtime="20201115 22:00:20.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.247" endtime="20201115 22:00:20.635"></status>
</kw>
<msg timestamp="20201115 22:00:20.636" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.644" endtime="20201115 22:00:20.659"></status>
</kw>
<msg timestamp="20201115 22:00:20.660" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.643" endtime="20201115 22:00:20.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.662" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.661" endtime="20201115 22:00:20.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.663" endtime="20201115 22:00:20.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.640" endtime="20201115 22:00:20.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.638" endtime="20201115 22:00:20.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.672" endtime="20201115 22:00:20.959"></status>
</kw>
<msg timestamp="20201115 22:00:20.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.671" endtime="20201115 22:00:20.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.968" endtime="20201115 22:00:20.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.976" endtime="20201115 22:00:20.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.668" endtime="20201115 22:00:20.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.667" endtime="20201115 22:00:20.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.983" level="INFO">${RESULT} = [{'time': 0.021910875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.022008639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:20.980" endtime="20201115 22:00:20.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.996" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:20.984" endtime="20201115 22:00:20.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.001" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:21.000" endtime="20201115 22:00:21.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.003" level="INFO">VALUE: [3.5279999999991707e-06, 3.8059999999985605e-06, 3.500000000000031e-06, 3.52800000000264e-06, 3.7919999999989906e-06, 3.4859999999969915e-06, 3.54200000000221e-06, 3.832999999998227e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.818999999998657e-06, 3.472000000000891e-06, 3.500000000000031e-06, 3.7919999999989906e-06, 3.5419999999987406e-06, 3.5279999999991707e-06, 3.8050000000025563e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.7919999999989906e-06, 3.5139999999996008e-06, 3.55600000000178e-06, 3.7779999999994207e-06, 3.5139999999996008e-06, 3.486000000000461e-06, 3.818999999998657e-06, 3.500000000000031e-06, 3.4730000000003647e-06, 3.7919999999989906e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.847000000001266e-06, 3.4859999999969915e-06, 3.4719999999974216e-06, 3.7919999999989906e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.8059999999985605e-06, 3.500000000000031e-06, 3.540999999999267e-06, 3.7919999999989906e-06, 3.54200000000221e-06, 3.4719999999974216e-06, 3.790999999999517e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.847000000001266e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.790999999999517e-06]</msg>
<status status="PASS" starttime="20201115 22:00:21.002" endtime="20201115 22:00:21.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.997" endtime="20201115 22:00:21.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.006" endtime="20201115 22:00:21.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:21.010" endtime="20201115 22:00:21.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.008" endtime="20201115 22:00:21.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.005" endtime="20201115 22:00:21.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.636" endtime="20201115 22:00:21.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.070" endtime="20201115 22:00:21.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.069" endtime="20201115 22:00:21.031"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.033" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.042" endtime="20201115 22:00:21.057"></status>
</kw>
<msg timestamp="20201115 22:00:21.057" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.040" endtime="20201115 22:00:21.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.060" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.058" endtime="20201115 22:00:21.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.061" endtime="20201115 22:00:21.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.038" endtime="20201115 22:00:21.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.036" endtime="20201115 22:00:21.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.070" endtime="20201115 22:00:21.358"></status>
</kw>
<msg timestamp="20201115 22:00:21.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024325014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024328653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.069" endtime="20201115 22:00:21.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024325014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024328653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.362" endtime="20201115 22:00:21.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.371" endtime="20201115 22:00:21.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.066" endtime="20201115 22:00:21.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.065" endtime="20201115 22:00:21.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:21.377" level="INFO">${RESULT} = [{'time': 0.024328653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.024431931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:21.374" endtime="20201115 22:00:21.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:21.391" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:21.378" endtime="20201115 22:00:21.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.395" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:21.394" endtime="20201115 22:00:21.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.398" level="INFO">VALUE: [3.6389999999997258e-06, 3.84800000000074e-06, 3.6379999999967827e-06, 3.667000000002335e-06, 3.9449999999982555e-06, 3.6390000000031952e-06, 3.6940000000020012e-06, 3.9449999999982555e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.915999999999642e-06, 3.695000000001475e-06, 3.6389999999997258e-06, 3.9309999999986855e-06, 3.651999999999822e-06, 3.6389999999997258e-06, 3.9309999999986855e-06, 3.6669999999988656e-06, 3.638000000000252e-06, 3.916999999999116e-06, 3.6529999999992957e-06, 3.6669999999988656e-06, 3.929999999999212e-06, 3.665999999999392e-06, 3.665999999999392e-06, 3.875000000000406e-06, 3.653000000002765e-06, 3.681000000001905e-06, 3.944000000002251e-06, 3.665999999999392e-06, 3.651999999999822e-06, 3.9309999999986855e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.929999999999212e-06, 3.679999999998962e-06, 3.625000000000156e-06, 4.000000000000531e-06, 3.6800000000024313e-06, 3.6389999999997258e-06, 3.9309999999986855e-06, 3.6529999999992957e-06, 3.6940000000020012e-06, 3.944000000002251e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.903000000003015e-06, 3.6389999999997258e-06, 3.653000000002765e-06, 3.888999999999976e-06]</msg>
<status status="PASS" starttime="20201115 22:00:21.396" endtime="20201115 22:00:21.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.392" endtime="20201115 22:00:21.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.401" endtime="20201115 22:00:21.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:21.404" endtime="20201115 22:00:21.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.403" endtime="20201115 22:00:21.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.399" endtime="20201115 22:00:21.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.034" endtime="20201115 22:00:21.425"></status>
</kw>
<msg timestamp="20201115 22:00:21.425" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.434" endtime="20201115 22:00:21.449"></status>
</kw>
<msg timestamp="20201115 22:00:21.449" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.432" endtime="20201115 22:00:21.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.452" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.450" endtime="20201115 22:00:21.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.453" endtime="20201115 22:00:21.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.430" endtime="20201115 22:00:21.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.428" endtime="20201115 22:00:21.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.462" endtime="20201115 22:00:21.749"></status>
</kw>
<msg timestamp="20201115 22:00:21.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022098139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.461" endtime="20201115 22:00:21.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022098139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.753" endtime="20201115 22:00:21.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.761" endtime="20201115 22:00:21.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.458" endtime="20201115 22:00:21.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.456" endtime="20201115 22:00:21.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:21.768" level="INFO">${RESULT} = [{'time': 0.022101819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6800000000024313e-06, 'source_diff': 3.6800000000024313e-06}, {'time': 0.022205236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:21.765" endtime="20201115 22:00:21.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:21.781" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:21.769" endtime="20201115 22:00:21.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.786" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:21.785" endtime="20201115 22:00:21.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.788" level="INFO">VALUE: [3.6800000000024313e-06, 3.902999999999546e-06, 3.625000000000156e-06, 3.6529999999992957e-06, 3.9449999999982555e-06, 3.6809999999984355e-06, 3.6389999999997258e-06, 3.943999999998782e-06, 3.665999999999392e-06, 3.6529999999992957e-06, 3.931000000002155e-06, 3.5829999999979767e-06, 3.611000000000586e-06, 3.943999999998782e-06, 3.651999999999822e-06, 3.625000000000156e-06, 3.944000000002251e-06, 3.611000000000586e-06, 3.6529999999992957e-06, 3.986000000000961e-06, 3.625000000000156e-06, 3.667000000002335e-06, 3.945000000001725e-06, 3.667000000002335e-06, 3.6389999999997258e-06, 3.931000000002155e-06, 3.6529999999992957e-06, 3.6529999999992957e-06, 3.943999999998782e-06, 3.6669999999988656e-06, 3.651999999999822e-06, 3.929999999999212e-06, 3.665999999999392e-06, 3.638000000000252e-06, 3.959000000001295e-06, 3.6529999999992957e-06, 3.6529999999992957e-06, 3.943999999998782e-06, 3.6389999999997258e-06, 3.665999999999392e-06, 3.9309999999986855e-06, 3.6389999999997258e-06, 3.665999999999392e-06, 3.915999999999642e-06, 3.651999999999822e-06, 3.653000000002765e-06, 3.929999999999212e-06, 3.651999999999822e-06, 3.6389999999997258e-06, 3.931000000002155e-06]</msg>
<status status="PASS" starttime="20201115 22:00:21.787" endtime="20201115 22:00:21.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.782" endtime="20201115 22:00:21.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.791" endtime="20201115 22:00:21.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:21.795" endtime="20201115 22:00:21.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.793" endtime="20201115 22:00:21.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.790" endtime="20201115 22:00:21.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.426" endtime="20201115 22:00:21.815"></status>
</kw>
<msg timestamp="20201115 22:00:21.816" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.825" endtime="20201115 22:00:21.840"></status>
</kw>
<msg timestamp="20201115 22:00:21.840" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.823" endtime="20201115 22:00:21.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.843" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.841" endtime="20201115 22:00:21.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.844" endtime="20201115 22:00:21.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.820" endtime="20201115 22:00:21.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.818" endtime="20201115 22:00:21.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.853" endtime="20201115 22:00:22.140"></status>
</kw>
<msg timestamp="20201115 22:00:22.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022502167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.851" endtime="20201115 22:00:22.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022502167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.144" endtime="20201115 22:00:22.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.153" endtime="20201115 22:00:22.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.849" endtime="20201115 22:00:22.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.847" endtime="20201115 22:00:22.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:22.159" level="INFO">${RESULT} = [{'time': 0.022502167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.022605472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:22.156" endtime="20201115 22:00:22.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:22.173" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:22.160" endtime="20201115 22:00:22.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.177" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:22.176" endtime="20201115 22:00:22.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.180" level="INFO">VALUE: [3.6529999999992957e-06, 3.9160000000031114e-06, 3.6389999999997258e-06, 3.667000000002335e-06, 3.943999999998782e-06, 3.709000000001045e-06, 3.6949999999980054e-06, 3.931000000002155e-06, 3.7089999999975753e-06, 3.6390000000031952e-06, 3.9309999999986855e-06, 3.6390000000031952e-06, 3.6669999999988656e-06, 3.931000000002155e-06, 3.6949999999980054e-06, 3.6529999999992957e-06, 3.957999999998352e-06, 3.6529999999992957e-06, 3.6529999999992957e-06, 3.929999999999212e-06, 3.651999999999822e-06, 3.665999999999392e-06, 3.959000000001295e-06, 3.667000000002335e-06, 3.6529999999992957e-06, 3.957999999998352e-06, 3.6529999999992957e-06, 3.6669999999988656e-06, 3.9309999999986855e-06, 3.6389999999997258e-06, 3.651999999999822e-06, 3.9309999999986855e-06, 3.6529999999992957e-06, 3.651999999999822e-06, 3.945000000001725e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.959000000001295e-06, 3.6389999999997258e-06, 3.665999999999392e-06, 3.958000000001821e-06, 3.681000000001905e-06, 3.6389999999997258e-06, 3.930000000002681e-06, 3.625000000000156e-06, 3.6529999999992957e-06, 3.959000000001295e-06, 3.651999999999822e-06, 3.6529999999992957e-06, 3.916999999999116e-06]</msg>
<status status="PASS" starttime="20201115 22:00:22.178" endtime="20201115 22:00:22.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.173" endtime="20201115 22:00:22.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.183" endtime="20201115 22:00:22.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:22.186" endtime="20201115 22:00:22.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.185" endtime="20201115 22:00:22.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.181" endtime="20201115 22:00:22.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.816" endtime="20201115 22:00:22.207"></status>
</kw>
<msg timestamp="20201115 22:00:22.208" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.216" endtime="20201115 22:00:22.232"></status>
</kw>
<msg timestamp="20201115 22:00:22.232" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.215" endtime="20201115 22:00:22.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.235" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.233" endtime="20201115 22:00:22.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.236" endtime="20201115 22:00:22.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.212" endtime="20201115 22:00:22.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.210" endtime="20201115 22:00:22.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.245" endtime="20201115 22:00:22.531"></status>
</kw>
<msg timestamp="20201115 22:00:22.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022416153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022419806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.243" endtime="20201115 22:00:22.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022416153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022419806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.536" endtime="20201115 22:00:22.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.544" endtime="20201115 22:00:22.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.241" endtime="20201115 22:00:22.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.239" endtime="20201115 22:00:22.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:22.550" level="INFO">${RESULT} = [{'time': 0.022419806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.022523347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:22.547" endtime="20201115 22:00:22.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:22.564" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:22.551" endtime="20201115 22:00:22.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.568" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:22.567" endtime="20201115 22:00:22.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.571" level="INFO">VALUE: [3.6529999999992957e-06, 3.943999999998782e-06, 3.6809999999984355e-06, 3.6529999999992957e-06, 3.958000000001821e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.9449999999982555e-06, 3.6529999999992957e-06, 3.6809999999984355e-06, 3.958000000001821e-06, 3.6529999999992957e-06, 3.667000000002335e-06, 3.943999999998782e-06, 3.6529999999992957e-06, 3.665999999999392e-06, 4.000000000000531e-06, 3.653000000002765e-06, 3.6389999999997258e-06, 3.930000000002681e-06, 3.6389999999997258e-06, 3.651999999999822e-06, 3.943999999998782e-06, 3.651999999999822e-06, 3.6529999999992957e-06, 3.917000000002585e-06, 3.6389999999997258e-06, 3.693999999998532e-06, 3.9999999999970615e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.943999999998782e-06, 3.6660000000028614e-06, 3.653000000002765e-06, 3.915999999999642e-06, 3.6529999999992957e-06, 3.665999999999392e-06, 3.916999999999116e-06, 3.625000000000156e-06, 3.6669999999988656e-06, 3.943999999998782e-06, 3.6529999999992957e-06, 3.665999999999392e-06, 3.958000000001821e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.943999999998782e-06, 3.681000000001905e-06, 3.6389999999997258e-06, 3.945000000001725e-06]</msg>
<status status="PASS" starttime="20201115 22:00:22.569" endtime="20201115 22:00:22.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.565" endtime="20201115 22:00:22.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.574" endtime="20201115 22:00:22.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:22.578" endtime="20201115 22:00:22.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.576" endtime="20201115 22:00:22.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.573" endtime="20201115 22:00:22.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.208" endtime="20201115 22:00:22.599"></status>
</kw>
<msg timestamp="20201115 22:00:22.599" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.608" endtime="20201115 22:00:22.623"></status>
</kw>
<msg timestamp="20201115 22:00:22.624" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.606" endtime="20201115 22:00:22.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.626" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.625" endtime="20201115 22:00:22.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.627" endtime="20201115 22:00:22.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.603" endtime="20201115 22:00:22.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.601" endtime="20201115 22:00:22.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.636" endtime="20201115 22:00:22.923"></status>
</kw>
<msg timestamp="20201115 22:00:22.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.635" endtime="20201115 22:00:22.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.927" endtime="20201115 22:00:22.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.936" endtime="20201115 22:00:22.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.632" endtime="20201115 22:00:22.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.630" endtime="20201115 22:00:22.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:22.943" level="INFO">${RESULT} = [{'time': 0.022155111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.022258625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:22.940" endtime="20201115 22:00:22.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:22.956" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:22.944" endtime="20201115 22:00:22.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.961" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:22.960" endtime="20201115 22:00:22.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.963" level="INFO">VALUE: [3.625000000000156e-06, 3.958000000001821e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.945000000001725e-06, 3.6809999999984355e-06, 3.625000000000156e-06, 3.943999999998782e-06, 3.653000000002765e-06, 3.6529999999992957e-06, 3.943999999998782e-06, 3.651999999999822e-06, 3.6389999999997258e-06, 3.986000000000961e-06, 3.665999999999392e-06, 3.611000000000586e-06, 3.9309999999986855e-06, 3.597000000001016e-06, 3.695000000001475e-06, 3.945000000001725e-06, 3.693999999998532e-06, 3.6389999999997258e-06, 4.000000000000531e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.929999999999212e-06, 3.625000000000156e-06, 3.6389999999997258e-06, 3.943999999998782e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.915999999999642e-06, 3.6529999999992957e-06, 3.693999999998532e-06, 3.986000000000961e-06, 3.6529999999992957e-06, 3.6529999999992957e-06, 3.915999999999642e-06, 3.7230000000006147e-06, 3.6809999999984355e-06, 3.916999999999116e-06, 3.611000000000586e-06, 3.6529999999992957e-06, 3.944000000002251e-06, 3.6529999999992957e-06, 3.6669999999988656e-06, 3.875000000000406e-06, 3.693999999998532e-06, 3.638000000000252e-06, 3.931000000002155e-06]</msg>
<status status="PASS" starttime="20201115 22:00:22.962" endtime="20201115 22:00:22.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.957" endtime="20201115 22:00:22.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.967" endtime="20201115 22:00:22.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:22.970" endtime="20201115 22:00:22.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.969" endtime="20201115 22:00:22.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.965" endtime="20201115 22:00:22.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.599" endtime="20201115 22:00:22.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.032" endtime="20201115 22:00:22.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.031" endtime="20201115 22:00:22.991"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.993" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.002" endtime="20201115 22:00:23.017"></status>
</kw>
<msg timestamp="20201115 22:00:23.018" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.001" endtime="20201115 22:00:23.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.020" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.019" endtime="20201115 22:00:23.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.021" endtime="20201115 22:00:23.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.998" endtime="20201115 22:00:23.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.996" endtime="20201115 22:00:23.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.030" endtime="20201115 22:00:23.318"></status>
</kw>
<msg timestamp="20201115 22:00:23.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024348097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024351889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.029" endtime="20201115 22:00:23.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024348097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024351889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.322" endtime="20201115 22:00:23.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.330" endtime="20201115 22:00:23.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.026" endtime="20201115 22:00:23.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.024" endtime="20201115 22:00:23.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:23.336" level="INFO">${RESULT} = [{'time': 0.024351889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.79200000000246e-06, 'source_diff': 3.79200000000246e-06}, {'time': 0.024461056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:23.333" endtime="20201115 22:00:23.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:23.350" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:23.337" endtime="20201115 22:00:23.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.354" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:23.353" endtime="20201115 22:00:23.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.357" level="INFO">VALUE: [3.79200000000246e-06, 4.0699999999983805e-06, 3.7779999999994207e-06, 3.804999999999087e-06, 4.083000000001946e-06, 3.763999999999851e-06, 3.776999999999947e-06, 4.041999999999241e-06, 3.7919999999989906e-06, 3.80600000000203e-06, 4.069000000002376e-06, 3.79200000000246e-06, 3.763999999999851e-06, 4.0559999999988106e-06, 3.736000000000711e-06, 3.8059999999985605e-06, 4.08400000000142e-06, 3.846999999997797e-06, 3.8199999999981304e-06, 4.054999999999337e-06, 3.790999999999517e-06, 3.8200000000016e-06, 4.07000000000185e-06, 3.84800000000074e-06, 3.8059999999985605e-06, 4.027999999999671e-06, 3.804999999999087e-06, 3.8050000000025563e-06, 4.0559999999988106e-06, 3.736000000000711e-06, 3.818999999998657e-06, 4.082999999998477e-06, 3.7779999999994207e-06, 3.8200000000016e-06, 4.054999999999337e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 4.07000000000185e-06, 3.7919999999989906e-06, 3.790999999999517e-06, 4.055000000002806e-06, 3.8059999999985605e-06, 3.8059999999985605e-06, 4.07000000000185e-06, 3.7919999999989906e-06, 3.8059999999985605e-06, 4.08400000000142e-06, 3.776999999999947e-06, 3.8339999999977e-06, 4.08399999999795e-06]</msg>
<status status="PASS" starttime="20201115 22:00:23.355" endtime="20201115 22:00:23.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.351" endtime="20201115 22:00:23.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.360" endtime="20201115 22:00:23.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:23.364" endtime="20201115 22:00:23.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.362" endtime="20201115 22:00:23.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.359" endtime="20201115 22:00:23.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.994" endtime="20201115 22:00:23.384"></status>
</kw>
<msg timestamp="20201115 22:00:23.385" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.393" endtime="20201115 22:00:23.408"></status>
</kw>
<msg timestamp="20201115 22:00:23.409" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.392" endtime="20201115 22:00:23.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.411" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.410" endtime="20201115 22:00:23.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.412" endtime="20201115 22:00:23.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.389" endtime="20201115 22:00:23.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.387" endtime="20201115 22:00:23.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.421" endtime="20201115 22:00:23.708"></status>
</kw>
<msg timestamp="20201115 22:00:23.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.420" endtime="20201115 22:00:23.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.713" endtime="20201115 22:00:23.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.721" endtime="20201115 22:00:23.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.417" endtime="20201115 22:00:23.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.415" endtime="20201115 22:00:23.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:23.727" level="INFO">${RESULT} = [{'time': 0.022012417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8339999999977e-06, 'source_diff': 3.8339999999977e-06}, {'time': 0.022121306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201115 22:00:23.724" endtime="20201115 22:00:23.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:23.740" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:23.728" endtime="20201115 22:00:23.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.745" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:23.744" endtime="20201115 22:00:23.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.748" level="INFO">VALUE: [3.8339999999977e-06, 4.08400000000142e-06, 3.7779999999994207e-06, 3.7779999999994207e-06, 4.082999999998477e-06, 3.80600000000203e-06, 3.804999999999087e-06, 4.05600000000228e-06, 3.776999999999947e-06, 3.7779999999994207e-06, 4.08400000000142e-06, 3.7910000000029864e-06, 3.7779999999994207e-06, 4.08400000000142e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 4.083000000001946e-06, 3.736000000000711e-06, 3.776999999999947e-06, 4.069000000002376e-06, 3.847000000001266e-06, 3.8059999999985605e-06, 4.082999999998477e-06, 3.847000000001266e-06, 3.790999999999517e-06, 4.07000000000185e-06, 3.77800000000289e-06, 3.790999999999517e-06, 4.08399999999795e-06, 3.790999999999517e-06, 3.7919999999989906e-06, 4.068999999998907e-06, 3.790999999999517e-06, 3.804999999999087e-06, 4.082999999998477e-06, 3.7919999999989906e-06, 3.763000000000377e-06, 4.069000000002376e-06, 3.79200000000246e-06, 3.7779999999994207e-06, 4.068999999998907e-06, 3.8059999999985605e-06, 3.8059999999985605e-06, 4.07000000000185e-06, 3.763000000000377e-06, 3.84799999999727e-06, 4.069000000002376e-06, 3.8059999999985605e-06, 3.847000000001266e-06, 4.08399999999795e-06]</msg>
<status status="PASS" starttime="20201115 22:00:23.746" endtime="20201115 22:00:23.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.742" endtime="20201115 22:00:23.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.751" endtime="20201115 22:00:23.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:23.754" endtime="20201115 22:00:23.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.753" endtime="20201115 22:00:23.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.749" endtime="20201115 22:00:23.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.385" endtime="20201115 22:00:23.775"></status>
</kw>
<msg timestamp="20201115 22:00:23.775" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.784" endtime="20201115 22:00:23.800"></status>
</kw>
<msg timestamp="20201115 22:00:23.801" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.782" endtime="20201115 22:00:23.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.803" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.802" endtime="20201115 22:00:23.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.804" endtime="20201115 22:00:23.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.780" endtime="20201115 22:00:23.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.778" endtime="20201115 22:00:23.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.813" endtime="20201115 22:00:24.101"></status>
</kw>
<msg timestamp="20201115 22:00:24.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022006167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.812" endtime="20201115 22:00:24.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022006167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.105" endtime="20201115 22:00:24.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.113" endtime="20201115 22:00:24.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.809" endtime="20201115 22:00:24.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.807" endtime="20201115 22:00:24.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.120" level="INFO">${RESULT} = [{'time': 0.022009944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.776999999999947e-06, 'source_diff': 3.776999999999947e-06}, {'time': 0.022118792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:24.116" endtime="20201115 22:00:24.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.133" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:24.121" endtime="20201115 22:00:24.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.138" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:24.137" endtime="20201115 22:00:24.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.140" level="INFO">VALUE: [3.776999999999947e-06, 4.07000000000185e-06, 3.7770000000034165e-06, 3.833000000001696e-06, 4.08400000000142e-06, 3.79200000000246e-06, 3.7779999999994207e-06, 4.082999999998477e-06, 3.790999999999517e-06, 3.7079999999981017e-06, 4.069000000002376e-06, 3.8059999999985605e-06, 3.7919999999989906e-06, 4.069000000002376e-06, 3.763999999999851e-06, 3.7919999999989906e-06, 4.04200000000271e-06, 3.7779999999994207e-06, 3.7919999999989906e-06, 4.055000000002806e-06, 3.790999999999517e-06, 3.833000000001696e-06, 4.054999999999337e-06, 3.722000000001141e-06, 3.7779999999994207e-06, 4.068999999998907e-06, 3.750000000000281e-06, 3.8059999999985605e-06, 4.083000000001946e-06, 3.80600000000203e-06, 3.7919999999989906e-06, 4.08399999999795e-06, 3.833000000001696e-06, 3.8339999999977e-06, 4.08400000000142e-06, 3.763999999999851e-06, 3.7919999999989906e-06, 4.068999999998907e-06, 3.79200000000246e-06, 3.776999999999947e-06, 4.082999999998477e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 4.125000000000656e-06, 3.776999999999947e-06, 3.7919999999989906e-06, 4.068999999998907e-06, 3.8059999999985605e-06, 3.7910000000029864e-06, 4.040999999999767e-06]</msg>
<status status="PASS" starttime="20201115 22:00:24.139" endtime="20201115 22:00:24.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.134" endtime="20201115 22:00:24.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.143" endtime="20201115 22:00:24.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.147" endtime="20201115 22:00:24.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.145" endtime="20201115 22:00:24.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.142" endtime="20201115 22:00:24.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.776" endtime="20201115 22:00:24.168"></status>
</kw>
<msg timestamp="20201115 22:00:24.168" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.176" endtime="20201115 22:00:24.192"></status>
</kw>
<msg timestamp="20201115 22:00:24.192" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.175" endtime="20201115 22:00:24.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.195" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.193" endtime="20201115 22:00:24.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.196" endtime="20201115 22:00:24.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.172" endtime="20201115 22:00:24.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.170" endtime="20201115 22:00:24.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.205" endtime="20201115 22:00:24.492"></status>
</kw>
<msg timestamp="20201115 22:00:24.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022043194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.203" endtime="20201115 22:00:24.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022043194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.496" endtime="20201115 22:00:24.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.504" endtime="20201115 22:00:24.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.201" endtime="20201115 22:00:24.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.199" endtime="20201115 22:00:24.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.511" level="INFO">${RESULT} = [{'time': 0.022046931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7370000000001846e-06, 'source_diff': 3.7370000000001846e-06}, {'time': 0.022155944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:24.508" endtime="20201115 22:00:24.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.524" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:24.512" endtime="20201115 22:00:24.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.529" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:24.528" endtime="20201115 22:00:24.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.531" level="INFO">VALUE: [3.7370000000001846e-06, 4.068999999998907e-06, 3.8059999999985605e-06, 3.776999999999947e-06, 4.0699999999983805e-06, 3.7779999999994207e-06, 3.7779999999994207e-06, 4.08399999999795e-06, 3.7499999999968114e-06, 3.776999999999947e-06, 4.083000000001946e-06, 3.7919999999989906e-06, 3.79200000000246e-06, 4.08399999999795e-06, 3.7919999999989906e-06, 3.7779999999994207e-06, 4.139000000000226e-06, 3.790999999999517e-06, 3.875000000000406e-06, 4.097000000001516e-06, 3.7919999999989906e-06, 3.7779999999994207e-06, 4.09800000000099e-06, 3.736000000000711e-06, 3.7919999999989906e-06, 4.082999999998477e-06, 3.8059999999985605e-06, 3.8200000000016e-06, 4.027000000000197e-06, 3.790999999999517e-06, 3.77800000000289e-06, 4.082999999998477e-06, 3.8339999999977e-06, 3.7779999999994207e-06, 4.069000000002376e-06, 3.847000000001266e-06, 3.77800000000289e-06, 4.082999999998477e-06, 3.790999999999517e-06, 3.8199999999981304e-06, 4.152999999999796e-06, 3.776999999999947e-06, 3.8059999999985605e-06, 4.152999999999796e-06, 3.818999999998657e-06, 3.790999999999517e-06, 4.139000000000226e-06, 3.763000000000377e-06, 3.7499999999968114e-06, 4.069000000002376e-06]</msg>
<status status="PASS" starttime="20201115 22:00:24.530" endtime="20201115 22:00:24.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.525" endtime="20201115 22:00:24.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.534" endtime="20201115 22:00:24.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.538" endtime="20201115 22:00:24.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.536" endtime="20201115 22:00:24.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.533" endtime="20201115 22:00:24.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.168" endtime="20201115 22:00:24.558"></status>
</kw>
<msg timestamp="20201115 22:00:24.559" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.567" endtime="20201115 22:00:24.583"></status>
</kw>
<msg timestamp="20201115 22:00:24.583" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.566" endtime="20201115 22:00:24.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.586" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.584" endtime="20201115 22:00:24.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.587" endtime="20201115 22:00:24.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.563" endtime="20201115 22:00:24.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.561" endtime="20201115 22:00:24.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.596" endtime="20201115 22:00:24.883"></status>
</kw>
<msg timestamp="20201115 22:00:24.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.594" endtime="20201115 22:00:24.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.887" endtime="20201115 22:00:24.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.895" endtime="20201115 22:00:24.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.592" endtime="20201115 22:00:24.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.590" endtime="20201115 22:00:24.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.902" level="INFO">${RESULT} = [{'time': 0.022133694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.790999999999517e-06, 'source_diff': 3.790999999999517e-06}, {'time': 0.022242764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:24.899" endtime="20201115 22:00:24.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.915" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:24.903" endtime="20201115 22:00:24.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.920" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:24.919" endtime="20201115 22:00:24.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.922" level="INFO">VALUE: [3.790999999999517e-06, 4.014000000000101e-06, 3.736000000000711e-06, 3.8059999999985605e-06, 4.08399999999795e-06, 3.736000000000711e-06, 3.7779999999994207e-06, 4.0559999999988106e-06, 3.790999999999517e-06, 3.818999999998657e-06, 4.09800000000099e-06, 3.832999999998227e-06, 3.763999999999851e-06, 4.014000000000101e-06, 3.804999999999087e-06, 3.8059999999985605e-06, 4.09799999999752e-06, 3.8059999999985605e-06, 3.7919999999989906e-06, 4.07000000000185e-06, 3.763999999999851e-06, 3.763999999999851e-06, 4.08400000000142e-06, 3.77800000000289e-06, 3.77800000000289e-06, 4.07000000000185e-06, 3.818999999998657e-06, 3.84800000000074e-06, 4.097000000001516e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 4.111000000001086e-06, 3.7919999999989906e-06, 3.7910000000029864e-06, 4.082999999998477e-06, 3.8059999999985605e-06, 3.8339999999977e-06, 4.0699999999983805e-06, 3.750000000000281e-06, 3.804999999999087e-06, 4.068999999998907e-06, 3.750000000000281e-06, 3.8059999999985605e-06, 4.068999999998907e-06, 3.80600000000203e-06, 3.8059999999985605e-06, 4.07000000000185e-06, 3.84800000000074e-06, 3.79200000000246e-06, 4.055000000002806e-06]</msg>
<status status="PASS" starttime="20201115 22:00:24.921" endtime="20201115 22:00:24.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.916" endtime="20201115 22:00:24.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.925" endtime="20201115 22:00:24.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.929" endtime="20201115 22:00:24.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.927" endtime="20201115 22:00:24.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.924" endtime="20201115 22:00:24.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.559" endtime="20201115 22:00:24.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.992" endtime="20201115 22:00:24.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.991" endtime="20201115 22:00:24.950"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.952" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.962" endtime="20201115 22:00:24.977"></status>
</kw>
<msg timestamp="20201115 22:00:24.978" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.960" endtime="20201115 22:00:24.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.980" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.979" endtime="20201115 22:00:24.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.981" endtime="20201115 22:00:24.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.957" endtime="20201115 22:00:24.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.955" endtime="20201115 22:00:24.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.991" endtime="20201115 22:00:25.278"></status>
</kw>
<msg timestamp="20201115 22:00:25.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025670292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025674181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.989" endtime="20201115 22:00:25.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025670292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025674181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.282" endtime="20201115 22:00:25.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.290" endtime="20201115 22:00:25.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.986" endtime="20201115 22:00:25.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.985" endtime="20201115 22:00:25.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.296" level="INFO">${RESULT} = [{'time': 0.025674181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.025789167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:25.293" endtime="20201115 22:00:25.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.310" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:25.297" endtime="20201115 22:00:25.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.314" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:25.313" endtime="20201115 22:00:25.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.317" level="INFO">VALUE: [3.888999999999976e-06, 4.223000000001115e-06, 3.916999999999116e-06, 3.943999999998782e-06, 4.236000000001211e-06, 3.931000000002155e-06, 3.915999999999642e-06, 4.207999999998602e-06, 3.930000000002681e-06, 3.917000000002585e-06, 4.207999999998602e-06, 3.931000000002155e-06, 3.915999999999642e-06, 4.207999999998602e-06, 3.902999999999546e-06, 3.916999999999116e-06, 4.2359999999977416e-06, 3.9309999999986855e-06, 3.875000000000406e-06, 4.221999999998172e-06, 3.931000000002155e-06, 3.9449999999982555e-06, 4.209000000001545e-06, 3.959000000001295e-06, 3.915999999999642e-06, 4.221999999998172e-06, 3.861000000000836e-06, 3.930000000002681e-06, 4.222999999997645e-06, 3.902000000000072e-06, 3.930000000002681e-06, 4.208000000002071e-06, 3.9859999999974915e-06, 3.958999999997825e-06, 4.179999999999462e-06, 3.916999999999116e-06, 3.902000000000072e-06, 4.264000000000351e-06, 3.917000000002585e-06, 3.902000000000072e-06, 4.209000000001545e-06, 3.917000000002585e-06, 3.9309999999986855e-06, 4.222000000001641e-06, 3.916999999999116e-06, 3.888999999999976e-06, 4.222999999997645e-06, 3.9449999999982555e-06, 3.916999999999116e-06, 4.193999999999032e-06]</msg>
<status status="PASS" starttime="20201115 22:00:25.315" endtime="20201115 22:00:25.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.311" endtime="20201115 22:00:25.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.320" endtime="20201115 22:00:25.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.323" endtime="20201115 22:00:25.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.322" endtime="20201115 22:00:25.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.318" endtime="20201115 22:00:25.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.953" endtime="20201115 22:00:25.344"></status>
</kw>
<msg timestamp="20201115 22:00:25.344" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.353" endtime="20201115 22:00:25.369"></status>
</kw>
<msg timestamp="20201115 22:00:25.370" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.352" endtime="20201115 22:00:25.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.371" endtime="20201115 22:00:25.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.374" endtime="20201115 22:00:25.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.349" endtime="20201115 22:00:25.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.347" endtime="20201115 22:00:25.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.383" endtime="20201115 22:00:25.669"></status>
</kw>
<msg timestamp="20201115 22:00:25.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022143861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.381" endtime="20201115 22:00:25.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022143861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.673" endtime="20201115 22:00:25.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.681" endtime="20201115 22:00:25.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.379" endtime="20201115 22:00:25.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.377" endtime="20201115 22:00:25.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.688" level="INFO">${RESULT} = [{'time': 0.022143861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.022258917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:25.685" endtime="20201115 22:00:25.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.701" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:25.689" endtime="20201115 22:00:25.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.706" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:25.705" endtime="20201115 22:00:25.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.708" level="INFO">VALUE: [3.916999999999116e-06, 4.166999999999366e-06, 3.9449999999982555e-06, 3.944000000002251e-06, 4.208999999998075e-06, 3.929999999999212e-06, 3.888999999999976e-06, 4.222000000001641e-06, 3.943999999998782e-06, 3.917000000002585e-06, 4.1809999999989356e-06, 3.945000000001725e-06, 3.945000000001725e-06, 4.1809999999989356e-06, 3.915999999999642e-06, 3.931000000002155e-06, 4.222000000001641e-06, 3.888999999999976e-06, 3.958000000001821e-06, 4.221999999998172e-06, 3.9859999999974915e-06, 3.915999999999642e-06, 4.1949999999985055e-06, 3.9309999999986855e-06, 3.875000000000406e-06, 4.222999999997645e-06, 3.9309999999986855e-06, 3.929999999999212e-06, 4.236000000001211e-06, 3.903000000003015e-06, 3.915999999999642e-06, 4.207999999998602e-06, 3.943999999998782e-06, 3.861000000000836e-06, 4.221999999998172e-06, 3.945000000001725e-06, 3.958000000001821e-06, 4.139000000000226e-06, 3.944000000002251e-06, 3.945000000001725e-06, 4.166999999999366e-06, 3.875000000000406e-06, 3.929999999999212e-06, 4.208000000002071e-06, 3.916999999999116e-06, 3.9309999999986855e-06, 4.263000000000877e-06, 3.902000000000072e-06, 3.902999999999546e-06, 4.209000000001545e-06]</msg>
<status status="PASS" starttime="20201115 22:00:25.707" endtime="20201115 22:00:25.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.702" endtime="20201115 22:00:25.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.711" endtime="20201115 22:00:25.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.715" endtime="20201115 22:00:25.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.713" endtime="20201115 22:00:25.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.710" endtime="20201115 22:00:25.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.345" endtime="20201115 22:00:25.735"></status>
</kw>
<msg timestamp="20201115 22:00:25.736" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.745" endtime="20201115 22:00:25.761"></status>
</kw>
<msg timestamp="20201115 22:00:25.761" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.743" endtime="20201115 22:00:25.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.764" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.762" endtime="20201115 22:00:25.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.765" endtime="20201115 22:00:25.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.740" endtime="20201115 22:00:25.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.738" endtime="20201115 22:00:25.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.774" endtime="20201115 22:00:26.061"></status>
</kw>
<msg timestamp="20201115 22:00:26.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022742986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022746875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.772" endtime="20201115 22:00:26.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022742986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022746875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.065" endtime="20201115 22:00:26.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.073" endtime="20201115 22:00:26.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.770" endtime="20201115 22:00:26.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.768" endtime="20201115 22:00:26.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.080" level="INFO">${RESULT} = [{'time': 0.022746875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.022862083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:26.076" endtime="20201115 22:00:26.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.093" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:26.081" endtime="20201115 22:00:26.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.098" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:26.096" endtime="20201115 22:00:26.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.100" level="INFO">VALUE: [3.888999999999976e-06, 4.193999999999032e-06, 3.916999999999116e-06, 3.930000000002681e-06, 4.263999999996881e-06, 3.888999999999976e-06, 3.902999999999546e-06, 4.221999999998172e-06, 3.917000000002585e-06, 3.957999999998352e-06, 4.222000000001641e-06, 3.888999999999976e-06, 3.930000000002681e-06, 4.222000000001641e-06, 3.888999999999976e-06, 3.916999999999116e-06, 4.208999999998075e-06, 3.9449999999982555e-06, 3.9309999999986855e-06, 4.2359999999977416e-06, 3.9309999999986855e-06, 3.931000000002155e-06, 4.221999999998172e-06, 3.917000000002585e-06, 3.902999999999546e-06, 4.277999999999921e-06, 3.931000000002155e-06, 3.916999999999116e-06, 4.209000000001545e-06, 3.9309999999986855e-06, 3.916999999999116e-06, 4.179999999999462e-06, 3.929999999999212e-06, 3.915999999999642e-06, 4.193999999999032e-06, 3.931000000002155e-06, 3.972000000001391e-06, 4.1809999999989356e-06, 3.917000000002585e-06, 3.917000000002585e-06, 4.209000000001545e-06, 3.929999999999212e-06, 3.916999999999116e-06, 4.208000000002071e-06, 3.915999999999642e-06, 3.945000000001725e-06, 4.222000000001641e-06, 3.929999999999212e-06, 3.929999999999212e-06, 4.181000000002405e-06]</msg>
<status status="PASS" starttime="20201115 22:00:26.099" endtime="20201115 22:00:26.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.094" endtime="20201115 22:00:26.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.103" endtime="20201115 22:00:26.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:26.107" endtime="20201115 22:00:26.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.105" endtime="20201115 22:00:26.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.102" endtime="20201115 22:00:26.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.736" endtime="20201115 22:00:26.127"></status>
</kw>
<msg timestamp="20201115 22:00:26.128" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.137" endtime="20201115 22:00:26.153"></status>
</kw>
<msg timestamp="20201115 22:00:26.153" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.135" endtime="20201115 22:00:26.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.156" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.154" endtime="20201115 22:00:26.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.157" endtime="20201115 22:00:26.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.133" endtime="20201115 22:00:26.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.131" endtime="20201115 22:00:26.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.166" endtime="20201115 22:00:26.452"></status>
</kw>
<msg timestamp="20201115 22:00:26.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022618917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:26.164" endtime="20201115 22:00:26.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022618917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:26.456" endtime="20201115 22:00:26.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.464" endtime="20201115 22:00:26.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.162" endtime="20201115 22:00:26.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.160" endtime="20201115 22:00:26.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.471" level="INFO">${RESULT} = [{'time': 0.022618917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.022733903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:26.468" endtime="20201115 22:00:26.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.484" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:26.472" endtime="20201115 22:00:26.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.489" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:26.488" endtime="20201115 22:00:26.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.491" level="INFO">VALUE: [3.916999999999116e-06, 4.236000000001211e-06, 3.929999999999212e-06, 3.9309999999986855e-06, 4.208000000002071e-06, 3.931000000002155e-06, 3.9859999999974915e-06, 4.1949999999985055e-06, 3.902999999999546e-06, 3.9309999999986855e-06, 4.221999999998172e-06, 3.915999999999642e-06, 3.944000000002251e-06, 4.236000000001211e-06, 3.931000000002155e-06, 3.902000000000072e-06, 4.181000000002405e-06, 3.9309999999986855e-06, 3.915999999999642e-06, 4.250000000000781e-06, 3.929999999999212e-06, 3.916999999999116e-06, 4.2359999999977416e-06, 3.986000000000961e-06, 3.9309999999986855e-06, 4.207999999998602e-06, 3.916999999999116e-06, 3.915999999999642e-06, 4.207999999998602e-06, 3.987000000000435e-06, 3.931000000002155e-06, 4.207999999998602e-06, 3.957999999998352e-06, 3.931000000002155e-06, 4.221999999998172e-06, 3.957999999998352e-06, 3.902999999999546e-06, 4.264000000000351e-06, 3.957999999998352e-06, 3.9309999999986855e-06, 4.222000000001641e-06, 3.916999999999116e-06, 3.902999999999546e-06, 4.209000000001545e-06, 3.915999999999642e-06, 3.9309999999986855e-06, 4.165999999999892e-06, 3.931000000002155e-06, 3.902000000000072e-06, 4.125000000000656e-06]</msg>
<status status="PASS" starttime="20201115 22:00:26.490" endtime="20201115 22:00:26.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.485" endtime="20201115 22:00:26.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.494" endtime="20201115 22:00:26.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:26.498" endtime="20201115 22:00:26.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.497" endtime="20201115 22:00:26.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.493" endtime="20201115 22:00:26.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.129" endtime="20201115 22:00:26.519"></status>
</kw>
<msg timestamp="20201115 22:00:26.519" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.528" endtime="20201115 22:00:26.544"></status>
</kw>
<msg timestamp="20201115 22:00:26.544" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.526" endtime="20201115 22:00:26.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.547" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.545" endtime="20201115 22:00:26.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.548" endtime="20201115 22:00:26.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.524" endtime="20201115 22:00:26.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.522" endtime="20201115 22:00:26.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.557" endtime="20201115 22:00:26.843"></status>
</kw>
<msg timestamp="20201115 22:00:26.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021943056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.555" endtime="20201115 22:00:26.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021943056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.847" endtime="20201115 22:00:26.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.855" endtime="20201115 22:00:26.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.553" endtime="20201115 22:00:26.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.551" endtime="20201115 22:00:26.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.861" level="INFO">${RESULT} = [{'time': 0.021943056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.022058181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:26.858" endtime="20201115 22:00:26.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.875" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:26.862" endtime="20201115 22:00:26.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.879" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:26.878" endtime="20201115 22:00:26.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.882" level="INFO">VALUE: [3.9449999999982555e-06, 4.1809999999989356e-06, 3.986000000000961e-06, 3.902000000000072e-06, 4.208999999998075e-06, 3.9449999999982555e-06, 3.915999999999642e-06, 4.181000000002405e-06, 3.916999999999116e-06, 3.929999999999212e-06, 4.223000000001115e-06, 3.929999999999212e-06, 3.930000000002681e-06, 4.1809999999989356e-06, 3.9449999999982555e-06, 3.902999999999546e-06, 4.222000000001641e-06, 3.916999999999116e-06, 3.929999999999212e-06, 4.221999999998172e-06, 3.916999999999116e-06, 3.875000000000406e-06, 4.208000000002071e-06, 4.000000000000531e-06, 3.9309999999986855e-06, 4.208000000002071e-06, 3.929999999999212e-06, 3.9309999999986855e-06, 4.237000000000685e-06, 3.915999999999642e-06, 3.902999999999546e-06, 4.222000000001641e-06, 3.915999999999642e-06, 4.000000000000531e-06, 4.1949999999985055e-06, 3.9309999999986855e-06, 3.9309999999986855e-06, 4.221999999998172e-06, 3.902000000000072e-06, 3.9449999999982555e-06, 4.209000000001545e-06, 3.931000000002155e-06, 3.987000000000435e-06, 4.264000000000351e-06, 3.916999999999116e-06, 3.929999999999212e-06, 4.250000000000781e-06, 3.9309999999986855e-06, 3.888999999999976e-06, 4.139000000000226e-06]</msg>
<status status="PASS" starttime="20201115 22:00:26.880" endtime="20201115 22:00:26.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.875" endtime="20201115 22:00:26.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.885" endtime="20201115 22:00:26.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:26.889" endtime="20201115 22:00:26.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.887" endtime="20201115 22:00:26.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.884" endtime="20201115 22:00:26.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.520" endtime="20201115 22:00:26.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.951" endtime="20201115 22:00:26.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.950" endtime="20201115 22:00:26.910"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.912" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.921" endtime="20201115 22:00:26.936"></status>
</kw>
<msg timestamp="20201115 22:00:26.937" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.919" endtime="20201115 22:00:26.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.939" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.938" endtime="20201115 22:00:26.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.940" endtime="20201115 22:00:26.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.916" endtime="20201115 22:00:26.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.914" endtime="20201115 22:00:26.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.949" endtime="20201115 22:00:27.236"></status>
</kw>
<msg timestamp="20201115 22:00:27.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024467264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024471333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.948" endtime="20201115 22:00:27.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024467264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024471333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.240" endtime="20201115 22:00:27.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.248" endtime="20201115 22:00:27.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.945" endtime="20201115 22:00:27.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.943" endtime="20201115 22:00:27.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.255" level="INFO">${RESULT} = [{'time': 0.024471333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.069000000002376e-06, 'source_diff': 4.069000000002376e-06}, {'time': 0.024591861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:27.251" endtime="20201115 22:00:27.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.268" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:27.255" endtime="20201115 22:00:27.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.272" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:27.271" endtime="20201115 22:00:27.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.275" level="INFO">VALUE: [4.069000000002376e-06, 4.277999999999921e-06, 4.0559999999988106e-06, 4.0559999999988106e-06, 4.34799999999777e-06, 4.082999999998477e-06, 4.09799999999752e-06, 4.361000000001336e-06, 4.0699999999983805e-06, 4.04200000000271e-06, 4.347000000001766e-06, 4.068999999998907e-06, 4.082999999998477e-06, 4.332999999998727e-06, 4.054999999999337e-06, 4.040999999999767e-06, 4.291999999999491e-06, 4.040999999999767e-06, 4.041999999999241e-06, 4.346999999998297e-06, 4.027999999999671e-06, 4.068999999998907e-06, 4.361000000001336e-06, 4.0410000000032364e-06, 4.05600000000228e-06, 4.361000000001336e-06, 4.0559999999988106e-06, 4.1249999999971865e-06, 4.375000000000906e-06, 4.139000000000226e-06, 4.082999999998477e-06, 4.389000000000476e-06, 4.068999999998907e-06, 4.069000000002376e-06, 4.361000000001336e-06, 4.05600000000228e-06, 4.07000000000185e-06, 4.361000000001336e-06, 4.05600000000228e-06, 4.05600000000228e-06, 4.347000000001766e-06, 4.054999999999337e-06, 4.0699999999983805e-06, 4.34799999999777e-06, 4.069000000002376e-06, 4.152999999999796e-06, 4.360999999997867e-06, 4.082999999998477e-06, 4.040999999999767e-06, 4.361000000001336e-06]</msg>
<status status="PASS" starttime="20201115 22:00:27.273" endtime="20201115 22:00:27.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.269" endtime="20201115 22:00:27.276"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.278" endtime="20201115 22:00:27.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.282" endtime="20201115 22:00:27.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.280" endtime="20201115 22:00:27.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.277" endtime="20201115 22:00:27.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.912" endtime="20201115 22:00:27.302"></status>
</kw>
<msg timestamp="20201115 22:00:27.303" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.312" endtime="20201115 22:00:27.327"></status>
</kw>
<msg timestamp="20201115 22:00:27.328" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.310" endtime="20201115 22:00:27.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.330" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.329" endtime="20201115 22:00:27.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.331" endtime="20201115 22:00:27.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.307" endtime="20201115 22:00:27.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.305" endtime="20201115 22:00:27.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.340" endtime="20201115 22:00:27.629"></status>
</kw>
<msg timestamp="20201115 22:00:27.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022157125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.339" endtime="20201115 22:00:27.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022157125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.633" endtime="20201115 22:00:27.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.641" endtime="20201115 22:00:27.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.336" endtime="20201115 22:00:27.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.334" endtime="20201115 22:00:27.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.647" level="INFO">${RESULT} = [{'time': 0.022157125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.022278361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:27.644" endtime="20201115 22:00:27.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.704" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:27.648" endtime="20201115 22:00:27.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.709" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:27.708" endtime="20201115 22:00:27.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.711" level="INFO">VALUE: [4.082999999998477e-06, 4.346999999998297e-06, 4.054999999999337e-06, 4.0559999999988106e-06, 4.361000000001336e-06, 4.05600000000228e-06, 4.082999999998477e-06, 4.346999999998297e-06, 4.0699999999983805e-06, 4.082999999998477e-06, 4.361000000001336e-06, 4.054999999999337e-06, 4.0699999999983805e-06, 4.347000000001766e-06, 4.08400000000142e-06, 4.0699999999983805e-06, 4.347000000001766e-06, 4.041999999999241e-06, 4.08399999999795e-06, 4.332999999998727e-06, 4.068999999998907e-06, 4.054999999999337e-06, 4.332999999998727e-06, 4.05600000000228e-06, 4.097000000001516e-06, 4.36199999999734e-06, 4.0559999999988106e-06, 4.1109999999976166e-06, 4.361000000001336e-06, 4.08399999999795e-06, 4.040999999999767e-06, 4.332999999998727e-06, 4.0699999999983805e-06, 4.07000000000185e-06, 4.361000000001336e-06, 4.083000000001946e-06, 4.111000000001086e-06, 4.361000000001336e-06, 4.08399999999795e-06, 4.083000000001946e-06, 4.305999999999061e-06, 4.068999999998907e-06, 4.0559999999988106e-06, 4.346999999998297e-06, 4.07000000000185e-06, 4.082999999998477e-06, 4.346999999998297e-06, 4.07000000000185e-06, 4.08400000000142e-06, 4.3339999999982e-06]</msg>
<status status="PASS" starttime="20201115 22:00:27.710" endtime="20201115 22:00:27.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.705" endtime="20201115 22:00:27.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.714" endtime="20201115 22:00:27.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.718" endtime="20201115 22:00:27.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.716" endtime="20201115 22:00:27.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.713" endtime="20201115 22:00:27.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.303" endtime="20201115 22:00:27.738"></status>
</kw>
<msg timestamp="20201115 22:00:27.739" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.748" endtime="20201115 22:00:27.764"></status>
</kw>
<msg timestamp="20201115 22:00:27.765" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.746" endtime="20201115 22:00:27.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.767" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.766" endtime="20201115 22:00:27.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.768" endtime="20201115 22:00:27.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.743" endtime="20201115 22:00:27.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.741" endtime="20201115 22:00:27.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.777" endtime="20201115 22:00:28.063"></status>
</kw>
<msg timestamp="20201115 22:00:28.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022695069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.776" endtime="20201115 22:00:28.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022695069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.068" endtime="20201115 22:00:28.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.075" endtime="20201115 22:00:28.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.773" endtime="20201115 22:00:28.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.772" endtime="20201115 22:00:28.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.082" level="INFO">${RESULT} = [{'time': 0.022699139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.07000000000185e-06, 'source_diff': 4.07000000000185e-06}, {'time': 0.022820444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:28.079" endtime="20201115 22:00:28.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.096" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:28.084" endtime="20201115 22:00:28.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.100" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:28.099" endtime="20201115 22:00:28.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.103" level="INFO">VALUE: [4.07000000000185e-06, 4.346999999998297e-06, 4.054999999999337e-06, 4.014000000000101e-06, 4.361000000001336e-06, 4.152999999999796e-06, 4.08400000000142e-06, 4.375000000000906e-06, 4.041999999999241e-06, 4.000000000000531e-06, 4.389000000000476e-06, 4.083000000001946e-06, 4.125000000000656e-06, 4.36200000000081e-06, 4.05600000000228e-06, 4.014000000000101e-06, 4.346999999998297e-06, 4.07000000000185e-06, 4.040999999999767e-06, 4.416999999999616e-06, 4.083000000001946e-06, 4.082999999998477e-06, 4.3339999999982e-06, 4.068999999998907e-06, 4.07000000000185e-06, 4.347000000001766e-06, 4.08399999999795e-06, 4.069000000002376e-06, 4.346999999998297e-06, 4.0559999999988106e-06, 4.054999999999337e-06, 4.333000000002196e-06, 4.054999999999337e-06, 4.09800000000099e-06, 4.332999999998727e-06, 4.0410000000032364e-06, 4.02800000000314e-06, 4.361000000001336e-06, 4.139000000000226e-06, 4.07000000000185e-06, 4.360999999997867e-06, 4.068999999998907e-06, 4.09800000000099e-06, 4.361000000001336e-06, 4.082999999998477e-06, 4.082999999998477e-06, 4.346999999998297e-06, 4.055000000002806e-06, 4.041999999999241e-06, 4.332999999998727e-06]</msg>
<status status="PASS" starttime="20201115 22:00:28.101" endtime="20201115 22:00:28.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.097" endtime="20201115 22:00:28.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.106" endtime="20201115 22:00:28.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.109" endtime="20201115 22:00:28.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.108" endtime="20201115 22:00:28.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.104" endtime="20201115 22:00:28.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.739" endtime="20201115 22:00:28.130"></status>
</kw>
<msg timestamp="20201115 22:00:28.130" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.140" endtime="20201115 22:00:28.156"></status>
</kw>
<msg timestamp="20201115 22:00:28.157" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.138" endtime="20201115 22:00:28.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.159" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.158" endtime="20201115 22:00:28.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.161" endtime="20201115 22:00:28.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.135" endtime="20201115 22:00:28.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.133" endtime="20201115 22:00:28.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.170" endtime="20201115 22:00:28.454"></status>
</kw>
<msg timestamp="20201115 22:00:28.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022936597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.168" endtime="20201115 22:00:28.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022936597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.459" endtime="20201115 22:00:28.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.467" endtime="20201115 22:00:28.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.166" endtime="20201115 22:00:28.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.164" endtime="20201115 22:00:28.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.474" level="INFO">${RESULT} = [{'time': 0.022936597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.023057819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:28.470" endtime="20201115 22:00:28.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.487" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:28.475" endtime="20201115 22:00:28.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.492" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:28.491" endtime="20201115 22:00:28.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.494" level="INFO">VALUE: [4.082999999998477e-06, 4.277000000000447e-06, 4.0559999999988106e-06, 4.069000000002376e-06, 4.304999999999587e-06, 4.083000000001946e-06, 3.986000000000961e-06, 4.333000000002196e-06, 4.054999999999337e-06, 4.08399999999795e-06, 4.361000000001336e-06, 4.05600000000228e-06, 4.082999999998477e-06, 4.346999999998297e-06, 4.068999999998907e-06, 4.111000000001086e-06, 4.34799999999777e-06, 4.068999999998907e-06, 4.027999999999671e-06, 4.291999999999491e-06, 4.027000000000197e-06, 4.083000000001946e-06, 4.347000000001766e-06, 4.082999999998477e-06, 4.027000000000197e-06, 4.304999999999587e-06, 4.111000000001086e-06, 4.0559999999988106e-06, 4.360999999997867e-06, 4.068999999998907e-06, 4.139000000000226e-06, 4.416999999999616e-06, 4.0559999999988106e-06, 4.068999999998907e-06, 4.346999999998297e-06, 4.082999999998477e-06, 4.027999999999671e-06, 4.318999999999157e-06, 4.0559999999988106e-06, 4.083000000001946e-06, 4.360999999997867e-06, 4.068999999998907e-06, 4.014000000000101e-06, 4.361000000001336e-06, 4.083000000001946e-06, 4.0699999999983805e-06, 4.375000000000906e-06, 4.083000000001946e-06, 4.0559999999988106e-06, 4.361000000001336e-06]</msg>
<status status="PASS" starttime="20201115 22:00:28.493" endtime="20201115 22:00:28.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.488" endtime="20201115 22:00:28.495"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.497" endtime="20201115 22:00:28.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.501" endtime="20201115 22:00:28.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.499" endtime="20201115 22:00:28.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.496" endtime="20201115 22:00:28.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.131" endtime="20201115 22:00:28.521"></status>
</kw>
<msg timestamp="20201115 22:00:28.521" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.530" endtime="20201115 22:00:28.547"></status>
</kw>
<msg timestamp="20201115 22:00:28.548" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.529" endtime="20201115 22:00:28.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.550" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.549" endtime="20201115 22:00:28.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.551" endtime="20201115 22:00:28.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.526" endtime="20201115 22:00:28.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.524" endtime="20201115 22:00:28.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.560" endtime="20201115 22:00:28.845"></status>
</kw>
<msg timestamp="20201115 22:00:28.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022752028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.559" endtime="20201115 22:00:28.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022752028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.850" endtime="20201115 22:00:28.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.858" endtime="20201115 22:00:28.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.556" endtime="20201115 22:00:28.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.555" endtime="20201115 22:00:28.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.864" level="INFO">${RESULT} = [{'time': 0.022756097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.068999999998907e-06, 'source_diff': 4.068999999998907e-06}, {'time': 0.022877444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:28.861" endtime="20201115 22:00:28.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.878" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:28.865" endtime="20201115 22:00:28.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.882" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:28.881" endtime="20201115 22:00:28.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.884" level="INFO">VALUE: [4.068999999998907e-06, 4.361000000001336e-06, 4.083000000001946e-06, 4.054999999999337e-06, 4.346999999998297e-06, 4.0699999999983805e-06, 4.0559999999988106e-06, 4.347000000001766e-06, 4.0699999999983805e-06, 4.027999999999671e-06, 4.347000000001766e-06, 4.083000000001946e-06, 4.0559999999988106e-06, 4.34800000000124e-06, 4.040999999999767e-06, 4.069000000002376e-06, 4.34800000000124e-06, 4.05600000000228e-06, 4.097000000001516e-06, 4.34800000000124e-06, 4.05600000000228e-06, 4.097000000001516e-06, 4.361000000001336e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.346999999998297e-06, 4.068999999998907e-06, 4.08399999999795e-06, 4.375000000000906e-06, 4.0559999999988106e-06, 4.0559999999988106e-06, 4.333000000002196e-06, 4.0699999999983805e-06, 4.069000000002376e-06, 4.347000000001766e-06, 4.05600000000228e-06, 4.041999999999241e-06, 4.3339999999982e-06, 4.068999999998907e-06, 3.9999999999970615e-06, 4.34799999999777e-06, 4.097000000001516e-06, 4.07000000000185e-06, 4.277999999999921e-06, 4.082999999998477e-06, 4.027000000000197e-06, 4.389000000000476e-06, 4.08400000000142e-06, 4.04200000000271e-06, 4.34799999999777e-06]</msg>
<status status="PASS" starttime="20201115 22:00:28.883" endtime="20201115 22:00:28.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.878" endtime="20201115 22:00:28.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.888" endtime="20201115 22:00:28.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.891" endtime="20201115 22:00:28.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.890" endtime="20201115 22:00:28.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.886" endtime="20201115 22:00:28.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.522" endtime="20201115 22:00:28.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.911" endtime="20201115 22:00:28.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.910" endtime="20201115 22:00:28.912"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.914" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.923" endtime="20201115 22:00:28.940"></status>
</kw>
<msg timestamp="20201115 22:00:28.941" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.922" endtime="20201115 22:00:28.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.943" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.942" endtime="20201115 22:00:28.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.944" endtime="20201115 22:00:28.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.919" endtime="20201115 22:00:28.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.917" endtime="20201115 22:00:28.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.954" endtime="20201115 22:00:29.240"></status>
</kw>
<msg timestamp="20201115 22:00:29.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025592806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025597014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.952" endtime="20201115 22:00:29.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025592806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025597014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.244" endtime="20201115 22:00:29.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.252" endtime="20201115 22:00:29.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.950" endtime="20201115 22:00:29.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.948" endtime="20201115 22:00:29.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:29.259" level="INFO">${RESULT} = [{'time': 0.025597014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.208000000002071e-06, 'source_diff': 4.208000000002071e-06}, {'time': 0.025724375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:29.256" endtime="20201115 22:00:29.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:29.273" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:29.260" endtime="20201115 22:00:29.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.278" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:29.277" endtime="20201115 22:00:29.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.280" level="INFO">VALUE: [4.208000000002071e-06, 4.443999999999282e-06, 4.195000000001975e-06, 4.222000000001641e-06, 4.485999999997992e-06, 4.1949999999985055e-06, 4.1809999999989356e-06, 4.4999999999975615e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.471999999998422e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.471999999998422e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.500000000001031e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.527999999996701e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.457999999998852e-06, 4.1949999999985055e-06, 4.179999999999462e-06, 4.487000000000935e-06, 4.139000000000226e-06, 4.222000000001641e-06, 4.486000000001461e-06, 4.277999999999921e-06, 4.208999999998075e-06, 4.472000000001891e-06, 4.125000000000656e-06, 4.236000000001211e-06, 4.514000000000601e-06, 4.208000000002071e-06, 4.139000000000226e-06, 4.487000000000935e-06, 4.208000000002071e-06, 4.30600000000253e-06, 4.485999999997992e-06, 4.193999999999032e-06, 4.208000000002071e-06, 4.417000000003085e-06, 4.207999999998602e-06, 4.222999999997645e-06, 4.4999999999975615e-06, 4.207999999998602e-06, 4.179999999999462e-06, 4.527999999996701e-06]</msg>
<status status="PASS" starttime="20201115 22:00:29.279" endtime="20201115 22:00:29.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.274" endtime="20201115 22:00:29.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.284" endtime="20201115 22:00:29.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:29.287" endtime="20201115 22:00:29.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.285" endtime="20201115 22:00:29.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.282" endtime="20201115 22:00:29.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.915" endtime="20201115 22:00:29.308"></status>
</kw>
<msg timestamp="20201115 22:00:29.308" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.317" endtime="20201115 22:00:29.333"></status>
</kw>
<msg timestamp="20201115 22:00:29.334" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.315" endtime="20201115 22:00:29.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.337" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.335" endtime="20201115 22:00:29.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.338" endtime="20201115 22:00:29.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.313" endtime="20201115 22:00:29.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.311" endtime="20201115 22:00:29.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.348" endtime="20201115 22:00:29.636"></status>
</kw>
<msg timestamp="20201115 22:00:29.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.346" endtime="20201115 22:00:29.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.645" endtime="20201115 22:00:29.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.663" endtime="20201115 22:00:29.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.344" endtime="20201115 22:00:29.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.342" endtime="20201115 22:00:29.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:29.676" level="INFO">${RESULT} = [{'time': 0.022155972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.022283292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:29.669" endtime="20201115 22:00:29.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:29.706" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:29.679" endtime="20201115 22:00:29.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.715" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:29.713" endtime="20201115 22:00:29.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.721" level="INFO">VALUE: [4.179999999999462e-06, 4.473000000001365e-06, 4.207999999998602e-06, 4.179999999999462e-06, 4.514000000000601e-06, 4.277999999999921e-06, 4.166999999999366e-06, 4.486999999997465e-06, 4.277000000000447e-06, 4.236000000001211e-06, 4.471999999998422e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.500000000001031e-06, 4.208000000002071e-06, 4.207999999998602e-06, 4.485999999997992e-06, 4.236000000001211e-06, 4.208000000002071e-06, 4.485999999997992e-06, 4.207999999998602e-06, 4.223000000001115e-06, 4.4999999999975615e-06, 4.179999999999462e-06, 4.207999999998602e-06, 4.485999999997992e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.487000000000935e-06, 4.1949999999985055e-06, 4.195000000001975e-06, 4.541000000000267e-06, 4.195000000001975e-06, 4.208000000002071e-06, 4.500000000001031e-06, 4.1809999999989356e-06, 4.1949999999985055e-06, 4.541999999999741e-06, 4.207999999998602e-06, 4.208000000002071e-06, 4.443999999999282e-06, 4.222000000001641e-06, 4.208000000002071e-06, 4.486000000001461e-06, 4.194000000002501e-06, 4.236000000001211e-06, 4.457999999998852e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.514000000000601e-06]</msg>
<status status="PASS" starttime="20201115 22:00:29.718" endtime="20201115 22:00:29.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.708" endtime="20201115 22:00:29.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.727" endtime="20201115 22:00:29.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:29.734" endtime="20201115 22:00:29.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.731" endtime="20201115 22:00:29.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.724" endtime="20201115 22:00:29.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.308" endtime="20201115 22:00:29.755"></status>
</kw>
<msg timestamp="20201115 22:00:29.756" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.765" endtime="20201115 22:00:29.782"></status>
</kw>
<msg timestamp="20201115 22:00:29.782" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.763" endtime="20201115 22:00:29.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.785" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.783" endtime="20201115 22:00:29.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.786" endtime="20201115 22:00:29.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.760" endtime="20201115 22:00:29.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.758" endtime="20201115 22:00:29.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.796" endtime="20201115 22:00:30.081"></status>
</kw>
<msg timestamp="20201115 22:00:30.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022708528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.794" endtime="20201115 22:00:30.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022708528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.085" endtime="20201115 22:00:30.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.094" endtime="20201115 22:00:30.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.792" endtime="20201115 22:00:30.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.790" endtime="20201115 22:00:30.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.100" level="INFO">${RESULT} = [{'time': 0.022708528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.022835736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:30.097" endtime="20201115 22:00:30.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.114" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:30.101" endtime="20201115 22:00:30.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.118" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:30.117" endtime="20201115 22:00:30.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.121" level="INFO">VALUE: [4.1949999999985055e-06, 4.485999999997992e-06, 4.1949999999985055e-06, 4.222000000001641e-06, 4.4999999999975615e-06, 4.1809999999989356e-06, 4.1949999999985055e-06, 4.471999999998422e-06, 4.193999999999032e-06, 4.1949999999985055e-06, 4.485999999997992e-06, 4.207999999998602e-06, 4.1809999999989356e-06, 4.513000000001127e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.500000000001031e-06, 4.195000000001975e-06, 4.222000000001641e-06, 4.527000000000697e-06, 4.208999999998075e-06, 4.179999999999462e-06, 4.487000000000935e-06, 4.208999999998075e-06, 4.179999999999462e-06, 4.485999999997992e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.4999999999975615e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.500000000001031e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.485999999997992e-06, 4.221999999998172e-06, 4.209000000001545e-06, 4.514000000000601e-06, 4.208999999998075e-06, 4.209000000001545e-06, 4.4999999999975615e-06, 4.139000000000226e-06, 4.236000000001211e-06, 4.487000000000935e-06, 4.209000000001545e-06, 4.207999999998602e-06, 4.472000000001891e-06, 4.1809999999989356e-06, 4.193999999999032e-06, 4.500000000001031e-06]</msg>
<status status="PASS" starttime="20201115 22:00:30.119" endtime="20201115 22:00:30.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.114" endtime="20201115 22:00:30.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.124" endtime="20201115 22:00:30.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.127" endtime="20201115 22:00:30.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.126" endtime="20201115 22:00:30.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.122" endtime="20201115 22:00:30.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.756" endtime="20201115 22:00:30.148"></status>
</kw>
<msg timestamp="20201115 22:00:30.148" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.157" endtime="20201115 22:00:30.173"></status>
</kw>
<msg timestamp="20201115 22:00:30.174" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.156" endtime="20201115 22:00:30.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.176" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.175" endtime="20201115 22:00:30.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.177" endtime="20201115 22:00:30.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.153" endtime="20201115 22:00:30.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.151" endtime="20201115 22:00:30.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.187" endtime="20201115 22:00:30.472"></status>
</kw>
<msg timestamp="20201115 22:00:30.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022400736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.185" endtime="20201115 22:00:30.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022400736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.476" endtime="20201115 22:00:30.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.484" endtime="20201115 22:00:30.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.183" endtime="20201115 22:00:30.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.181" endtime="20201115 22:00:30.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.491" level="INFO">${RESULT} = [{'time': 0.022404931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.022532042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:30.488" endtime="20201115 22:00:30.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.504" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:30.492" endtime="20201115 22:00:30.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.509" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:30.508" endtime="20201115 22:00:30.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.511" level="INFO">VALUE: [4.1949999999985055e-06, 4.485999999997992e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.4999999999975615e-06, 4.207999999998602e-06, 4.208000000002071e-06, 4.473000000001365e-06, 4.179999999999462e-06, 4.1949999999985055e-06, 4.4999999999975615e-06, 4.209000000001545e-06, 4.152999999999796e-06, 4.500000000001031e-06, 4.208999999998075e-06, 4.223000000001115e-06, 4.4449999999987555e-06, 4.209000000001545e-06, 4.277999999999921e-06, 4.541000000000267e-06, 4.207999999998602e-06, 4.2359999999977416e-06, 4.500000000001031e-06, 4.1809999999989356e-06, 4.207999999998602e-06, 4.485999999997992e-06, 4.223000000001115e-06, 4.195000000001975e-06, 4.4999999999975615e-06, 4.1949999999985055e-06, 4.166999999999366e-06, 4.500000000001031e-06, 4.207999999998602e-06, 4.208999999998075e-06, 4.443999999999282e-06, 4.221999999998172e-06, 4.195000000001975e-06, 4.472000000001891e-06, 4.180000000002931e-06, 4.181000000002405e-06, 4.443999999999282e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.486000000001461e-06, 4.208999999998075e-06, 4.1949999999985055e-06, 4.486000000001461e-06, 4.207999999998602e-06, 4.208999999998075e-06, 4.473000000001365e-06]</msg>
<status status="PASS" starttime="20201115 22:00:30.510" endtime="20201115 22:00:30.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.505" endtime="20201115 22:00:30.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.515" endtime="20201115 22:00:30.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.518" endtime="20201115 22:00:30.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.517" endtime="20201115 22:00:30.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.513" endtime="20201115 22:00:30.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.149" endtime="20201115 22:00:30.539"></status>
</kw>
<msg timestamp="20201115 22:00:30.539" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.548" endtime="20201115 22:00:30.565"></status>
</kw>
<msg timestamp="20201115 22:00:30.566" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.547" endtime="20201115 22:00:30.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.568" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.567" endtime="20201115 22:00:30.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.569" endtime="20201115 22:00:30.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.544" endtime="20201115 22:00:30.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.542" endtime="20201115 22:00:30.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.579" endtime="20201115 22:00:30.865"></status>
</kw>
<msg timestamp="20201115 22:00:30.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022194069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.578" endtime="20201115 22:00:30.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022194069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.869" endtime="20201115 22:00:30.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.877" endtime="20201115 22:00:30.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.575" endtime="20201115 22:00:30.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.573" endtime="20201115 22:00:30.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.883" level="INFO">${RESULT} = [{'time': 0.022194069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.263000000000877e-06, 'source_diff': 4.263000000000877e-06}, {'time': 0.022321167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:30.880" endtime="20201115 22:00:30.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.897" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:30.884" endtime="20201115 22:00:30.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.902" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:30.901" endtime="20201115 22:00:30.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.904" level="INFO">VALUE: [4.263000000000877e-06, 4.528000000000171e-06, 4.181000000002405e-06, 4.222999999997645e-06, 4.4999999999975615e-06, 4.208999999998075e-06, 4.250000000000781e-06, 4.486000000001461e-06, 4.1809999999989356e-06, 4.222000000001641e-06, 4.500000000001031e-06, 4.236000000001211e-06, 4.2499999999973115e-06, 4.514000000000601e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.500000000001031e-06, 4.1809999999989356e-06, 4.179999999999462e-06, 4.500000000001031e-06, 4.221999999998172e-06, 4.179999999999462e-06, 4.485999999997992e-06, 4.209000000001545e-06, 4.207999999998602e-06, 4.514000000000601e-06, 4.222999999997645e-06, 4.221999999998172e-06, 4.486000000001461e-06, 4.237000000000685e-06, 4.1949999999985055e-06, 4.500000000001031e-06, 4.1949999999985055e-06, 4.221999999998172e-06, 4.514000000000601e-06, 4.207999999998602e-06, 4.1949999999985055e-06, 4.500000000001031e-06, 4.208000000002071e-06, 4.1809999999989356e-06, 4.514000000000601e-06, 4.207999999998602e-06, 4.180000000002931e-06, 4.486000000001461e-06, 4.2359999999977416e-06, 4.207999999998602e-06, 4.486000000001461e-06, 4.139000000000226e-06, 4.208999999998075e-06, 4.485999999997992e-06]</msg>
<status status="PASS" starttime="20201115 22:00:30.903" endtime="20201115 22:00:30.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.898" endtime="20201115 22:00:30.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.908" endtime="20201115 22:00:30.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.912" endtime="20201115 22:00:30.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.910" endtime="20201115 22:00:30.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.906" endtime="20201115 22:00:30.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.540" endtime="20201115 22:00:30.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.913" endtime="20201115 22:00:30.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.912" endtime="20201115 22:00:30.933"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.935" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.944" endtime="20201115 22:00:30.960"></status>
</kw>
<msg timestamp="20201115 22:00:30.961" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.942" endtime="20201115 22:00:30.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.963" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.962" endtime="20201115 22:00:30.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.964" endtime="20201115 22:00:30.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.939" endtime="20201115 22:00:30.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.937" endtime="20201115 22:00:30.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.973" endtime="20201115 22:00:31.259"></status>
</kw>
<msg timestamp="20201115 22:00:31.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024369, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024373347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:30.972" endtime="20201115 22:00:31.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024369, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024373347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:31.263" endtime="20201115 22:00:31.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.271" endtime="20201115 22:00:31.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.969" endtime="20201115 22:00:31.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.967" endtime="20201115 22:00:31.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.278" level="INFO">${RESULT} = [{'time': 0.024373347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.024506875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:31.275" endtime="20201115 22:00:31.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.291" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:31.279" endtime="20201115 22:00:31.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.296" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:31.295" endtime="20201115 22:00:31.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.302" level="INFO">VALUE: [4.347000000001766e-06, 4.611000000001586e-06, 4.417000000003085e-06, 4.346999999998297e-06, 4.639000000000726e-06, 4.389000000000476e-06, 4.34800000000124e-06, 4.625000000001156e-06, 4.3199999999986305e-06, 4.361000000001336e-06, 4.639000000000726e-06, 4.318999999999157e-06, 4.3339999999982e-06, 4.611000000001586e-06, 4.333000000002196e-06, 4.34800000000124e-06, 4.6389999999972564e-06, 4.347000000001766e-06, 4.360999999997867e-06, 4.611000000001586e-06, 4.291999999999491e-06, 4.416999999999616e-06, 4.59800000000149e-06, 4.3339999999982e-06, 4.3339999999982e-06, 4.625000000001156e-06, 4.34799999999777e-06, 4.360999999997867e-06, 4.639000000000726e-06, 4.347000000001766e-06, 4.346999999998297e-06, 4.625000000001156e-06, 4.346999999998297e-06, 4.3339999999982e-06, 4.639000000000726e-06, 4.346999999998297e-06, 4.333000000002196e-06, 4.639000000000726e-06, 4.346999999998297e-06, 4.318999999999157e-06, 4.625000000001156e-06, 4.347000000001766e-06, 4.416999999999616e-06, 4.639000000000726e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.6249999999976865e-06, 4.360999999997867e-06, 4.360999999997867e-06, 4.597000000002016e-06]</msg>
<status status="PASS" starttime="20201115 22:00:31.297" endtime="20201115 22:00:31.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.292" endtime="20201115 22:00:31.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.306" endtime="20201115 22:00:31.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:31.309" endtime="20201115 22:00:31.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.307" endtime="20201115 22:00:31.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.304" endtime="20201115 22:00:31.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.935" endtime="20201115 22:00:31.330"></status>
</kw>
<msg timestamp="20201115 22:00:31.330" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.339" endtime="20201115 22:00:31.356"></status>
</kw>
<msg timestamp="20201115 22:00:31.356" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.337" endtime="20201115 22:00:31.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.359" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.357" endtime="20201115 22:00:31.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.360" endtime="20201115 22:00:31.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.334" endtime="20201115 22:00:31.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.332" endtime="20201115 22:00:31.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.369" endtime="20201115 22:00:31.655"></status>
</kw>
<msg timestamp="20201115 22:00:31.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022058208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022062514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.368" endtime="20201115 22:00:31.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022058208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022062514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.659" endtime="20201115 22:00:31.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.667" endtime="20201115 22:00:31.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.365" endtime="20201115 22:00:31.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.364" endtime="20201115 22:00:31.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.674" level="INFO">${RESULT} = [{'time': 0.022062514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.02219625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:31.671" endtime="20201115 22:00:31.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.687" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:31.675" endtime="20201115 22:00:31.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.692" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:31.691" endtime="20201115 22:00:31.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.695" level="INFO">VALUE: [4.305999999999061e-06, 4.639000000000726e-06, 4.347000000001766e-06, 4.347000000001766e-06, 4.639000000000726e-06, 4.34799999999777e-06, 4.360999999997867e-06, 4.6249999999976865e-06, 4.318999999999157e-06, 4.346999999998297e-06, 4.611000000001586e-06, 4.361000000001336e-06, 4.346999999998297e-06, 4.639000000000726e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.6389999999972564e-06, 4.332999999998727e-06, 4.375000000000906e-06, 4.625000000001156e-06, 4.277999999999921e-06, 4.34800000000124e-06, 4.582999999998977e-06, 4.347000000001766e-06, 4.332999999998727e-06, 4.610999999998117e-06, 4.304999999999587e-06, 4.360999999997867e-06, 4.596999999998547e-06, 4.361000000001336e-06, 4.347000000001766e-06, 4.625000000001156e-06, 4.346999999998297e-06, 4.34800000000124e-06, 4.625000000001156e-06, 4.3339999999982e-06, 4.36200000000081e-06, 4.57000000000235e-06, 4.36199999999734e-06, 4.360999999997867e-06, 4.653000000000296e-06, 4.347000000001766e-06, 4.346999999998297e-06, 4.639000000000726e-06, 4.332999999998727e-06, 4.36200000000081e-06, 4.6249999999976865e-06, 4.361000000001336e-06, 4.332999999998727e-06, 4.625000000001156e-06]</msg>
<status status="PASS" starttime="20201115 22:00:31.693" endtime="20201115 22:00:31.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.689" endtime="20201115 22:00:31.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.698" endtime="20201115 22:00:31.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:31.701" endtime="20201115 22:00:31.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.700" endtime="20201115 22:00:31.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.696" endtime="20201115 22:00:31.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.330" endtime="20201115 22:00:31.722"></status>
</kw>
<msg timestamp="20201115 22:00:31.722" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.731" endtime="20201115 22:00:31.747"></status>
</kw>
<msg timestamp="20201115 22:00:31.748" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.729" endtime="20201115 22:00:31.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.750" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.749" endtime="20201115 22:00:31.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.751" endtime="20201115 22:00:31.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.727" endtime="20201115 22:00:31.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.725" endtime="20201115 22:00:31.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.761" endtime="20201115 22:00:32.046"></status>
</kw>
<msg timestamp="20201115 22:00:32.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021967042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.759" endtime="20201115 22:00:32.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021967042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.050" endtime="20201115 22:00:32.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.058" endtime="20201115 22:00:32.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.757" endtime="20201115 22:00:32.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.755" endtime="20201115 22:00:32.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:32.065" level="INFO">${RESULT} = [{'time': 0.021971375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.022105181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:32.062" endtime="20201115 22:00:32.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.079" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:32.067" endtime="20201115 22:00:32.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.084" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:32.083" endtime="20201115 22:00:32.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.086" level="INFO">VALUE: [4.333000000002196e-06, 4.639000000000726e-06, 4.319000000002626e-06, 4.332999999998727e-06, 4.653000000000296e-06, 4.318999999999157e-06, 4.346999999998297e-06, 4.625000000001156e-06, 4.3339999999982e-06, 4.360999999997867e-06, 4.625000000001156e-06, 4.3749999999974365e-06, 4.291000000000017e-06, 4.6249999999976865e-06, 4.332999999998727e-06, 4.346999999998297e-06, 4.625000000001156e-06, 4.3199999999986305e-06, 4.361000000001336e-06, 4.583000000002446e-06, 4.34799999999777e-06, 4.361000000001336e-06, 4.639000000000726e-06, 4.346999999998297e-06, 4.34800000000124e-06, 4.639000000000726e-06, 4.360999999997867e-06, 4.346999999998297e-06, 4.639000000000726e-06, 4.291999999999491e-06, 4.403000000000046e-06, 4.639000000000726e-06, 4.346999999998297e-06, 4.333000000002196e-06, 4.639000000000726e-06, 4.361000000001336e-06, 4.3339999999982e-06, 4.582999999998977e-06, 4.347000000001766e-06, 4.36199999999734e-06, 4.6249999999976865e-06, 4.319000000002626e-06, 4.346999999998297e-06, 4.625000000001156e-06, 4.332999999998727e-06, 4.347000000001766e-06, 4.6389999999972564e-06, 4.3339999999982e-06, 4.346999999998297e-06, 4.582999999998977e-06]</msg>
<status status="PASS" starttime="20201115 22:00:32.085" endtime="20201115 22:00:32.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.080" endtime="20201115 22:00:32.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.090" endtime="20201115 22:00:32.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.093" endtime="20201115 22:00:32.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.091" endtime="20201115 22:00:32.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.088" endtime="20201115 22:00:32.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.723" endtime="20201115 22:00:32.114"></status>
</kw>
<msg timestamp="20201115 22:00:32.114" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.123" endtime="20201115 22:00:32.139"></status>
</kw>
<msg timestamp="20201115 22:00:32.139" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.121" endtime="20201115 22:00:32.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.142" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.141" endtime="20201115 22:00:32.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.143" endtime="20201115 22:00:32.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.119" endtime="20201115 22:00:32.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.116" endtime="20201115 22:00:32.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.153" endtime="20201115 22:00:32.438"></status>
</kw>
<msg timestamp="20201115 22:00:32.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021984028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.151" endtime="20201115 22:00:32.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021984028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.442" endtime="20201115 22:00:32.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.450" endtime="20201115 22:00:32.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.149" endtime="20201115 22:00:32.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.147" endtime="20201115 22:00:32.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:32.457" level="INFO">${RESULT} = [{'time': 0.021988361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.022121806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:32.454" endtime="20201115 22:00:32.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.471" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:32.458" endtime="20201115 22:00:32.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.476" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:32.475" endtime="20201115 22:00:32.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.478" level="INFO">VALUE: [4.333000000002196e-06, 4.653000000000296e-06, 4.347000000001766e-06, 4.332999999998727e-06, 4.639000000000726e-06, 4.346999999998297e-06, 4.361000000001336e-06, 4.639000000000726e-06, 4.33400000000167e-06, 4.347000000001766e-06, 4.639000000000726e-06, 4.3200000000021e-06, 4.3339999999982e-06, 4.6249999999976865e-06, 4.347000000001766e-06, 4.333000000002196e-06, 4.653000000000296e-06, 4.34800000000124e-06, 4.361000000001336e-06, 4.6389999999972564e-06, 4.332999999998727e-06, 4.402000000000572e-06, 4.610999999998117e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.639000000000726e-06, 4.360999999997867e-06, 4.3199999999986305e-06, 4.653000000000296e-06, 4.360999999997867e-06, 4.347000000001766e-06, 4.5699999999988805e-06, 4.346999999998297e-06, 4.361000000001336e-06, 4.639000000000726e-06, 4.3749999999974365e-06, 4.277999999999921e-06, 4.625000000001156e-06, 4.34799999999777e-06, 4.34800000000124e-06, 4.639000000000726e-06, 4.360999999997867e-06, 4.332999999998727e-06, 4.611000000001586e-06, 4.403000000000046e-06, 4.333000000002196e-06, 4.639000000000726e-06, 4.318999999999157e-06, 4.3199999999986305e-06, 4.611000000001586e-06]</msg>
<status status="PASS" starttime="20201115 22:00:32.477" endtime="20201115 22:00:32.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.472" endtime="20201115 22:00:32.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.481" endtime="20201115 22:00:32.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.485" endtime="20201115 22:00:32.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.483" endtime="20201115 22:00:32.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.480" endtime="20201115 22:00:32.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.114" endtime="20201115 22:00:32.505"></status>
</kw>
<msg timestamp="20201115 22:00:32.505" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.514" endtime="20201115 22:00:32.531"></status>
</kw>
<msg timestamp="20201115 22:00:32.532" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.513" endtime="20201115 22:00:32.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.534" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.533" endtime="20201115 22:00:32.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.535" endtime="20201115 22:00:32.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.510" endtime="20201115 22:00:32.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.508" endtime="20201115 22:00:32.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.545" endtime="20201115 22:00:32.831"></status>
</kw>
<msg timestamp="20201115 22:00:32.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022260514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.544" endtime="20201115 22:00:32.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022260514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.835" endtime="20201115 22:00:32.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.843" endtime="20201115 22:00:32.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.541" endtime="20201115 22:00:32.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.539" endtime="20201115 22:00:32.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:32.850" level="INFO">${RESULT} = [{'time': 0.022264861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.022398542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:32.847" endtime="20201115 22:00:32.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.863" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:32.851" endtime="20201115 22:00:32.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.868" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:32.867" endtime="20201115 22:00:32.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.870" level="INFO">VALUE: [4.347000000001766e-06, 4.59800000000149e-06, 4.361000000001336e-06, 4.346999999998297e-06, 4.625000000001156e-06, 4.416000000000142e-06, 4.347000000001766e-06, 4.611000000001586e-06, 4.346999999998297e-06, 4.346999999998297e-06, 4.625000000001156e-06, 4.347000000001766e-06, 4.333000000002196e-06, 4.611000000001586e-06, 4.318999999999157e-06, 4.333000000002196e-06, 4.59799999999802e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.639000000000726e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.610999999998117e-06, 4.332999999998727e-06, 4.33400000000167e-06, 4.639000000000726e-06, 4.3749999999974365e-06, 4.360999999997867e-06, 4.653000000000296e-06, 4.361000000001336e-06, 4.332999999998727e-06, 4.625000000001156e-06, 4.291999999999491e-06, 4.346999999998297e-06, 4.6249999999976865e-06, 4.333000000002196e-06, 4.333000000002196e-06, 4.6249999999976865e-06, 4.347000000001766e-06, 4.34800000000124e-06, 4.625000000001156e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.625000000001156e-06, 4.361000000001336e-06, 4.34799999999777e-06, 4.6249999999976865e-06, 4.347000000001766e-06, 4.416999999999616e-06, 4.638000000001252e-06]</msg>
<status status="PASS" starttime="20201115 22:00:32.869" endtime="20201115 22:00:32.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.864" endtime="20201115 22:00:32.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.873" endtime="20201115 22:00:32.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.877" endtime="20201115 22:00:32.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.875" endtime="20201115 22:00:32.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.872" endtime="20201115 22:00:32.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.506" endtime="20201115 22:00:32.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.934" endtime="20201115 22:00:32.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.933" endtime="20201115 22:00:32.898"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.900" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.909" endtime="20201115 22:00:32.925"></status>
</kw>
<msg timestamp="20201115 22:00:32.926" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.907" endtime="20201115 22:00:32.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.928" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.927" endtime="20201115 22:00:32.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.930" endtime="20201115 22:00:32.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.905" endtime="20201115 22:00:32.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.903" endtime="20201115 22:00:32.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.939" endtime="20201115 22:00:33.224"></status>
</kw>
<msg timestamp="20201115 22:00:33.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024669389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024673931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.937" endtime="20201115 22:00:33.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024669389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024673931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.228" endtime="20201115 22:00:33.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.236" endtime="20201115 22:00:33.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.935" endtime="20201115 22:00:33.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.933" endtime="20201115 22:00:33.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:33.243" level="INFO">${RESULT} = [{'time': 0.024673931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.024813778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:33.240" endtime="20201115 22:00:33.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.256" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:33.244" endtime="20201115 22:00:33.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.261" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:33.260" endtime="20201115 22:00:33.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.263" level="INFO">VALUE: [4.541999999999741e-06, 4.709000000002045e-06, 4.445000000002225e-06, 4.486999999997465e-06, 4.778000000000421e-06, 4.514000000000601e-06, 4.473000000001365e-06, 4.778000000000421e-06, 4.486000000001461e-06, 4.500000000001031e-06, 4.805999999999561e-06, 4.486000000001461e-06, 4.500000000001031e-06, 4.7639999999973814e-06, 4.416000000000142e-06, 4.471999999998422e-06, 4.7499999999978115e-06, 4.485999999997992e-06, 4.500000000001031e-06, 4.764000000000851e-06, 4.486000000001461e-06, 4.471999999998422e-06, 4.777999999996951e-06, 4.471999999998422e-06, 4.471999999998422e-06, 4.750000000001281e-06, 4.514000000000601e-06, 4.500000000001031e-06, 4.7639999999973814e-06, 4.459000000001795e-06, 4.473000000001365e-06, 4.764000000000851e-06, 4.472000000001891e-06, 4.485999999997992e-06, 4.764000000000851e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.778000000000421e-06, 4.485999999997992e-06, 4.500000000001031e-06, 4.777000000000947e-06, 4.485999999997992e-06, 4.472000000001891e-06, 4.750000000001281e-06, 4.485999999997992e-06, 4.500000000001031e-06, 4.778000000000421e-06, 4.472000000001891e-06, 4.485999999997992e-06, 4.77800000000389e-06]</msg>
<status status="PASS" starttime="20201115 22:00:33.262" endtime="20201115 22:00:33.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.257" endtime="20201115 22:00:33.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.266" endtime="20201115 22:00:33.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.270" endtime="20201115 22:00:33.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.268" endtime="20201115 22:00:33.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.265" endtime="20201115 22:00:33.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.901" endtime="20201115 22:00:33.291"></status>
</kw>
<msg timestamp="20201115 22:00:33.291" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.300" endtime="20201115 22:00:33.316"></status>
</kw>
<msg timestamp="20201115 22:00:33.317" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.298" endtime="20201115 22:00:33.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.319" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.318" endtime="20201115 22:00:33.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.321" endtime="20201115 22:00:33.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.295" endtime="20201115 22:00:33.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.293" endtime="20201115 22:00:33.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.330" endtime="20201115 22:00:33.615"></status>
</kw>
<msg timestamp="20201115 22:00:33.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022069472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.329" endtime="20201115 22:00:33.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022069472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.619" endtime="20201115 22:00:33.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.627" endtime="20201115 22:00:33.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.326" endtime="20201115 22:00:33.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.325" endtime="20201115 22:00:33.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:33.634" level="INFO">${RESULT} = [{'time': 0.022069472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.022209639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:33.630" endtime="20201115 22:00:33.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.647" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:33.635" endtime="20201115 22:00:33.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.651" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:33.651" endtime="20201115 22:00:33.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.654" level="INFO">VALUE: [4.457999999998852e-06, 4.721999999998672e-06, 4.430999999999186e-06, 4.500000000001031e-06, 4.764000000000851e-06, 4.471999999998422e-06, 4.4999999999975615e-06, 4.7639999999973814e-06, 4.472000000001891e-06, 4.486000000001461e-06, 4.778000000000421e-06, 4.486000000001461e-06, 4.457999999998852e-06, 4.764000000000851e-06, 4.485999999997992e-06, 4.486000000001461e-06, 4.764000000000851e-06, 4.486000000001461e-06, 4.472000000001891e-06, 4.750000000001281e-06, 4.487000000000935e-06, 4.457999999998852e-06, 4.764000000000851e-06, 4.514000000000601e-06, 4.472000000001891e-06, 4.778000000000421e-06, 4.486000000001461e-06, 4.486000000001461e-06, 4.791999999999991e-06, 4.4999999999975615e-06, 4.472999999997895e-06, 4.709000000002045e-06, 4.500000000001031e-06, 4.486000000001461e-06, 4.763000000001377e-06, 4.514000000000601e-06, 4.514000000000601e-06, 4.778000000000421e-06, 4.471999999998422e-06, 4.485999999997992e-06, 4.735999999998242e-06, 4.485999999997992e-06, 4.486999999997465e-06, 4.735999999998242e-06, 4.471999999998422e-06, 4.4999999999975615e-06, 4.7639999999973814e-06, 4.527999999996701e-06, 4.486000000001461e-06, 4.750000000001281e-06]</msg>
<status status="PASS" starttime="20201115 22:00:33.653" endtime="20201115 22:00:33.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.648" endtime="20201115 22:00:33.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.657" endtime="20201115 22:00:33.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.661" endtime="20201115 22:00:33.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.659" endtime="20201115 22:00:33.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.655" endtime="20201115 22:00:33.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.291" endtime="20201115 22:00:33.681"></status>
</kw>
<msg timestamp="20201115 22:00:33.681" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.691" endtime="20201115 22:00:33.707"></status>
</kw>
<msg timestamp="20201115 22:00:33.708" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.689" endtime="20201115 22:00:33.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.710" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.709" endtime="20201115 22:00:33.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.711" endtime="20201115 22:00:33.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.686" endtime="20201115 22:00:33.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.684" endtime="20201115 22:00:33.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.721" endtime="20201115 22:00:34.006"></status>
</kw>
<msg timestamp="20201115 22:00:34.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02249575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:33.719" endtime="20201115 22:00:34.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02249575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:34.011" endtime="20201115 22:00:34.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.019" endtime="20201115 22:00:34.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.717" endtime="20201115 22:00:34.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.715" endtime="20201115 22:00:34.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.025" level="INFO">${RESULT} = [{'time': 0.022500236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.022640639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:34.022" endtime="20201115 22:00:34.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:34.040" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:34.026" endtime="20201115 22:00:34.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.044" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:34.043" endtime="20201115 22:00:34.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.047" level="INFO">VALUE: [4.486000000001461e-06, 4.750000000001281e-06, 4.500000000001031e-06, 4.514000000000601e-06, 4.764000000000851e-06, 4.471999999998422e-06, 4.472000000001891e-06, 4.7499999999978115e-06, 4.514000000000601e-06, 4.471999999998422e-06, 4.776999999997478e-06, 4.500000000001031e-06, 4.5699999999988805e-06, 4.791999999999991e-06, 4.513999999997131e-06, 4.471999999998422e-06, 4.778000000000421e-06, 4.568999999999407e-06, 4.554999999999837e-06, 4.7639999999973814e-06, 4.444000000002751e-06, 4.457999999998852e-06, 4.763000000001377e-06, 4.568999999999407e-06, 4.458999999998325e-06, 4.764000000000851e-06, 4.486000000001461e-06, 4.541000000000267e-06, 4.791999999999991e-06, 4.485999999997992e-06, 4.472000000001891e-06, 4.778000000000421e-06, 4.458000000002321e-06, 4.513000000001127e-06, 4.791999999999991e-06, 4.486000000001461e-06, 4.528000000000171e-06, 4.764000000000851e-06, 4.431000000002655e-06, 4.485999999997992e-06, 4.778000000000421e-06, 4.485999999997992e-06, 4.471999999998422e-06, 4.778000000000421e-06, 4.500000000001031e-06, 4.472000000001891e-06, 4.805000000000087e-06, 4.431000000002655e-06, 4.528000000000171e-06, 4.764000000000851e-06]</msg>
<status status="PASS" starttime="20201115 22:00:34.045" endtime="20201115 22:00:34.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.041" endtime="20201115 22:00:34.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.050" endtime="20201115 22:00:34.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:34.053" endtime="20201115 22:00:34.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.052" endtime="20201115 22:00:34.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.048" endtime="20201115 22:00:34.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.682" endtime="20201115 22:00:34.074"></status>
</kw>
<msg timestamp="20201115 22:00:34.074" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.083" endtime="20201115 22:00:34.100"></status>
</kw>
<msg timestamp="20201115 22:00:34.100" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.082" endtime="20201115 22:00:34.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.103" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.101" endtime="20201115 22:00:34.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.104" endtime="20201115 22:00:34.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.079" endtime="20201115 22:00:34.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.077" endtime="20201115 22:00:34.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.115" endtime="20201115 22:00:34.400"></status>
</kw>
<msg timestamp="20201115 22:00:34.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022381139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022385597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.113" endtime="20201115 22:00:34.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022381139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022385597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.404" endtime="20201115 22:00:34.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.412" endtime="20201115 22:00:34.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.110" endtime="20201115 22:00:34.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.108" endtime="20201115 22:00:34.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.419" level="INFO">${RESULT} = [{'time': 0.022385597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.022525736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:34.415" endtime="20201115 22:00:34.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:34.432" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:34.420" endtime="20201115 22:00:34.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.436" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:34.435" endtime="20201115 22:00:34.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.439" level="INFO">VALUE: [4.457999999998852e-06, 4.764000000000851e-06, 4.500000000001031e-06, 4.486000000001461e-06, 4.805000000000087e-06, 4.485999999997992e-06, 4.471999999998422e-06, 4.791999999999991e-06, 4.486000000001461e-06, 4.487000000000935e-06, 4.791999999999991e-06, 4.429999999999712e-06, 4.485999999997992e-06, 4.778000000000421e-06, 4.486000000001461e-06, 4.485999999997992e-06, 4.736000000001711e-06, 4.514000000000601e-06, 4.486000000001461e-06, 4.764000000000851e-06, 4.472000000001891e-06, 4.487000000000935e-06, 4.707999999999102e-06, 4.471999999998422e-06, 4.486000000001461e-06, 4.777999999996951e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.7499999999978115e-06, 4.485999999997992e-06, 4.471999999998422e-06, 4.791999999999991e-06, 4.472000000001891e-06, 4.486000000001461e-06, 4.764000000000851e-06, 4.473000000001365e-06, 4.514000000000601e-06, 4.764000000000851e-06, 4.485999999997992e-06, 4.500000000001031e-06, 4.778000000000421e-06, 4.486000000001461e-06, 4.487000000000935e-06, 4.763000000001377e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.7499999999978115e-06, 4.458000000002321e-06, 4.416999999999616e-06, 4.778000000000421e-06]</msg>
<status status="PASS" starttime="20201115 22:00:34.437" endtime="20201115 22:00:34.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.433" endtime="20201115 22:00:34.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.442" endtime="20201115 22:00:34.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:34.446" endtime="20201115 22:00:34.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.444" endtime="20201115 22:00:34.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.440" endtime="20201115 22:00:34.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.075" endtime="20201115 22:00:34.466"></status>
</kw>
<msg timestamp="20201115 22:00:34.467" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.475" endtime="20201115 22:00:34.493"></status>
</kw>
<msg timestamp="20201115 22:00:34.493" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.474" endtime="20201115 22:00:34.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.495" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.494" endtime="20201115 22:00:34.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.496" endtime="20201115 22:00:34.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.471" endtime="20201115 22:00:34.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.469" endtime="20201115 22:00:34.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.506" endtime="20201115 22:00:34.792"></status>
</kw>
<msg timestamp="20201115 22:00:34.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021898222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.505" endtime="20201115 22:00:34.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021898222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.796" endtime="20201115 22:00:34.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.804" endtime="20201115 22:00:34.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.502" endtime="20201115 22:00:34.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.501" endtime="20201115 22:00:34.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.811" level="INFO">${RESULT} = [{'time': 0.021898222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.022038097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:34.808" endtime="20201115 22:00:34.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:34.824" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:34.812" endtime="20201115 22:00:34.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.829" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:34.828" endtime="20201115 22:00:34.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.831" level="INFO">VALUE: [4.4999999999975615e-06, 4.750000000001281e-06, 4.486000000001461e-06, 4.485999999997992e-06, 4.778000000000421e-06, 4.431000000002655e-06, 4.486000000001461e-06, 4.777000000000947e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.750000000001281e-06, 4.487000000000935e-06, 4.472000000001891e-06, 4.750000000001281e-06, 4.500000000001031e-06, 4.486000000001461e-06, 4.791000000000517e-06, 4.486000000001461e-06, 4.471999999998422e-06, 4.7639999999973814e-06, 4.486000000001461e-06, 4.472999999997895e-06, 4.778000000000421e-06, 4.486000000001461e-06, 4.541000000000267e-06, 4.778000000000421e-06, 4.485999999997992e-06, 4.54200000000321e-06, 4.777000000000947e-06, 4.485999999997992e-06, 4.416000000000142e-06, 4.778000000000421e-06, 4.486000000001461e-06, 4.472000000001891e-06, 4.777000000000947e-06, 4.443999999999282e-06, 4.457999999998852e-06, 4.750000000001281e-06, 4.457999999998852e-06, 4.471999999998422e-06, 4.778000000000421e-06, 4.500000000001031e-06, 4.514000000000601e-06, 4.791000000000517e-06, 4.471999999998422e-06, 4.472000000001891e-06, 4.778000000000421e-06, 4.458000000002321e-06, 4.555999999999311e-06, 4.763000000001377e-06]</msg>
<status status="PASS" starttime="20201115 22:00:34.830" endtime="20201115 22:00:34.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.825" endtime="20201115 22:00:34.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.835" endtime="20201115 22:00:34.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:34.838" endtime="20201115 22:00:34.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.837" endtime="20201115 22:00:34.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.833" endtime="20201115 22:00:34.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.467" endtime="20201115 22:00:34.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.899" endtime="20201115 22:00:34.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.898" endtime="20201115 22:00:34.860"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.862" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.870" endtime="20201115 22:00:34.888"></status>
</kw>
<msg timestamp="20201115 22:00:34.888" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.869" endtime="20201115 22:00:34.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.891" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.889" endtime="20201115 22:00:34.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.892" endtime="20201115 22:00:34.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.866" endtime="20201115 22:00:34.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.864" endtime="20201115 22:00:34.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.901" endtime="20201115 22:00:35.190"></status>
</kw>
<msg timestamp="20201115 22:00:35.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024629847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024634486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.899" endtime="20201115 22:00:35.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024629847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024634486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.194" endtime="20201115 22:00:35.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.202" endtime="20201115 22:00:35.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.896" endtime="20201115 22:00:35.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.895" endtime="20201115 22:00:35.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.209" level="INFO">${RESULT} = [{'time': 0.024634486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.024781417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:35.205" endtime="20201115 22:00:35.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.222" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:35.210" endtime="20201115 22:00:35.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.227" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:35.226" endtime="20201115 22:00:35.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.229" level="INFO">VALUE: [4.639000000000726e-06, 4.875000000001406e-06, 4.6249999999976865e-06, 4.639000000000726e-06, 4.903000000000546e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.889000000000976e-06, 4.625000000001156e-06, 4.653000000000296e-06, 4.917000000000116e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.903000000000546e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.943999999999782e-06, 4.625000000001156e-06, 4.582999999998977e-06, 4.917000000000116e-06, 4.596999999998547e-06, 4.625000000001156e-06, 4.887999999998033e-06, 4.61199999999759e-06, 4.59799999999802e-06, 4.930999999999686e-06, 4.625000000001156e-06, 4.610999999998117e-06, 4.916000000000642e-06, 4.610999999998117e-06, 4.639000000000726e-06, 4.903000000000546e-06, 4.625000000001156e-06, 4.597000000002016e-06, 4.917000000000116e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.917000000000116e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.902999999997076e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.930999999999686e-06, 4.59799999999802e-06, 4.611000000001586e-06, 4.903000000000546e-06, 4.639000000000726e-06, 4.597000000002016e-06, 4.902000000001072e-06]</msg>
<status status="PASS" starttime="20201115 22:00:35.228" endtime="20201115 22:00:35.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.223" endtime="20201115 22:00:35.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.233" endtime="20201115 22:00:35.234"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.236" endtime="20201115 22:00:35.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.234" endtime="20201115 22:00:35.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.231" endtime="20201115 22:00:35.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.862" endtime="20201115 22:00:35.257"></status>
</kw>
<msg timestamp="20201115 22:00:35.257" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.266" endtime="20201115 22:00:35.283"></status>
</kw>
<msg timestamp="20201115 22:00:35.284" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.264" endtime="20201115 22:00:35.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.286" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.285" endtime="20201115 22:00:35.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.287" endtime="20201115 22:00:35.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.261" endtime="20201115 22:00:35.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.259" endtime="20201115 22:00:35.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.297" endtime="20201115 22:00:35.582"></status>
</kw>
<msg timestamp="20201115 22:00:35.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.296" endtime="20201115 22:00:35.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.586" endtime="20201115 22:00:35.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.594" endtime="20201115 22:00:35.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.293" endtime="20201115 22:00:35.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.291" endtime="20201115 22:00:35.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.601" level="INFO">${RESULT} = [{'time': 0.021951097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.022097833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:35.598" endtime="20201115 22:00:35.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.615" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:35.602" endtime="20201115 22:00:35.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.620" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:35.619" endtime="20201115 22:00:35.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.623" level="INFO">VALUE: [4.610999999998117e-06, 4.875000000001406e-06, 4.693999999999532e-06, 4.625000000001156e-06, 4.9449999999992555e-06, 4.639000000000726e-06, 4.610999999998117e-06, 4.917000000000116e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.930999999999686e-06, 4.57000000000235e-06, 4.6249999999976865e-06, 4.889000000000976e-06, 4.610999999998117e-06, 4.597000000002016e-06, 4.917000000000116e-06, 4.597000000002016e-06, 4.625000000001156e-06, 4.903000000000546e-06, 4.639000000000726e-06, 4.611000000001586e-06, 4.902000000001072e-06, 4.6249999999976865e-06, 4.610999999998117e-06, 4.903000000000546e-06, 4.568999999999407e-06, 4.652000000000822e-06, 4.917000000000116e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.887999999998033e-06, 4.6249999999976865e-06, 4.6389999999972564e-06, 4.903000000000546e-06, 4.666999999999866e-06, 4.611000000001586e-06, 4.902999999997076e-06, 4.61200000000106e-06, 4.6249999999976865e-06, 4.903000000000546e-06, 4.679999999999962e-06, 4.6249999999976865e-06, 4.889000000000976e-06, 4.625000000001156e-06, 4.610999999998117e-06, 4.917000000000116e-06, 4.625000000001156e-06, 4.6949999999990055e-06, 4.901999999997603e-06]</msg>
<status status="PASS" starttime="20201115 22:00:35.621" endtime="20201115 22:00:35.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.616" endtime="20201115 22:00:35.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.626" endtime="20201115 22:00:35.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.629" endtime="20201115 22:00:35.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.628" endtime="20201115 22:00:35.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.624" endtime="20201115 22:00:35.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.257" endtime="20201115 22:00:35.650"></status>
</kw>
<msg timestamp="20201115 22:00:35.650" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.659" endtime="20201115 22:00:35.677"></status>
</kw>
<msg timestamp="20201115 22:00:35.677" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.657" endtime="20201115 22:00:35.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.680" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.678" endtime="20201115 22:00:35.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.681" endtime="20201115 22:00:35.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.655" endtime="20201115 22:00:35.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.653" endtime="20201115 22:00:35.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.691" endtime="20201115 22:00:35.975"></status>
</kw>
<msg timestamp="20201115 22:00:35.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022096736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.689" endtime="20201115 22:00:35.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022096736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.979" endtime="20201115 22:00:35.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.987" endtime="20201115 22:00:35.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.686" endtime="20201115 22:00:35.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.685" endtime="20201115 22:00:35.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.994" level="INFO">${RESULT} = [{'time': 0.022101361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.022248111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:35.991" endtime="20201115 22:00:35.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.008" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:35.995" endtime="20201115 22:00:36.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.012" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:36.011" endtime="20201115 22:00:36.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.015" level="INFO">VALUE: [4.625000000001156e-06, 4.917000000000116e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.916000000000642e-06, 4.611000000001586e-06, 4.610999999998117e-06, 4.903000000000546e-06, 4.554999999999837e-06, 4.6389999999972564e-06, 4.917000000000116e-06, 4.6249999999976865e-06, 4.61199999999759e-06, 4.846999999998797e-06, 4.5699999999988805e-06, 4.596999999998547e-06, 4.8889999999975065e-06, 4.666000000000392e-06, 4.639000000000726e-06, 4.916000000000642e-06, 4.6389999999972564e-06, 4.625000000001156e-06, 4.916000000000642e-06, 4.59799999999802e-06, 4.541000000000267e-06, 4.903000000000546e-06, 4.61200000000106e-06, 4.652999999996826e-06, 4.959000000002295e-06, 4.596999999998547e-06, 4.638000000001252e-06, 4.903000000000546e-06, 4.625000000001156e-06, 4.652000000000822e-06, 4.887999999998033e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.903000000000546e-06, 4.6949999999990055e-06, 4.610999999998117e-06, 4.888000000001502e-06, 4.5699999999988805e-06, 4.6249999999976865e-06, 4.903000000000546e-06, 4.597000000002016e-06, 4.625000000001156e-06, 4.9449999999992555e-06, 4.6389999999972564e-06, 4.610999999998117e-06, 4.916000000000642e-06]</msg>
<status status="PASS" starttime="20201115 22:00:36.013" endtime="20201115 22:00:36.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.009" endtime="20201115 22:00:36.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.018" endtime="20201115 22:00:36.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.021" endtime="20201115 22:00:36.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.020" endtime="20201115 22:00:36.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.016" endtime="20201115 22:00:36.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.651" endtime="20201115 22:00:36.042"></status>
</kw>
<msg timestamp="20201115 22:00:36.042" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.051" endtime="20201115 22:00:36.069"></status>
</kw>
<msg timestamp="20201115 22:00:36.069" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.049" endtime="20201115 22:00:36.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.071" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.070" endtime="20201115 22:00:36.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.072" endtime="20201115 22:00:36.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.047" endtime="20201115 22:00:36.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.045" endtime="20201115 22:00:36.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.082" endtime="20201115 22:00:36.368"></status>
</kw>
<msg timestamp="20201115 22:00:36.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022059722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022064319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.081" endtime="20201115 22:00:36.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022059722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022064319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.372" endtime="20201115 22:00:36.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.384" endtime="20201115 22:00:36.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.078" endtime="20201115 22:00:36.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.077" endtime="20201115 22:00:36.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.391" level="INFO">${RESULT} = [{'time': 0.022064319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.022211361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:36.388" endtime="20201115 22:00:36.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.404" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:36.392" endtime="20201115 22:00:36.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.409" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:36.408" endtime="20201115 22:00:36.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.411" level="INFO">VALUE: [4.596999999998547e-06, 4.930000000000212e-06, 4.5699999999988805e-06, 4.611000000001586e-06, 4.903000000000546e-06, 4.61200000000106e-06, 4.611000000001586e-06, 4.930000000000212e-06, 4.6949999999990055e-06, 4.554999999999837e-06, 4.916000000000642e-06, 4.625000000001156e-06, 4.653000000000296e-06, 4.917000000000116e-06, 4.610999999998117e-06, 4.596999999998547e-06, 4.889000000000976e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.84800000000174e-06, 4.625000000001156e-06, 4.666999999999866e-06, 4.930000000000212e-06, 4.596999999998547e-06, 4.569000000002876e-06, 4.8889999999975065e-06, 4.59799999999802e-06, 4.625000000001156e-06, 4.917000000000116e-06, 4.582999999998977e-06, 4.693999999999532e-06, 4.930000000000212e-06, 4.6249999999976865e-06, 4.55600000000278e-06, 4.917000000000116e-06, 4.610999999998117e-06, 4.625000000001156e-06, 4.903000000000546e-06, 4.653000000000296e-06, 4.6249999999976865e-06, 4.931000000003155e-06, 4.59800000000149e-06, 4.6249999999976865e-06, 4.889000000000976e-06, 4.597000000002016e-06, 4.653000000000296e-06, 4.930000000000212e-06, 4.653000000000296e-06, 4.610999999998117e-06, 4.930999999999686e-06]</msg>
<status status="PASS" starttime="20201115 22:00:36.410" endtime="20201115 22:00:36.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.405" endtime="20201115 22:00:36.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.415" endtime="20201115 22:00:36.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.418" endtime="20201115 22:00:36.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.416" endtime="20201115 22:00:36.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.413" endtime="20201115 22:00:36.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.043" endtime="20201115 22:00:36.439"></status>
</kw>
<msg timestamp="20201115 22:00:36.439" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.448" endtime="20201115 22:00:36.466"></status>
</kw>
<msg timestamp="20201115 22:00:36.466" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.446" endtime="20201115 22:00:36.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.469" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.467" endtime="20201115 22:00:36.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.470" endtime="20201115 22:00:36.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.444" endtime="20201115 22:00:36.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.441" endtime="20201115 22:00:36.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.480" endtime="20201115 22:00:36.765"></status>
</kw>
<msg timestamp="20201115 22:00:36.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022236028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.478" endtime="20201115 22:00:36.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022236028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.769" endtime="20201115 22:00:36.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.777" endtime="20201115 22:00:36.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.476" endtime="20201115 22:00:36.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.474" endtime="20201115 22:00:36.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.784" level="INFO">${RESULT} = [{'time': 0.022236028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.022382528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:36.781" endtime="20201115 22:00:36.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.798" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:36.785" endtime="20201115 22:00:36.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.802" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:36.801" endtime="20201115 22:00:36.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.805" level="INFO">VALUE: [4.625000000001156e-06, 4.846999999998797e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.917000000000116e-06, 4.625000000001156e-06, 4.610999999998117e-06, 4.889000000000976e-06, 4.639000000000726e-06, 4.638000000001252e-06, 4.917000000000116e-06, 4.639000000000726e-06, 4.610999999998117e-06, 4.930999999999686e-06, 4.610999999998117e-06, 4.625000000001156e-06, 4.930000000000212e-06, 4.666999999999866e-06, 4.6249999999976865e-06, 4.930000000000212e-06, 4.596999999998547e-06, 4.610999999998117e-06, 4.903000000000546e-06, 4.541000000000267e-06, 4.6249999999976865e-06, 4.860999999998367e-06, 4.596999999998547e-06, 4.597000000002016e-06, 4.917000000000116e-06, 4.610999999998117e-06, 4.625000000001156e-06, 4.916000000000642e-06, 4.625000000001156e-06, 4.610999999998117e-06, 4.889000000000976e-06, 4.610999999998117e-06, 4.680999999999436e-06, 4.889000000000976e-06, 4.61199999999759e-06, 4.625000000001156e-06, 4.9449999999992555e-06, 4.625000000001156e-06, 4.638000000001252e-06, 4.902000000001072e-06, 4.6249999999976865e-06, 4.610999999998117e-06, 4.916000000000642e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.889000000000976e-06]</msg>
<status status="PASS" starttime="20201115 22:00:36.803" endtime="20201115 22:00:36.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.798" endtime="20201115 22:00:36.805"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.808" endtime="20201115 22:00:36.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.811" endtime="20201115 22:00:36.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.810" endtime="20201115 22:00:36.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.806" endtime="20201115 22:00:36.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.439" endtime="20201115 22:00:36.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.861" endtime="20201115 22:00:36.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.860" endtime="20201115 22:00:36.832"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.834" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.843" endtime="20201115 22:00:36.861"></status>
</kw>
<msg timestamp="20201115 22:00:36.862" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.842" endtime="20201115 22:00:36.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.864" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.863" endtime="20201115 22:00:36.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.865" endtime="20201115 22:00:36.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.839" endtime="20201115 22:00:36.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.837" endtime="20201115 22:00:36.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.875" endtime="20201115 22:00:37.159"></status>
</kw>
<msg timestamp="20201115 22:00:37.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024259306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024264028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.873" endtime="20201115 22:00:37.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024259306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024264028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.163" endtime="20201115 22:00:37.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.171" endtime="20201115 22:00:37.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.871" endtime="20201115 22:00:37.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.869" endtime="20201115 22:00:37.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:37.178" level="INFO">${RESULT} = [{'time': 0.024264028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.02441775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:37.174" endtime="20201115 22:00:37.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:37.192" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:37.179" endtime="20201115 22:00:37.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.196" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:37.195" endtime="20201115 22:00:37.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.199" level="INFO">VALUE: [4.721999999998672e-06, 5.110999999998617e-06, 4.750000000001281e-06, 4.764000000000851e-06, 4.986000000001961e-06, 4.777000000000947e-06, 4.7499999999978115e-06, 5.042000000000241e-06, 4.750000000001281e-06, 4.750000000001281e-06, 5.041000000000767e-06, 4.7499999999978115e-06, 4.764000000000851e-06, 5.096999999999047e-06, 4.777000000000947e-06, 4.777999999996951e-06, 5.041000000000767e-06, 4.777000000000947e-06, 4.805000000000087e-06, 5.027000000001197e-06, 4.7639999999973814e-06, 4.735999999998242e-06, 5.042000000000241e-06, 4.764000000000851e-06, 4.764000000000851e-06, 5.042000000000241e-06, 4.750000000001281e-06, 4.777000000000947e-06, 5.041000000000767e-06, 4.7499999999978115e-06, 4.778000000000421e-06, 5.055999999999811e-06, 4.707999999999102e-06, 4.750000000001281e-06, 5.000000000001531e-06, 4.7639999999973814e-06, 4.736000000001711e-06, 5.042000000000241e-06, 4.764000000000851e-06, 4.723000000001615e-06, 5.068999999999907e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 5.027999999997201e-06, 4.7639999999973814e-06, 4.7639999999973814e-06, 5.05600000000328e-06, 4.693999999999532e-06, 4.76400000000432e-06, 5.041999999996771e-06]</msg>
<status status="PASS" starttime="20201115 22:00:37.198" endtime="20201115 22:00:37.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.193" endtime="20201115 22:00:37.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.202" endtime="20201115 22:00:37.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.205" endtime="20201115 22:00:37.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.204" endtime="20201115 22:00:37.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.200" endtime="20201115 22:00:37.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.835" endtime="20201115 22:00:37.226"></status>
</kw>
<msg timestamp="20201115 22:00:37.226" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.235" endtime="20201115 22:00:37.252"></status>
</kw>
<msg timestamp="20201115 22:00:37.253" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.234" endtime="20201115 22:00:37.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.255" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.254" endtime="20201115 22:00:37.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.257" endtime="20201115 22:00:37.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.231" endtime="20201115 22:00:37.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.229" endtime="20201115 22:00:37.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.266" endtime="20201115 22:00:37.553"></status>
</kw>
<msg timestamp="20201115 22:00:37.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022031847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.265" endtime="20201115 22:00:37.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022031847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.557" endtime="20201115 22:00:37.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.565" endtime="20201115 22:00:37.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.262" endtime="20201115 22:00:37.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.261" endtime="20201115 22:00:37.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:37.571" level="INFO">${RESULT} = [{'time': 0.022036625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.022190014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:37.568" endtime="20201115 22:00:37.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:37.585" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:37.572" endtime="20201115 22:00:37.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.589" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:37.588" endtime="20201115 22:00:37.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.592" level="INFO">VALUE: [4.778000000000421e-06, 5.055999999999811e-06, 4.762999999997908e-06, 4.750000000001281e-06, 5.0549999999968676e-06, 4.7639999999973814e-06, 4.735999999998242e-06, 5.042000000000241e-06, 4.763000000001377e-06, 4.7639999999973814e-06, 5.041000000000767e-06, 4.7639999999973814e-06, 4.750000000001281e-06, 5.055000000000337e-06, 4.7499999999978115e-06, 4.7639999999973814e-06, 5.042000000000241e-06, 4.777999999996951e-06, 4.805999999999561e-06, 5.055999999999811e-06, 4.8199999999991305e-06, 4.7499999999978115e-06, 5.0549999999968676e-06, 4.750000000001281e-06, 4.750000000001281e-06, 5.055999999999811e-06, 4.750000000001281e-06, 4.750000000001281e-06, 5.055999999999811e-06, 4.764000000000851e-06, 4.777000000000947e-06, 5.055000000000337e-06, 4.737000000001185e-06, 4.764000000000851e-06, 5.05600000000328e-06, 4.778000000000421e-06, 4.778000000000421e-06, 5.068999999999907e-06, 4.721999999998672e-06, 4.750000000001281e-06, 5.026999999997728e-06, 4.762999999997908e-06, 4.778000000000421e-06, 5.042000000000241e-06, 4.750000000001281e-06, 4.762999999997908e-06, 5.042000000000241e-06, 4.7639999999973814e-06, 4.764000000000851e-06, 5.028000000000671e-06]</msg>
<status status="PASS" starttime="20201115 22:00:37.590" endtime="20201115 22:00:37.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.586" endtime="20201115 22:00:37.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.595" endtime="20201115 22:00:37.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.598" endtime="20201115 22:00:37.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.597" endtime="20201115 22:00:37.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.593" endtime="20201115 22:00:37.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.227" endtime="20201115 22:00:37.619"></status>
</kw>
<msg timestamp="20201115 22:00:37.619" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.628" endtime="20201115 22:00:37.646"></status>
</kw>
<msg timestamp="20201115 22:00:37.646" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.626" endtime="20201115 22:00:37.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.649" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.647" endtime="20201115 22:00:37.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.650" endtime="20201115 22:00:37.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.624" endtime="20201115 22:00:37.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.622" endtime="20201115 22:00:37.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.660" endtime="20201115 22:00:37.943"></status>
</kw>
<msg timestamp="20201115 22:00:37.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022609792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.658" endtime="20201115 22:00:37.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022609792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.947" endtime="20201115 22:00:37.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.955" endtime="20201115 22:00:37.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.656" endtime="20201115 22:00:37.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.654" endtime="20201115 22:00:37.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:37.962" level="INFO">${RESULT} = [{'time': 0.022614542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.022767833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:37.959" endtime="20201115 22:00:37.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:37.975" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:37.963" endtime="20201115 22:00:37.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.980" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:37.979" endtime="20201115 22:00:37.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.982" level="INFO">VALUE: [4.750000000001281e-06, 5.041000000000767e-06, 4.735999999998242e-06, 4.764000000000851e-06, 5.028000000000671e-06, 4.707999999999102e-06, 4.736000000001711e-06, 5.055999999999811e-06, 4.778000000000421e-06, 4.791000000000517e-06, 5.055999999999811e-06, 4.777000000000947e-06, 4.764000000000851e-06, 5.028000000000671e-06, 4.7499999999978115e-06, 4.764000000000851e-06, 5.055999999999811e-06, 4.7499999999978115e-06, 4.764000000000851e-06, 5.05600000000328e-06, 4.735999999998242e-06, 4.764000000000851e-06, 5.068999999999907e-06, 4.777999999996951e-06, 4.764000000000851e-06, 5.068999999999907e-06, 4.778000000000421e-06, 4.764000000000851e-06, 5.082999999999477e-06, 4.736000000001711e-06, 4.7499999999978115e-06, 5.055000000000337e-06, 4.791999999999991e-06, 4.736000000001711e-06, 5.042000000000241e-06, 4.722000000002141e-06, 4.7499999999978115e-06, 5.055000000000337e-06, 4.805999999999561e-06, 4.805999999999561e-06, 5.096999999999047e-06, 4.778000000000421e-06, 4.750000000001281e-06, 5.055999999999811e-06, 4.764000000000851e-06, 4.7499999999978115e-06, 5.068999999999907e-06, 4.707999999999102e-06, 4.791000000000517e-06, 5.07000000000285e-06]</msg>
<status status="PASS" starttime="20201115 22:00:37.981" endtime="20201115 22:00:37.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.976" endtime="20201115 22:00:37.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.986" endtime="20201115 22:00:37.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.989" endtime="20201115 22:00:38.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.988" endtime="20201115 22:00:38.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.984" endtime="20201115 22:00:38.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.620" endtime="20201115 22:00:38.010"></status>
</kw>
<msg timestamp="20201115 22:00:38.010" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.019" endtime="20201115 22:00:38.037"></status>
</kw>
<msg timestamp="20201115 22:00:38.037" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.018" endtime="20201115 22:00:38.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.040" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.038" endtime="20201115 22:00:38.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.041" endtime="20201115 22:00:38.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.015" endtime="20201115 22:00:38.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.013" endtime="20201115 22:00:38.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.051" endtime="20201115 22:00:38.336"></status>
</kw>
<msg timestamp="20201115 22:00:38.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022580319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.049" endtime="20201115 22:00:38.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022580319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.340" endtime="20201115 22:00:38.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.348" endtime="20201115 22:00:38.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.046" endtime="20201115 22:00:38.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.045" endtime="20201115 22:00:38.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.355" level="INFO">${RESULT} = [{'time': 0.022580319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.022733597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:38.352" endtime="20201115 22:00:38.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.368" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:38.356" endtime="20201115 22:00:38.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.373" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:38.372" endtime="20201115 22:00:38.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.375" level="INFO">VALUE: [4.679999999999962e-06, 5.014000000001101e-06, 4.680999999999436e-06, 4.791999999999991e-06, 5.055000000000337e-06, 4.791000000000517e-06, 4.764000000000851e-06, 5.040999999997298e-06, 4.764000000000851e-06, 4.778000000000421e-06, 5.055999999999811e-06, 4.7639999999973814e-06, 4.778000000000421e-06, 5.055000000000337e-06, 4.778000000000421e-06, 4.764000000000851e-06, 5.041000000000767e-06, 4.750000000001281e-06, 4.778000000000421e-06, 5.026999999997728e-06, 4.818999999999657e-06, 4.750000000001281e-06, 5.000000000001531e-06, 4.750000000001281e-06, 4.763000000001377e-06, 5.042000000000241e-06, 4.735999999998242e-06, 4.791999999999991e-06, 5.055999999999811e-06, 4.778000000000421e-06, 4.764000000000851e-06, 5.040999999997298e-06, 4.777000000000947e-06, 4.7639999999973814e-06, 5.000000000001531e-06, 4.7639999999973814e-06, 4.7639999999973814e-06, 5.055999999999811e-06, 4.8200000000026e-06, 4.750000000001281e-06, 5.013000000001627e-06, 4.7639999999973814e-06, 4.7499999999978115e-06, 5.028000000000671e-06, 4.764000000000851e-06, 4.791000000000517e-06, 5.068999999999907e-06, 4.846999999998797e-06, 4.764000000000851e-06, 5.042000000000241e-06]</msg>
<status status="PASS" starttime="20201115 22:00:38.374" endtime="20201115 22:00:38.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.369" endtime="20201115 22:00:38.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.378" endtime="20201115 22:00:38.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:38.382" endtime="20201115 22:00:38.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.381" endtime="20201115 22:00:38.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.377" endtime="20201115 22:00:38.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.011" endtime="20201115 22:00:38.403"></status>
</kw>
<msg timestamp="20201115 22:00:38.403" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.412" endtime="20201115 22:00:38.429"></status>
</kw>
<msg timestamp="20201115 22:00:38.430" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.410" endtime="20201115 22:00:38.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.432" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.431" endtime="20201115 22:00:38.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.433" endtime="20201115 22:00:38.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.408" endtime="20201115 22:00:38.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.406" endtime="20201115 22:00:38.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.443" endtime="20201115 22:00:38.729"></status>
</kw>
<msg timestamp="20201115 22:00:38.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.441" endtime="20201115 22:00:38.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.734" endtime="20201115 22:00:38.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.742" endtime="20201115 22:00:38.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.439" endtime="20201115 22:00:38.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.437" endtime="20201115 22:00:38.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.748" level="INFO">${RESULT} = [{'time': 0.022068139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.022221972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:38.745" endtime="20201115 22:00:38.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.763" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:38.749" endtime="20201115 22:00:38.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.767" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:38.766" endtime="20201115 22:00:38.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.770" level="INFO">VALUE: [4.764000000000851e-06, 5.068999999999907e-06, 4.735999999998242e-06, 4.764000000000851e-06, 5.041000000000767e-06, 4.764000000000851e-06, 4.778000000000421e-06, 5.096999999999047e-06, 4.7639999999973814e-06, 4.764000000000851e-06, 5.068999999999907e-06, 4.736000000001711e-06, 4.750000000001281e-06, 5.041000000000767e-06, 4.778000000000421e-06, 4.7499999999978115e-06, 5.028000000000671e-06, 4.777000000000947e-06, 4.778000000000421e-06, 5.055999999999811e-06, 4.791000000000517e-06, 4.764000000000851e-06, 5.055000000000337e-06, 4.693999999999532e-06, 4.7499999999978115e-06, 4.9999999999980616e-06, 4.708000000002571e-06, 4.750000000001281e-06, 5.014000000001101e-06, 4.7639999999973814e-06, 4.7499999999978115e-06, 5.000000000001531e-06, 4.791999999999991e-06, 4.763000000001377e-06, 5.042000000000241e-06, 4.736000000001711e-06, 4.764000000000851e-06, 5.055999999999811e-06, 4.778000000000421e-06, 4.777000000000947e-06, 5.014000000001101e-06, 4.805999999999561e-06, 4.7499999999978115e-06, 5.027000000001197e-06, 4.777000000000947e-06, 4.764000000000851e-06, 5.026999999997728e-06, 4.693999999999532e-06, 4.764000000000851e-06, 5.09799999999852e-06]</msg>
<status status="PASS" starttime="20201115 22:00:38.768" endtime="20201115 22:00:38.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.763" endtime="20201115 22:00:38.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.773" endtime="20201115 22:00:38.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:38.776" endtime="20201115 22:00:38.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.775" endtime="20201115 22:00:38.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.771" endtime="20201115 22:00:38.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.404" endtime="20201115 22:00:38.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.833" endtime="20201115 22:00:38.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.833" endtime="20201115 22:00:38.798"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.800" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.809" endtime="20201115 22:00:38.827"></status>
</kw>
<msg timestamp="20201115 22:00:38.828" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.807" endtime="20201115 22:00:38.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.830" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.829" endtime="20201115 22:00:38.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.831" endtime="20201115 22:00:38.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.804" endtime="20201115 22:00:38.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.802" endtime="20201115 22:00:38.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.840" endtime="20201115 22:00:39.125"></status>
</kw>
<msg timestamp="20201115 22:00:39.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024590444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024595347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.839" endtime="20201115 22:00:39.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024590444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024595347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.129" endtime="20201115 22:00:39.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.137" endtime="20201115 22:00:39.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.836" endtime="20201115 22:00:39.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.835" endtime="20201115 22:00:39.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:39.144" level="INFO">${RESULT} = [{'time': 0.024595347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.024756042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:39.140" endtime="20201115 22:00:39.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:39.157" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:39.145" endtime="20201115 22:00:39.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.162" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:39.161" endtime="20201115 22:00:39.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.165" level="INFO">VALUE: [4.903000000000546e-06, 5.1949999999995056e-06, 4.889000000000976e-06, 4.903000000000546e-06, 5.207999999999602e-06, 4.889000000000976e-06, 4.903000000000546e-06, 5.221999999999172e-06, 4.8889999999975065e-06, 4.903000000000546e-06, 5.194000000000032e-06, 4.903000000000546e-06, 4.902999999997076e-06, 5.166000000000892e-06, 4.903000000000546e-06, 4.916000000000642e-06, 5.2089999999990755e-06, 4.903000000000546e-06, 4.860999999998367e-06, 5.167000000000366e-06, 4.902000000001072e-06, 4.901999999997603e-06, 5.180999999999936e-06, 4.957999999999352e-06, 4.972999999998395e-06, 5.180000000000462e-06, 4.889000000000976e-06, 4.902999999997076e-06, 5.165999999997423e-06, 4.917000000000116e-06, 4.903000000000546e-06, 5.180000000000462e-06, 4.889000000000976e-06, 4.903000000000546e-06, 5.1949999999995056e-06, 4.916000000000642e-06, 4.902999999997076e-06, 5.180999999999936e-06, 4.889000000000976e-06, 4.903000000000546e-06, 5.1949999999995056e-06, 4.957999999999352e-06, 4.903000000000546e-06, 5.194000000000032e-06, 4.84800000000174e-06, 4.957999999999352e-06, 5.096999999995577e-06, 4.903000000000546e-06, 4.903000000000546e-06, 5.137999999994813e-06]</msg>
<status status="PASS" starttime="20201115 22:00:39.163" endtime="20201115 22:00:39.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.158" endtime="20201115 22:00:39.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.168" endtime="20201115 22:00:39.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.171" endtime="20201115 22:00:39.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.170" endtime="20201115 22:00:39.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.166" endtime="20201115 22:00:39.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.800" endtime="20201115 22:00:39.192"></status>
</kw>
<msg timestamp="20201115 22:00:39.192" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.202" endtime="20201115 22:00:39.220"></status>
</kw>
<msg timestamp="20201115 22:00:39.221" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.200" endtime="20201115 22:00:39.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.223" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.222" endtime="20201115 22:00:39.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.224" endtime="20201115 22:00:39.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.197" endtime="20201115 22:00:39.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.195" endtime="20201115 22:00:39.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.234" endtime="20201115 22:00:39.520"></status>
</kw>
<msg timestamp="20201115 22:00:39.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023032944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023037847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.232" endtime="20201115 22:00:39.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023032944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023037847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.524" endtime="20201115 22:00:39.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.532" endtime="20201115 22:00:39.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.230" endtime="20201115 22:00:39.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.228" endtime="20201115 22:00:39.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:39.539" level="INFO">${RESULT} = [{'time': 0.023037847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.023198403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:39.535" endtime="20201115 22:00:39.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:39.552" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:39.540" endtime="20201115 22:00:39.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.557" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:39.556" endtime="20201115 22:00:39.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.559" level="INFO">VALUE: [4.903000000000546e-06, 5.180999999999936e-06, 4.901999999997603e-06, 4.889000000000976e-06, 5.167000000000366e-06, 4.915999999997173e-06, 4.901999999997603e-06, 5.167000000000366e-06, 4.8889999999975065e-06, 4.902999999997076e-06, 5.180000000000462e-06, 4.916999999996646e-06, 4.8749999999979365e-06, 5.180000000000462e-06, 4.84800000000174e-06, 4.903000000000546e-06, 5.194000000000032e-06, 4.889000000000976e-06, 4.889000000000976e-06, 5.1949999999995056e-06, 4.889000000000976e-06, 4.903000000000546e-06, 5.207999999999602e-06, 4.888000000001502e-06, 4.917000000000116e-06, 5.153000000000796e-06, 4.903000000000546e-06, 4.902000000001072e-06, 5.180000000000462e-06, 4.901999999997603e-06, 4.916000000000642e-06, 5.180999999999936e-06, 4.903000000000546e-06, 4.833000000002696e-06, 5.139000000001226e-06, 4.887999999998033e-06, 4.903000000000546e-06, 5.167000000000366e-06, 4.889000000000976e-06, 4.943999999999782e-06, 5.180000000000462e-06, 4.917000000000116e-06, 4.903000000000546e-06, 5.194000000000032e-06, 4.903000000000546e-06, 4.917000000000116e-06, 5.223000000002115e-06, 4.903000000000546e-06, 4.8889999999975065e-06, 5.1949999999995056e-06]</msg>
<status status="PASS" starttime="20201115 22:00:39.558" endtime="20201115 22:00:39.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.553" endtime="20201115 22:00:39.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.562" endtime="20201115 22:00:39.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.566" endtime="20201115 22:00:39.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.564" endtime="20201115 22:00:39.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.561" endtime="20201115 22:00:39.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.193" endtime="20201115 22:00:39.586"></status>
</kw>
<msg timestamp="20201115 22:00:39.587" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.595" endtime="20201115 22:00:39.614"></status>
</kw>
<msg timestamp="20201115 22:00:39.615" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.594" endtime="20201115 22:00:39.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.617" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.616" endtime="20201115 22:00:39.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.618" endtime="20201115 22:00:39.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.591" endtime="20201115 22:00:39.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.589" endtime="20201115 22:00:39.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.628" endtime="20201115 22:00:39.914"></status>
</kw>
<msg timestamp="20201115 22:00:39.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022053028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.627" endtime="20201115 22:00:39.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022053028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.918" endtime="20201115 22:00:39.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.926" endtime="20201115 22:00:39.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.624" endtime="20201115 22:00:39.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.623" endtime="20201115 22:00:39.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:39.933" level="INFO">${RESULT} = [{'time': 0.022057931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.022218417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:39.930" endtime="20201115 22:00:39.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:39.947" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:39.935" endtime="20201115 22:00:39.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.951" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:39.950" endtime="20201115 22:00:39.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.954" level="INFO">VALUE: [4.903000000000546e-06, 5.1949999999995056e-06, 4.902000000001072e-06, 4.903000000000546e-06, 5.166000000000892e-06, 4.861000000001836e-06, 4.903000000000546e-06, 5.180000000000462e-06, 4.847000000002266e-06, 4.8889999999975065e-06, 5.194000000000032e-06, 4.930000000000212e-06, 4.8889999999975065e-06, 5.151999999997853e-06, 4.8889999999975065e-06, 4.889000000000976e-06, 5.180999999999936e-06, 4.903000000000546e-06, 4.903000000000546e-06, 5.167000000000366e-06, 4.917000000000116e-06, 4.917000000000116e-06, 5.209000000002545e-06, 4.903000000000546e-06, 4.902000000001072e-06, 5.180000000000462e-06, 4.917000000000116e-06, 4.889000000000976e-06, 5.180999999999936e-06, 4.917000000000116e-06, 4.917000000000116e-06, 5.180999999999936e-06, 4.8889999999975065e-06, 4.916999999996646e-06, 5.09800000000199e-06, 4.889000000000976e-06, 4.917000000000116e-06, 5.221999999999172e-06, 4.903000000000546e-06, 4.903000000000546e-06, 5.151999999997853e-06, 4.917000000000116e-06, 4.875000000001406e-06, 5.194000000000032e-06, 4.888000000001502e-06, 4.916000000000642e-06, 5.207999999999602e-06, 4.875000000001406e-06, 4.930999999999686e-06, 5.139000000001226e-06]</msg>
<status status="PASS" starttime="20201115 22:00:39.953" endtime="20201115 22:00:39.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.948" endtime="20201115 22:00:39.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.957" endtime="20201115 22:00:39.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.961" endtime="20201115 22:00:39.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.959" endtime="20201115 22:00:39.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.955" endtime="20201115 22:00:39.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.587" endtime="20201115 22:00:39.981"></status>
</kw>
<msg timestamp="20201115 22:00:39.981" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.990" endtime="20201115 22:00:40.008"></status>
</kw>
<msg timestamp="20201115 22:00:40.008" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.989" endtime="20201115 22:00:40.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.011" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.009" endtime="20201115 22:00:40.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.012" endtime="20201115 22:00:40.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.986" endtime="20201115 22:00:40.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.984" endtime="20201115 22:00:40.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.022" endtime="20201115 22:00:40.307"></status>
</kw>
<msg timestamp="20201115 22:00:40.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022090722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.020" endtime="20201115 22:00:40.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022090722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.312" endtime="20201115 22:00:40.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.320" endtime="20201115 22:00:40.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.018" endtime="20201115 22:00:40.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.016" endtime="20201115 22:00:40.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:40.327" level="INFO">${RESULT} = [{'time': 0.022090722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.022250958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:40.323" endtime="20201115 22:00:40.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:40.341" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:40.328" endtime="20201115 22:00:40.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.346" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:40.345" endtime="20201115 22:00:40.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.348" level="INFO">VALUE: [4.889000000000976e-06, 5.180000000000462e-06, 4.8889999999975065e-06, 4.8889999999975065e-06, 5.180999999999936e-06, 4.901999999997603e-06, 4.903000000000546e-06, 5.167000000000366e-06, 4.903000000000546e-06, 4.8889999999975065e-06, 5.207999999999602e-06, 4.902000000001072e-06, 4.887999999998033e-06, 5.208000000003071e-06, 4.889000000000976e-06, 4.8889999999975065e-06, 5.194000000000032e-06, 4.930999999999686e-06, 4.903000000000546e-06, 5.180999999999936e-06, 4.917000000000116e-06, 4.902000000001072e-06, 5.1949999999995056e-06, 4.902999999997076e-06, 4.902000000001072e-06, 5.221999999999172e-06, 4.916000000000642e-06, 4.902999999997076e-06, 5.208000000003071e-06, 4.903000000000546e-06, 4.958000000002821e-06, 5.236000000002211e-06, 4.930000000000212e-06, 4.903000000000546e-06, 5.167000000000366e-06, 4.901999999997603e-06, 4.8889999999975065e-06, 5.180999999999936e-06, 4.903000000000546e-06, 4.903000000000546e-06, 5.1949999999995056e-06, 4.903000000000546e-06, 4.8749999999979365e-06, 5.180000000000462e-06, 4.903000000000546e-06, 4.917000000000116e-06, 5.180999999999936e-06, 4.8749999999979365e-06, 4.916000000000642e-06, 5.194000000000032e-06]</msg>
<status status="PASS" starttime="20201115 22:00:40.347" endtime="20201115 22:00:40.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.342" endtime="20201115 22:00:40.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.351" endtime="20201115 22:00:40.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:40.355" endtime="20201115 22:00:40.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.353" endtime="20201115 22:00:40.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.350" endtime="20201115 22:00:40.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.982" endtime="20201115 22:00:40.375"></status>
</kw>
<msg timestamp="20201115 22:00:40.375" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.384" endtime="20201115 22:00:40.403"></status>
</kw>
<msg timestamp="20201115 22:00:40.403" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.383" endtime="20201115 22:00:40.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.406" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.404" endtime="20201115 22:00:40.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.407" endtime="20201115 22:00:40.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.380" endtime="20201115 22:00:40.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.378" endtime="20201115 22:00:40.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.416" endtime="20201115 22:00:40.702"></status>
</kw>
<msg timestamp="20201115 22:00:40.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022040917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.415" endtime="20201115 22:00:40.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022040917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.707" endtime="20201115 22:00:40.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.715" endtime="20201115 22:00:40.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.412" endtime="20201115 22:00:40.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.411" endtime="20201115 22:00:40.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:40.721" level="INFO">${RESULT} = [{'time': 0.022040917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.022201472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:40.718" endtime="20201115 22:00:40.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:40.735" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:40.722" endtime="20201115 22:00:40.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.739" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:40.738" endtime="20201115 22:00:40.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.742" level="INFO">VALUE: [4.889000000000976e-06, 5.166000000000892e-06, 4.889000000000976e-06, 4.903000000000546e-06, 5.195000000002975e-06, 4.8889999999975065e-06, 4.833000000002696e-06, 5.180000000000462e-06, 4.903000000000546e-06, 4.889000000000976e-06, 5.1949999999995056e-06, 4.957999999999352e-06, 4.847000000002266e-06, 5.2089999999990755e-06, 4.917000000000116e-06, 4.860999999998367e-06, 5.1949999999995056e-06, 4.902999999997076e-06, 4.860999999998367e-06, 5.194000000000032e-06, 4.903000000000546e-06, 4.917000000000116e-06, 5.194000000000032e-06, 4.903000000000546e-06, 4.805000000000087e-06, 5.180999999999936e-06, 4.875000000001406e-06, 4.916000000000642e-06, 5.1949999999995056e-06, 4.903000000000546e-06, 4.861000000001836e-06, 5.167000000000366e-06, 4.903000000000546e-06, 4.903000000000546e-06, 5.180000000000462e-06, 4.917000000000116e-06, 4.930000000000212e-06, 5.165999999997423e-06, 4.860999999998367e-06, 4.915999999997173e-06, 5.1949999999995056e-06, 4.903000000000546e-06, 4.8749999999979365e-06, 5.180000000000462e-06, 4.930000000000212e-06, 4.889000000000976e-06, 5.180000000000462e-06, 4.930000000000212e-06, 4.903000000000546e-06, 5.194000000000032e-06]</msg>
<status status="PASS" starttime="20201115 22:00:40.740" endtime="20201115 22:00:40.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.736" endtime="20201115 22:00:40.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.745" endtime="20201115 22:00:40.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:40.748" endtime="20201115 22:00:40.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.747" endtime="20201115 22:00:40.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.743" endtime="20201115 22:00:40.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.376" endtime="20201115 22:00:40.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.799" endtime="20201115 22:00:40.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.798" endtime="20201115 22:00:40.769"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.772" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.780" endtime="20201115 22:00:40.799"></status>
</kw>
<msg timestamp="20201115 22:00:40.799" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.779" endtime="20201115 22:00:40.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.802" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.800" endtime="20201115 22:00:40.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.803" endtime="20201115 22:00:40.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.776" endtime="20201115 22:00:40.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.774" endtime="20201115 22:00:40.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.812" endtime="20201115 22:00:41.097"></status>
</kw>
<msg timestamp="20201115 22:00:41.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024831417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024836444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.811" endtime="20201115 22:00:41.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024831417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024836444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.101" endtime="20201115 22:00:41.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.109" endtime="20201115 22:00:41.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.808" endtime="20201115 22:00:41.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.806" endtime="20201115 22:00:41.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.116" level="INFO">${RESULT} = [{'time': 0.024836444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.026999999997728e-06, 'source_diff': 5.026999999997728e-06}, {'time': 0.025003986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:41.113" endtime="20201115 22:00:41.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.130" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:41.117" endtime="20201115 22:00:41.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.134" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:41.133" endtime="20201115 22:00:41.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.136" level="INFO">VALUE: [5.026999999997728e-06, 5.319000000000157e-06, 5.014000000001101e-06, 5.08400000000242e-06, 5.346999999999297e-06, 5.055999999999811e-06, 5.000000000001531e-06, 5.292000000000491e-06, 5.028000000000671e-06, 5.042000000000241e-06, 5.3339999999992005e-06, 5.000000000001531e-06, 5.014000000001101e-06, 5.319000000000157e-06, 5.040999999997298e-06, 5.041000000000767e-06, 5.332999999999727e-06, 5.055999999999811e-06, 5.068999999999907e-06, 5.319000000000157e-06, 5.000000000001531e-06, 5.082999999999477e-06, 5.375000000001906e-06, 5.055999999999811e-06, 5.027999999997201e-06, 5.332999999999727e-06, 5.041000000000767e-06, 5.028000000000671e-06, 5.292000000000491e-06, 5.014000000001101e-06, 5.068999999999907e-06, 5.292000000000491e-06, 5.028000000000671e-06, 5.041000000000767e-06, 5.332999999999727e-06, 5.068999999999907e-06, 5.013000000001627e-06, 5.3200000000031e-06, 5.055999999999811e-06, 4.971999999998922e-06, 5.333000000003196e-06, 5.040999999997298e-06, 4.971999999998922e-06, 5.3189999999966875e-06, 5.0550000000038064e-06, 5.05600000000328e-06, 5.319999999996161e-06, 4.985999999998492e-06, 5.0410000000042365e-06, 5.333000000003196e-06]</msg>
<status status="PASS" starttime="20201115 22:00:41.135" endtime="20201115 22:00:41.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.130" endtime="20201115 22:00:41.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.140" endtime="20201115 22:00:41.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.143" endtime="20201115 22:00:41.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.141" endtime="20201115 22:00:41.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.138" endtime="20201115 22:00:41.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.772" endtime="20201115 22:00:41.164"></status>
</kw>
<msg timestamp="20201115 22:00:41.164" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.173" endtime="20201115 22:00:41.191"></status>
</kw>
<msg timestamp="20201115 22:00:41.191" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.171" endtime="20201115 22:00:41.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.194" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.192" endtime="20201115 22:00:41.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.195" endtime="20201115 22:00:41.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.169" endtime="20201115 22:00:41.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.166" endtime="20201115 22:00:41.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.206" endtime="20201115 22:00:41.491"></status>
</kw>
<msg timestamp="20201115 22:00:41.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022039653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022044681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.204" endtime="20201115 22:00:41.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022039653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022044681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.495" endtime="20201115 22:00:41.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.503" endtime="20201115 22:00:41.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.201" endtime="20201115 22:00:41.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.200" endtime="20201115 22:00:41.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.510" level="INFO">${RESULT} = [{'time': 0.022044681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.022212056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:41.507" endtime="20201115 22:00:41.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.523" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:41.511" endtime="20201115 22:00:41.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.528" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:41.527" endtime="20201115 22:00:41.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.530" level="INFO">VALUE: [5.028000000000671e-06, 5.319999999999631e-06, 5.042000000000241e-06, 5.068999999999907e-06, 5.389000000001476e-06, 5.027999999997201e-06, 5.055000000000337e-06, 5.319000000000157e-06, 4.986000000001961e-06, 5.055999999999811e-06, 5.3339999999992005e-06, 5.014000000001101e-06, 5.042000000000241e-06, 5.305000000000587e-06, 4.9999999999980616e-06, 5.028000000000671e-06, 5.319000000000157e-06, 5.028000000000671e-06, 5.042000000000241e-06, 5.389000000001476e-06, 5.111000000002086e-06, 5.055000000000337e-06, 5.306000000000061e-06, 5.042000000000241e-06, 5.028000000000671e-06, 5.319000000000157e-06, 5.042000000000241e-06, 5.055000000000337e-06, 5.306000000000061e-06, 5.027999999997201e-06, 5.055000000000337e-06, 5.305000000000587e-06, 5.028000000000671e-06, 5.042000000000241e-06, 5.3339999999992005e-06, 5.042000000000241e-06, 5.028000000000671e-06, 5.3339999999992005e-06, 5.028000000000671e-06, 5.040999999997298e-06, 5.332999999999727e-06, 5.055000000000337e-06, 5.000000000001531e-06, 5.319000000000157e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.277000000001447e-06, 5.0549999999968676e-06, 5.041000000000767e-06, 5.389000000001476e-06]</msg>
<status status="PASS" starttime="20201115 22:00:41.529" endtime="20201115 22:00:41.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.524" endtime="20201115 22:00:41.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.533" endtime="20201115 22:00:41.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.537" endtime="20201115 22:00:41.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.535" endtime="20201115 22:00:41.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.532" endtime="20201115 22:00:41.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.164" endtime="20201115 22:00:41.557"></status>
</kw>
<msg timestamp="20201115 22:00:41.558" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.571" endtime="20201115 22:00:41.589"></status>
</kw>
<msg timestamp="20201115 22:00:41.590" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.565" endtime="20201115 22:00:41.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.592" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.591" endtime="20201115 22:00:41.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.593" endtime="20201115 22:00:41.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.562" endtime="20201115 22:00:41.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.560" endtime="20201115 22:00:41.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.603" endtime="20201115 22:00:41.888"></status>
</kw>
<msg timestamp="20201115 22:00:41.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02642875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026433792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:41.602" endtime="20201115 22:00:41.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02642875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026433792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:41.892" endtime="20201115 22:00:41.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.900" endtime="20201115 22:00:41.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.599" endtime="20201115 22:00:41.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.597" endtime="20201115 22:00:41.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.907" level="INFO">${RESULT} = [{'time': 0.026433792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.026600958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:41.904" endtime="20201115 22:00:41.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.921" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:41.908" endtime="20201115 22:00:41.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.926" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:41.925" endtime="20201115 22:00:41.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.928" level="INFO">VALUE: [5.042000000000241e-06, 5.291000000001017e-06, 5.028000000000671e-06, 5.042000000000241e-06, 5.306000000000061e-06, 5.042000000000241e-06, 5.027999999997201e-06, 5.319999999999631e-06, 4.985999999998492e-06, 5.042000000000241e-06, 5.319000000000157e-06, 5.042000000000241e-06, 4.971999999998922e-06, 5.278000000000921e-06, 5.014000000001101e-06, 5.042000000000241e-06, 5.319000000000157e-06, 5.055000000000337e-06, 5.028000000000671e-06, 5.319000000000157e-06, 5.028000000000671e-06, 5.0549999999968676e-06, 5.319000000000157e-06, 5.055000000000337e-06, 5.028000000000671e-06, 5.290999999997548e-06, 5.028000000000671e-06, 5.042000000000241e-06, 5.319999999999631e-06, 5.027999999997201e-06, 5.02800000000414e-06, 5.3050000000040565e-06, 5.027999999997201e-06, 5.026999999997728e-06, 5.33400000000267e-06, 5.0410000000042365e-06, 5.04200000000371e-06, 5.3189999999966875e-06, 5.04200000000371e-06, 5.0549999999968676e-06, 5.333000000003196e-06, 5.0000000000050004e-06, 5.0000000000050004e-06, 5.319999999996161e-06, 5.04200000000371e-06, 4.9589999999988255e-06, 5.3200000000031e-06, 4.9999999999980616e-06, 5.027999999997201e-06, 5.3200000000031e-06]</msg>
<status status="PASS" starttime="20201115 22:00:41.927" endtime="20201115 22:00:41.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.922" endtime="20201115 22:00:41.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.932" endtime="20201115 22:00:41.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.935" endtime="20201115 22:00:41.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.933" endtime="20201115 22:00:41.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.930" endtime="20201115 22:00:41.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.558" endtime="20201115 22:00:41.956"></status>
</kw>
<msg timestamp="20201115 22:00:41.956" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.965" endtime="20201115 22:00:41.984"></status>
</kw>
<msg timestamp="20201115 22:00:41.984" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.963" endtime="20201115 22:00:41.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.986" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.985" endtime="20201115 22:00:41.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.988" endtime="20201115 22:00:41.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.961" endtime="20201115 22:00:41.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.959" endtime="20201115 22:00:41.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.997" endtime="20201115 22:00:42.284"></status>
</kw>
<msg timestamp="20201115 22:00:42.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.996" endtime="20201115 22:00:42.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.288" endtime="20201115 22:00:42.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.296" endtime="20201115 22:00:42.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.993" endtime="20201115 22:00:42.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.992" endtime="20201115 22:00:42.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.302" level="INFO">${RESULT} = [{'time': 0.022363167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.022530486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:42.299" endtime="20201115 22:00:42.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.316" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:42.303" endtime="20201115 22:00:42.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.320" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:42.319" endtime="20201115 22:00:42.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.323" level="INFO">VALUE: [5.042000000000241e-06, 5.332999999999727e-06, 4.9999999999980616e-06, 5.014000000001101e-06, 5.3339999999992005e-06, 5.055000000000337e-06, 5.042000000000241e-06, 5.319999999999631e-06, 5.0139999999976315e-06, 5.042000000000241e-06, 5.319999999999631e-06, 5.042000000000241e-06, 5.000000000001531e-06, 5.291999999997021e-06, 5.042000000000241e-06, 5.028000000000671e-06, 5.33400000000267e-06, 5.042000000000241e-06, 5.026999999997728e-06, 5.3339999999992005e-06, 5.041999999996771e-06, 5.042000000000241e-06, 5.332999999999727e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.3339999999992005e-06, 5.055999999999811e-06, 5.096999999999047e-06, 5.417000000000616e-06, 4.9999999999980616e-06, 5.0139999999976315e-06, 5.319000000000157e-06, 5.027999999997201e-06, 4.9999999999980616e-06, 5.332999999999727e-06, 5.027999999997201e-06, 5.012999999998158e-06, 5.2499999999983116e-06, 5.042000000000241e-06, 5.028000000000671e-06, 5.319000000000157e-06, 5.055000000000337e-06, 5.055000000000337e-06, 5.319999999999631e-06, 5.014000000001101e-06, 5.014000000001101e-06, 5.319000000000157e-06, 5.055999999999811e-06, 5.055000000000337e-06, 5.306000000000061e-06]</msg>
<status status="PASS" starttime="20201115 22:00:42.321" endtime="20201115 22:00:42.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.317" endtime="20201115 22:00:42.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.326" endtime="20201115 22:00:42.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.330" endtime="20201115 22:00:42.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.328" endtime="20201115 22:00:42.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.324" endtime="20201115 22:00:42.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.957" endtime="20201115 22:00:42.350"></status>
</kw>
<msg timestamp="20201115 22:00:42.351" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.359" endtime="20201115 22:00:42.378"></status>
</kw>
<msg timestamp="20201115 22:00:42.378" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.358" endtime="20201115 22:00:42.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.381" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.379" endtime="20201115 22:00:42.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.382" endtime="20201115 22:00:42.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.355" endtime="20201115 22:00:42.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.353" endtime="20201115 22:00:42.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.392" endtime="20201115 22:00:42.677"></status>
</kw>
<msg timestamp="20201115 22:00:42.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022290583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.390" endtime="20201115 22:00:42.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022290583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.681" endtime="20201115 22:00:42.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.689" endtime="20201115 22:00:42.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.388" endtime="20201115 22:00:42.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.386" endtime="20201115 22:00:42.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.696" level="INFO">${RESULT} = [{'time': 0.022295597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.022462861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:42.692" endtime="20201115 22:00:42.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.709" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:42.697" endtime="20201115 22:00:42.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.714" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:42.713" endtime="20201115 22:00:42.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.716" level="INFO">VALUE: [5.014000000001101e-06, 5.332999999999727e-06, 5.027999999997201e-06, 5.042000000000241e-06, 5.3339999999992005e-06, 5.042000000000241e-06, 5.014000000001101e-06, 5.278000000000921e-06, 5.068999999999907e-06, 5.041000000000767e-06, 5.319999999999631e-06, 5.027999999997201e-06, 5.042000000000241e-06, 5.235999999998742e-06, 5.014000000001101e-06, 5.0139999999976315e-06, 5.319000000000157e-06, 5.042000000000241e-06, 5.027000000001197e-06, 5.3339999999992005e-06, 5.082999999999477e-06, 5.028000000000671e-06, 5.346999999999297e-06, 5.028000000000671e-06, 5.041000000000767e-06, 5.319000000000157e-06, 5.068999999999907e-06, 5.014000000001101e-06, 5.3339999999992005e-06, 5.055999999999811e-06, 5.041000000000767e-06, 5.332999999999727e-06, 5.042000000000241e-06, 5.055000000000337e-06, 5.332999999999727e-06, 5.027999999997201e-06, 5.041000000000767e-06, 5.3339999999992005e-06, 4.972000000002391e-06, 5.041000000000767e-06, 5.33400000000267e-06, 5.042000000000241e-06, 5.042000000000241e-06, 5.332999999999727e-06, 5.042000000000241e-06, 5.055999999999811e-06, 5.3339999999992005e-06, 5.028000000000671e-06, 5.0139999999976315e-06, 5.319000000000157e-06]</msg>
<status status="PASS" starttime="20201115 22:00:42.715" endtime="20201115 22:00:42.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.710" endtime="20201115 22:00:42.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.720" endtime="20201115 22:00:42.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.723" endtime="20201115 22:00:42.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.722" endtime="20201115 22:00:42.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.718" endtime="20201115 22:00:42.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.351" endtime="20201115 22:00:42.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.770" endtime="20201115 22:00:42.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.770" endtime="20201115 22:00:42.744"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.683" endtime="20201115 22:00:42.744"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.749" endtime="20201115 22:00:42.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.747" endtime="20201115 22:00:42.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.746" endtime="20201115 22:00:42.770"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:53.614" endtime="20201115 22:00:42.770" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.779" endtime="20201115 22:00:42.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.777" endtime="20201115 22:00:42.799"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.813" endtime="20201115 22:00:42.826"></status>
</kw>
<msg timestamp="20201115 22:00:42.827" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.811" endtime="20201115 22:00:42.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.830" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.828" endtime="20201115 22:00:42.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.832" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:00:42.831" endtime="20201115 22:00:42.833"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:42.808" endtime="20201115 22:00:42.833"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:42.806" endtime="20201115 22:00:42.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.804" endtime="20201115 22:00:42.834"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:00:42.838" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:00:42.837" endtime="20201115 22:00:42.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.835" endtime="20201115 22:00:42.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.803" endtime="20201115 22:00:42.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.802" endtime="20201115 22:00:42.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.840" endtime="20201115 22:00:42.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.801" endtime="20201115 22:00:42.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.799" endtime="20201115 22:00:42.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.776" endtime="20201115 22:00:42.842"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.846" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.855" endtime="20201115 22:00:42.868"></status>
</kw>
<msg timestamp="20201115 22:00:42.868" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.854" endtime="20201115 22:00:42.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.871" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.869" endtime="20201115 22:00:42.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.872" endtime="20201115 22:00:42.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.851" endtime="20201115 22:00:42.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.849" endtime="20201115 22:00:42.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.882" endtime="20201115 22:00:43.168"></status>
</kw>
<msg timestamp="20201115 22:00:43.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069397861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069401181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.881" endtime="20201115 22:00:43.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069397861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069401181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.172" endtime="20201115 22:00:43.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.181" endtime="20201115 22:00:43.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.877" endtime="20201115 22:00:43.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.875" endtime="20201115 22:00:43.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:43.187" level="INFO">${RESULT} = [{'time': 0.069401181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3200000000011e-06, 'source_diff': 3.3200000000011e-06}, {'time': 0.069435389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3...</msg>
<status status="PASS" starttime="20201115 22:00:43.184" endtime="20201115 22:00:43.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:43.200" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:43.188" endtime="20201115 22:00:43.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.205" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:43.204" endtime="20201115 22:00:43.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.207" level="INFO">VALUE: [3.3200000000011e-06, 3.2080000000045406e-06, 3.1800000000054007e-06, 3.1800000000054007e-06, 3.1939999999980317e-06, 3.1389999999992257e-06, 3.1809999999909966e-06, 3.209000000004014e-06, 3.2080000000045406e-06, 3.1810000000048744e-06, 3.2080000000045406e-06, 3.1939999999980317e-06, 3.1940000000119095e-06, 3.1939999999980317e-06, 3.1939999999980317e-06, 3.179999999991523e-06, 3.1949999999975054e-06, 3.223000000010523e-06, 3.1810000000048744e-06, 3.179999999991523e-06, 3.124999999992717e-06, 3.1800000000054007e-06, 3.2080000000045406e-06, 3.2219999999971716e-06, 3.2079999999906628e-06, 3.1530000000057345e-06, 3.1939999999980317e-06, 3.1939999999980317e-06, 3.1810000000048744e-06, 3.1800000000054007e-06, 3.1810000000048744e-06, 3.2079999999906628e-06, 3.2079999999906628e-06, 3.1530000000057345e-06, 3.1939999999980317e-06, 3.1810000000048744e-06, 3.1939999999980317e-06, 3.1939999999980317e-06, 3.1949999999975054e-06, 3.1939999999980317e-06, 3.1949999999975054e-06, 3.2219999999971716e-06, 3.1949999999975054e-06, 3.2219999999971716e-06, 3.1669999999983656e-06, 3.1800000000054007e-06, 3.2360000000036804e-06, 3.2219999999971716e-06, 3.1939999999980317e-06, 3.1939999999980317e-06]</msg>
<status status="PASS" starttime="20201115 22:00:43.206" endtime="20201115 22:00:43.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.201" endtime="20201115 22:00:43.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.211" endtime="20201115 22:00:43.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.214" endtime="20201115 22:00:43.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.212" endtime="20201115 22:00:43.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.209" endtime="20201115 22:00:43.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.847" endtime="20201115 22:00:43.235"></status>
</kw>
<msg timestamp="20201115 22:00:43.235" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.245" endtime="20201115 22:00:43.256"></status>
</kw>
<msg timestamp="20201115 22:00:43.257" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.243" endtime="20201115 22:00:43.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.259" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.258" endtime="20201115 22:00:43.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.260" endtime="20201115 22:00:43.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.240" endtime="20201115 22:00:43.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.238" endtime="20201115 22:00:43.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.272" endtime="20201115 22:00:43.557"></status>
</kw>
<msg timestamp="20201115 22:00:43.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023220694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023224042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.268" endtime="20201115 22:00:43.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023220694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023224042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.561" endtime="20201115 22:00:43.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.569" endtime="20201115 22:00:43.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.265" endtime="20201115 22:00:43.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.263" endtime="20201115 22:00:43.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:43.576" level="INFO">${RESULT} = [{'time': 0.023224042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.023257847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:43.573" endtime="20201115 22:00:43.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:43.589" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:43.577" endtime="20201115 22:00:43.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.594" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:43.593" endtime="20201115 22:00:43.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.596" level="INFO">VALUE: [3.3480000000002397e-06, 3.194000000001501e-06, 3.2089999999970753e-06, 3.194000000001501e-06, 3.181000000001405e-06, 3.2090000000005448e-06, 3.1669999999983656e-06, 3.1949999999975054e-06, 3.1809999999979355e-06, 3.208000000001071e-06, 3.179999999998462e-06, 3.194000000001501e-06, 3.195000000000975e-06, 3.195000000000975e-06, 3.179999999998462e-06, 3.208000000001071e-06, 3.1809999999979355e-06, 3.1949999999975054e-06, 3.2090000000005448e-06, 3.208000000001071e-06, 3.236000000000211e-06, 3.194000000001501e-06, 3.2090000000005448e-06, 3.208000000001071e-06, 3.2090000000005448e-06, 3.222000000000641e-06, 3.195000000000975e-06, 3.1669999999983656e-06, 3.208000000001071e-06, 3.2090000000005448e-06, 3.195000000000975e-06, 3.208000000001071e-06, 3.208000000001071e-06, 3.195000000000975e-06, 3.194000000001501e-06, 3.194000000001501e-06, 3.1949999999975054e-06, 3.26400000000282e-06, 3.1939999999980317e-06, 3.195000000000975e-06, 3.208000000001071e-06, 3.181000000001405e-06, 3.208000000001071e-06, 3.1529999999987957e-06, 3.181000000001405e-06, 3.1949999999975054e-06, 3.2089999999970753e-06, 3.194000000001501e-06, 3.222000000000641e-06, 3.1949999999975054e-06]</msg>
<status status="PASS" starttime="20201115 22:00:43.595" endtime="20201115 22:00:43.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.590" endtime="20201115 22:00:43.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.600" endtime="20201115 22:00:43.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.603" endtime="20201115 22:00:43.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.602" endtime="20201115 22:00:43.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.598" endtime="20201115 22:00:43.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.236" endtime="20201115 22:00:43.624"></status>
</kw>
<msg timestamp="20201115 22:00:43.624" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.633" endtime="20201115 22:00:43.645"></status>
</kw>
<msg timestamp="20201115 22:00:43.645" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.631" endtime="20201115 22:00:43.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.648" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.646" endtime="20201115 22:00:43.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.649" endtime="20201115 22:00:43.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.629" endtime="20201115 22:00:43.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.626" endtime="20201115 22:00:43.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.658" endtime="20201115 22:00:43.945"></status>
</kw>
<msg timestamp="20201115 22:00:43.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022205333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.656" endtime="20201115 22:00:43.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022205333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.949" endtime="20201115 22:00:43.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.957" endtime="20201115 22:00:43.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.654" endtime="20201115 22:00:43.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.652" endtime="20201115 22:00:43.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:43.964" level="INFO">${RESULT} = [{'time': 0.022205333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.022239, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:00:43.961" endtime="20201115 22:00:43.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:43.977" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:43.965" endtime="20201115 22:00:43.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.982" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:43.981" endtime="20201115 22:00:43.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.984" level="INFO">VALUE: [3.347000000000766e-06, 3.1669999999983656e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.1389999999992257e-06, 3.2079999999976017e-06, 3.236000000000211e-06, 3.208000000001071e-06, 3.1809999999979355e-06, 3.194000000001501e-06, 3.208000000001071e-06, 3.208000000001071e-06, 3.194000000001501e-06, 3.195000000000975e-06, 3.222000000000641e-06, 3.2090000000005448e-06, 3.2079999999976017e-06, 3.1389999999992257e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.194000000001501e-06, 3.179999999998462e-06, 3.2089999999970753e-06, 3.167000000001835e-06, 3.179999999998462e-06, 3.222000000000641e-06, 3.1529999999987957e-06, 3.1949999999975054e-06, 3.2639999999993508e-06, 3.139000000002695e-06, 3.1939999999980317e-06, 3.208000000001071e-06, 3.195000000000975e-06, 3.179999999998462e-06, 3.208000000001071e-06, 3.1800000000019313e-06, 3.1939999999980317e-06, 3.195000000000975e-06, 3.222000000000641e-06, 3.2079999999976017e-06, 3.2090000000005448e-06, 3.194000000001501e-06, 3.195000000000975e-06, 3.181000000001405e-06, 3.195000000000975e-06, 3.1800000000019313e-06, 3.2079999999976017e-06, 3.208000000001071e-06, 3.1949999999975054e-06]</msg>
<status status="PASS" starttime="20201115 22:00:43.983" endtime="20201115 22:00:43.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.978" endtime="20201115 22:00:43.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.988" endtime="20201115 22:00:43.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.991" endtime="20201115 22:00:44.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.990" endtime="20201115 22:00:44.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.986" endtime="20201115 22:00:44.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.624" endtime="20201115 22:00:44.012"></status>
</kw>
<msg timestamp="20201115 22:00:44.012" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.021" endtime="20201115 22:00:44.033"></status>
</kw>
<msg timestamp="20201115 22:00:44.033" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.019" endtime="20201115 22:00:44.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.036" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.034" endtime="20201115 22:00:44.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.037" endtime="20201115 22:00:44.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.017" endtime="20201115 22:00:44.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.014" endtime="20201115 22:00:44.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.046" endtime="20201115 22:00:44.332"></status>
</kw>
<msg timestamp="20201115 22:00:44.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.044" endtime="20201115 22:00:44.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.336" endtime="20201115 22:00:44.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.344" endtime="20201115 22:00:44.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.042" endtime="20201115 22:00:44.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.040" endtime="20201115 22:00:44.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.351" level="INFO">${RESULT} = [{'time': 0.022322708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.022356875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:44.347" endtime="20201115 22:00:44.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:44.364" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:44.352" endtime="20201115 22:00:44.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.369" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:44.368" endtime="20201115 22:00:44.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.371" level="INFO">VALUE: [3.361000000000336e-06, 3.1669999999983656e-06, 3.222000000000641e-06, 3.1800000000019313e-06, 3.1809999999979355e-06, 3.208000000001071e-06, 3.208000000001071e-06, 3.194000000001501e-06, 3.194000000001501e-06, 3.2079999999976017e-06, 3.1939999999980317e-06, 3.153000000002265e-06, 3.1949999999975054e-06, 3.111000000000086e-06, 3.208000000001071e-06, 3.195000000000975e-06, 3.1949999999975054e-06, 3.194000000001501e-06, 3.181000000001405e-06, 3.208000000001071e-06, 3.137999999999752e-06, 3.208000000001071e-06, 3.179999999998462e-06, 3.124999999999656e-06, 3.195000000000975e-06, 3.2079999999976017e-06, 3.181000000001405e-06, 3.208000000001071e-06, 3.222000000000641e-06, 3.2090000000005448e-06, 3.222000000000641e-06, 3.194000000001501e-06, 3.1809999999979355e-06, 3.1939999999980317e-06, 3.208000000001071e-06, 3.179999999998462e-06, 3.1800000000019313e-06, 3.195000000000975e-06, 3.1809999999979355e-06, 3.1939999999980317e-06, 3.2079999999976017e-06, 3.1939999999980317e-06, 3.194000000001501e-06, 3.1660000000023614e-06, 3.195000000000975e-06, 3.167000000001835e-06, 3.222000000000641e-06, 3.2090000000005448e-06, 3.195000000000975e-06, 3.195000000000975e-06]</msg>
<status status="PASS" starttime="20201115 22:00:44.370" endtime="20201115 22:00:44.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.365" endtime="20201115 22:00:44.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.375" endtime="20201115 22:00:44.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:44.378" endtime="20201115 22:00:44.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.376" endtime="20201115 22:00:44.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.373" endtime="20201115 22:00:44.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.012" endtime="20201115 22:00:44.399"></status>
</kw>
<msg timestamp="20201115 22:00:44.399" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.408" endtime="20201115 22:00:44.419"></status>
</kw>
<msg timestamp="20201115 22:00:44.420" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.406" endtime="20201115 22:00:44.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.422" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.421" endtime="20201115 22:00:44.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.423" endtime="20201115 22:00:44.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.404" endtime="20201115 22:00:44.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.401" endtime="20201115 22:00:44.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.432" endtime="20201115 22:00:44.719"></status>
</kw>
<msg timestamp="20201115 22:00:44.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.431" endtime="20201115 22:00:44.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.723" endtime="20201115 22:00:44.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.731" endtime="20201115 22:00:44.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.428" endtime="20201115 22:00:44.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.426" endtime="20201115 22:00:44.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.738" level="INFO">${RESULT} = [{'time': 0.022167972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.022202181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:44.735" endtime="20201115 22:00:44.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:44.751" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:44.739" endtime="20201115 22:00:44.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.756" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:44.755" endtime="20201115 22:00:44.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.758" level="INFO">VALUE: [3.347000000000766e-06, 3.2230000000001147e-06, 3.195000000000975e-06, 3.179999999998462e-06, 3.276999999999447e-06, 3.194000000001501e-06, 3.2090000000005448e-06, 3.2079999999976017e-06, 3.167000000001835e-06, 3.1809999999979355e-06, 3.2090000000005448e-06, 3.124999999999656e-06, 3.249999999999781e-06, 3.194000000001501e-06, 3.2079999999976017e-06, 3.208000000001071e-06, 3.1119999999995596e-06, 3.2090000000005448e-06, 3.179999999998462e-06, 3.1939999999980317e-06, 3.195000000000975e-06, 3.208000000001071e-06, 3.222000000000641e-06, 3.179999999998462e-06, 3.2779999999989207e-06, 3.1389999999992257e-06, 3.195000000000975e-06, 3.236000000000211e-06, 3.1809999999979355e-06, 3.195000000000975e-06, 3.195000000000975e-06, 3.208000000001071e-06, 3.1939999999980317e-06, 3.2090000000005448e-06, 3.1949999999975054e-06, 3.194000000001501e-06, 3.2089999999970753e-06, 3.208000000001071e-06, 3.2090000000005448e-06, 3.195000000000975e-06, 3.1800000000019313e-06, 3.2079999999976017e-06, 3.2219999999971716e-06, 3.2090000000005448e-06, 3.2079999999976017e-06, 3.181000000001405e-06, 3.249999999999781e-06, 3.2090000000005448e-06, 3.2079999999976017e-06, 3.194000000001501e-06]</msg>
<status status="PASS" starttime="20201115 22:00:44.757" endtime="20201115 22:00:44.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.752" endtime="20201115 22:00:44.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.762" endtime="20201115 22:00:44.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:44.765" endtime="20201115 22:00:44.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.763" endtime="20201115 22:00:44.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.760" endtime="20201115 22:00:44.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.399" endtime="20201115 22:00:44.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.845" endtime="20201115 22:00:44.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.844" endtime="20201115 22:00:44.786"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.789" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.797" endtime="20201115 22:00:44.810"></status>
</kw>
<msg timestamp="20201115 22:00:44.810" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.796" endtime="20201115 22:00:44.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.812" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.811" endtime="20201115 22:00:44.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.813" endtime="20201115 22:00:44.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.793" endtime="20201115 22:00:44.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.791" endtime="20201115 22:00:44.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.823" endtime="20201115 22:00:45.108"></status>
</kw>
<msg timestamp="20201115 22:00:45.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024790944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024795278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.821" endtime="20201115 22:00:45.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024790944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024795278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.112" endtime="20201115 22:00:45.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.121" endtime="20201115 22:00:45.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.818" endtime="20201115 22:00:45.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.817" endtime="20201115 22:00:45.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.127" level="INFO">${RESULT} = [{'time': 0.024795278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.33400000000167e-06, 'source_diff': 4.33400000000167e-06}, {'time': 0.024834861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:45.124" endtime="20201115 22:00:45.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.140" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:45.128" endtime="20201115 22:00:45.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.145" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:45.144" endtime="20201115 22:00:45.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.148" level="INFO">VALUE: [4.33400000000167e-06, 4.139000000000226e-06, 3.957999999998352e-06, 4.014000000000101e-06, 4.152000000000322e-06, 3.986000000000961e-06, 4.000000000000531e-06, 4.138000000000752e-06, 3.9449999999982555e-06, 4.000000000000531e-06, 4.152999999999796e-06, 3.986000000000961e-06, 4.000000000000531e-06, 4.125000000000656e-06, 3.957999999998352e-06, 4.014000000000101e-06, 4.139000000000226e-06, 4.027999999999671e-06, 4.014000000000101e-06, 4.139000000000226e-06, 4.000000000000531e-06, 3.9999999999970615e-06, 4.125000000000656e-06, 4.000000000000531e-06, 3.945000000001725e-06, 4.1249999999971865e-06, 3.986000000000961e-06, 4.000000000000531e-06, 4.167000000002835e-06, 4.000000000000531e-06, 4.027999999999671e-06, 4.096999999998047e-06, 3.986000000000961e-06, 4.000000000000531e-06, 4.152000000000322e-06, 3.986000000000961e-06, 4.041999999999241e-06, 4.139000000000226e-06, 3.987000000000435e-06, 3.9859999999974915e-06, 4.139000000000226e-06, 3.9859999999974915e-06, 4.014000000000101e-06, 4.139000000000226e-06, 3.958000000001821e-06, 3.972000000001391e-06, 4.096999999998047e-06, 3.972999999997395e-06, 4.027999999999671e-06, 4.05600000000228e-06]</msg>
<status status="PASS" starttime="20201115 22:00:45.146" endtime="20201115 22:00:45.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.141" endtime="20201115 22:00:45.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.151" endtime="20201115 22:00:45.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.154" endtime="20201115 22:00:45.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.153" endtime="20201115 22:00:45.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.149" endtime="20201115 22:00:45.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.789" endtime="20201115 22:00:45.175"></status>
</kw>
<msg timestamp="20201115 22:00:45.175" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.184" endtime="20201115 22:00:45.197"></status>
</kw>
<msg timestamp="20201115 22:00:45.198" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.182" endtime="20201115 22:00:45.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.200" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.199" endtime="20201115 22:00:45.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.201" endtime="20201115 22:00:45.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.180" endtime="20201115 22:00:45.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.178" endtime="20201115 22:00:45.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.210" endtime="20201115 22:00:45.496"></status>
</kw>
<msg timestamp="20201115 22:00:45.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.208" endtime="20201115 22:00:45.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.500" endtime="20201115 22:00:45.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.508" endtime="20201115 22:00:45.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.206" endtime="20201115 22:00:45.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.204" endtime="20201115 22:00:45.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.515" level="INFO">${RESULT} = [{'time': 0.022320986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.022360167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:45.512" endtime="20201115 22:00:45.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.528" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:45.516" endtime="20201115 22:00:45.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.533" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:45.532" endtime="20201115 22:00:45.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.535" level="INFO">VALUE: [4.375000000000906e-06, 4.125000000000656e-06, 3.958000000001821e-06, 4.014000000000101e-06, 4.139000000000226e-06, 4.041999999999241e-06, 3.987000000000435e-06, 4.152000000000322e-06, 4.000000000000531e-06, 3.9859999999974915e-06, 4.152999999999796e-06, 3.957999999998352e-06, 4.000000000000531e-06, 4.1949999999985055e-06, 3.986000000000961e-06, 3.986000000000961e-06, 4.139000000000226e-06, 3.973000000000865e-06, 4.041999999999241e-06, 4.152999999999796e-06, 3.986000000000961e-06, 4.000000000000531e-06, 4.139000000000226e-06, 4.000000000000531e-06, 3.9999999999970615e-06, 4.11200000000056e-06, 3.986999999996965e-06, 3.9999999999970615e-06, 4.125000000000656e-06, 4.041999999999241e-06, 4.027999999999671e-06, 4.139000000000226e-06, 3.972000000001391e-06, 4.014000000000101e-06, 4.139000000000226e-06, 3.987000000000435e-06, 3.944000000002251e-06, 4.111000000001086e-06, 4.000000000000531e-06, 4.068999999998907e-06, 4.069000000002376e-06, 4.000000000000531e-06, 4.040999999999767e-06, 4.125000000000656e-06, 4.000000000000531e-06, 4.014000000000101e-06, 4.151999999996853e-06, 4.014000000000101e-06, 3.9859999999974915e-06, 4.0699999999983805e-06]</msg>
<status status="PASS" starttime="20201115 22:00:45.534" endtime="20201115 22:00:45.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.529" endtime="20201115 22:00:45.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.539" endtime="20201115 22:00:45.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.542" endtime="20201115 22:00:45.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.540" endtime="20201115 22:00:45.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.537" endtime="20201115 22:00:45.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.176" endtime="20201115 22:00:45.563"></status>
</kw>
<msg timestamp="20201115 22:00:45.563" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.572" endtime="20201115 22:00:45.584"></status>
</kw>
<msg timestamp="20201115 22:00:45.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.570" endtime="20201115 22:00:45.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.587" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.585" endtime="20201115 22:00:45.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.588" endtime="20201115 22:00:45.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.568" endtime="20201115 22:00:45.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.565" endtime="20201115 22:00:45.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.597" endtime="20201115 22:00:45.883"></status>
</kw>
<msg timestamp="20201115 22:00:45.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.595" endtime="20201115 22:00:45.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.887" endtime="20201115 22:00:45.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.895" endtime="20201115 22:00:45.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.593" endtime="20201115 22:00:45.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.591" endtime="20201115 22:00:45.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.902" level="INFO">${RESULT} = [{'time': 0.022210069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.022249153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:45.899" endtime="20201115 22:00:45.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.916" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:45.904" endtime="20201115 22:00:45.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.920" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:45.919" endtime="20201115 22:00:45.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.923" level="INFO">VALUE: [4.360999999997867e-06, 4.181000000002405e-06, 3.971999999997922e-06, 4.027000000000197e-06, 4.166999999999366e-06, 3.945000000001725e-06, 4.000000000000531e-06, 4.138000000000752e-06, 3.9859999999974915e-06, 3.986000000000961e-06, 4.139000000000226e-06, 3.943999999998782e-06, 4.014000000000101e-06, 4.1949999999985055e-06, 3.972000000001391e-06, 4.014000000000101e-06, 4.207999999998602e-06, 3.9859999999974915e-06, 3.973000000000865e-06, 4.1660000000033615e-06, 3.971999999997922e-06, 4.041999999999241e-06, 4.1249999999971865e-06, 3.972000000001391e-06, 3.9999999999970615e-06, 4.139000000000226e-06, 3.986000000000961e-06, 3.986000000000961e-06, 4.139000000000226e-06, 3.971999999997922e-06, 4.014000000000101e-06, 4.111000000001086e-06, 3.973000000000865e-06, 3.945000000001725e-06, 4.139000000000226e-06, 3.9859999999974915e-06, 4.000000000000531e-06, 4.125000000000656e-06, 3.986000000000961e-06, 4.000000000000531e-06, 4.138000000000752e-06, 3.972000000001391e-06, 4.014000000000101e-06, 4.125000000000656e-06, 3.986000000000961e-06, 3.9999999999970615e-06, 4.125000000000656e-06, 3.986000000000961e-06, 3.943999999998782e-06, 4.125000000000656e-06]</msg>
<status status="PASS" starttime="20201115 22:00:45.921" endtime="20201115 22:00:45.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.917" endtime="20201115 22:00:45.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.926" endtime="20201115 22:00:45.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.929" endtime="20201115 22:00:45.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.928" endtime="20201115 22:00:45.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.924" endtime="20201115 22:00:45.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.563" endtime="20201115 22:00:45.950"></status>
</kw>
<msg timestamp="20201115 22:00:45.950" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.959" endtime="20201115 22:00:45.972"></status>
</kw>
<msg timestamp="20201115 22:00:45.973" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.957" endtime="20201115 22:00:45.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.975" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.974" endtime="20201115 22:00:45.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.976" endtime="20201115 22:00:45.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.955" endtime="20201115 22:00:45.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.953" endtime="20201115 22:00:45.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.985" endtime="20201115 22:00:46.271"></status>
</kw>
<msg timestamp="20201115 22:00:46.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02237, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022374333, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:00:45.983" endtime="20201115 22:00:46.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02237, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022374333, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:00:46.276" endtime="20201115 22:00:46.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.284" endtime="20201115 22:00:46.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.981" endtime="20201115 22:00:46.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.979" endtime="20201115 22:00:46.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:46.292" level="INFO">${RESULT} = [{'time': 0.022374333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.022413556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:46.288" endtime="20201115 22:00:46.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.305" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:46.293" endtime="20201115 22:00:46.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.310" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:46.309" endtime="20201115 22:00:46.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.312" level="INFO">VALUE: [4.332999999998727e-06, 4.11200000000056e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.209000000001545e-06, 3.959000000001295e-06, 3.9859999999974915e-06, 4.11200000000056e-06, 3.958999999997825e-06, 4.000000000000531e-06, 4.08400000000142e-06, 3.972999999997395e-06, 4.068999999998907e-06, 4.125000000000656e-06, 3.973000000000865e-06, 4.000000000000531e-06, 4.139000000000226e-06, 3.971999999997922e-06, 4.000000000000531e-06, 4.125000000000656e-06, 3.9160000000031114e-06, 4.000000000000531e-06, 4.125000000000656e-06, 3.972999999997395e-06, 4.000000000000531e-06, 4.193999999999032e-06, 3.9859999999974915e-06, 3.986000000000961e-06, 4.165999999999892e-06, 4.000000000000531e-06, 4.027999999999671e-06, 4.139000000000226e-06, 3.9449999999982555e-06, 3.957999999998352e-06, 4.152999999999796e-06, 3.986000000000961e-06, 4.027000000000197e-06, 4.139000000000226e-06, 3.972000000001391e-06, 4.027999999999671e-06, 4.152000000000322e-06, 3.9859999999974915e-06, 4.000000000000531e-06, 4.139000000000226e-06, 3.972000000001391e-06, 4.040999999999767e-06, 4.11200000000056e-06, 3.971999999997922e-06, 3.986000000000961e-06, 4.139000000000226e-06]</msg>
<status status="PASS" starttime="20201115 22:00:46.311" endtime="20201115 22:00:46.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.306" endtime="20201115 22:00:46.313"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.315" endtime="20201115 22:00:46.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.319" endtime="20201115 22:00:46.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.317" endtime="20201115 22:00:46.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.314" endtime="20201115 22:00:46.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.951" endtime="20201115 22:00:46.339"></status>
</kw>
<msg timestamp="20201115 22:00:46.340" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.348" endtime="20201115 22:00:46.361"></status>
</kw>
<msg timestamp="20201115 22:00:46.361" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.347" endtime="20201115 22:00:46.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.364" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.362" endtime="20201115 22:00:46.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.365" endtime="20201115 22:00:46.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.344" endtime="20201115 22:00:46.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.342" endtime="20201115 22:00:46.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.374" endtime="20201115 22:00:46.660"></status>
</kw>
<msg timestamp="20201115 22:00:46.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022270611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022274986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.372" endtime="20201115 22:00:46.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022270611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022274986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.723" endtime="20201115 22:00:46.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.741" endtime="20201115 22:00:46.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.370" endtime="20201115 22:00:46.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.368" endtime="20201115 22:00:46.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:46.755" level="INFO">${RESULT} = [{'time': 0.022274986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.022314486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:46.748" endtime="20201115 22:00:46.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.785" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:46.757" endtime="20201115 22:00:46.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.794" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:46.792" endtime="20201115 22:00:46.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.799" level="INFO">VALUE: [4.375000000000906e-06, 4.139000000000226e-06, 3.971999999997922e-06, 4.014000000000101e-06, 4.179999999999462e-06, 3.945000000001725e-06, 3.943999999998782e-06, 4.125000000000656e-06, 3.986000000000961e-06, 4.000000000000531e-06, 4.152999999999796e-06, 3.9859999999974915e-06, 4.027999999999671e-06, 4.125000000000656e-06, 3.972000000001391e-06, 4.000000000000531e-06, 4.1809999999989356e-06, 3.957999999998352e-06, 4.000000000000531e-06, 4.111000000001086e-06, 3.9859999999974915e-06, 3.986000000000961e-06, 4.1809999999989356e-06, 3.9859999999974915e-06, 4.000000000000531e-06, 4.151999999996853e-06, 4.054999999999337e-06, 4.014000000000101e-06, 4.152999999999796e-06, 3.987000000000435e-06, 4.000000000000531e-06, 4.165999999999892e-06, 3.944000000002251e-06, 4.013000000000627e-06, 4.153000000003265e-06, 3.986000000000961e-06, 4.000000000000531e-06, 4.11200000000056e-06, 3.986000000000961e-06, 4.000000000000531e-06, 4.1249999999971865e-06, 3.973000000000865e-06, 4.02800000000314e-06, 4.07000000000185e-06, 3.986000000000961e-06, 4.027999999999671e-06, 4.125000000000656e-06, 3.9999999999970615e-06, 4.000000000000531e-06, 4.139000000000226e-06]</msg>
<status status="PASS" starttime="20201115 22:00:46.796" endtime="20201115 22:00:46.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.787" endtime="20201115 22:00:46.800"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.803" endtime="20201115 22:00:46.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.806" endtime="20201115 22:00:46.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.804" endtime="20201115 22:00:46.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.801" endtime="20201115 22:00:46.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.340" endtime="20201115 22:00:46.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.787" endtime="20201115 22:00:46.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.786" endtime="20201115 22:00:46.827"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.829" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.838" endtime="20201115 22:00:46.850"></status>
</kw>
<msg timestamp="20201115 22:00:46.851" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.836" endtime="20201115 22:00:46.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.853" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.852" endtime="20201115 22:00:46.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.854" endtime="20201115 22:00:46.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.834" endtime="20201115 22:00:46.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.832" endtime="20201115 22:00:46.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.864" endtime="20201115 22:00:47.149"></status>
</kw>
<msg timestamp="20201115 22:00:47.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024467583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024472167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.862" endtime="20201115 22:00:47.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024467583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024472167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.154" endtime="20201115 22:00:47.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.162" endtime="20201115 22:00:47.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.860" endtime="20201115 22:00:47.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.858" endtime="20201115 22:00:47.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.169" level="INFO">${RESULT} = [{'time': 0.024472167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5839999999984504e-06, 'source_diff': 4.5839999999984504e-06}, {'time': 0.024516792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:47.165" endtime="20201115 22:00:47.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.182" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:47.170" endtime="20201115 22:00:47.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.186" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:47.185" endtime="20201115 22:00:47.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.189" level="INFO">VALUE: [4.5839999999984504e-06, 4.3339999999982e-06, 4.165999999999892e-06, 4.179999999999462e-06, 4.403000000000046e-06, 4.207999999998602e-06, 4.179999999999462e-06, 4.347000000001766e-06, 4.166999999999366e-06, 4.125000000000656e-06, 4.361000000001336e-06, 4.125000000000656e-06, 4.179999999999462e-06, 4.263999999996881e-06, 4.1949999999985055e-06, 4.208000000002071e-06, 4.333000000002196e-06, 4.193999999999032e-06, 4.195000000001975e-06, 4.318999999999157e-06, 4.1809999999989356e-06, 4.165999999999892e-06, 4.347000000001766e-06, 4.165999999999892e-06, 4.207999999998602e-06, 4.34800000000124e-06, 4.1809999999989356e-06, 4.208000000002071e-06, 4.318999999999157e-06, 4.1949999999985055e-06, 4.111000000001086e-06, 4.361000000001336e-06, 4.166999999999366e-06, 4.166999999999366e-06, 4.305999999999061e-06, 4.179999999999462e-06, 4.1949999999985055e-06, 4.291999999999491e-06, 4.194000000002501e-06, 4.209000000001545e-06, 4.250000000000781e-06, 4.193999999999032e-06, 4.181000000002405e-06, 4.333000000002196e-06, 4.166999999999366e-06, 4.179999999999462e-06, 4.36199999999734e-06, 4.1949999999985055e-06, 4.208000000002071e-06, 4.347000000001766e-06]</msg>
<status status="PASS" starttime="20201115 22:00:47.188" endtime="20201115 22:00:47.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.183" endtime="20201115 22:00:47.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.192" endtime="20201115 22:00:47.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.195" endtime="20201115 22:00:47.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.194" endtime="20201115 22:00:47.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.190" endtime="20201115 22:00:47.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.830" endtime="20201115 22:00:47.216"></status>
</kw>
<msg timestamp="20201115 22:00:47.216" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.225" endtime="20201115 22:00:47.238"></status>
</kw>
<msg timestamp="20201115 22:00:47.239" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.224" endtime="20201115 22:00:47.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.241" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.240" endtime="20201115 22:00:47.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.243" endtime="20201115 22:00:47.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.221" endtime="20201115 22:00:47.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.219" endtime="20201115 22:00:47.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.252" endtime="20201115 22:00:47.539"></status>
</kw>
<msg timestamp="20201115 22:00:47.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02236625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022370806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:47.250" endtime="20201115 22:00:47.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02236625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022370806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:47.543" endtime="20201115 22:00:47.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.551" endtime="20201115 22:00:47.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.247" endtime="20201115 22:00:47.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.246" endtime="20201115 22:00:47.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.558" level="INFO">${RESULT} = [{'time': 0.022370806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.022415639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:47.554" endtime="20201115 22:00:47.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.571" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:47.559" endtime="20201115 22:00:47.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.576" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:47.575" endtime="20201115 22:00:47.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.578" level="INFO">VALUE: [4.555999999999311e-06, 4.333000000002196e-06, 4.1949999999985055e-06, 4.166999999999366e-06, 4.333000000002196e-06, 4.167000000002835e-06, 4.193999999999032e-06, 4.291999999999491e-06, 4.208999999998075e-06, 4.264000000000351e-06, 4.33400000000167e-06, 4.194000000002501e-06, 4.179999999999462e-06, 4.3200000000021e-06, 4.207999999998602e-06, 4.181000000002405e-06, 4.333000000002196e-06, 4.1809999999989356e-06, 4.194000000002501e-06, 4.332999999998727e-06, 4.1949999999985055e-06, 4.166999999999366e-06, 4.332999999998727e-06, 4.181000000002405e-06, 4.179999999999462e-06, 4.318999999999157e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.3199999999986305e-06, 4.1809999999989356e-06, 4.166999999999366e-06, 4.332999999998727e-06, 4.1809999999989356e-06, 4.207999999998602e-06, 4.3200000000021e-06, 4.1809999999989356e-06, 4.194000000002501e-06, 4.346999999998297e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.361000000001336e-06, 4.139000000000226e-06, 4.1809999999989356e-06, 4.333000000002196e-06, 4.179999999999462e-06, 4.179999999999462e-06, 4.3339999999982e-06, 4.193999999999032e-06, 4.1809999999989356e-06, 4.318999999999157e-06]</msg>
<status status="PASS" starttime="20201115 22:00:47.577" endtime="20201115 22:00:47.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.572" endtime="20201115 22:00:47.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.581" endtime="20201115 22:00:47.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.585" endtime="20201115 22:00:47.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.583" endtime="20201115 22:00:47.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.580" endtime="20201115 22:00:47.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.217" endtime="20201115 22:00:47.605"></status>
</kw>
<msg timestamp="20201115 22:00:47.605" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.615" endtime="20201115 22:00:47.627"></status>
</kw>
<msg timestamp="20201115 22:00:47.627" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.613" endtime="20201115 22:00:47.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.630" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.628" endtime="20201115 22:00:47.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.631" endtime="20201115 22:00:47.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.610" endtime="20201115 22:00:47.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.608" endtime="20201115 22:00:47.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.640" endtime="20201115 22:00:47.926"></status>
</kw>
<msg timestamp="20201115 22:00:47.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022571472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022576042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.638" endtime="20201115 22:00:47.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022571472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022576042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.930" endtime="20201115 22:00:47.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.939" endtime="20201115 22:00:47.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.635" endtime="20201115 22:00:47.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.634" endtime="20201115 22:00:47.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.945" level="INFO">${RESULT} = [{'time': 0.022576042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.57000000000235e-06, 'source_diff': 4.57000000000235e-06}, {'time': 0.022620861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:47.942" endtime="20201115 22:00:47.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.959" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:47.946" endtime="20201115 22:00:47.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.963" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:47.962" endtime="20201115 22:00:47.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.965" level="INFO">VALUE: [4.57000000000235e-06, 4.346999999998297e-06, 4.193999999999032e-06, 4.179999999999462e-06, 4.361000000001336e-06, 4.195000000001975e-06, 4.193999999999032e-06, 4.3199999999986305e-06, 4.193999999999032e-06, 4.250000000000781e-06, 4.333000000002196e-06, 4.179999999999462e-06, 4.1949999999985055e-06, 4.291999999999491e-06, 4.208000000002071e-06, 4.1949999999985055e-06, 4.389000000000476e-06, 4.2499999999973115e-06, 4.193999999999032e-06, 4.291999999999491e-06, 4.1809999999989356e-06, 4.2499999999973115e-06, 4.347000000001766e-06, 4.195000000001975e-06, 4.1949999999985055e-06, 4.332999999998727e-06, 4.1949999999985055e-06, 4.195000000001975e-06, 4.332999999998727e-06, 4.152999999999796e-06, 4.1809999999989356e-06, 4.34800000000124e-06, 4.1809999999989356e-06, 4.193999999999032e-06, 4.361000000001336e-06, 4.208999999998075e-06, 4.194000000002501e-06, 4.3339999999982e-06, 4.1809999999989356e-06, 4.195000000001975e-06, 4.33400000000167e-06, 4.1949999999985055e-06, 4.1809999999989356e-06, 4.332999999998727e-06, 4.195000000001975e-06, 4.1809999999989356e-06, 4.305999999999061e-06, 4.195000000001975e-06, 4.208000000002071e-06, 4.33400000000167e-06]</msg>
<status status="PASS" starttime="20201115 22:00:47.964" endtime="20201115 22:00:47.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.959" endtime="20201115 22:00:47.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.969" endtime="20201115 22:00:47.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.972" endtime="20201115 22:00:47.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.970" endtime="20201115 22:00:47.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.967" endtime="20201115 22:00:47.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.606" endtime="20201115 22:00:47.993"></status>
</kw>
<msg timestamp="20201115 22:00:47.993" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.002" endtime="20201115 22:00:48.014"></status>
</kw>
<msg timestamp="20201115 22:00:48.015" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.001" endtime="20201115 22:00:48.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.017" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.016" endtime="20201115 22:00:48.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.018" endtime="20201115 22:00:48.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.998" endtime="20201115 22:00:48.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.996" endtime="20201115 22:00:48.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.027" endtime="20201115 22:00:48.314"></status>
</kw>
<msg timestamp="20201115 22:00:48.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022743417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.026" endtime="20201115 22:00:48.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022743417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.319" endtime="20201115 22:00:48.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.327" endtime="20201115 22:00:48.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.023" endtime="20201115 22:00:48.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.021" endtime="20201115 22:00:48.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.335" level="INFO">${RESULT} = [{'time': 0.022747944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.022792611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:48.331" endtime="20201115 22:00:48.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.348" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:48.336" endtime="20201115 22:00:48.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.352" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:48.351" endtime="20201115 22:00:48.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.355" level="INFO">VALUE: [4.527000000000697e-06, 4.347000000001766e-06, 4.193999999999032e-06, 4.165999999999892e-06, 4.3339999999982e-06, 4.1949999999985055e-06, 4.1949999999985055e-06, 4.33400000000167e-06, 4.165999999999892e-06, 4.222000000001641e-06, 4.3199999999986305e-06, 4.139000000000226e-06, 4.208000000002071e-06, 4.347000000001766e-06, 4.137999999997283e-06, 4.1949999999985055e-06, 4.347000000001766e-06, 4.195000000001975e-06, 4.195000000001975e-06, 4.34799999999777e-06, 4.2359999999977416e-06, 4.1809999999989356e-06, 4.346999999998297e-06, 4.179999999999462e-06, 4.208999999998075e-06, 4.3339999999982e-06, 4.1949999999985055e-06, 4.181000000002405e-06, 4.264000000000351e-06, 4.209000000001545e-06, 4.1949999999985055e-06, 4.332999999998727e-06, 4.193999999999032e-06, 4.195000000001975e-06, 4.291999999999491e-06, 4.194000000002501e-06, 4.193999999999032e-06, 4.263999999996881e-06, 4.179999999999462e-06, 4.139000000000226e-06, 4.347000000001766e-06, 4.1949999999985055e-06, 4.181000000002405e-06, 4.3339999999982e-06, 4.166999999999366e-06, 4.166999999999366e-06, 4.332999999998727e-06, 4.222000000001641e-06, 4.179999999999462e-06, 4.361000000001336e-06]</msg>
<status status="PASS" starttime="20201115 22:00:48.353" endtime="20201115 22:00:48.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.349" endtime="20201115 22:00:48.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.358" endtime="20201115 22:00:48.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:48.362" endtime="20201115 22:00:48.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.360" endtime="20201115 22:00:48.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.356" endtime="20201115 22:00:48.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.994" endtime="20201115 22:00:48.383"></status>
</kw>
<msg timestamp="20201115 22:00:48.383" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.392" endtime="20201115 22:00:48.404"></status>
</kw>
<msg timestamp="20201115 22:00:48.404" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.390" endtime="20201115 22:00:48.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.407" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.405" endtime="20201115 22:00:48.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.408" endtime="20201115 22:00:48.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.387" endtime="20201115 22:00:48.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.385" endtime="20201115 22:00:48.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.417" endtime="20201115 22:00:48.704"></status>
</kw>
<msg timestamp="20201115 22:00:48.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022436917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.415" endtime="20201115 22:00:48.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022436917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.708" endtime="20201115 22:00:48.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.716" endtime="20201115 22:00:48.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.413" endtime="20201115 22:00:48.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.411" endtime="20201115 22:00:48.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.723" level="INFO">${RESULT} = [{'time': 0.022441514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.022486222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:48.719" endtime="20201115 22:00:48.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.736" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:48.724" endtime="20201115 22:00:48.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.740" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:48.739" endtime="20201115 22:00:48.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.743" level="INFO">VALUE: [4.596999999998547e-06, 4.361000000001336e-06, 4.209000000001545e-06, 4.236000000001211e-06, 4.3199999999986305e-06, 4.193999999999032e-06, 4.195000000001975e-06, 4.277999999999921e-06, 4.1949999999985055e-06, 4.152999999999796e-06, 4.332999999998727e-06, 4.179999999999462e-06, 4.1809999999989356e-06, 4.332999999998727e-06, 4.208000000002071e-06, 4.208000000002071e-06, 4.347000000001766e-06, 4.207999999998602e-06, 4.179999999999462e-06, 4.361000000001336e-06, 4.207999999998602e-06, 4.179999999999462e-06, 4.360999999997867e-06, 4.208999999998075e-06, 4.179999999999462e-06, 4.346999999998297e-06, 4.195000000001975e-06, 4.195000000001975e-06, 4.318999999999157e-06, 4.152999999999796e-06, 4.1809999999989356e-06, 4.319000000002626e-06, 4.236000000001211e-06, 4.193999999999032e-06, 4.332999999998727e-06, 4.207999999998602e-06, 4.166999999999366e-06, 4.346999999998297e-06, 4.179999999999462e-06, 4.166999999999366e-06, 4.347000000001766e-06, 4.194000000002501e-06, 4.250000000000781e-06, 4.33400000000167e-06, 4.195000000001975e-06, 4.194000000002501e-06, 4.3199999999986305e-06, 4.1949999999985055e-06, 4.195000000001975e-06, 4.347000000001766e-06]</msg>
<status status="PASS" starttime="20201115 22:00:48.742" endtime="20201115 22:00:48.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.737" endtime="20201115 22:00:48.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.746" endtime="20201115 22:00:48.748"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:48.750" endtime="20201115 22:00:48.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.748" endtime="20201115 22:00:48.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.745" endtime="20201115 22:00:48.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.383" endtime="20201115 22:00:48.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.828" endtime="20201115 22:00:48.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.827" endtime="20201115 22:00:48.771"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.773" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.782" endtime="20201115 22:00:48.795"></status>
</kw>
<msg timestamp="20201115 22:00:48.795" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.780" endtime="20201115 22:00:48.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.798" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.796" endtime="20201115 22:00:48.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.799" endtime="20201115 22:00:48.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.778" endtime="20201115 22:00:48.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.776" endtime="20201115 22:00:48.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.808" endtime="20201115 22:00:49.094"></status>
</kw>
<msg timestamp="20201115 22:00:49.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024649556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024654306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.806" endtime="20201115 22:00:49.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024649556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024654306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.098" endtime="20201115 22:00:49.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.106" endtime="20201115 22:00:49.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.804" endtime="20201115 22:00:49.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.802" endtime="20201115 22:00:49.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.113" level="INFO">${RESULT} = [{'time': 0.024654306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.024703125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:49.110" endtime="20201115 22:00:49.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.126" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:49.114" endtime="20201115 22:00:49.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.131" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:49.130" endtime="20201115 22:00:49.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.133" level="INFO">VALUE: [4.750000000001281e-06, 4.555999999999311e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.541999999999741e-06, 4.361000000001336e-06, 4.305999999999061e-06, 4.457999999998852e-06, 4.388999999997006e-06, 4.375000000000906e-06, 4.486000000001461e-06, 4.3749999999974365e-06, 4.375000000000906e-06, 4.541999999999741e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.514000000000601e-06, 4.360999999997867e-06, 4.417000000003085e-06, 4.541999999999741e-06, 4.360999999997867e-06, 4.3749999999974365e-06, 4.500000000001031e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.514000000000601e-06, 4.360999999997867e-06, 4.403000000000046e-06, 4.4999999999975615e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.541999999999741e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.582999999998977e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.528000000000171e-06, 4.346999999998297e-06, 4.389000000000476e-06, 4.513000000001127e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.513000000001127e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.485999999997992e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.540999999996798e-06]</msg>
<status status="PASS" starttime="20201115 22:00:49.132" endtime="20201115 22:00:49.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.127" endtime="20201115 22:00:49.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.137" endtime="20201115 22:00:49.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.140" endtime="20201115 22:00:49.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.139" endtime="20201115 22:00:49.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.135" endtime="20201115 22:00:49.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.774" endtime="20201115 22:00:49.161"></status>
</kw>
<msg timestamp="20201115 22:00:49.161" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.170" endtime="20201115 22:00:49.183"></status>
</kw>
<msg timestamp="20201115 22:00:49.184" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.168" endtime="20201115 22:00:49.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.186" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.185" endtime="20201115 22:00:49.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.187" endtime="20201115 22:00:49.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.165" endtime="20201115 22:00:49.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.163" endtime="20201115 22:00:49.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.196" endtime="20201115 22:00:49.483"></status>
</kw>
<msg timestamp="20201115 22:00:49.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022140583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.194" endtime="20201115 22:00:49.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022140583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.488" endtime="20201115 22:00:49.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.496" endtime="20201115 22:00:49.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.192" endtime="20201115 22:00:49.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.190" endtime="20201115 22:00:49.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.502" level="INFO">${RESULT} = [{'time': 0.022140583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.790999999997048e-06, 'source_diff': 4.790999999997048e-06}, {'time': 0.022189403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:49.499" endtime="20201115 22:00:49.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.515" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:49.503" endtime="20201115 22:00:49.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.520" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:49.519" endtime="20201115 22:00:49.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.523" level="INFO">VALUE: [4.790999999997048e-06, 4.514000000000601e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.486000000001461e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.528000000000171e-06, 4.347000000001766e-06, 4.347000000001766e-06, 4.513000000001127e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.514000000000601e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.528000000000171e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.514000000000601e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.512999999997658e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.514000000000601e-06, 4.3749999999974365e-06, 4.388000000001002e-06, 4.527000000000697e-06, 4.346999999998297e-06, 4.346999999998297e-06, 4.541999999999741e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.513000000001127e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.527000000000697e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.528000000000171e-06, 4.443999999999282e-06, 4.361000000001336e-06, 4.514000000000601e-06, 4.36200000000081e-06, 4.375000000000906e-06, 4.528000000000171e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.528000000000171e-06]</msg>
<status status="PASS" starttime="20201115 22:00:49.521" endtime="20201115 22:00:49.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.517" endtime="20201115 22:00:49.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.526" endtime="20201115 22:00:49.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.529" endtime="20201115 22:00:49.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.528" endtime="20201115 22:00:49.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.524" endtime="20201115 22:00:49.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.161" endtime="20201115 22:00:49.550"></status>
</kw>
<msg timestamp="20201115 22:00:49.550" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.559" endtime="20201115 22:00:49.572"></status>
</kw>
<msg timestamp="20201115 22:00:49.572" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.558" endtime="20201115 22:00:49.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.575" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.573" endtime="20201115 22:00:49.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.576" endtime="20201115 22:00:49.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.555" endtime="20201115 22:00:49.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.553" endtime="20201115 22:00:49.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.585" endtime="20201115 22:00:49.873"></status>
</kw>
<msg timestamp="20201115 22:00:49.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022140458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.583" endtime="20201115 22:00:49.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022140458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.877" endtime="20201115 22:00:49.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.885" endtime="20201115 22:00:49.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.581" endtime="20201115 22:00:49.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.579" endtime="20201115 22:00:49.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.892" level="INFO">${RESULT} = [{'time': 0.022140458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.022189181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:49.888" endtime="20201115 22:00:49.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.905" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:49.893" endtime="20201115 22:00:49.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.910" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:49.909" endtime="20201115 22:00:49.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.912" level="INFO">VALUE: [4.7499999999978115e-06, 4.528000000000171e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.500000000001031e-06, 4.389000000000476e-06, 4.444000000002751e-06, 4.528000000000171e-06, 4.375000000000906e-06, 4.360999999997867e-06, 4.528000000000171e-06, 4.333000000002196e-06, 4.416000000000142e-06, 4.514000000000601e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.500000000001031e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.514000000000601e-06, 4.361000000001336e-06, 4.388000000001002e-06, 4.514000000000601e-06, 4.360999999997867e-06, 4.375000000000906e-06, 4.528000000000171e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.541999999999741e-06, 4.3749999999974365e-06, 4.3749999999974365e-06, 4.528000000000171e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.541999999999741e-06, 4.388999999997006e-06, 4.3749999999974365e-06, 4.513999999997131e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.596999999998547e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.514000000000601e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.541999999999741e-06, 4.388000000001002e-06, 4.416999999999616e-06, 4.514000000000601e-06]</msg>
<status status="PASS" starttime="20201115 22:00:49.911" endtime="20201115 22:00:49.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.906" endtime="20201115 22:00:49.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.915" endtime="20201115 22:00:49.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.919" endtime="20201115 22:00:49.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.917" endtime="20201115 22:00:49.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.914" endtime="20201115 22:00:49.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.551" endtime="20201115 22:00:49.939"></status>
</kw>
<msg timestamp="20201115 22:00:49.940" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.948" endtime="20201115 22:00:49.962"></status>
</kw>
<msg timestamp="20201115 22:00:49.962" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.947" endtime="20201115 22:00:49.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.964" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.963" endtime="20201115 22:00:49.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.966" endtime="20201115 22:00:49.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.944" endtime="20201115 22:00:49.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.942" endtime="20201115 22:00:49.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.974" endtime="20201115 22:00:50.261"></status>
</kw>
<msg timestamp="20201115 22:00:50.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022561181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.973" endtime="20201115 22:00:50.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022561181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.265" endtime="20201115 22:00:50.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.273" endtime="20201115 22:00:50.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.970" endtime="20201115 22:00:50.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.969" endtime="20201115 22:00:50.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.280" level="INFO">${RESULT} = [{'time': 0.022565972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.022614889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:50.277" endtime="20201115 22:00:50.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.293" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:50.281" endtime="20201115 22:00:50.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.298" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:50.297" endtime="20201115 22:00:50.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.300" level="INFO">VALUE: [4.791000000000517e-06, 4.528000000000171e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.541999999999741e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.528000000000171e-06, 4.347000000001766e-06, 4.389000000000476e-06, 4.527000000000697e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.528000000000171e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.528000000000171e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.555999999999311e-06, 4.389000000000476e-06, 4.387999999997533e-06, 4.528000000000171e-06, 4.34799999999777e-06, 4.375000000000906e-06, 4.514000000000601e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.528000000000171e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.514000000000601e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.485999999997992e-06, 4.346999999998297e-06, 4.403000000000046e-06, 4.513999999997131e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.528000000000171e-06, 4.347000000001766e-06, 4.318999999999157e-06, 4.541000000000267e-06, 4.361000000001336e-06, 4.388999999997006e-06, 4.500000000001031e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.500000000001031e-06]</msg>
<status status="PASS" starttime="20201115 22:00:50.299" endtime="20201115 22:00:50.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.294" endtime="20201115 22:00:50.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.303" endtime="20201115 22:00:50.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.307" endtime="20201115 22:00:50.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.305" endtime="20201115 22:00:50.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.302" endtime="20201115 22:00:50.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.940" endtime="20201115 22:00:50.327"></status>
</kw>
<msg timestamp="20201115 22:00:50.328" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.336" endtime="20201115 22:00:50.350"></status>
</kw>
<msg timestamp="20201115 22:00:50.350" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.335" endtime="20201115 22:00:50.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.353" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.351" endtime="20201115 22:00:50.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.354" endtime="20201115 22:00:50.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.332" endtime="20201115 22:00:50.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.330" endtime="20201115 22:00:50.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.364" endtime="20201115 22:00:50.651"></status>
</kw>
<msg timestamp="20201115 22:00:50.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022176222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022180972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.362" endtime="20201115 22:00:50.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022176222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022180972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.655" endtime="20201115 22:00:50.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.664" endtime="20201115 22:00:50.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.359" endtime="20201115 22:00:50.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.357" endtime="20201115 22:00:50.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.671" level="INFO">${RESULT} = [{'time': 0.022180972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.022230125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:50.667" endtime="20201115 22:00:50.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.684" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:50.672" endtime="20201115 22:00:50.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.689" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:50.688" endtime="20201115 22:00:50.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.691" level="INFO">VALUE: [4.750000000001281e-06, 4.582999999998977e-06, 4.360999999997867e-06, 4.430999999999186e-06, 4.528000000000171e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.541000000000267e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.500000000001031e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.486000000001461e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.513999999997131e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.458999999998325e-06, 4.347000000001766e-06, 4.360999999997867e-06, 4.528000000000171e-06, 4.388999999997006e-06, 4.387999999997533e-06, 4.513000000001127e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.514000000000601e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.514000000000601e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.527000000000697e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.541000000000267e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.514000000000601e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.528000000000171e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 4.512999999997658e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.528000000000171e-06]</msg>
<status status="PASS" starttime="20201115 22:00:50.690" endtime="20201115 22:00:50.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.685" endtime="20201115 22:00:50.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.694" endtime="20201115 22:00:50.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.698" endtime="20201115 22:00:50.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.696" endtime="20201115 22:00:50.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.693" endtime="20201115 22:00:50.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.328" endtime="20201115 22:00:50.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.772" endtime="20201115 22:00:50.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.771" endtime="20201115 22:00:50.719"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.721" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.730" endtime="20201115 22:00:50.743"></status>
</kw>
<msg timestamp="20201115 22:00:50.743" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.728" endtime="20201115 22:00:50.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.746" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.744" endtime="20201115 22:00:50.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.747" endtime="20201115 22:00:50.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.726" endtime="20201115 22:00:50.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.724" endtime="20201115 22:00:50.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.756" endtime="20201115 22:00:51.042"></status>
</kw>
<msg timestamp="20201115 22:00:51.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024594347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024599333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.755" endtime="20201115 22:00:51.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024594347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024599333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.046" endtime="20201115 22:00:51.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.055" endtime="20201115 22:00:51.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.752" endtime="20201115 22:00:51.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.750" endtime="20201115 22:00:51.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.062" level="INFO">${RESULT} = [{'time': 0.024599333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.024652917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:51.058" endtime="20201115 22:00:51.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.075" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:51.063" endtime="20201115 22:00:51.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.080" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:51.079" endtime="20201115 22:00:51.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.083" level="INFO">VALUE: [4.986000000001961e-06, 4.750000000001281e-06, 4.610999999998117e-06, 4.582999999998977e-06, 4.777000000000947e-06, 4.568999999999407e-06, 4.582999999998977e-06, 4.735999999998242e-06, 4.569000000002876e-06, 4.59799999999802e-06, 4.736000000001711e-06, 4.582999999998977e-06, 4.568999999999407e-06, 4.721999999998672e-06, 4.5699999999988805e-06, 4.568999999999407e-06, 4.721999999998672e-06, 4.500000000001031e-06, 4.582999999998977e-06, 4.693999999999532e-06, 4.568999999999407e-06, 4.583000000002446e-06, 4.736000000001711e-06, 4.582999999998977e-06, 4.596999999998547e-06, 4.722999999998145e-06, 4.596999999998547e-06, 4.596999999998547e-06, 4.721999999998672e-06, 4.555999999999311e-06, 4.597000000002016e-06, 4.736000000001711e-06, 4.582999999998977e-06, 4.596999999998547e-06, 4.708000000002571e-06, 4.610999999998117e-06, 4.582999999998977e-06, 4.736000000001711e-06, 4.58400000000192e-06, 4.541000000000267e-06, 4.764000000000851e-06, 4.610999999998117e-06, 4.5839999999984504e-06, 4.7499999999978115e-06, 4.58400000000192e-06, 4.582999999998977e-06, 4.721999999998672e-06, 4.554999999999837e-06, 4.5699999999988805e-06, 4.7089999999985754e-06]</msg>
<status status="PASS" starttime="20201115 22:00:51.081" endtime="20201115 22:00:51.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.076" endtime="20201115 22:00:51.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.086" endtime="20201115 22:00:51.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.090" endtime="20201115 22:00:51.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.088" endtime="20201115 22:00:51.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.084" endtime="20201115 22:00:51.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.722" endtime="20201115 22:00:51.110"></status>
</kw>
<msg timestamp="20201115 22:00:51.111" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.120" endtime="20201115 22:00:51.133"></status>
</kw>
<msg timestamp="20201115 22:00:51.133" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.118" endtime="20201115 22:00:51.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.136" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.134" endtime="20201115 22:00:51.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.137" endtime="20201115 22:00:51.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.115" endtime="20201115 22:00:51.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.113" endtime="20201115 22:00:51.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.147" endtime="20201115 22:00:51.437"></status>
</kw>
<msg timestamp="20201115 22:00:51.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022776667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.145" endtime="20201115 22:00:51.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022776667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.441" endtime="20201115 22:00:51.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.449" endtime="20201115 22:00:51.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.143" endtime="20201115 22:00:51.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.141" endtime="20201115 22:00:51.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.456" level="INFO">${RESULT} = [{'time': 0.022781625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.022835069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:51.453" endtime="20201115 22:00:51.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.469" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:51.457" endtime="20201115 22:00:51.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.474" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:51.473" endtime="20201115 22:00:51.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.476" level="INFO">VALUE: [4.957999999999352e-06, 4.735999999998242e-06, 4.527000000000697e-06, 4.582999999998977e-06, 4.722999999998145e-06, 4.582999999998977e-06, 4.582999999998977e-06, 4.721999999998672e-06, 4.582999999998977e-06, 4.6389999999972564e-06, 4.722000000002141e-06, 4.554999999999837e-06, 4.610999999998117e-06, 4.722999999998145e-06, 4.610999999998117e-06, 4.5699999999988805e-06, 4.736000000001711e-06, 4.554999999999837e-06, 4.597000000002016e-06, 4.708000000002571e-06, 4.568999999999407e-06, 4.5699999999988805e-06, 4.736999999997715e-06, 4.568999999999407e-06, 4.597000000002016e-06, 4.707999999999102e-06, 4.596999999998547e-06, 4.583000000002446e-06, 4.722999999998145e-06, 4.568999999999407e-06, 4.582999999998977e-06, 4.721999999998672e-06, 4.568999999999407e-06, 4.5699999999988805e-06, 4.721999999998672e-06, 4.568999999999407e-06, 4.582999999998977e-06, 4.722000000002141e-06, 4.554999999999837e-06, 4.59799999999802e-06, 4.721999999998672e-06, 4.58400000000192e-06, 4.569000000002876e-06, 4.735999999998242e-06, 4.611000000001586e-06, 4.5699999999988805e-06, 4.750000000001281e-06, 4.4999999999975615e-06, 4.5839999999984504e-06, 4.721999999998672e-06]</msg>
<status status="PASS" starttime="20201115 22:00:51.475" endtime="20201115 22:00:51.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.470" endtime="20201115 22:00:51.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.479" endtime="20201115 22:00:51.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.483" endtime="20201115 22:00:51.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.481" endtime="20201115 22:00:51.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.478" endtime="20201115 22:00:51.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.111" endtime="20201115 22:00:51.504"></status>
</kw>
<msg timestamp="20201115 22:00:51.504" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.513" endtime="20201115 22:00:51.526"></status>
</kw>
<msg timestamp="20201115 22:00:51.526" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.511" endtime="20201115 22:00:51.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.529" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.527" endtime="20201115 22:00:51.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.530" endtime="20201115 22:00:51.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.509" endtime="20201115 22:00:51.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.506" endtime="20201115 22:00:51.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.539" endtime="20201115 22:00:51.844"></status>
</kw>
<msg timestamp="20201115 22:00:51.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022736125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.537" endtime="20201115 22:00:51.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022736125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.848" endtime="20201115 22:00:51.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.857" endtime="20201115 22:00:51.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.535" endtime="20201115 22:00:51.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.533" endtime="20201115 22:00:51.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.863" level="INFO">${RESULT} = [{'time': 0.022741097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.022794153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:51.860" endtime="20201115 22:00:51.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.877" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:51.864" endtime="20201115 22:00:51.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.881" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:51.880" endtime="20201115 22:00:51.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.884" level="INFO">VALUE: [4.971999999998922e-06, 4.653000000000296e-06, 4.596999999998547e-06, 4.5839999999984504e-06, 4.709000000002045e-06, 4.5839999999984504e-06, 4.5699999999988805e-06, 4.736000000001711e-06, 4.568999999999407e-06, 4.555999999999311e-06, 4.721999999998672e-06, 4.5699999999988805e-06, 4.555999999999311e-06, 4.722000000002141e-06, 4.597000000002016e-06, 4.569000000002876e-06, 4.721999999998672e-06, 4.652999999996826e-06, 4.568999999999407e-06, 4.735999999998242e-06, 4.58400000000192e-06, 4.568999999999407e-06, 4.679999999999962e-06, 4.596999999998547e-06, 4.569000000002876e-06, 4.7089999999985754e-06, 4.61200000000106e-06, 4.58400000000192e-06, 4.736000000001711e-06, 4.5699999999988805e-06, 4.58400000000192e-06, 4.722999999998145e-06, 4.582999999998977e-06, 4.57000000000235e-06, 4.721999999998672e-06, 4.596999999998547e-06, 4.583000000002446e-06, 4.737000000001185e-06, 4.639000000000726e-06, 4.597000000002016e-06, 4.721999999998672e-06, 4.597000000002016e-06, 4.5699999999988805e-06, 4.721999999998672e-06, 4.57000000000235e-06, 4.583000000002446e-06, 4.723000000001615e-06, 4.582999999998977e-06, 4.500000000001031e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201115 22:00:51.882" endtime="20201115 22:00:51.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.878" endtime="20201115 22:00:51.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.887" endtime="20201115 22:00:51.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.890" endtime="20201115 22:00:51.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.889" endtime="20201115 22:00:51.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.885" endtime="20201115 22:00:51.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.504" endtime="20201115 22:00:51.911"></status>
</kw>
<msg timestamp="20201115 22:00:51.915" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.925" endtime="20201115 22:00:51.938"></status>
</kw>
<msg timestamp="20201115 22:00:51.938" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.923" endtime="20201115 22:00:51.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.941" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.939" endtime="20201115 22:00:51.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.942" endtime="20201115 22:00:51.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.920" endtime="20201115 22:00:51.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.918" endtime="20201115 22:00:51.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.951" endtime="20201115 22:00:52.239"></status>
</kw>
<msg timestamp="20201115 22:00:52.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026826764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026831639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.949" endtime="20201115 22:00:52.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026826764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026831639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.244" endtime="20201115 22:00:52.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.252" endtime="20201115 22:00:52.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.947" endtime="20201115 22:00:52.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.945" endtime="20201115 22:00:52.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.259" level="INFO">${RESULT} = [{'time': 0.026831639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.026884833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:52.255" endtime="20201115 22:00:52.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.272" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:52.260" endtime="20201115 22:00:52.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.277" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:52.276" endtime="20201115 22:00:52.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.279" level="INFO">VALUE: [4.875000000001406e-06, 4.693999999999532e-06, 4.582999999998977e-06, 4.582999999998977e-06, 4.723000000001615e-06, 4.58400000000192e-06, 4.5699999999988805e-06, 4.709000000002045e-06, 4.582999999998977e-06, 4.568999999999407e-06, 4.721999999998672e-06, 4.58400000000192e-06, 4.596999999998547e-06, 4.721999999998672e-06, 4.568999999999407e-06, 4.597000000002016e-06, 4.721999999998672e-06, 4.59799999999802e-06, 4.582999999998977e-06, 4.750000000001281e-06, 4.582999999998977e-06, 4.5839999999984504e-06, 4.735999999998242e-06, 4.597000000002016e-06, 4.582999999998977e-06, 4.723000000001615e-06, 4.554999999999837e-06, 4.568999999999407e-06, 4.693999999999532e-06, 4.582999999998977e-06, 4.582999999998977e-06, 4.721999999998672e-06, 4.583000000002446e-06, 4.5839999999984504e-06, 4.707999999999102e-06, 4.5699999999988805e-06, 4.596999999998547e-06, 4.722000000002141e-06, 4.582999999998977e-06, 4.541999999999741e-06, 4.737000000001185e-06, 4.583000000002446e-06, 4.58400000000192e-06, 4.708000000002571e-06, 4.555999999999311e-06, 4.57000000000235e-06, 4.707999999999102e-06, 4.582999999998977e-06, 4.638000000001252e-06, 4.736000000001711e-06]</msg>
<status status="PASS" starttime="20201115 22:00:52.278" endtime="20201115 22:00:52.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.273" endtime="20201115 22:00:52.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.282" endtime="20201115 22:00:52.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.286" endtime="20201115 22:00:52.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.285" endtime="20201115 22:00:52.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.281" endtime="20201115 22:00:52.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.916" endtime="20201115 22:00:52.307"></status>
</kw>
<msg timestamp="20201115 22:00:52.307" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.316" endtime="20201115 22:00:52.329"></status>
</kw>
<msg timestamp="20201115 22:00:52.329" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.315" endtime="20201115 22:00:52.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.332" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.331" endtime="20201115 22:00:52.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.333" endtime="20201115 22:00:52.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.312" endtime="20201115 22:00:52.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.310" endtime="20201115 22:00:52.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.342" endtime="20201115 22:00:52.629"></status>
</kw>
<msg timestamp="20201115 22:00:52.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022349597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022354556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.341" endtime="20201115 22:00:52.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022349597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022354556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.633" endtime="20201115 22:00:52.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.641" endtime="20201115 22:00:52.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.338" endtime="20201115 22:00:52.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.336" endtime="20201115 22:00:52.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.648" level="INFO">${RESULT} = [{'time': 0.022354556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.959000000002295e-06, 'source_diff': 4.959000000002295e-06}, {'time': 0.022408014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:52.644" endtime="20201115 22:00:52.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.661" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:52.649" endtime="20201115 22:00:52.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.666" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:52.665" endtime="20201115 22:00:52.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.668" level="INFO">VALUE: [4.959000000002295e-06, 4.736000000001711e-06, 4.582999999998977e-06, 4.582999999998977e-06, 4.736000000001711e-06, 4.514000000000601e-06, 4.58400000000192e-06, 4.6389999999972564e-06, 4.541999999999741e-06, 4.57000000000235e-06, 4.721999999998672e-06, 4.554999999999837e-06, 4.555999999999311e-06, 4.707999999999102e-06, 4.583000000002446e-06, 4.528000000000171e-06, 4.722999999998145e-06, 4.597000000002016e-06, 4.583000000002446e-06, 4.666999999999866e-06, 4.527000000000697e-06, 4.528000000000171e-06, 4.721999999998672e-06, 4.582999999998977e-06, 4.568999999999407e-06, 4.721999999998672e-06, 4.58400000000192e-06, 4.5839999999984504e-06, 4.722999999998145e-06, 4.597000000002016e-06, 4.5839999999984504e-06, 4.735999999998242e-06, 4.597000000002016e-06, 4.541999999999741e-06, 4.736000000001711e-06, 4.58400000000192e-06, 4.568999999999407e-06, 4.735999999998242e-06, 4.582999999998977e-06, 4.569000000002876e-06, 4.735999999998242e-06, 4.582999999998977e-06, 4.583000000002446e-06, 4.707999999999102e-06, 4.582999999998977e-06, 4.582999999998977e-06, 4.7089999999985754e-06, 4.596999999998547e-06, 4.59799999999802e-06, 4.735999999998242e-06]</msg>
<status status="PASS" starttime="20201115 22:00:52.667" endtime="20201115 22:00:52.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.662" endtime="20201115 22:00:52.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.672" endtime="20201115 22:00:52.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.675" endtime="20201115 22:00:52.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.674" endtime="20201115 22:00:52.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.670" endtime="20201115 22:00:52.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.308" endtime="20201115 22:00:52.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.720" endtime="20201115 22:00:52.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.719" endtime="20201115 22:00:52.696"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.699" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.707" endtime="20201115 22:00:52.721"></status>
</kw>
<msg timestamp="20201115 22:00:52.722" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.706" endtime="20201115 22:00:52.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.724" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.723" endtime="20201115 22:00:52.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.725" endtime="20201115 22:00:52.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.703" endtime="20201115 22:00:52.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.701" endtime="20201115 22:00:52.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.734" endtime="20201115 22:00:53.023"></status>
</kw>
<msg timestamp="20201115 22:00:53.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024781653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024786792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.733" endtime="20201115 22:00:53.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024781653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024786792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.028" endtime="20201115 22:00:53.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.036" endtime="20201115 22:00:53.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.730" endtime="20201115 22:00:53.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.728" endtime="20201115 22:00:53.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.043" level="INFO">${RESULT} = [{'time': 0.024786792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.024844556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:53.039" endtime="20201115 22:00:53.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.056" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:53.044" endtime="20201115 22:00:53.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.060" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:53.059" endtime="20201115 22:00:53.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.063" level="INFO">VALUE: [5.1389999999977565e-06, 4.930999999999686e-06, 4.777999999996951e-06, 4.8199999999991305e-06, 4.916000000000642e-06, 4.750000000001281e-06, 4.7639999999973814e-06, 4.959000000002295e-06, 4.7639999999973814e-06, 4.7639999999973814e-06, 4.902000000001072e-06, 4.791999999999991e-06, 4.805999999999561e-06, 4.957999999999352e-06, 4.778000000000421e-06, 4.8199999999991305e-06, 4.917000000000116e-06, 4.778000000000421e-06, 4.791999999999991e-06, 4.903000000000546e-06, 4.7639999999973814e-06, 4.791000000000517e-06, 4.916000000000642e-06, 4.7089999999985754e-06, 4.818999999999657e-06, 4.903000000000546e-06, 4.762999999997908e-06, 4.791000000000517e-06, 4.916000000000642e-06, 4.764000000000851e-06, 4.8199999999991305e-06, 4.917000000000116e-06, 4.778000000000421e-06, 4.778000000000421e-06, 4.903000000000546e-06, 4.708000000002571e-06, 4.791000000000517e-06, 4.846999999998797e-06, 4.8200000000026e-06, 4.777000000000947e-06, 4.957999999999352e-06, 4.764000000000851e-06, 4.791999999999991e-06, 4.903000000000546e-06, 4.750000000001281e-06, 4.764000000000851e-06, 4.917000000000116e-06, 4.777999999996951e-06, 4.818999999999657e-06, 4.930999999999686e-06]</msg>
<status status="PASS" starttime="20201115 22:00:53.061" endtime="20201115 22:00:53.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.057" endtime="20201115 22:00:53.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.066" endtime="20201115 22:00:53.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.070" endtime="20201115 22:00:53.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.068" endtime="20201115 22:00:53.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.065" endtime="20201115 22:00:53.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.699" endtime="20201115 22:00:53.091"></status>
</kw>
<msg timestamp="20201115 22:00:53.091" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.100" endtime="20201115 22:00:53.112"></status>
</kw>
<msg timestamp="20201115 22:00:53.113" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.098" endtime="20201115 22:00:53.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.115" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.114" endtime="20201115 22:00:53.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.116" endtime="20201115 22:00:53.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.096" endtime="20201115 22:00:53.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.093" endtime="20201115 22:00:53.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.125" endtime="20201115 22:00:53.412"></status>
</kw>
<msg timestamp="20201115 22:00:53.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.124" endtime="20201115 22:00:53.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.417" endtime="20201115 22:00:53.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.426" endtime="20201115 22:00:53.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.121" endtime="20201115 22:00:53.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.119" endtime="20201115 22:00:53.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.433" level="INFO">${RESULT} = [{'time': 0.022345083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.022402736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:53.429" endtime="20201115 22:00:53.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.446" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:53.434" endtime="20201115 22:00:53.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.451" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:53.450" endtime="20201115 22:00:53.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.453" level="INFO">VALUE: [5.139000000001226e-06, 4.903000000000546e-06, 4.778000000000421e-06, 4.777999999996951e-06, 4.875000000001406e-06, 4.764000000000851e-06, 4.778000000000421e-06, 4.902999999997076e-06, 4.861000000001836e-06, 4.861000000001836e-06, 4.917000000000116e-06, 4.7499999999978115e-06, 4.778000000000421e-06, 4.8749999999979365e-06, 4.778000000000421e-06, 4.791999999999991e-06, 4.917000000000116e-06, 4.707999999999102e-06, 4.735999999998242e-06, 4.846999999998797e-06, 4.7499999999978115e-06, 4.805999999999561e-06, 4.917000000000116e-06, 4.764000000000851e-06, 4.777000000000947e-06, 4.8889999999975065e-06, 4.764000000000851e-06, 4.778000000000421e-06, 4.917000000000116e-06, 4.750000000001281e-06, 4.778000000000421e-06, 4.917000000000116e-06, 4.750000000001281e-06, 4.764000000000851e-06, 4.903000000000546e-06, 4.735999999998242e-06, 4.777999999996951e-06, 4.902000000001072e-06, 4.750000000001281e-06, 4.791999999999991e-06, 4.889000000000976e-06, 4.693999999999532e-06, 4.791999999999991e-06, 4.903000000000546e-06, 4.764000000000851e-06, 4.791999999999991e-06, 4.903000000000546e-06, 4.778000000000421e-06, 4.778000000000421e-06, 4.902000000001072e-06]</msg>
<status status="PASS" starttime="20201115 22:00:53.452" endtime="20201115 22:00:53.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.447" endtime="20201115 22:00:53.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.457" endtime="20201115 22:00:53.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.460" endtime="20201115 22:00:53.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.459" endtime="20201115 22:00:53.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.455" endtime="20201115 22:00:53.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.091" endtime="20201115 22:00:53.481"></status>
</kw>
<msg timestamp="20201115 22:00:53.481" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.490" endtime="20201115 22:00:53.503"></status>
</kw>
<msg timestamp="20201115 22:00:53.503" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.489" endtime="20201115 22:00:53.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.506" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.504" endtime="20201115 22:00:53.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.507" endtime="20201115 22:00:53.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.486" endtime="20201115 22:00:53.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.484" endtime="20201115 22:00:53.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.516" endtime="20201115 22:00:53.803"></status>
</kw>
<msg timestamp="20201115 22:00:53.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022665222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.514" endtime="20201115 22:00:53.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022665222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.807" endtime="20201115 22:00:53.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.815" endtime="20201115 22:00:53.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.512" endtime="20201115 22:00:53.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.510" endtime="20201115 22:00:53.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.823" level="INFO">${RESULT} = [{'time': 0.022670347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.022728056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:53.819" endtime="20201115 22:00:53.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.837" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:53.824" endtime="20201115 22:00:53.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.841" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:53.840" endtime="20201115 22:00:53.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.844" level="INFO">VALUE: [5.125000000001656e-06, 4.917000000000116e-06, 4.778000000000421e-06, 4.777000000000947e-06, 4.903000000000546e-06, 4.791999999999991e-06, 4.764000000000851e-06, 4.889000000000976e-06, 4.666999999999866e-06, 4.805999999999561e-06, 4.916000000000642e-06, 4.736000000001711e-06, 4.778000000000421e-06, 4.915999999997173e-06, 4.778000000000421e-06, 4.791000000000517e-06, 4.915999999997173e-06, 4.764000000000851e-06, 4.777000000000947e-06, 4.903000000000546e-06, 4.7639999999973814e-06, 4.778000000000421e-06, 4.903000000000546e-06, 4.7499999999978115e-06, 4.791999999999991e-06, 4.8339999999987004e-06, 4.764000000000851e-06, 4.777999999996951e-06, 4.8889999999975065e-06, 4.750000000001281e-06, 4.791999999999991e-06, 4.917000000000116e-06, 4.777999999996951e-06, 4.805000000000087e-06, 4.8889999999975065e-06, 4.7639999999973814e-06, 4.777000000000947e-06, 4.903000000000546e-06, 4.764000000000851e-06, 4.777000000000947e-06, 4.917000000000116e-06, 4.750000000001281e-06, 4.777999999996951e-06, 4.902999999997076e-06, 4.721999999998672e-06, 4.805999999999561e-06, 4.903000000000546e-06, 4.763000000001377e-06, 4.7089999999985754e-06, 4.902999999997076e-06]</msg>
<status status="PASS" starttime="20201115 22:00:53.842" endtime="20201115 22:00:53.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.838" endtime="20201115 22:00:53.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.847" endtime="20201115 22:00:53.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.850" endtime="20201115 22:00:53.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.849" endtime="20201115 22:00:53.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.845" endtime="20201115 22:00:53.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.482" endtime="20201115 22:00:53.871"></status>
</kw>
<msg timestamp="20201115 22:00:53.871" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.880" endtime="20201115 22:00:53.894"></status>
</kw>
<msg timestamp="20201115 22:00:53.895" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.879" endtime="20201115 22:00:53.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.897" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.896" endtime="20201115 22:00:53.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.898" endtime="20201115 22:00:53.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.876" endtime="20201115 22:00:53.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.874" endtime="20201115 22:00:53.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.907" endtime="20201115 22:00:54.194"></status>
</kw>
<msg timestamp="20201115 22:00:54.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022312528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022317681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.906" endtime="20201115 22:00:54.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022312528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022317681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.199" endtime="20201115 22:00:54.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.207" endtime="20201115 22:00:54.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.903" endtime="20201115 22:00:54.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.901" endtime="20201115 22:00:54.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.214" level="INFO">${RESULT} = [{'time': 0.022317681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.152999999997326e-06, 'source_diff': 5.152999999997326e-06}, {'time': 0.0223755, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:54.211" endtime="20201115 22:00:54.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.229" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:54.215" endtime="20201115 22:00:54.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.233" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:54.232" endtime="20201115 22:00:54.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.236" level="INFO">VALUE: [5.152999999997326e-06, 4.903000000000546e-06, 4.736000000001711e-06, 4.791999999999991e-06, 4.903000000000546e-06, 4.750000000001281e-06, 4.764000000000851e-06, 4.917000000000116e-06, 4.764000000000851e-06, 4.735999999998242e-06, 4.916000000000642e-06, 4.750000000001281e-06, 4.832999999999227e-06, 4.875000000001406e-06, 4.750000000001281e-06, 4.791000000000517e-06, 4.902000000001072e-06, 4.735999999998242e-06, 4.777000000000947e-06, 4.917000000000116e-06, 4.764000000000851e-06, 4.778000000000421e-06, 4.917000000000116e-06, 4.736999999997715e-06, 4.791999999999991e-06, 4.916000000000642e-06, 4.735999999998242e-06, 4.778000000000421e-06, 4.903000000000546e-06, 4.750000000001281e-06, 4.791999999999991e-06, 4.917000000000116e-06, 4.778000000000421e-06, 4.778000000000421e-06, 4.889000000000976e-06, 4.777999999996951e-06, 4.791999999999991e-06, 4.917000000000116e-06, 4.750000000001281e-06, 4.777000000000947e-06, 4.917000000000116e-06, 4.7639999999973814e-06, 4.778000000000421e-06, 4.860999999998367e-06, 4.762999999997908e-06, 4.778000000000421e-06, 4.903000000000546e-06, 4.7499999999978115e-06, 4.750000000001281e-06, 4.917000000000116e-06]</msg>
<status status="PASS" starttime="20201115 22:00:54.234" endtime="20201115 22:00:54.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.229" endtime="20201115 22:00:54.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.239" endtime="20201115 22:00:54.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.242" endtime="20201115 22:00:54.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.241" endtime="20201115 22:00:54.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.237" endtime="20201115 22:00:54.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.872" endtime="20201115 22:00:54.263"></status>
</kw>
<msg timestamp="20201115 22:00:54.263" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.272" endtime="20201115 22:00:54.286"></status>
</kw>
<msg timestamp="20201115 22:00:54.286" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.270" endtime="20201115 22:00:54.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.289" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.287" endtime="20201115 22:00:54.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.290" endtime="20201115 22:00:54.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.268" endtime="20201115 22:00:54.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.266" endtime="20201115 22:00:54.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.299" endtime="20201115 22:00:54.587"></status>
</kw>
<msg timestamp="20201115 22:00:54.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022428597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.297" endtime="20201115 22:00:54.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022428597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.592" endtime="20201115 22:00:54.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.600" endtime="20201115 22:00:54.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.295" endtime="20201115 22:00:54.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.293" endtime="20201115 22:00:54.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.607" level="INFO">${RESULT} = [{'time': 0.022433736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.022491639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:54.603" endtime="20201115 22:00:54.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.620" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:54.608" endtime="20201115 22:00:54.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.625" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:54.624" endtime="20201115 22:00:54.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.628" level="INFO">VALUE: [5.1389999999977565e-06, 4.9449999999992555e-06, 4.764000000000851e-06, 4.777999999996951e-06, 4.943999999999782e-06, 4.778000000000421e-06, 4.777000000000947e-06, 4.903000000000546e-06, 4.750000000001281e-06, 4.861000000001836e-06, 4.917000000000116e-06, 4.7499999999978115e-06, 4.778000000000421e-06, 4.915999999997173e-06, 4.778000000000421e-06, 4.777000000000947e-06, 4.903000000000546e-06, 4.764000000000851e-06, 4.791999999999991e-06, 4.915999999997173e-06, 4.764000000000851e-06, 4.7499999999978115e-06, 4.917000000000116e-06, 4.777000000000947e-06, 4.764000000000851e-06, 4.915999999997173e-06, 4.764000000000851e-06, 4.8199999999991305e-06, 4.860999999998367e-06, 4.721999999998672e-06, 4.791000000000517e-06, 4.903000000000546e-06, 4.750000000001281e-06, 4.750000000001281e-06, 4.9449999999992555e-06, 4.8199999999991305e-06, 4.764000000000851e-06, 4.9589999999988255e-06, 4.722000000002141e-06, 4.764000000000851e-06, 4.915999999997173e-06, 4.778000000000421e-06, 4.777000000000947e-06, 4.9589999999988255e-06, 4.764000000000851e-06, 4.791999999999991e-06, 4.902000000001072e-06, 4.764000000000851e-06, 4.791999999999991e-06, 4.930999999999686e-06]</msg>
<status status="PASS" starttime="20201115 22:00:54.627" endtime="20201115 22:00:54.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.622" endtime="20201115 22:00:54.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.631" endtime="20201115 22:00:54.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.635" endtime="20201115 22:00:54.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.633" endtime="20201115 22:00:54.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.630" endtime="20201115 22:00:54.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.264" endtime="20201115 22:00:54.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.698" endtime="20201115 22:00:54.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.697" endtime="20201115 22:00:54.656"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.658" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.667" endtime="20201115 22:00:54.680"></status>
</kw>
<msg timestamp="20201115 22:00:54.681" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.665" endtime="20201115 22:00:54.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.683" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.682" endtime="20201115 22:00:54.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.684" endtime="20201115 22:00:54.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.663" endtime="20201115 22:00:54.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.660" endtime="20201115 22:00:54.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.694" endtime="20201115 22:00:54.980"></status>
</kw>
<msg timestamp="20201115 22:00:54.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024714792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024720139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.692" endtime="20201115 22:00:54.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024714792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024720139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.984" endtime="20201115 22:00:54.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.993" endtime="20201115 22:00:54.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.690" endtime="20201115 22:00:54.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.688" endtime="20201115 22:00:54.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.000" level="INFO">${RESULT} = [{'time': 0.024720139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.024783069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:54.996" endtime="20201115 22:00:55.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.013" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:55.001" endtime="20201115 22:00:55.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.018" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:55.016" endtime="20201115 22:00:55.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.020" level="INFO">VALUE: [5.346999999999297e-06, 5.111000000002086e-06, 4.972000000002391e-06, 4.9589999999988255e-06, 5.180999999999936e-06, 4.943999999999782e-06, 4.901999999997603e-06, 5.125000000001656e-06, 4.957999999999352e-06, 4.972000000002391e-06, 5.1249999999981866e-06, 4.958000000002821e-06, 4.943999999999782e-06, 5.1249999999981866e-06, 4.972000000002391e-06, 4.971999999998922e-06, 5.11199999999809e-06, 4.957999999999352e-06, 4.957999999999352e-06, 5.167000000000366e-06, 4.971999999998922e-06, 4.973000000001865e-06, 5.125000000001656e-06, 4.972000000002391e-06, 4.9999999999980616e-06, 5.110999999998617e-06, 4.957999999999352e-06, 4.959000000002295e-06, 5.125000000001656e-06, 4.930999999999686e-06, 4.957999999999352e-06, 5.125000000001656e-06, 4.987000000001435e-06, 4.959000000002295e-06, 5.096999999999047e-06, 4.9589999999988255e-06, 4.972999999998395e-06, 5.1389999999977565e-06, 4.903000000000546e-06, 4.958000000002821e-06, 5.0839999999989505e-06, 4.958000000002821e-06, 4.985999999998492e-06, 5.1389999999977565e-06, 4.958000000002821e-06, 5.014000000001101e-06, 5.1249999999981866e-06, 4.972000000002391e-06, 4.971999999998922e-06, 5.082999999999477e-06]</msg>
<status status="PASS" starttime="20201115 22:00:55.019" endtime="20201115 22:00:55.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.014" endtime="20201115 22:00:55.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.024" endtime="20201115 22:00:55.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.028" endtime="20201115 22:00:55.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.026" endtime="20201115 22:00:55.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.023" endtime="20201115 22:00:55.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.658" endtime="20201115 22:00:55.049"></status>
</kw>
<msg timestamp="20201115 22:00:55.049" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.058" endtime="20201115 22:00:55.071"></status>
</kw>
<msg timestamp="20201115 22:00:55.071" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.056" endtime="20201115 22:00:55.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.074" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.072" endtime="20201115 22:00:55.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.075" endtime="20201115 22:00:55.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.053" endtime="20201115 22:00:55.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.051" endtime="20201115 22:00:55.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.084" endtime="20201115 22:00:55.372"></status>
</kw>
<msg timestamp="20201115 22:00:55.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.083" endtime="20201115 22:00:55.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.376" endtime="20201115 22:00:55.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.384" endtime="20201115 22:00:55.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.080" endtime="20201115 22:00:55.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.079" endtime="20201115 22:00:55.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.391" level="INFO">${RESULT} = [{'time': 0.022335028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.022397792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:55.388" endtime="20201115 22:00:55.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.404" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:55.392" endtime="20201115 22:00:55.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.409" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:55.408" endtime="20201115 22:00:55.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.411" level="INFO">VALUE: [5.360999999998867e-06, 5.1249999999981866e-06, 4.957999999999352e-06, 4.972999999998395e-06, 5.082999999999477e-06, 4.972000000002391e-06, 4.959000000002295e-06, 5.111000000002086e-06, 4.959000000002295e-06, 4.9589999999988255e-06, 5.110999999998617e-06, 4.957999999999352e-06, 4.930000000000212e-06, 5.110999999998617e-06, 4.957999999999352e-06, 4.958000000002821e-06, 5.125000000001656e-06, 4.973000000001865e-06, 4.971999999998922e-06, 5.096999999999047e-06, 4.971999999998922e-06, 4.930000000000212e-06, 5.1249999999981866e-06, 4.971999999998922e-06, 4.971999999998922e-06, 5.110999999998617e-06, 4.971999999998922e-06, 4.972999999998395e-06, 5.1249999999981866e-06, 4.917000000000116e-06, 4.9999999999980616e-06, 5.111000000002086e-06, 4.889000000000976e-06, 4.971999999998922e-06, 5.110999999998617e-06, 4.943999999999782e-06, 4.972000000002391e-06, 5.05600000000328e-06, 4.944000000003251e-06, 4.9999999999980616e-06, 5.111000000002086e-06, 4.9589999999988255e-06, 4.971999999998922e-06, 5.068999999999907e-06, 4.986000000001961e-06, 4.903000000000546e-06, 5.125000000001656e-06, 4.972999999998395e-06, 5.014000000001101e-06, 5.180999999999936e-06]</msg>
<status status="PASS" starttime="20201115 22:00:55.410" endtime="20201115 22:00:55.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.405" endtime="20201115 22:00:55.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.414" endtime="20201115 22:00:55.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.418" endtime="20201115 22:00:55.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.416" endtime="20201115 22:00:55.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.413" endtime="20201115 22:00:55.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.049" endtime="20201115 22:00:55.439"></status>
</kw>
<msg timestamp="20201115 22:00:55.439" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.449" endtime="20201115 22:00:55.462"></status>
</kw>
<msg timestamp="20201115 22:00:55.463" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.447" endtime="20201115 22:00:55.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.465" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.464" endtime="20201115 22:00:55.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.466" endtime="20201115 22:00:55.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.444" endtime="20201115 22:00:55.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.442" endtime="20201115 22:00:55.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.475" endtime="20201115 22:00:55.762"></status>
</kw>
<msg timestamp="20201115 22:00:55.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023972139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023977542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.474" endtime="20201115 22:00:55.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023972139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023977542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.766" endtime="20201115 22:00:55.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.774" endtime="20201115 22:00:55.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.471" endtime="20201115 22:00:55.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.469" endtime="20201115 22:00:55.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.781" level="INFO">${RESULT} = [{'time': 0.023977542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.024040319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:55.777" endtime="20201115 22:00:55.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.794" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:55.782" endtime="20201115 22:00:55.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.799" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:55.798" endtime="20201115 22:00:55.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.801" level="INFO">VALUE: [5.403000000001046e-06, 5.138000000001752e-06, 4.957999999999352e-06, 4.973000000001865e-06, 5.1249999999981866e-06, 5.000000000001531e-06, 5.042000000000241e-06, 5.180999999999936e-06, 4.972000000002391e-06, 4.958000000002821e-06, 5.153000000000796e-06, 4.917000000000116e-06, 4.957999999999352e-06, 5.153000000000796e-06, 4.9449999999992555e-06, 4.9589999999988255e-06, 5.110999999998617e-06, 4.9589999999988255e-06, 4.973000000001865e-06, 5.111000000002086e-06, 4.986000000001961e-06, 4.972000000002391e-06, 5.110999999998617e-06, 5.028000000000671e-06, 5.000000000001531e-06, 5.096999999999047e-06, 5.042000000000241e-06, 4.903000000000546e-06, 5.1249999999981866e-06, 4.959000000002295e-06, 5.027999999997201e-06, 5.096999999999047e-06, 4.959000000002295e-06, 4.971999999998922e-06, 5.096999999999047e-06, 4.971999999998922e-06, 4.959000000002295e-06, 5.125000000001656e-06, 4.957999999999352e-06, 4.9589999999988255e-06, 5.111000000002086e-06, 4.9589999999988255e-06, 4.943999999999782e-06, 5.110999999998617e-06, 4.943999999999782e-06, 4.986000000001961e-06, 5.1249999999981866e-06, 4.957999999999352e-06, 4.971999999998922e-06, 5.055000000000337e-06]</msg>
<status status="PASS" starttime="20201115 22:00:55.800" endtime="20201115 22:00:55.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.795" endtime="20201115 22:00:55.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.805" endtime="20201115 22:00:55.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.808" endtime="20201115 22:00:55.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.806" endtime="20201115 22:00:55.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.803" endtime="20201115 22:00:55.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.440" endtime="20201115 22:00:55.829"></status>
</kw>
<msg timestamp="20201115 22:00:55.829" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.838" endtime="20201115 22:00:55.852"></status>
</kw>
<msg timestamp="20201115 22:00:55.852" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.837" endtime="20201115 22:00:55.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.855" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.853" endtime="20201115 22:00:55.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.856" endtime="20201115 22:00:55.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.834" endtime="20201115 22:00:55.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.832" endtime="20201115 22:00:55.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.865" endtime="20201115 22:00:56.153"></status>
</kw>
<msg timestamp="20201115 22:00:56.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023292292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023297625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.863" endtime="20201115 22:00:56.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023292292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023297625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.157" endtime="20201115 22:00:56.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.166" endtime="20201115 22:00:56.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.861" endtime="20201115 22:00:56.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.859" endtime="20201115 22:00:56.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.173" level="INFO">${RESULT} = [{'time': 0.023297625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.023360556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:56.169" endtime="20201115 22:00:56.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.186" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:56.174" endtime="20201115 22:00:56.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.191" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:56.190" endtime="20201115 22:00:56.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.194" level="INFO">VALUE: [5.332999999999727e-06, 5.139000000001226e-06, 4.9449999999992555e-06, 5.028000000000671e-06, 5.082999999999477e-06, 5.055999999999811e-06, 4.957999999999352e-06, 5.166999999996896e-06, 4.971999999998922e-06, 4.889000000000976e-06, 5.110999999998617e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 5.09799999999852e-06, 4.971999999998922e-06, 4.971999999998922e-06, 5.11199999999809e-06, 4.9449999999992555e-06, 5.000000000001531e-06, 5.055999999999811e-06, 4.957999999999352e-06, 4.971999999998922e-06, 5.097000000002516e-06, 4.916000000000642e-06, 4.943999999999782e-06, 5.110999999998617e-06, 4.971999999998922e-06, 4.9999999999980616e-06, 5.111000000002086e-06, 4.972000000002391e-06, 4.959000000002295e-06, 5.0699999999993806e-06, 4.957999999999352e-06, 4.957999999999352e-06, 5.125000000001656e-06, 4.971999999998922e-06, 4.987000000001435e-06, 5.097000000002516e-06, 4.986000000001961e-06, 4.957999999999352e-06, 5.111000000002086e-06, 4.985999999998492e-06, 4.9589999999988255e-06, 5.110999999998617e-06, 4.972000000002391e-06, 4.902000000001072e-06, 5.110999999998617e-06, 4.971999999998922e-06, 4.971999999998922e-06, 5.167000000000366e-06]</msg>
<status status="PASS" starttime="20201115 22:00:56.192" endtime="20201115 22:00:56.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.187" endtime="20201115 22:00:56.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.197" endtime="20201115 22:00:56.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.201" endtime="20201115 22:00:56.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.199" endtime="20201115 22:00:56.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.195" endtime="20201115 22:00:56.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.830" endtime="20201115 22:00:56.222"></status>
</kw>
<msg timestamp="20201115 22:00:56.222" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.231" endtime="20201115 22:00:56.245"></status>
</kw>
<msg timestamp="20201115 22:00:56.246" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.230" endtime="20201115 22:00:56.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.248" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.247" endtime="20201115 22:00:56.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.249" endtime="20201115 22:00:56.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.227" endtime="20201115 22:00:56.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.225" endtime="20201115 22:00:56.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.259" endtime="20201115 22:00:56.554"></status>
</kw>
<msg timestamp="20201115 22:00:56.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022841625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022846972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.257" endtime="20201115 22:00:56.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022841625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022846972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.558" endtime="20201115 22:00:56.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.567" endtime="20201115 22:00:56.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.255" endtime="20201115 22:00:56.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.253" endtime="20201115 22:00:56.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.574" level="INFO">${RESULT} = [{'time': 0.022846972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.022909944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:56.570" endtime="20201115 22:00:56.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.587" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:56.575" endtime="20201115 22:00:56.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.592" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:56.591" endtime="20201115 22:00:56.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.595" level="INFO">VALUE: [5.346999999999297e-06, 5.125000000001656e-06, 4.9999999999980616e-06, 4.9589999999988255e-06, 5.1249999999981866e-06, 4.971999999998922e-06, 4.972000000002391e-06, 5.125000000001656e-06, 4.957999999999352e-06, 4.972000000002391e-06, 5.125000000001656e-06, 4.957999999999352e-06, 4.972000000002391e-06, 5.083000000002946e-06, 4.959000000002295e-06, 4.959000000002295e-06, 5.111000000002086e-06, 4.971999999998922e-06, 5.027999999997201e-06, 5.110999999998617e-06, 4.972000000002391e-06, 4.957999999999352e-06, 5.139000000001226e-06, 4.902000000001072e-06, 4.987000000001435e-06, 5.111000000002086e-06, 5.055000000000337e-06, 4.972000000002391e-06, 5.055000000000337e-06, 4.889000000000976e-06, 4.971999999998922e-06, 5.110999999998617e-06, 4.972999999998395e-06, 4.958000000002821e-06, 5.110999999998617e-06, 5.0139999999976315e-06, 4.943999999999782e-06, 5.068999999999907e-06, 4.972999999998395e-06, 4.917000000000116e-06, 5.11200000000156e-06, 5.014000000001101e-06, 4.973000000001865e-06, 5.111000000002086e-06, 4.986000000001961e-06, 4.959000000002295e-06, 5.08400000000242e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 5.097000000002516e-06]</msg>
<status status="PASS" starttime="20201115 22:00:56.593" endtime="20201115 22:00:56.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.588" endtime="20201115 22:00:56.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.599" endtime="20201115 22:00:56.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.602" endtime="20201115 22:00:56.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.601" endtime="20201115 22:00:56.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.597" endtime="20201115 22:00:56.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.223" endtime="20201115 22:00:56.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.657" endtime="20201115 22:00:56.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.656" endtime="20201115 22:00:56.623"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.626" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.635" endtime="20201115 22:00:56.649"></status>
</kw>
<msg timestamp="20201115 22:00:56.649" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.633" endtime="20201115 22:00:56.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.652" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.650" endtime="20201115 22:00:56.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.653" endtime="20201115 22:00:56.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.631" endtime="20201115 22:00:56.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.628" endtime="20201115 22:00:56.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.662" endtime="20201115 22:00:56.950"></status>
</kw>
<msg timestamp="20201115 22:00:56.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025381097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025386639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.661" endtime="20201115 22:00:56.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025381097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025386639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.954" endtime="20201115 22:00:56.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.963" endtime="20201115 22:00:56.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.658" endtime="20201115 22:00:56.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.656" endtime="20201115 22:00:56.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.970" level="INFO">${RESULT} = [{'time': 0.025386639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.025454097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:56.966" endtime="20201115 22:00:56.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.983" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:56.971" endtime="20201115 22:00:56.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.988" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:00:56.987" endtime="20201115 22:00:56.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.996" level="INFO">VALUE: [5.542000000000741e-06, 5.304999999997118e-06, 5.221999999999172e-06, 5.167000000000366e-06, 5.319999999999631e-06, 5.151999999997853e-06, 5.166000000000892e-06, 5.306000000000061e-06, 5.167000000000366e-06, 5.165999999997423e-06, 5.250000000001781e-06, 5.167000000000366e-06, 5.194000000000032e-06, 5.306000000000061e-06, 5.151999999997853e-06, 5.167000000000366e-06, 5.278000000000921e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.319000000000157e-06, 5.153000000000796e-06, 5.180999999999936e-06, 5.305000000000587e-06, 5.167000000000366e-06, 5.152999999997326e-06, 5.3200000000031e-06, 5.096999999999047e-06, 5.180999999999936e-06, 5.306000000000061e-06, 5.153000000000796e-06, 5.166999999996896e-06, 5.235999999998742e-06, 5.153000000000796e-06, 5.221999999999172e-06, 5.291000000001017e-06, 5.1389999999977565e-06, 5.153000000000796e-06, 5.332999999999727e-06, 5.152000000001322e-06, 5.166999999996896e-06, 5.235999999998742e-06, 5.1389999999977565e-06, 5.167000000000366e-06, 5.305000000000587e-06, 5.166000000000892e-06, 5.180000000000462e-06, 5.290999999997548e-06, 5.180999999999936e-06, 5.167000000000366e-06, 5.305000000000587e-06]</msg>
<status status="PASS" starttime="20201115 22:00:56.989" endtime="20201115 22:00:56.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.984" endtime="20201115 22:00:56.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.000" endtime="20201115 22:00:57.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.003" endtime="20201115 22:00:57.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.002" endtime="20201115 22:00:57.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.998" endtime="20201115 22:00:57.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.626" endtime="20201115 22:00:57.024"></status>
</kw>
<msg timestamp="20201115 22:00:57.024" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.033" endtime="20201115 22:00:57.047"></status>
</kw>
<msg timestamp="20201115 22:00:57.048" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.032" endtime="20201115 22:00:57.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.050" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.049" endtime="20201115 22:00:57.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.052" endtime="20201115 22:00:57.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.029" endtime="20201115 22:00:57.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.027" endtime="20201115 22:00:57.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.061" endtime="20201115 22:00:57.347"></status>
</kw>
<msg timestamp="20201115 22:00:57.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022780444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022785972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.059" endtime="20201115 22:00:57.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022780444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022785972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.352" endtime="20201115 22:00:57.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.360" endtime="20201115 22:00:57.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.057" endtime="20201115 22:00:57.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.055" endtime="20201115 22:00:57.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.367" level="INFO">${RESULT} = [{'time': 0.022785972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.022853792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:57.364" endtime="20201115 22:00:57.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.381" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:57.368" endtime="20201115 22:00:57.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.386" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:00:57.385" endtime="20201115 22:00:57.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.389" level="INFO">VALUE: [5.528000000001171e-06, 5.306000000000061e-06, 5.153000000000796e-06, 5.166000000000892e-06, 5.304999999997118e-06, 5.138000000001752e-06, 5.167000000000366e-06, 5.306000000000061e-06, 5.152999999997326e-06, 5.207999999999602e-06, 5.319000000000157e-06, 5.167000000000366e-06, 5.180000000000462e-06, 5.2499999999983116e-06, 5.180999999999936e-06, 5.180000000000462e-06, 5.389000000001476e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.306000000000061e-06, 5.153000000000796e-06, 5.152000000001322e-06, 5.292000000000491e-06, 5.180000000000462e-06, 5.153000000000796e-06, 5.305000000000587e-06, 5.1389999999977565e-06, 5.180999999999936e-06, 5.319000000000157e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.292000000000491e-06, 5.221999999999172e-06, 5.1389999999977565e-06, 5.291000000001017e-06, 5.207999999999602e-06, 5.167000000000366e-06, 5.292000000000491e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.306000000000061e-06, 5.139000000001226e-06, 5.166000000000892e-06, 5.319999999999631e-06, 5.1389999999977565e-06, 5.1949999999995056e-06, 5.304999999997118e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.264000000001351e-06]</msg>
<status status="PASS" starttime="20201115 22:00:57.387" endtime="20201115 22:00:57.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.382" endtime="20201115 22:00:57.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.392" endtime="20201115 22:00:57.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.396" endtime="20201115 22:00:57.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.394" endtime="20201115 22:00:57.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.390" endtime="20201115 22:00:57.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.025" endtime="20201115 22:00:57.417"></status>
</kw>
<msg timestamp="20201115 22:00:57.417" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.426" endtime="20201115 22:00:57.441"></status>
</kw>
<msg timestamp="20201115 22:00:57.441" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.425" endtime="20201115 22:00:57.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.444" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.442" endtime="20201115 22:00:57.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.445" endtime="20201115 22:00:57.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.422" endtime="20201115 22:00:57.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.420" endtime="20201115 22:00:57.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.454" endtime="20201115 22:00:57.747"></status>
</kw>
<msg timestamp="20201115 22:00:57.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023289903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023295431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.453" endtime="20201115 22:00:57.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023289903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023295431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.751" endtime="20201115 22:00:57.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.760" endtime="20201115 22:00:57.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.450" endtime="20201115 22:00:57.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.448" endtime="20201115 22:00:57.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.766" level="INFO">${RESULT} = [{'time': 0.023295431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.023363, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:00:57.763" endtime="20201115 22:00:57.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.780" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:57.768" endtime="20201115 22:00:57.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.784" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:00:57.783" endtime="20201115 22:00:57.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.787" level="INFO">VALUE: [5.527999999997701e-06, 5.3189999999966875e-06, 5.153000000000796e-06, 5.1949999999995056e-06, 5.305000000000587e-06, 5.151999999997853e-06, 5.166999999996896e-06, 5.290999999997548e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.2639999999978815e-06, 5.139000000001226e-06, 5.221999999999172e-06, 5.306000000000061e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.347000000002766e-06, 5.1389999999977565e-06, 5.167000000000366e-06, 5.305000000000587e-06, 5.096999999999047e-06, 5.153000000000796e-06, 5.2499999999983116e-06, 5.152999999997326e-06, 5.180999999999936e-06, 5.332999999999727e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.306000000000061e-06, 5.167000000000366e-06, 5.180999999999936e-06, 5.305000000000587e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.306000000000061e-06, 5.1389999999977565e-06, 5.180999999999936e-06, 5.291000000001017e-06, 5.152999999997326e-06, 5.167000000000366e-06, 5.292000000000491e-06, 5.068999999999907e-06, 5.180999999999936e-06, 5.305000000000587e-06, 5.1389999999977565e-06, 5.167000000000366e-06, 5.306000000000061e-06, 5.09800000000199e-06, 5.180000000000462e-06, 5.305000000000587e-06]</msg>
<status status="PASS" starttime="20201115 22:00:57.785" endtime="20201115 22:00:57.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.781" endtime="20201115 22:00:57.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.790" endtime="20201115 22:00:57.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.793" endtime="20201115 22:00:57.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.792" endtime="20201115 22:00:57.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.788" endtime="20201115 22:00:57.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.417" endtime="20201115 22:00:57.814"></status>
</kw>
<msg timestamp="20201115 22:00:57.814" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.823" endtime="20201115 22:00:57.838"></status>
</kw>
<msg timestamp="20201115 22:00:57.838" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.822" endtime="20201115 22:00:57.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.839" endtime="20201115 22:00:57.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.842" endtime="20201115 22:00:57.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.819" endtime="20201115 22:00:57.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.817" endtime="20201115 22:00:57.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.851" endtime="20201115 22:00:58.137"></status>
</kw>
<msg timestamp="20201115 22:00:58.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022287431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022292958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.849" endtime="20201115 22:00:58.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022287431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022292958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.141" endtime="20201115 22:00:58.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.150" endtime="20201115 22:00:58.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.847" endtime="20201115 22:00:58.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.845" endtime="20201115 22:00:58.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.157" level="INFO">${RESULT} = [{'time': 0.022292958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.527000000001697e-06, 'source_diff': 5.527000000001697e-06}, {'time': 0.0223605, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:58.153" endtime="20201115 22:00:58.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.170" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:58.158" endtime="20201115 22:00:58.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.174" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:00:58.173" endtime="20201115 22:00:58.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.177" level="INFO">VALUE: [5.527000000001697e-06, 5.306000000000061e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.306000000000061e-06, 5.139000000001226e-06, 5.180999999999936e-06, 5.319000000000157e-06, 5.068999999999907e-06, 5.166000000000892e-06, 5.319999999999631e-06, 5.138000000001752e-06, 5.180000000000462e-06, 5.292000000000491e-06, 5.153000000000796e-06, 5.166000000000892e-06, 5.306000000000061e-06, 5.167000000000366e-06, 5.2089999999990755e-06, 5.290999999997548e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.306000000000061e-06, 5.153000000000796e-06, 5.180999999999936e-06, 5.3200000000031e-06, 5.1249999999981866e-06, 5.153000000000796e-06, 5.292000000000491e-06, 5.139000000001226e-06, 5.207999999999602e-06, 5.292000000000491e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.306000000000061e-06, 5.151999999997853e-06, 5.167000000000366e-06, 5.278000000000921e-06, 5.138000000001752e-06, 5.1799999999969926e-06, 5.305000000000587e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.306000000000061e-06, 5.153000000000796e-06, 5.180000000000462e-06, 5.250000000001781e-06, 5.194000000000032e-06, 5.167000000000366e-06, 5.306000000000061e-06]</msg>
<status status="PASS" starttime="20201115 22:00:58.175" endtime="20201115 22:00:58.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.171" endtime="20201115 22:00:58.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.180" endtime="20201115 22:00:58.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.183" endtime="20201115 22:00:58.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.182" endtime="20201115 22:00:58.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.178" endtime="20201115 22:00:58.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.815" endtime="20201115 22:00:58.204"></status>
</kw>
<msg timestamp="20201115 22:00:58.204" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.213" endtime="20201115 22:00:58.227"></status>
</kw>
<msg timestamp="20201115 22:00:58.227" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.212" endtime="20201115 22:00:58.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.228" endtime="20201115 22:00:58.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.231" endtime="20201115 22:00:58.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.209" endtime="20201115 22:00:58.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.207" endtime="20201115 22:00:58.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.240" endtime="20201115 22:00:58.527"></status>
</kw>
<msg timestamp="20201115 22:00:58.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022331806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022337347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.238" endtime="20201115 22:00:58.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022331806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022337347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.531" endtime="20201115 22:00:58.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.540" endtime="20201115 22:00:58.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.236" endtime="20201115 22:00:58.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.234" endtime="20201115 22:00:58.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.546" level="INFO">${RESULT} = [{'time': 0.022337347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.022404653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:58.543" endtime="20201115 22:00:58.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.560" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:58.547" endtime="20201115 22:00:58.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.564" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:00:58.563" endtime="20201115 22:00:58.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.567" level="INFO">VALUE: [5.541000000001267e-06, 5.278000000000921e-06, 5.153000000000796e-06, 5.180999999999936e-06, 5.278000000000921e-06, 5.152000000001322e-06, 5.153000000000796e-06, 5.319999999999631e-06, 5.165999999997423e-06, 5.1949999999995056e-06, 5.250000000001781e-06, 5.153000000000796e-06, 5.152999999997326e-06, 5.278000000000921e-06, 5.207999999999602e-06, 5.180999999999936e-06, 5.346999999999297e-06, 5.151999999997853e-06, 5.166000000000892e-06, 5.278000000000921e-06, 5.153000000000796e-06, 5.221999999999172e-06, 5.305000000000587e-06, 5.152000000001322e-06, 5.180999999999936e-06, 5.292000000000491e-06, 5.167000000000366e-06, 5.180000000000462e-06, 5.319999999999631e-06, 5.152999999997326e-06, 5.1249999999981866e-06, 5.346999999999297e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.304999999997118e-06, 5.153000000000796e-06, 5.1799999999969926e-06, 5.332999999999727e-06, 5.153000000000796e-06, 5.166000000000892e-06, 5.291000000001017e-06, 5.153000000000796e-06, 5.166000000000892e-06, 5.236000000002211e-06, 5.139000000001226e-06, 5.180999999999936e-06, 5.278000000000921e-06, 5.139000000001226e-06, 5.165999999997423e-06, 5.291000000001017e-06]</msg>
<status status="PASS" starttime="20201115 22:00:58.565" endtime="20201115 22:00:58.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.561" endtime="20201115 22:00:58.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.570" endtime="20201115 22:00:58.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.573" endtime="20201115 22:00:58.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.572" endtime="20201115 22:00:58.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.568" endtime="20201115 22:00:58.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.205" endtime="20201115 22:00:58.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.625" endtime="20201115 22:00:58.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.624" endtime="20201115 22:00:58.594"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.596" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.605" endtime="20201115 22:00:58.619"></status>
</kw>
<msg timestamp="20201115 22:00:58.620" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.604" endtime="20201115 22:00:58.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.622" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.621" endtime="20201115 22:00:58.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.623" endtime="20201115 22:00:58.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.601" endtime="20201115 22:00:58.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.599" endtime="20201115 22:00:58.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.633" endtime="20201115 22:00:58.920"></status>
</kw>
<msg timestamp="20201115 22:00:58.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024624597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024630319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.631" endtime="20201115 22:00:58.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024624597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024630319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.924" endtime="20201115 22:00:58.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.932" endtime="20201115 22:00:58.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.629" endtime="20201115 22:00:58.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.627" endtime="20201115 22:00:58.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.939" level="INFO">${RESULT} = [{'time': 0.024630319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.02470275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:58.935" endtime="20201115 22:00:58.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.952" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:58.940" endtime="20201115 22:00:58.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.957" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:00:58.956" endtime="20201115 22:00:58.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.959" level="INFO">VALUE: [5.721999999999672e-06, 5.499999999998562e-06, 5.416000000001142e-06, 5.319000000000157e-06, 5.512999999998658e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.485999999998992e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.485999999998992e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.514000000001601e-06, 5.332999999999727e-06, 5.319000000000157e-06, 5.527999999997701e-06, 5.3339999999992005e-06, 5.346999999999297e-06, 5.500000000002031e-06, 5.389000000001476e-06, 5.361000000002336e-06, 5.471999999999422e-06, 5.360999999998867e-06, 5.375000000001906e-06, 5.500000000002031e-06, 5.375000000001906e-06, 5.346999999999297e-06, 5.5139999999981315e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.5139999999981315e-06, 5.361000000002336e-06, 5.347000000002766e-06, 5.485999999998992e-06, 5.360999999998867e-06, 5.34799999999877e-06, 5.569000000000407e-06, 5.374999999998437e-06, 5.360999999998867e-06, 5.500000000002031e-06, 5.3339999999992005e-06, 5.34799999999877e-06, 5.499999999998562e-06, 5.375000000001906e-06, 5.332999999999727e-06, 5.499999999998562e-06, 5.347000000002766e-06, 5.374999999998437e-06, 5.514000000001601e-06]</msg>
<status status="PASS" starttime="20201115 22:00:58.958" endtime="20201115 22:00:58.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.953" endtime="20201115 22:00:58.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.962" endtime="20201115 22:00:58.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.966" endtime="20201115 22:00:58.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.964" endtime="20201115 22:00:58.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.961" endtime="20201115 22:00:58.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.597" endtime="20201115 22:00:58.986"></status>
</kw>
<msg timestamp="20201115 22:00:58.986" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.995" endtime="20201115 22:00:59.009"></status>
</kw>
<msg timestamp="20201115 22:00:59.009" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.994" endtime="20201115 22:00:59.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.012" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.010" endtime="20201115 22:00:59.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.013" endtime="20201115 22:00:59.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.991" endtime="20201115 22:00:59.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.989" endtime="20201115 22:00:59.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.023" endtime="20201115 22:00:59.311"></status>
</kw>
<msg timestamp="20201115 22:00:59.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022157653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022163375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.021" endtime="20201115 22:00:59.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022157653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022163375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.315" endtime="20201115 22:00:59.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.323" endtime="20201115 22:00:59.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.018" endtime="20201115 22:00:59.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.017" endtime="20201115 22:00:59.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.330" level="INFO">${RESULT} = [{'time': 0.022163375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.022236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:00:59.326" endtime="20201115 22:00:59.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.343" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:59.331" endtime="20201115 22:00:59.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.347" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:00:59.346" endtime="20201115 22:00:59.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.350" level="INFO">VALUE: [5.721999999999672e-06, 5.527999999997701e-06, 5.347000000002766e-06, 5.374999999998437e-06, 5.499999999998562e-06, 5.34799999999877e-06, 5.346999999999297e-06, 5.499999999998562e-06, 5.360999999998867e-06, 5.332999999999727e-06, 5.485999999998992e-06, 5.3339999999992005e-06, 5.346999999999297e-06, 5.5139999999981315e-06, 5.34799999999877e-06, 5.361000000002336e-06, 5.416999999997146e-06, 5.278000000000921e-06, 5.360999999998867e-06, 5.512999999998658e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.500000000002031e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.500000000002031e-06, 5.375000000001906e-06, 5.3339999999992005e-06, 5.514000000001601e-06, 5.360999999998867e-06, 5.306000000000061e-06, 5.499999999998562e-06, 5.332999999999727e-06, 5.332999999999727e-06, 5.569000000000407e-06, 5.347000000002766e-06, 5.346999999999297e-06, 5.569000000000407e-06, 5.361000000002336e-06, 5.374999999998437e-06, 5.500000000002031e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.485999999998992e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.500000000002031e-06, 5.332999999999727e-06, 5.361000000002336e-06, 5.499999999998562e-06]</msg>
<status status="PASS" starttime="20201115 22:00:59.349" endtime="20201115 22:00:59.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.344" endtime="20201115 22:00:59.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.354" endtime="20201115 22:00:59.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.357" endtime="20201115 22:00:59.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.356" endtime="20201115 22:00:59.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.352" endtime="20201115 22:00:59.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.987" endtime="20201115 22:00:59.378"></status>
</kw>
<msg timestamp="20201115 22:00:59.378" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.388" endtime="20201115 22:00:59.402"></status>
</kw>
<msg timestamp="20201115 22:00:59.403" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.385" endtime="20201115 22:00:59.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.405" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.404" endtime="20201115 22:00:59.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.406" endtime="20201115 22:00:59.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.383" endtime="20201115 22:00:59.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.381" endtime="20201115 22:00:59.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.415" endtime="20201115 22:00:59.703"></status>
</kw>
<msg timestamp="20201115 22:00:59.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022989389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022995181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.414" endtime="20201115 22:00:59.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022989389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022995181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.707" endtime="20201115 22:00:59.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.715" endtime="20201115 22:00:59.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.411" endtime="20201115 22:00:59.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.409" endtime="20201115 22:00:59.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.722" level="INFO">${RESULT} = [{'time': 0.022995181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.023067542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:59.718" endtime="20201115 22:00:59.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.735" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:00:59.723" endtime="20201115 22:00:59.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.739" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:00:59.738" endtime="20201115 22:00:59.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.742" level="INFO">VALUE: [5.792000000000991e-06, 5.514000000001601e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.499999999998562e-06, 5.375000000001906e-06, 5.361000000002336e-06, 5.500000000002031e-06, 5.360999999998867e-06, 5.292000000000491e-06, 5.458000000003321e-06, 5.361000000002336e-06, 5.34799999999877e-06, 5.499999999998562e-06, 5.346999999999297e-06, 5.306000000000061e-06, 5.472000000002891e-06, 5.360999999998867e-06, 5.346999999999297e-06, 5.499999999998562e-06, 5.319000000000157e-06, 5.346999999999297e-06, 5.499999999998562e-06, 5.305000000000587e-06, 5.360999999998867e-06, 5.514000000001601e-06, 5.34800000000224e-06, 5.305000000000587e-06, 5.485999999998992e-06, 5.360999999998867e-06, 5.3339999999992005e-06, 5.486999999998465e-06, 5.347000000002766e-06, 5.332999999999727e-06, 5.500000000002031e-06, 5.360999999998867e-06, 5.403000000001046e-06, 5.499999999998562e-06, 5.34799999999877e-06, 5.292000000000491e-06, 5.486000000002461e-06, 5.333000000003196e-06, 5.389000000001476e-06, 5.499999999998562e-06, 5.389000000001476e-06, 5.361000000002336e-06, 5.472999999998895e-06, 5.360999999998867e-06, 5.34799999999877e-06, 5.499999999998562e-06]</msg>
<status status="PASS" starttime="20201115 22:00:59.741" endtime="20201115 22:00:59.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.736" endtime="20201115 22:00:59.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.745" endtime="20201115 22:00:59.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.748" endtime="20201115 22:00:59.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.747" endtime="20201115 22:00:59.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.743" endtime="20201115 22:00:59.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.379" endtime="20201115 22:00:59.769"></status>
</kw>
<msg timestamp="20201115 22:00:59.770" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.779" endtime="20201115 22:00:59.794"></status>
</kw>
<msg timestamp="20201115 22:00:59.794" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.777" endtime="20201115 22:00:59.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.797" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.795" endtime="20201115 22:00:59.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.798" endtime="20201115 22:00:59.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.775" endtime="20201115 22:00:59.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.772" endtime="20201115 22:00:59.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.807" endtime="20201115 22:01:00.093"></status>
</kw>
<msg timestamp="20201115 22:01:00.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022999778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023005528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.805" endtime="20201115 22:01:00.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022999778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023005528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.097" endtime="20201115 22:01:00.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.105" endtime="20201115 22:01:00.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.803" endtime="20201115 22:01:00.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.801" endtime="20201115 22:01:00.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:00.112" level="INFO">${RESULT} = [{'time': 0.023005528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.023078375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:00.109" endtime="20201115 22:01:00.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:00.125" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:00.113" endtime="20201115 22:01:00.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.130" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:00.129" endtime="20201115 22:01:00.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.132" level="INFO">VALUE: [5.750000000002281e-06, 5.528000000001171e-06, 5.34799999999877e-06, 5.375000000001906e-06, 5.4589999999993255e-06, 5.347000000002766e-06, 5.360999999998867e-06, 5.485999999998992e-06, 5.332999999999727e-06, 5.34800000000224e-06, 5.486000000002461e-06, 5.347000000002766e-06, 5.332999999999727e-06, 5.486999999998465e-06, 5.360999999998867e-06, 5.346999999999297e-06, 5.526999999998228e-06, 5.319999999999631e-06, 5.347000000002766e-06, 5.499999999998562e-06, 5.375000000001906e-06, 5.34799999999877e-06, 5.444000000000282e-06, 5.319000000000157e-06, 5.36199999999834e-06, 5.485999999998992e-06, 5.360999999998867e-06, 5.332999999999727e-06, 5.5139999999981315e-06, 5.360999999998867e-06, 5.360999999998867e-06, 5.471999999999422e-06, 5.3339999999992005e-06, 5.374999999998437e-06, 5.499999999998562e-06, 5.332999999999727e-06, 5.374999999998437e-06, 5.500000000002031e-06, 5.346999999999297e-06, 5.347000000002766e-06, 5.514000000001601e-06, 5.346999999999297e-06, 5.332999999999727e-06, 5.5139999999981315e-06, 5.360999999998867e-06, 5.36200000000181e-06, 5.514000000001601e-06, 5.360999999998867e-06, 5.361000000002336e-06, 5.5139999999981315e-06]</msg>
<status status="PASS" starttime="20201115 22:01:00.131" endtime="20201115 22:01:00.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.126" endtime="20201115 22:01:00.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.135" endtime="20201115 22:01:00.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.139" endtime="20201115 22:01:00.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.138" endtime="20201115 22:01:00.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.134" endtime="20201115 22:01:00.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.770" endtime="20201115 22:01:00.160"></status>
</kw>
<msg timestamp="20201115 22:01:00.160" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.169" endtime="20201115 22:01:00.183"></status>
</kw>
<msg timestamp="20201115 22:01:00.184" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.167" endtime="20201115 22:01:00.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.186" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.185" endtime="20201115 22:01:00.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.187" endtime="20201115 22:01:00.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.165" endtime="20201115 22:01:00.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.163" endtime="20201115 22:01:00.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.196" endtime="20201115 22:01:00.483"></status>
</kw>
<msg timestamp="20201115 22:01:00.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022310819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.195" endtime="20201115 22:01:00.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022310819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.487" endtime="20201115 22:01:00.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.495" endtime="20201115 22:01:00.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.192" endtime="20201115 22:01:00.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.190" endtime="20201115 22:01:00.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:00.502" level="INFO">${RESULT} = [{'time': 0.022316556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.737000000002185e-06, 'source_diff': 5.737000000002185e-06}, {'time': 0.022389417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:00.499" endtime="20201115 22:01:00.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:00.516" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:00.503" endtime="20201115 22:01:00.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.521" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:00.519" endtime="20201115 22:01:00.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.523" level="INFO">VALUE: [5.737000000002185e-06, 5.500000000002031e-06, 5.360999999998867e-06, 5.374999999998437e-06, 5.486000000002461e-06, 5.389000000001476e-06, 5.346999999999297e-06, 5.500000000002031e-06, 5.360999999998867e-06, 5.403000000001046e-06, 5.500000000002031e-06, 5.3889999999980065e-06, 5.361000000002336e-06, 5.500000000002031e-06, 5.360999999998867e-06, 5.346999999999297e-06, 5.528000000001171e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.486000000002461e-06, 5.375000000001906e-06, 5.375000000001906e-06, 5.514000000001601e-06, 5.361000000002336e-06, 5.360999999998867e-06, 5.499999999998562e-06, 5.360999999998867e-06, 5.346999999999297e-06, 5.512999999998658e-06, 5.361000000002336e-06, 5.374999999998437e-06, 5.5139999999981315e-06, 5.374999999998437e-06, 5.319000000000157e-06, 5.5139999999981315e-06, 5.346999999999297e-06, 5.346999999999297e-06, 5.500000000002031e-06, 5.36200000000181e-06, 5.346999999999297e-06, 5.500000000002031e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.512999999998658e-06, 5.360999999998867e-06, 5.402000000001572e-06, 5.500000000002031e-06, 5.361000000002336e-06, 5.403000000001046e-06, 5.5139999999981315e-06]</msg>
<status status="PASS" starttime="20201115 22:01:00.522" endtime="20201115 22:01:00.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.517" endtime="20201115 22:01:00.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.527" endtime="20201115 22:01:00.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.531" endtime="20201115 22:01:00.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.529" endtime="20201115 22:01:00.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.525" endtime="20201115 22:01:00.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.161" endtime="20201115 22:01:00.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.595" endtime="20201115 22:01:00.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.595" endtime="20201115 22:01:00.552"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.554" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.563" endtime="20201115 22:01:00.578"></status>
</kw>
<msg timestamp="20201115 22:01:00.578" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.562" endtime="20201115 22:01:00.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.580" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.579" endtime="20201115 22:01:00.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.581" endtime="20201115 22:01:00.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.559" endtime="20201115 22:01:00.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.557" endtime="20201115 22:01:00.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.590" endtime="20201115 22:01:00.878"></status>
</kw>
<msg timestamp="20201115 22:01:00.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024687903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.589" endtime="20201115 22:01:00.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024687903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.882" endtime="20201115 22:01:00.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.890" endtime="20201115 22:01:00.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.586" endtime="20201115 22:01:00.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.585" endtime="20201115 22:01:00.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:00.897" level="INFO">${RESULT} = [{'time': 0.024693778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.024771444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:00.894" endtime="20201115 22:01:00.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:00.910" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:00.898" endtime="20201115 22:01:00.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.915" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:00.914" endtime="20201115 22:01:00.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.918" level="INFO">VALUE: [5.874999999998937e-06, 5.666000000001392e-06, 5.527000000001697e-06, 5.554999999997368e-06, 5.694000000000532e-06, 5.556000000000311e-06, 5.555000000000837e-06, 5.624999999998687e-06, 5.556000000000311e-06, 5.528000000001171e-06, 5.681000000000436e-06, 5.554999999997368e-06, 5.555999999996841e-06, 5.681000000000436e-06, 5.541000000001267e-06, 5.555000000000837e-06, 5.6389999999982565e-06, 5.625000000002156e-06, 5.569999999999881e-06, 5.680000000000962e-06, 5.528000000001171e-06, 5.556000000000311e-06, 5.694000000000532e-06, 5.61200000000206e-06, 5.653000000001296e-06, 5.749999999998812e-06, 5.542000000000741e-06, 5.582999999999977e-06, 5.652000000001822e-06, 5.527999999997701e-06, 5.499999999998562e-06, 5.666000000001392e-06, 5.541999999997271e-06, 5.569000000000407e-06, 5.680000000000962e-06, 5.555000000000837e-06, 5.499999999998562e-06, 5.680000000000962e-06, 5.556000000000311e-06, 5.569999999999881e-06, 5.7089999999995755e-06, 5.528000000001171e-06, 5.499999999998562e-06, 5.694000000000532e-06, 5.541000000001267e-06, 5.555000000000837e-06, 5.750000000002281e-06, 5.527000000001697e-06, 5.485999999998992e-06, 5.667000000000866e-06]</msg>
<status status="PASS" starttime="20201115 22:01:00.916" endtime="20201115 22:01:00.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.911" endtime="20201115 22:01:00.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.921" endtime="20201115 22:01:00.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.924" endtime="20201115 22:01:00.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.923" endtime="20201115 22:01:00.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.919" endtime="20201115 22:01:00.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.555" endtime="20201115 22:01:00.945"></status>
</kw>
<msg timestamp="20201115 22:01:00.945" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.954" endtime="20201115 22:01:00.967"></status>
</kw>
<msg timestamp="20201115 22:01:00.968" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.952" endtime="20201115 22:01:00.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.970" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.969" endtime="20201115 22:01:00.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.971" endtime="20201115 22:01:00.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.950" endtime="20201115 22:01:00.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.948" endtime="20201115 22:01:00.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.980" endtime="20201115 22:01:01.267"></status>
</kw>
<msg timestamp="20201115 22:01:01.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022296458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022302389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.979" endtime="20201115 22:01:01.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022296458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022302389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.271" endtime="20201115 22:01:01.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.279" endtime="20201115 22:01:01.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.976" endtime="20201115 22:01:01.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.975" endtime="20201115 22:01:01.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.286" level="INFO">${RESULT} = [{'time': 0.022302389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.930999999997216e-06, 'source_diff': 5.930999999997216e-06}, {'time': 0.022380167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:01.282" endtime="20201115 22:01:01.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.299" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:01.287" endtime="20201115 22:01:01.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.304" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:01.303" endtime="20201115 22:01:01.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.306" level="INFO">VALUE: [5.930999999997216e-06, 5.695000000000006e-06, 5.555000000000837e-06, 5.569999999999881e-06, 5.695000000000006e-06, 5.58400000000292e-06, 5.526999999998228e-06, 5.679999999997493e-06, 5.485999999998992e-06, 5.556000000000311e-06, 5.624999999998687e-06, 5.541000000001267e-06, 5.569999999999881e-06, 5.708000000000102e-06, 5.528000000001171e-06, 5.569000000000407e-06, 5.695000000000006e-06, 5.541999999997271e-06, 5.569999999999881e-06, 5.681000000000436e-06, 5.556000000000311e-06, 5.624999999998687e-06, 5.7229999999991454e-06, 5.500000000002031e-06, 5.582999999999977e-06, 5.695000000000006e-06, 5.58400000000292e-06, 5.554999999997368e-06, 5.694000000000532e-06, 5.485999999998992e-06, 5.569999999999881e-06, 5.695000000000006e-06, 5.514000000001601e-06, 5.569999999999881e-06, 5.708000000000102e-06, 5.526999999998228e-06, 5.542000000000741e-06, 5.667000000000866e-06, 5.526999999998228e-06, 5.6389999999982565e-06, 5.694000000000532e-06, 5.541999999997271e-06, 5.569999999999881e-06, 5.708000000000102e-06, 5.541000000001267e-06, 5.555000000000837e-06, 5.695000000000006e-06, 5.554999999997368e-06, 5.569999999999881e-06, 5.695000000000006e-06]</msg>
<status status="PASS" starttime="20201115 22:01:01.305" endtime="20201115 22:01:01.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.300" endtime="20201115 22:01:01.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.309" endtime="20201115 22:01:01.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.313" endtime="20201115 22:01:01.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.311" endtime="20201115 22:01:01.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.308" endtime="20201115 22:01:01.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.945" endtime="20201115 22:01:01.333"></status>
</kw>
<msg timestamp="20201115 22:01:01.334" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.343" endtime="20201115 22:01:01.357"></status>
</kw>
<msg timestamp="20201115 22:01:01.358" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.341" endtime="20201115 22:01:01.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.360" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.359" endtime="20201115 22:01:01.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.361" endtime="20201115 22:01:01.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.338" endtime="20201115 22:01:01.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.336" endtime="20201115 22:01:01.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.370" endtime="20201115 22:01:01.656"></status>
</kw>
<msg timestamp="20201115 22:01:01.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022340903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.368" endtime="20201115 22:01:01.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022340903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.661" endtime="20201115 22:01:01.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.669" endtime="20201115 22:01:01.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.366" endtime="20201115 22:01:01.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.364" endtime="20201115 22:01:01.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.675" level="INFO">${RESULT} = [{'time': 0.022340903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.930999999997216e-06, 'source_diff': 5.930999999997216e-06}, {'time': 0.022418458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:01.672" endtime="20201115 22:01:01.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.689" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:01.677" endtime="20201115 22:01:01.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.694" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:01.693" endtime="20201115 22:01:01.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.696" level="INFO">VALUE: [5.930999999997216e-06, 5.679999999997493e-06, 5.556000000000311e-06, 5.569000000000407e-06, 5.695000000000006e-06, 5.528000000001171e-06, 5.569999999999881e-06, 5.694000000000532e-06, 5.555000000000837e-06, 5.582999999999977e-06, 5.680000000000962e-06, 5.542000000000741e-06, 5.5839999999994505e-06, 5.695000000000006e-06, 5.528000000001171e-06, 5.500000000002031e-06, 5.708000000000102e-06, 5.542000000000741e-06, 5.542000000000741e-06, 5.666000000001392e-06, 5.542000000000741e-06, 5.555000000000837e-06, 5.694000000000532e-06, 5.514000000001601e-06, 5.569000000000407e-06, 5.667000000000866e-06, 5.542000000000741e-06, 5.569999999999881e-06, 5.695000000000006e-06, 5.541000000001267e-06, 5.5689999999969375e-06, 5.735999999999242e-06, 5.500000000002031e-06, 5.624999999998687e-06, 5.694000000000532e-06, 5.556000000000311e-06, 5.554999999997368e-06, 5.695000000000006e-06, 5.486000000002461e-06, 5.569000000000407e-06, 5.695000000000006e-06, 5.5139999999981315e-06, 5.569999999999881e-06, 5.680000000000962e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.681000000000436e-06, 5.541000000001267e-06, 5.569999999999881e-06, 5.653000000001296e-06]</msg>
<status status="PASS" starttime="20201115 22:01:01.695" endtime="20201115 22:01:01.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.690" endtime="20201115 22:01:01.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.699" endtime="20201115 22:01:01.700"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.703" endtime="20201115 22:01:01.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.701" endtime="20201115 22:01:01.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.698" endtime="20201115 22:01:01.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.334" endtime="20201115 22:01:01.723"></status>
</kw>
<msg timestamp="20201115 22:01:01.723" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.732" endtime="20201115 22:01:01.747"></status>
</kw>
<msg timestamp="20201115 22:01:01.747" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.731" endtime="20201115 22:01:01.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.750" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.748" endtime="20201115 22:01:01.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.751" endtime="20201115 22:01:01.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.728" endtime="20201115 22:01:01.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.726" endtime="20201115 22:01:01.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.760" endtime="20201115 22:01:02.048"></status>
</kw>
<msg timestamp="20201115 22:01:02.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022250347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.758" endtime="20201115 22:01:02.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022250347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.052" endtime="20201115 22:01:02.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.067" endtime="20201115 22:01:02.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.756" endtime="20201115 22:01:02.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.754" endtime="20201115 22:01:02.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.074" level="INFO">${RESULT} = [{'time': 0.022256222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.022333931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:02.071" endtime="20201115 22:01:02.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.087" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:02.075" endtime="20201115 22:01:02.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.092" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:02.091" endtime="20201115 22:01:02.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.094" level="INFO">VALUE: [5.874999999998937e-06, 5.695000000000006e-06, 5.471999999999422e-06, 5.569999999999881e-06, 5.695000000000006e-06, 5.540999999997798e-06, 5.556000000000311e-06, 5.680000000000962e-06, 5.542000000000741e-06, 5.582999999999977e-06, 5.749999999998812e-06, 5.555000000000837e-06, 5.556000000000311e-06, 5.6939999999970625e-06, 5.555000000000837e-06, 5.554999999997368e-06, 5.681000000000436e-06, 5.526999999998228e-06, 5.554999999997368e-06, 5.667000000000866e-06, 5.5689999999969375e-06, 5.610999999999117e-06, 5.680000000000962e-06, 5.541999999997271e-06, 5.569000000000407e-06, 5.694000000000532e-06, 5.528000000001171e-06, 5.556000000000311e-06, 5.6939999999970625e-06, 5.5689999999969375e-06, 5.5139999999981315e-06, 5.695000000000006e-06, 5.4589999999993255e-06, 5.5139999999981315e-06, 5.694000000000532e-06, 5.556000000000311e-06, 5.556000000000311e-06, 5.681000000000436e-06, 5.542000000000741e-06, 5.569999999999881e-06, 5.653000000001296e-06, 5.554999999997368e-06, 5.569000000000407e-06, 5.7229999999991454e-06, 5.555000000000837e-06, 5.528000000001171e-06, 5.694000000000532e-06, 5.5839999999994505e-06, 5.569000000000407e-06, 5.694000000000532e-06]</msg>
<status status="PASS" starttime="20201115 22:01:02.093" endtime="20201115 22:01:02.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.088" endtime="20201115 22:01:02.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.097" endtime="20201115 22:01:02.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.101" endtime="20201115 22:01:02.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.099" endtime="20201115 22:01:02.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.096" endtime="20201115 22:01:02.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.724" endtime="20201115 22:01:02.121"></status>
</kw>
<msg timestamp="20201115 22:01:02.122" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.130" endtime="20201115 22:01:02.145"></status>
</kw>
<msg timestamp="20201115 22:01:02.145" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.129" endtime="20201115 22:01:02.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.148" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.146" endtime="20201115 22:01:02.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.149" endtime="20201115 22:01:02.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.126" endtime="20201115 22:01:02.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.124" endtime="20201115 22:01:02.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.158" endtime="20201115 22:01:02.446"></status>
</kw>
<msg timestamp="20201115 22:01:02.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022297472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022303403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.156" endtime="20201115 22:01:02.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022297472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022303403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.450" endtime="20201115 22:01:02.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.458" endtime="20201115 22:01:02.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.154" endtime="20201115 22:01:02.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.152" endtime="20201115 22:01:02.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.465" level="INFO">${RESULT} = [{'time': 0.022303403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.022381042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:02.462" endtime="20201115 22:01:02.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.478" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:02.466" endtime="20201115 22:01:02.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.483" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:02.482" endtime="20201115 22:01:02.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.485" level="INFO">VALUE: [5.931000000000686e-06, 5.681000000000436e-06, 5.542000000000741e-06, 5.556000000000311e-06, 5.694000000000532e-06, 5.471999999999422e-06, 5.569999999999881e-06, 5.652000000001822e-06, 5.485999999998992e-06, 5.6389999999982565e-06, 5.667000000000866e-06, 5.542000000000741e-06, 5.556000000000311e-06, 5.653000000001296e-06, 5.554999999997368e-06, 5.541000000001267e-06, 5.695000000000006e-06, 5.526999999998228e-06, 5.5839999999994505e-06, 5.667000000000866e-06, 5.556000000000311e-06, 5.569999999999881e-06, 5.679999999997493e-06, 5.556000000000311e-06, 5.569000000000407e-06, 5.695000000000006e-06, 5.596999999999547e-06, 5.569999999999881e-06, 5.695000000000006e-06, 5.569999999999881e-06, 5.541999999997271e-06, 5.680000000000962e-06, 5.611000000002586e-06, 5.555000000000837e-06, 5.721999999999672e-06, 5.499999999998562e-06, 5.555000000000837e-06, 5.708000000000102e-06, 5.527999999997701e-06, 5.542000000000741e-06, 5.680000000000962e-06, 5.528000000001171e-06, 5.596999999999547e-06, 5.681000000000436e-06, 5.541000000001267e-06, 5.569000000000407e-06, 5.708000000000102e-06, 5.542000000000741e-06, 5.554999999997368e-06, 5.666000000001392e-06]</msg>
<status status="PASS" starttime="20201115 22:01:02.484" endtime="20201115 22:01:02.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.479" endtime="20201115 22:01:02.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.488" endtime="20201115 22:01:02.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.492" endtime="20201115 22:01:02.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.490" endtime="20201115 22:01:02.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.487" endtime="20201115 22:01:02.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.122" endtime="20201115 22:01:02.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.553" endtime="20201115 22:01:02.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.553" endtime="20201115 22:01:02.513"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.515" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.524" endtime="20201115 22:01:02.539"></status>
</kw>
<msg timestamp="20201115 22:01:02.539" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.522" endtime="20201115 22:01:02.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.542" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.540" endtime="20201115 22:01:02.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.543" endtime="20201115 22:01:02.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.520" endtime="20201115 22:01:02.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.518" endtime="20201115 22:01:02.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.553" endtime="20201115 22:01:02.839"></status>
</kw>
<msg timestamp="20201115 22:01:02.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024678917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024685042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.551" endtime="20201115 22:01:02.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024678917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024685042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.843" endtime="20201115 22:01:02.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.852" endtime="20201115 22:01:02.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.548" endtime="20201115 22:01:02.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.546" endtime="20201115 22:01:02.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.858" level="INFO">${RESULT} = [{'time': 0.024685042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.024768319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:02.855" endtime="20201115 22:01:02.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.872" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:02.859" endtime="20201115 22:01:02.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.876" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:02.875" endtime="20201115 22:01:02.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.879" level="INFO">VALUE: [6.124999999999187e-06, 5.930000000001212e-06, 5.708000000000102e-06, 5.749999999998812e-06, 5.915999999998173e-06, 5.7639999999983815e-06, 5.736000000002711e-06, 5.902000000002072e-06, 5.736000000002711e-06, 5.750000000002281e-06, 5.903000000001546e-06, 5.750000000002281e-06, 5.750000000002281e-06, 5.916000000001642e-06, 5.667000000000866e-06, 5.749999999998812e-06, 5.8889999999985065e-06, 5.749999999998812e-06, 5.749999999998812e-06, 5.8889999999985065e-06, 5.735999999999242e-06, 5.749999999998812e-06, 5.846999999999797e-06, 5.736000000002711e-06, 5.749999999998812e-06, 5.903000000001546e-06, 5.7779999999979514e-06, 5.749999999998812e-06, 5.903000000001546e-06, 5.735999999999242e-06, 5.750000000002281e-06, 5.860999999999367e-06, 5.749999999998812e-06, 5.749999999998812e-06, 5.903000000001546e-06, 5.736000000002711e-06, 5.7639999999983815e-06, 5.875000000002406e-06, 5.776999999998478e-06, 5.736000000002711e-06, 5.9029999999980765e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.903000000001546e-06, 5.820000000000131e-06, 5.749999999998812e-06, 5.8889999999985065e-06, 5.750000000002281e-06, 5.750000000002281e-06, 5.847000000003266e-06]</msg>
<status status="PASS" starttime="20201115 22:01:02.877" endtime="20201115 22:01:02.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.873" endtime="20201115 22:01:02.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.882" endtime="20201115 22:01:02.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.885" endtime="20201115 22:01:02.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.884" endtime="20201115 22:01:02.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.880" endtime="20201115 22:01:02.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.516" endtime="20201115 22:01:02.906"></status>
</kw>
<msg timestamp="20201115 22:01:02.906" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.915" endtime="20201115 22:01:02.930"></status>
</kw>
<msg timestamp="20201115 22:01:02.930" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.913" endtime="20201115 22:01:02.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.933" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.931" endtime="20201115 22:01:02.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.934" endtime="20201115 22:01:02.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.911" endtime="20201115 22:01:02.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.909" endtime="20201115 22:01:02.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.943" endtime="20201115 22:01:03.230"></status>
</kw>
<msg timestamp="20201115 22:01:03.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022277194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.942" endtime="20201115 22:01:03.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022277194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.235" endtime="20201115 22:01:03.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.243" endtime="20201115 22:01:03.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.939" endtime="20201115 22:01:03.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.937" endtime="20201115 22:01:03.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:03.250" level="INFO">${RESULT} = [{'time': 0.022277194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.151999999998853e-06, 'source_diff': 6.151999999998853e-06}, {'time': 0.022360181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:03.246" endtime="20201115 22:01:03.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:03.263" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:03.251" endtime="20201115 22:01:03.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.267" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:03.266" endtime="20201115 22:01:03.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.270" level="INFO">VALUE: [6.151999999998853e-06, 5.820000000000131e-06, 5.749999999998812e-06, 5.735999999999242e-06, 5.8889999999985065e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.875000000002406e-06, 5.750000000002281e-06, 5.749999999998812e-06, 5.889000000001976e-06, 5.764000000001851e-06, 5.708000000000102e-06, 5.889000000001976e-06, 5.750000000002281e-06, 5.721999999999672e-06, 5.944000000000782e-06, 5.721999999999672e-06, 5.7229999999991454e-06, 5.971999999999922e-06, 5.7639999999983815e-06, 5.735999999999242e-06, 5.887999999999033e-06, 5.806000000000561e-06, 5.736000000002711e-06, 5.889000000001976e-06, 5.764000000001851e-06, 5.749999999998812e-06, 5.902000000002072e-06, 5.737000000002185e-06, 5.750000000002281e-06, 5.9029999999980765e-06, 5.735999999999242e-06, 5.749999999998812e-06, 5.903000000001546e-06, 5.708000000000102e-06, 5.749999999998812e-06, 5.903000000001546e-06, 5.735999999999242e-06, 5.764000000001851e-06, 5.888000000002502e-06, 5.721999999999672e-06, 5.721999999999672e-06, 5.8479999999992704e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.9029999999980765e-06, 5.763000000002377e-06, 5.750000000002281e-06, 5.8889999999985065e-06]</msg>
<status status="PASS" starttime="20201115 22:01:03.268" endtime="20201115 22:01:03.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.264" endtime="20201115 22:01:03.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.273" endtime="20201115 22:01:03.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:03.276" endtime="20201115 22:01:03.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.275" endtime="20201115 22:01:03.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.271" endtime="20201115 22:01:03.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.906" endtime="20201115 22:01:03.297"></status>
</kw>
<msg timestamp="20201115 22:01:03.297" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.307" endtime="20201115 22:01:03.322"></status>
</kw>
<msg timestamp="20201115 22:01:03.322" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.304" endtime="20201115 22:01:03.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.325" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.323" endtime="20201115 22:01:03.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.326" endtime="20201115 22:01:03.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.302" endtime="20201115 22:01:03.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.300" endtime="20201115 22:01:03.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.334" endtime="20201115 22:01:03.621"></status>
</kw>
<msg timestamp="20201115 22:01:03.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023096181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023102319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.333" endtime="20201115 22:01:03.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023096181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023102319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.625" endtime="20201115 22:01:03.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.633" endtime="20201115 22:01:03.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.330" endtime="20201115 22:01:03.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.329" endtime="20201115 22:01:03.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:03.640" level="INFO">${RESULT} = [{'time': 0.023102319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.137999999999283e-06, 'source_diff': 6.137999999999283e-06}, {'time': 0.023185111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:03.636" endtime="20201115 22:01:03.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:03.653" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:03.641" endtime="20201115 22:01:03.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.658" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:03.657" endtime="20201115 22:01:03.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.660" level="INFO">VALUE: [6.137999999999283e-06, 5.833000000000227e-06, 5.735999999999242e-06, 5.7639999999983815e-06, 5.902000000002072e-06, 5.749999999998812e-06, 5.750000000002281e-06, 5.874999999998937e-06, 5.764000000001851e-06, 5.764000000001851e-06, 5.874999999998937e-06, 5.695000000000006e-06, 5.806000000000561e-06, 5.903000000001546e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.916000000001642e-06, 5.749999999998812e-06, 5.750000000002281e-06, 5.903000000001546e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.889000000001976e-06, 5.764000000001851e-06, 5.708000000000102e-06, 5.874999999998937e-06, 5.764000000001851e-06, 5.735999999999242e-06, 5.9029999999980765e-06, 5.721999999999672e-06, 5.764000000001851e-06, 5.875000000002406e-06, 5.749999999998812e-06, 5.749999999998812e-06, 5.846999999999797e-06, 5.778000000001421e-06, 5.721999999999672e-06, 5.903000000001546e-06, 5.749999999998812e-06, 5.721999999999672e-06, 5.874999999998937e-06, 5.6939999999970625e-06, 5.721999999999672e-06, 5.902000000002072e-06, 5.7779999999979514e-06, 5.749999999998812e-06, 5.903000000001546e-06, 5.805999999997091e-06, 5.749999999998812e-06, 5.889000000001976e-06]</msg>
<status status="PASS" starttime="20201115 22:01:03.659" endtime="20201115 22:01:03.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.654" endtime="20201115 22:01:03.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.663" endtime="20201115 22:01:03.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:03.667" endtime="20201115 22:01:03.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.665" endtime="20201115 22:01:03.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.662" endtime="20201115 22:01:03.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.298" endtime="20201115 22:01:03.688"></status>
</kw>
<msg timestamp="20201115 22:01:03.688" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.697" endtime="20201115 22:01:03.712"></status>
</kw>
<msg timestamp="20201115 22:01:03.712" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.695" endtime="20201115 22:01:03.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.715" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.713" endtime="20201115 22:01:03.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.716" endtime="20201115 22:01:03.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.693" endtime="20201115 22:01:03.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.691" endtime="20201115 22:01:03.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.725" endtime="20201115 22:01:04.012"></status>
</kw>
<msg timestamp="20201115 22:01:04.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022901292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.723" endtime="20201115 22:01:04.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022901292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.017" endtime="20201115 22:01:04.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.025" endtime="20201115 22:01:04.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.721" endtime="20201115 22:01:04.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.719" endtime="20201115 22:01:04.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.032" level="INFO">${RESULT} = [{'time': 0.022901292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.022984347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:04.028" endtime="20201115 22:01:04.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.045" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:04.033" endtime="20201115 22:01:04.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.049" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:04.048" endtime="20201115 22:01:04.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.052" level="INFO">VALUE: [6.153000000001796e-06, 5.8889999999985065e-06, 5.749999999998812e-06, 5.749999999998812e-06, 5.9029999999980765e-06, 5.735999999999242e-06, 5.749999999998812e-06, 5.8889999999985065e-06, 5.681000000000436e-06, 5.708000000000102e-06, 5.874999999998937e-06, 5.778000000001421e-06, 5.750000000002281e-06, 5.9029999999980765e-06, 5.7639999999983815e-06, 5.749999999998812e-06, 5.916000000001642e-06, 5.723000000002615e-06, 5.735999999999242e-06, 5.889000000001976e-06, 5.735999999999242e-06, 5.695000000000006e-06, 5.874999999998937e-06, 5.735999999999242e-06, 5.749999999998812e-06, 5.902000000002072e-06, 5.750000000002281e-06, 5.721999999999672e-06, 5.8889999999985065e-06, 5.764000000001851e-06, 5.735999999999242e-06, 5.8889999999985065e-06, 5.736000000002711e-06, 5.735999999999242e-06, 5.8889999999985065e-06, 5.750000000002281e-06, 5.735999999999242e-06, 5.833000000000227e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.9589999999998255e-06, 5.735999999999242e-06, 5.749999999998812e-06, 5.889000000001976e-06, 5.721999999999672e-06, 5.736000000002711e-06, 5.889000000001976e-06, 5.721999999999672e-06, 5.749999999998812e-06, 5.888000000002502e-06]</msg>
<status status="PASS" starttime="20201115 22:01:04.050" endtime="20201115 22:01:04.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.046" endtime="20201115 22:01:04.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.055" endtime="20201115 22:01:04.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.059" endtime="20201115 22:01:04.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.057" endtime="20201115 22:01:04.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.054" endtime="20201115 22:01:04.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.689" endtime="20201115 22:01:04.080"></status>
</kw>
<msg timestamp="20201115 22:01:04.080" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.089" endtime="20201115 22:01:04.102"></status>
</kw>
<msg timestamp="20201115 22:01:04.103" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.087" endtime="20201115 22:01:04.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.105" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.104" endtime="20201115 22:01:04.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.106" endtime="20201115 22:01:04.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.084" endtime="20201115 22:01:04.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.082" endtime="20201115 22:01:04.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.115" endtime="20201115 22:01:04.402"></status>
</kw>
<msg timestamp="20201115 22:01:04.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022339069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.114" endtime="20201115 22:01:04.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022339069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.406" endtime="20201115 22:01:04.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.415" endtime="20201115 22:01:04.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.111" endtime="20201115 22:01:04.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.110" endtime="20201115 22:01:04.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.421" level="INFO">${RESULT} = [{'time': 0.022339069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.022422028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:04.418" endtime="20201115 22:01:04.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.435" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:04.422" endtime="20201115 22:01:04.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.439" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:04.438" endtime="20201115 22:01:04.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.442" level="INFO">VALUE: [6.124999999999187e-06, 5.874999999998937e-06, 5.735999999999242e-06, 5.749999999998812e-06, 5.874999999998937e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.875000000002406e-06, 5.791999999997521e-06, 5.749999999998812e-06, 5.901999999998603e-06, 5.735999999999242e-06, 5.764000000001851e-06, 5.8889999999985065e-06, 5.737000000002185e-06, 5.749999999998812e-06, 5.889000000001976e-06, 5.8339999999997005e-06, 5.7639999999983815e-06, 5.8889999999985065e-06, 5.736000000002711e-06, 5.764000000001851e-06, 5.8889999999985065e-06, 5.735999999999242e-06, 5.735999999999242e-06, 5.8889999999985065e-06, 5.736000000002711e-06, 5.7229999999991454e-06, 5.8889999999985065e-06, 5.7779999999979514e-06, 5.695000000000006e-06, 5.8889999999985065e-06, 5.819000000000657e-06, 5.708000000000102e-06, 5.874999999998937e-06, 5.749999999998812e-06, 5.735999999999242e-06, 5.903000000001546e-06, 5.721999999999672e-06, 5.736000000002711e-06, 5.8889999999985065e-06, 5.778000000001421e-06, 5.722000000003141e-06, 5.9029999999980765e-06, 5.7639999999983815e-06, 5.721999999999672e-06, 5.915999999998173e-06, 5.735999999999242e-06, 5.737000000002185e-06, 5.902000000002072e-06]</msg>
<status status="PASS" starttime="20201115 22:01:04.440" endtime="20201115 22:01:04.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.435" endtime="20201115 22:01:04.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.445" endtime="20201115 22:01:04.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.449" endtime="20201115 22:01:04.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.447" endtime="20201115 22:01:04.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.443" endtime="20201115 22:01:04.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.080" endtime="20201115 22:01:04.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.514" endtime="20201115 22:01:04.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.513" endtime="20201115 22:01:04.470"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.472" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.481" endtime="20201115 22:01:04.495"></status>
</kw>
<msg timestamp="20201115 22:01:04.496" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.479" endtime="20201115 22:01:04.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.499" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.497" endtime="20201115 22:01:04.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.500" endtime="20201115 22:01:04.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.476" endtime="20201115 22:01:04.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.474" endtime="20201115 22:01:04.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.509" endtime="20201115 22:01:04.795"></status>
</kw>
<msg timestamp="20201115 22:01:04.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024740417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02474675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:04.507" endtime="20201115 22:01:04.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024740417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02474675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:04.800" endtime="20201115 22:01:04.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.808" endtime="20201115 22:01:04.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.504" endtime="20201115 22:01:04.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.503" endtime="20201115 22:01:04.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.815" level="INFO">${RESULT} = [{'time': 0.02474675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.333000000000727e-06, 'source_diff': 6.333000000000727e-06}, {'time': 0.024834972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:04.811" endtime="20201115 22:01:04.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.828" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:04.815" endtime="20201115 22:01:04.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.832" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:04.831" endtime="20201115 22:01:04.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.835" level="INFO">VALUE: [6.333000000000727e-06, 6.069000000000907e-06, 5.929999999997743e-06, 5.9439999999973125e-06, 6.069000000000907e-06, 5.917000000001116e-06, 5.9439999999973125e-06, 6.069000000000907e-06, 5.917000000001116e-06, 5.916000000001642e-06, 6.028000000001671e-06, 5.916000000001642e-06, 5.9439999999973125e-06, 6.125000000002656e-06, 5.915999999998173e-06, 5.944000000000782e-06, 6.0839999999999506e-06, 5.931000000000686e-06, 5.929999999997743e-06, 6.069000000000907e-06, 5.958000000000352e-06, 5.944000000000782e-06, 6.069000000000907e-06, 5.931000000000686e-06, 5.944000000000782e-06, 6.097000000000047e-06, 5.917000000001116e-06, 5.958000000000352e-06, 6.056000000000811e-06, 5.944000000000782e-06, 5.9589999999998255e-06, 6.042000000001241e-06, 5.930000000001212e-06, 6.028000000001671e-06, 6.041000000001767e-06, 5.929999999997743e-06, 5.971999999999922e-06, 6.056000000000811e-06, 5.917000000001116e-06, 5.929999999997743e-06, 6.08400000000342e-06, 5.945000000000256e-06, 5.958000000000352e-06, 6.070000000000381e-06, 5.929999999997743e-06, 5.944000000000782e-06, 6.0839999999999506e-06, 5.945000000000256e-06, 5.958000000000352e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201115 22:01:04.833" endtime="20201115 22:01:04.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.829" endtime="20201115 22:01:04.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.838" endtime="20201115 22:01:04.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.842" endtime="20201115 22:01:04.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.840" endtime="20201115 22:01:04.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.837" endtime="20201115 22:01:04.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.472" endtime="20201115 22:01:04.862"></status>
</kw>
<msg timestamp="20201115 22:01:04.863" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.871" endtime="20201115 22:01:04.887"></status>
</kw>
<msg timestamp="20201115 22:01:04.887" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.870" endtime="20201115 22:01:04.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.890" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.888" endtime="20201115 22:01:04.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.891" endtime="20201115 22:01:04.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.867" endtime="20201115 22:01:04.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.865" endtime="20201115 22:01:04.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.900" endtime="20201115 22:01:05.187"></status>
</kw>
<msg timestamp="20201115 22:01:05.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022530639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.898" endtime="20201115 22:01:05.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022530639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.191" endtime="20201115 22:01:05.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.199" endtime="20201115 22:01:05.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.896" endtime="20201115 22:01:05.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.894" endtime="20201115 22:01:05.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.206" level="INFO">${RESULT} = [{'time': 0.022530639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.236000000003211e-06, 'source_diff': 6.236000000003211e-06}, {'time': 0.022618986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:05.202" endtime="20201115 22:01:05.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.219" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:05.207" endtime="20201115 22:01:05.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.224" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:05.223" endtime="20201115 22:01:05.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.227" level="INFO">VALUE: [6.236000000003211e-06, 6.083000000000477e-06, 5.971999999999922e-06, 5.903000000001546e-06, 6.083000000000477e-06, 5.973000000002865e-06, 5.944000000000782e-06, 6.069000000000907e-06, 5.944000000000782e-06, 5.958000000000352e-06, 6.083000000000477e-06, 5.986999999998965e-06, 5.930000000001212e-06, 6.056000000000811e-06, 5.931000000000686e-06, 5.971999999999922e-06, 6.083000000000477e-06, 5.917000000001116e-06, 5.930000000001212e-06, 6.083000000000477e-06, 5.8889999999985065e-06, 5.929999999997743e-06, 6.070000000000381e-06, 5.915999999998173e-06, 5.944000000000782e-06, 6.070000000000381e-06, 5.944000000000782e-06, 5.929999999997743e-06, 5.999999999999062e-06, 5.958000000000352e-06, 5.930000000001212e-06, 6.069000000000907e-06, 5.917000000001116e-06, 6.028000000001671e-06, 6.056000000000811e-06, 5.944000000000782e-06, 5.971999999999922e-06, 6.056000000000811e-06, 5.931000000000686e-06, 5.9439999999973125e-06, 6.1389999999987566e-06, 5.985999999999492e-06, 5.958000000000352e-06, 6.070000000000381e-06, 5.944000000000782e-06, 5.999999999999062e-06, 6.097000000000047e-06, 5.958000000000352e-06, 5.930000000001212e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201115 22:01:05.225" endtime="20201115 22:01:05.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.220" endtime="20201115 22:01:05.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.230" endtime="20201115 22:01:05.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.233" endtime="20201115 22:01:05.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.232" endtime="20201115 22:01:05.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.228" endtime="20201115 22:01:05.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.863" endtime="20201115 22:01:05.254"></status>
</kw>
<msg timestamp="20201115 22:01:05.254" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.263" endtime="20201115 22:01:05.278"></status>
</kw>
<msg timestamp="20201115 22:01:05.279" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.261" endtime="20201115 22:01:05.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.281" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.280" endtime="20201115 22:01:05.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.282" endtime="20201115 22:01:05.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.259" endtime="20201115 22:01:05.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.257" endtime="20201115 22:01:05.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.291" endtime="20201115 22:01:05.579"></status>
</kw>
<msg timestamp="20201115 22:01:05.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.289" endtime="20201115 22:01:05.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.583" endtime="20201115 22:01:05.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.591" endtime="20201115 22:01:05.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.287" endtime="20201115 22:01:05.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.285" endtime="20201115 22:01:05.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.598" level="INFO">${RESULT} = [{'time': 0.022501667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.022590111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:05.594" endtime="20201115 22:01:05.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.612" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:05.600" endtime="20201115 22:01:05.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.617" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:05.616" endtime="20201115 22:01:05.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.619" level="INFO">VALUE: [6.320000000000631e-06, 6.069000000000907e-06, 5.9439999999973125e-06, 5.945000000000256e-06, 6.070000000000381e-06, 5.931000000000686e-06, 5.958000000000352e-06, 6.110999999999617e-06, 5.902000000002072e-06, 5.958000000000352e-06, 6.055000000001337e-06, 5.930000000001212e-06, 5.931000000000686e-06, 6.0829999999970075e-06, 5.930000000001212e-06, 5.874999999998937e-06, 6.083000000000477e-06, 5.930999999997216e-06, 5.9589999999998255e-06, 6.069000000000907e-06, 5.929999999997743e-06, 5.875000000002406e-06, 6.0839999999999506e-06, 5.931000000000686e-06, 5.9439999999973125e-06, 6.083000000000477e-06, 5.929999999997743e-06, 5.930000000001212e-06, 6.069000000000907e-06, 5.958000000000352e-06, 5.945000000000256e-06, 6.056000000000811e-06, 5.9439999999973125e-06, 5.930000000001212e-06, 6.014000000002101e-06, 5.875000000002406e-06, 5.958000000000352e-06, 6.0689999999974376e-06, 5.917000000001116e-06, 5.944000000000782e-06, 6.070000000000381e-06, 5.929999999997743e-06, 5.958000000000352e-06, 6.110999999999617e-06, 5.917000000001116e-06, 5.945000000000256e-06, 6.069000000000907e-06, 5.915999999998173e-06, 5.958000000000352e-06, 6.0689999999974376e-06]</msg>
<status status="PASS" starttime="20201115 22:01:05.618" endtime="20201115 22:01:05.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.613" endtime="20201115 22:01:05.620"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.622" endtime="20201115 22:01:05.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.626" endtime="20201115 22:01:05.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.624" endtime="20201115 22:01:05.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.621" endtime="20201115 22:01:05.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.254" endtime="20201115 22:01:05.646"></status>
</kw>
<msg timestamp="20201115 22:01:05.647" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.655" endtime="20201115 22:01:05.670"></status>
</kw>
<msg timestamp="20201115 22:01:05.671" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.654" endtime="20201115 22:01:05.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.673" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.672" endtime="20201115 22:01:05.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.674" endtime="20201115 22:01:05.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.651" endtime="20201115 22:01:05.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.649" endtime="20201115 22:01:05.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.683" endtime="20201115 22:01:05.970"></status>
</kw>
<msg timestamp="20201115 22:01:05.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022289403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.682" endtime="20201115 22:01:05.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022289403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.974" endtime="20201115 22:01:05.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.983" endtime="20201115 22:01:05.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.679" endtime="20201115 22:01:05.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.677" endtime="20201115 22:01:05.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.990" level="INFO">${RESULT} = [{'time': 0.022295708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.305000000001587e-06, 'source_diff': 6.305000000001587e-06}, {'time': 0.022384194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:05.986" endtime="20201115 22:01:05.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.003" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:05.991" endtime="20201115 22:01:06.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.008" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:06.007" endtime="20201115 22:01:06.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.010" level="INFO">VALUE: [6.305000000001587e-06, 6.083000000000477e-06, 5.916000000001642e-06, 5.915999999998173e-06, 6.056000000000811e-06, 5.9589999999998255e-06, 5.958000000000352e-06, 6.070000000000381e-06, 5.9579999999968825e-06, 5.958000000000352e-06, 6.083000000000477e-06, 5.929999999997743e-06, 5.9439999999973125e-06, 6.083000000000477e-06, 5.944000000000782e-06, 5.945000000000256e-06, 6.069000000000907e-06, 5.944000000000782e-06, 5.9579999999968825e-06, 6.055000000001337e-06, 5.945000000000256e-06, 5.971999999999922e-06, 6.056000000000811e-06, 5.958000000000352e-06, 5.930000000001212e-06, 6.0839999999999506e-06, 5.917000000001116e-06, 6.000000000002531e-06, 6.097000000000047e-06, 5.916999999997646e-06, 5.944000000000782e-06, 6.0839999999999506e-06, 5.9589999999998255e-06, 5.945000000000256e-06, 6.097000000000047e-06, 5.958000000000352e-06, 5.8889999999985065e-06, 6.124999999999187e-06, 5.917000000001116e-06, 5.945000000000256e-06, 6.083000000000477e-06, 5.930000000001212e-06, 5.9029999999980765e-06, 6.110999999999617e-06, 5.930000000001212e-06, 5.9729999999993955e-06, 6.124999999999187e-06, 5.889000000001976e-06, 5.999999999999062e-06, 6.0979999999995205e-06]</msg>
<status status="PASS" starttime="20201115 22:01:06.009" endtime="20201115 22:01:06.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.004" endtime="20201115 22:01:06.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.013" endtime="20201115 22:01:06.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.017" endtime="20201115 22:01:06.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.015" endtime="20201115 22:01:06.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.012" endtime="20201115 22:01:06.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.647" endtime="20201115 22:01:06.037"></status>
</kw>
<msg timestamp="20201115 22:01:06.038" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.046" endtime="20201115 22:01:06.061"></status>
</kw>
<msg timestamp="20201115 22:01:06.061" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.045" endtime="20201115 22:01:06.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.064" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.062" endtime="20201115 22:01:06.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.065" endtime="20201115 22:01:06.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.042" endtime="20201115 22:01:06.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.040" endtime="20201115 22:01:06.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.074" endtime="20201115 22:01:06.360"></status>
</kw>
<msg timestamp="20201115 22:01:06.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022353139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.072" endtime="20201115 22:01:06.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022353139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.365" endtime="20201115 22:01:06.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.373" endtime="20201115 22:01:06.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.070" endtime="20201115 22:01:06.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.068" endtime="20201115 22:01:06.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.380" level="INFO">${RESULT} = [{'time': 0.022359444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.022447764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:06.377" endtime="20201115 22:01:06.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.393" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:06.381" endtime="20201115 22:01:06.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.398" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:06.397" endtime="20201115 22:01:06.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.400" level="INFO">VALUE: [6.304999999998118e-06, 6.0829999999970075e-06, 5.958000000000352e-06, 5.944000000000782e-06, 6.083000000000477e-06, 5.929999999997743e-06, 5.9029999999980765e-06, 6.054999999997868e-06, 5.9729999999993955e-06, 5.8889999999985065e-06, 6.083000000000477e-06, 5.931000000000686e-06, 5.944000000000782e-06, 6.0839999999999506e-06, 5.944000000000782e-06, 5.945000000000256e-06, 6.0839999999999506e-06, 5.929999999997743e-06, 5.971999999999922e-06, 6.083000000000477e-06, 5.945000000000256e-06, 5.971999999999922e-06, 6.097000000000047e-06, 5.917000000001116e-06, 5.986000000002961e-06, 6.083000000000477e-06, 5.916999999997646e-06, 5.944000000000782e-06, 6.110999999999617e-06, 5.931000000000686e-06, 5.945000000000256e-06, 6.070000000000381e-06, 5.929999999997743e-06, 5.930000000001212e-06, 6.069000000000907e-06, 5.931000000000686e-06, 5.958000000000352e-06, 6.083000000000477e-06, 5.917000000001116e-06, 5.944000000000782e-06, 6.055000000001337e-06, 5.901999999998603e-06, 5.9439999999973125e-06, 6.070000000000381e-06, 5.929999999997743e-06, 5.944000000000782e-06, 6.083000000000477e-06, 5.930000000001212e-06, 5.917000000001116e-06, 6.0839999999999506e-06]</msg>
<status status="PASS" starttime="20201115 22:01:06.399" endtime="20201115 22:01:06.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.394" endtime="20201115 22:01:06.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.403" endtime="20201115 22:01:06.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.407" endtime="20201115 22:01:06.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.405" endtime="20201115 22:01:06.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.402" endtime="20201115 22:01:06.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.038" endtime="20201115 22:01:06.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.471" endtime="20201115 22:01:06.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.470" endtime="20201115 22:01:06.428"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.430" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.439" endtime="20201115 22:01:06.454"></status>
</kw>
<msg timestamp="20201115 22:01:06.454" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.437" endtime="20201115 22:01:06.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.456" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.455" endtime="20201115 22:01:06.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.458" endtime="20201115 22:01:06.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.435" endtime="20201115 22:01:06.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.433" endtime="20201115 22:01:06.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.467" endtime="20201115 22:01:06.753"></status>
</kw>
<msg timestamp="20201115 22:01:06.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024805486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024812014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.466" endtime="20201115 22:01:06.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024805486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024812014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.758" endtime="20201115 22:01:06.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.766" endtime="20201115 22:01:06.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.463" endtime="20201115 22:01:06.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.461" endtime="20201115 22:01:06.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.772" level="INFO">${RESULT} = [{'time': 0.024812014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.024905806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:06.769" endtime="20201115 22:01:06.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.786" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:06.773" endtime="20201115 22:01:06.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.790" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:06.789" endtime="20201115 22:01:06.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.793" level="INFO">VALUE: [6.5279999999987015e-06, 6.2779999999984515e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.291999999998021e-06, 6.070000000000381e-06, 6.139000000002226e-06, 6.360999999999867e-06, 6.097000000000047e-06, 6.1389999999987566e-06, 6.2779999999984515e-06, 6.110999999999617e-06, 6.166999999997896e-06, 6.306000000001061e-06, 6.125000000002656e-06, 6.1529999999983265e-06, 6.333000000000727e-06, 6.097000000000047e-06, 6.124999999999187e-06, 6.292000000001491e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.2779999999984515e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.278000000001921e-06, 6.1389999999987566e-06, 6.083000000000477e-06, 6.2639999999988816e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.2779999999984515e-06, 6.124999999999187e-06, 6.1529999999983265e-06, 6.292000000001491e-06, 6.137999999999283e-06, 6.124999999999187e-06, 6.2779999999984515e-06, 6.110999999999617e-06, 6.139000000002226e-06, 6.292000000001491e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.278000000001921e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.292000000001491e-06, 6.1389999999987566e-06, 6.1389999999987566e-06, 6.2779999999984515e-06]</msg>
<status status="PASS" starttime="20201115 22:01:06.791" endtime="20201115 22:01:06.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.787" endtime="20201115 22:01:06.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.796" endtime="20201115 22:01:06.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.799" endtime="20201115 22:01:06.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.798" endtime="20201115 22:01:06.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.794" endtime="20201115 22:01:06.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.431" endtime="20201115 22:01:06.820"></status>
</kw>
<msg timestamp="20201115 22:01:06.820" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.829" endtime="20201115 22:01:06.844"></status>
</kw>
<msg timestamp="20201115 22:01:06.845" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.828" endtime="20201115 22:01:06.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.848" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.846" endtime="20201115 22:01:06.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.849" endtime="20201115 22:01:06.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.825" endtime="20201115 22:01:06.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.823" endtime="20201115 22:01:06.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.858" endtime="20201115 22:01:07.145"></status>
</kw>
<msg timestamp="20201115 22:01:07.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022476486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022483, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:06.856" endtime="20201115 22:01:07.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022476486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022483, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:07.150" endtime="20201115 22:01:07.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.158" endtime="20201115 22:01:07.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.854" endtime="20201115 22:01:07.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.852" endtime="20201115 22:01:07.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.164" level="INFO">${RESULT} = [{'time': 0.022483, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.022576889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:01:07.161" endtime="20201115 22:01:07.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.178" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:07.165" endtime="20201115 22:01:07.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.182" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:07.181" endtime="20201115 22:01:07.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.184" level="INFO">VALUE: [6.513999999999132e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.1389999999987566e-06, 6.3329999999972575e-06, 6.139000000002226e-06, 6.151999999998853e-06, 6.292000000001491e-06, 6.0839999999999506e-06, 6.194000000001032e-06, 6.2779999999984515e-06, 6.124999999999187e-06, 6.153000000001796e-06, 6.306000000001061e-06, 6.1529999999983265e-06, 6.124999999999187e-06, 6.2779999999984515e-06, 6.139000000002226e-06, 6.1389999999987566e-06, 6.235999999999742e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.347000000000297e-06, 6.124999999999187e-06, 6.165999999998423e-06, 6.278000000001921e-06, 6.125000000002656e-06, 6.1389999999987566e-06, 6.291000000002017e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.292000000001491e-06, 6.125000000002656e-06, 6.195000000000506e-06, 6.276999999998978e-06, 6.167000000001366e-06, 6.110999999999617e-06, 6.291000000002017e-06, 6.180000000001462e-06, 6.151999999998853e-06, 6.319000000001157e-06, 6.1389999999987566e-06, 6.125000000002656e-06, 6.291999999998021e-06, 6.110999999999617e-06, 6.1389999999987566e-06, 6.208000000000602e-06, 6.139000000002226e-06, 6.1389999999987566e-06, 6.291999999998021e-06]</msg>
<status status="PASS" starttime="20201115 22:01:07.183" endtime="20201115 22:01:07.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.178" endtime="20201115 22:01:07.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.188" endtime="20201115 22:01:07.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.191" endtime="20201115 22:01:07.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.189" endtime="20201115 22:01:07.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.186" endtime="20201115 22:01:07.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.821" endtime="20201115 22:01:07.212"></status>
</kw>
<msg timestamp="20201115 22:01:07.212" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.225" endtime="20201115 22:01:07.241"></status>
</kw>
<msg timestamp="20201115 22:01:07.242" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.219" endtime="20201115 22:01:07.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.244" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.243" endtime="20201115 22:01:07.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.245" endtime="20201115 22:01:07.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.217" endtime="20201115 22:01:07.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.214" endtime="20201115 22:01:07.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.254" endtime="20201115 22:01:07.541"></status>
</kw>
<msg timestamp="20201115 22:01:07.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027113444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027120028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.253" endtime="20201115 22:01:07.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027113444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027120028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.545" endtime="20201115 22:01:07.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.553" endtime="20201115 22:01:07.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.250" endtime="20201115 22:01:07.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.248" endtime="20201115 22:01:07.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.560" level="INFO">${RESULT} = [{'time': 0.027120028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.584000000000451e-06, 'source_diff': 6.584000000000451e-06}, {'time': 0.027213889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:07.556" endtime="20201115 22:01:07.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.573" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:07.561" endtime="20201115 22:01:07.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.578" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:07.577" endtime="20201115 22:01:07.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.580" level="INFO">VALUE: [6.584000000000451e-06, 6.264000000002351e-06, 6.124999999999187e-06, 6.070000000000381e-06, 6.292000000001491e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.305000000001587e-06, 6.056000000000811e-06, 6.1389999999987566e-06, 6.278000000001921e-06, 6.1529999999983265e-06, 6.110999999999617e-06, 6.291000000002017e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.291999999998021e-06, 6.139000000002226e-06, 6.124999999999187e-06, 6.306000000001061e-06, 6.137999999999283e-06, 6.124999999999187e-06, 6.278000000001921e-06, 6.1389999999987566e-06, 6.166999999997896e-06, 6.2779999999984515e-06, 6.1389999999987566e-06, 6.111000000003086e-06, 6.2779999999984515e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.290999999998548e-06, 6.153000000001796e-06, 6.110999999999617e-06, 6.2779999999984515e-06, 6.0839999999999506e-06, 6.194000000001032e-06, 6.277000000002447e-06, 6.137999999999283e-06, 6.151999999998853e-06, 6.292000000001491e-06, 6.1529999999983265e-06, 6.139000000002226e-06, 6.278000000001921e-06, 6.139000000002226e-06, 6.124999999995717e-06, 6.305999999997591e-06, 6.138000000002752e-06, 6.139000000002226e-06, 6.305999999997591e-06]</msg>
<status status="PASS" starttime="20201115 22:01:07.579" endtime="20201115 22:01:07.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.574" endtime="20201115 22:01:07.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.583" endtime="20201115 22:01:07.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.586" endtime="20201115 22:01:07.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.585" endtime="20201115 22:01:07.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.582" endtime="20201115 22:01:07.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.212" endtime="20201115 22:01:07.608"></status>
</kw>
<msg timestamp="20201115 22:01:07.608" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.617" endtime="20201115 22:01:07.631"></status>
</kw>
<msg timestamp="20201115 22:01:07.632" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.615" endtime="20201115 22:01:07.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.634" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.633" endtime="20201115 22:01:07.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.636" endtime="20201115 22:01:07.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.613" endtime="20201115 22:01:07.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.611" endtime="20201115 22:01:07.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.646" endtime="20201115 22:01:07.932"></status>
</kw>
<msg timestamp="20201115 22:01:07.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022834972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.644" endtime="20201115 22:01:07.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022834972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.936" endtime="20201115 22:01:07.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.944" endtime="20201115 22:01:07.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.641" endtime="20201115 22:01:07.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.639" endtime="20201115 22:01:07.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.951" level="INFO">${RESULT} = [{'time': 0.022834972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.022929347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:07.948" endtime="20201115 22:01:07.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.964" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:07.952" endtime="20201115 22:01:07.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.969" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:07.968" endtime="20201115 22:01:07.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.971" level="INFO">VALUE: [6.5279999999987015e-06, 6.318999999997688e-06, 6.139000000002226e-06, 6.1389999999987566e-06, 6.292000000001491e-06, 6.110999999999617e-06, 6.1389999999987566e-06, 6.278000000001921e-06, 6.110999999999617e-06, 6.139000000002226e-06, 6.2779999999984515e-06, 6.1529999999983265e-06, 6.1529999999983265e-06, 6.333000000000727e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.236000000003211e-06, 6.1389999999987566e-06, 6.110999999999617e-06, 6.276999999998978e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.304999999998118e-06, 6.124999999999187e-06, 6.11199999999909e-06, 6.278000000001921e-06, 6.110999999999617e-06, 6.151999999998853e-06, 6.2639999999988816e-06, 6.139000000002226e-06, 6.110999999999617e-06, 6.290999999998548e-06, 6.139000000002226e-06, 6.125000000002656e-06, 6.291999999998021e-06, 6.1389999999987566e-06, 6.097000000000047e-06, 6.278000000001921e-06, 6.125000000002656e-06, 6.097000000000047e-06, 6.319000000001157e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.249999999999312e-06, 6.1529999999983265e-06, 6.124999999999187e-06, 6.2639999999988816e-06, 6.110999999999617e-06, 6.110999999999617e-06, 6.222000000000172e-06]</msg>
<status status="PASS" starttime="20201115 22:01:07.970" endtime="20201115 22:01:07.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.965" endtime="20201115 22:01:07.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.975" endtime="20201115 22:01:07.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.978" endtime="20201115 22:01:07.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.977" endtime="20201115 22:01:07.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.973" endtime="20201115 22:01:07.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.608" endtime="20201115 22:01:07.999"></status>
</kw>
<msg timestamp="20201115 22:01:07.999" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.008" endtime="20201115 22:01:08.022"></status>
</kw>
<msg timestamp="20201115 22:01:08.023" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.006" endtime="20201115 22:01:08.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.025" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.024" endtime="20201115 22:01:08.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.026" endtime="20201115 22:01:08.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.004" endtime="20201115 22:01:08.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.002" endtime="20201115 22:01:08.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.035" endtime="20201115 22:01:08.321"></status>
</kw>
<msg timestamp="20201115 22:01:08.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022380014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:08.034" endtime="20201115 22:01:08.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022380014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:08.326" endtime="20201115 22:01:08.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.334" endtime="20201115 22:01:08.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.031" endtime="20201115 22:01:08.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.029" endtime="20201115 22:01:08.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:08.341" level="INFO">${RESULT} = [{'time': 0.022380014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.022474139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:08.337" endtime="20201115 22:01:08.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:08.354" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:08.341" endtime="20201115 22:01:08.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.358" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:08.357" endtime="20201115 22:01:08.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.361" level="INFO">VALUE: [6.513999999999132e-06, 6.2639999999988816e-06, 6.124999999999187e-06, 6.069000000000907e-06, 6.235999999999742e-06, 6.1389999999987566e-06, 6.137999999999283e-06, 6.291999999998021e-06, 6.1389999999987566e-06, 6.056000000000811e-06, 6.320000000000631e-06, 6.110999999999617e-06, 6.070000000000381e-06, 6.2639999999988816e-06, 6.153000000001796e-06, 6.0979999999995205e-06, 6.2779999999984515e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.278000000001921e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.290999999998548e-06, 6.151999999998853e-06, 6.1529999999983265e-06, 6.305000000001587e-06, 6.180000000001462e-06, 6.1389999999987566e-06, 6.264000000002351e-06, 6.069000000000907e-06, 6.124999999999187e-06, 6.222000000000172e-06, 6.1389999999987566e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.181000000000936e-06, 6.124999999999187e-06, 6.304999999998118e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.291999999998021e-06, 6.1529999999983265e-06, 6.181000000000936e-06, 6.262999999999408e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.2779999999984515e-06, 6.180000000001462e-06, 6.124999999999187e-06, 6.278000000001921e-06]</msg>
<status status="PASS" starttime="20201115 22:01:08.359" endtime="20201115 22:01:08.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.355" endtime="20201115 22:01:08.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.364" endtime="20201115 22:01:08.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:08.368" endtime="20201115 22:01:08.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.366" endtime="20201115 22:01:08.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.363" endtime="20201115 22:01:08.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.000" endtime="20201115 22:01:08.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.429" endtime="20201115 22:01:08.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.428" endtime="20201115 22:01:08.389"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.391" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.400" endtime="20201115 22:01:08.416"></status>
</kw>
<msg timestamp="20201115 22:01:08.416" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.398" endtime="20201115 22:01:08.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.419" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.417" endtime="20201115 22:01:08.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.420" endtime="20201115 22:01:08.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.396" endtime="20201115 22:01:08.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.394" endtime="20201115 22:01:08.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.429" endtime="20201115 22:01:08.719"></status>
</kw>
<msg timestamp="20201115 22:01:08.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024880792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024887486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.427" endtime="20201115 22:01:08.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024880792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024887486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.723" endtime="20201115 22:01:08.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.731" endtime="20201115 22:01:08.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.425" endtime="20201115 22:01:08.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.423" endtime="20201115 22:01:08.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:08.738" level="INFO">${RESULT} = [{'time': 0.024887486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.024987139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:08.734" endtime="20201115 22:01:08.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:08.751" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:08.739" endtime="20201115 22:01:08.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.755" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:08.754" endtime="20201115 22:01:08.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.758" level="INFO">VALUE: [6.694000000001532e-06, 6.471999999996952e-06, 6.347000000000297e-06, 6.319999999997161e-06, 6.472000000000422e-06, 6.319000000001157e-06, 6.347000000000297e-06, 6.472000000000422e-06, 6.320000000000631e-06, 6.305000000001587e-06, 6.4579999999973825e-06, 6.333000000000727e-06, 6.276999999998978e-06, 6.458000000000852e-06, 6.334000000000201e-06, 6.333000000000727e-06, 6.417000000001616e-06, 6.347000000000297e-06, 6.346999999996827e-06, 6.4729999999998955e-06, 6.334000000000201e-06, 6.36200000000281e-06, 6.458000000000852e-06, 6.235999999999742e-06, 6.333000000000727e-06, 6.458000000000852e-06, 6.319000000001157e-06, 6.388999999999007e-06, 6.4729999999998955e-06, 6.319000000001157e-06, 6.333000000000727e-06, 6.485999999999992e-06, 6.292000000001491e-06, 6.318999999997688e-06, 6.485999999999992e-06, 6.306000000001061e-06, 6.333000000000727e-06, 6.526999999999228e-06, 6.374999999999437e-06, 6.334000000000201e-06, 6.458000000000852e-06, 6.360999999999867e-06, 6.334000000000201e-06, 6.485999999999992e-06, 6.347000000000297e-06, 6.305999999997591e-06, 6.4729999999998955e-06, 6.3329999999972575e-06, 6.333000000000727e-06, 6.459000000000326e-06]</msg>
<status status="PASS" starttime="20201115 22:01:08.756" endtime="20201115 22:01:08.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.752" endtime="20201115 22:01:08.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.762" endtime="20201115 22:01:08.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:08.765" endtime="20201115 22:01:08.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.763" endtime="20201115 22:01:08.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.760" endtime="20201115 22:01:08.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.392" endtime="20201115 22:01:08.786"></status>
</kw>
<msg timestamp="20201115 22:01:08.786" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.795" endtime="20201115 22:01:08.810"></status>
</kw>
<msg timestamp="20201115 22:01:08.811" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.793" endtime="20201115 22:01:08.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.813" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.812" endtime="20201115 22:01:08.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.814" endtime="20201115 22:01:08.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.791" endtime="20201115 22:01:08.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.789" endtime="20201115 22:01:08.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.823" endtime="20201115 22:01:09.108"></status>
</kw>
<msg timestamp="20201115 22:01:09.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022190125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022196806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.822" endtime="20201115 22:01:09.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022190125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022196806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.113" endtime="20201115 22:01:09.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.121" endtime="20201115 22:01:09.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.819" endtime="20201115 22:01:09.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.817" endtime="20201115 22:01:09.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.127" level="INFO">${RESULT} = [{'time': 0.022196806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.680999999997966e-06, 'source_diff': 6.680999999997966e-06}, {'time': 0.022296403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:09.124" endtime="20201115 22:01:09.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.141" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:09.128" endtime="20201115 22:01:09.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.146" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:09.145" endtime="20201115 22:01:09.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.148" level="INFO">VALUE: [6.680999999997966e-06, 6.472000000000422e-06, 6.333000000000727e-06, 6.347000000000297e-06, 6.513999999999132e-06, 6.306000000001061e-06, 6.291000000002017e-06, 6.4579999999973825e-06, 6.305999999997591e-06, 6.361000000003336e-06, 6.472000000000422e-06, 6.334000000000201e-06, 6.3479999999997705e-06, 6.458000000000852e-06, 6.318999999997688e-06, 6.3479999999997705e-06, 6.472000000000422e-06, 6.304999999998118e-06, 6.388999999999007e-06, 6.459000000000326e-06, 6.333000000000727e-06, 6.334000000000201e-06, 6.458000000000852e-06, 6.305000000001587e-06, 6.34800000000324e-06, 6.458000000000852e-06, 6.333000000000727e-06, 6.318999999997688e-06, 6.472000000000422e-06, 6.320000000000631e-06, 6.333000000000727e-06, 6.472000000000422e-06, 6.320000000000631e-06, 6.320000000000631e-06, 6.430000000001712e-06, 6.319999999997161e-06, 6.360999999999867e-06, 6.459000000000326e-06, 6.333000000000727e-06, 6.333000000000727e-06, 6.472000000000422e-06, 6.318999999997688e-06, 6.34800000000324e-06, 6.4729999999998955e-06, 6.3329999999972575e-06, 6.333000000000727e-06, 6.472000000000422e-06, 6.290999999998548e-06, 6.417000000001616e-06, 6.471999999996952e-06]</msg>
<status status="PASS" starttime="20201115 22:01:09.147" endtime="20201115 22:01:09.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.142" endtime="20201115 22:01:09.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.151" endtime="20201115 22:01:09.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.155" endtime="20201115 22:01:09.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.153" endtime="20201115 22:01:09.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.150" endtime="20201115 22:01:09.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.786" endtime="20201115 22:01:09.175"></status>
</kw>
<msg timestamp="20201115 22:01:09.175" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.184" endtime="20201115 22:01:09.200"></status>
</kw>
<msg timestamp="20201115 22:01:09.201" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.183" endtime="20201115 22:01:09.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.203" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.202" endtime="20201115 22:01:09.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.204" endtime="20201115 22:01:09.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.180" endtime="20201115 22:01:09.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.178" endtime="20201115 22:01:09.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.213" endtime="20201115 22:01:09.500"></status>
</kw>
<msg timestamp="20201115 22:01:09.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022728639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.212" endtime="20201115 22:01:09.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022728639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.504" endtime="20201115 22:01:09.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.512" endtime="20201115 22:01:09.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.209" endtime="20201115 22:01:09.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.207" endtime="20201115 22:01:09.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.519" level="INFO">${RESULT} = [{'time': 0.022728639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7079999999976325e-06, 'source_diff': 6.7079999999976325e-06}, {'time': 0.022828514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:09.516" endtime="20201115 22:01:09.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.533" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:09.520" endtime="20201115 22:01:09.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.537" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:09.536" endtime="20201115 22:01:09.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.540" level="INFO">VALUE: [6.7079999999976325e-06, 6.472000000000422e-06, 6.319000000001157e-06, 6.320000000000631e-06, 6.458000000000852e-06, 6.319000000001157e-06, 6.3479999999997705e-06, 6.472000000000422e-06, 6.360999999999867e-06, 6.346999999996827e-06, 6.472000000000422e-06, 6.319000000001157e-06, 6.347000000000297e-06, 6.431000000001186e-06, 6.346999999996827e-06, 6.334000000000201e-06, 6.431000000001186e-06, 6.3479999999997705e-06, 6.360999999999867e-06, 6.430000000001712e-06, 6.403000000002046e-06, 6.333000000000727e-06, 6.471999999996952e-06, 6.306000000001061e-06, 6.389000000002476e-06, 6.443999999997813e-06, 6.304999999998118e-06, 6.291999999998021e-06, 6.5279999999987015e-06, 6.319000000001157e-06, 6.292000000001491e-06, 6.4579999999973825e-06, 6.319999999997161e-06, 6.333000000000727e-06, 6.472000000000422e-06, 6.319999999997161e-06, 6.360999999999867e-06, 6.443999999997813e-06, 6.374999999999437e-06, 6.319000000001157e-06, 6.444999999997286e-06, 6.292000000001491e-06, 6.334000000000201e-06, 6.458000000000852e-06, 6.305999999997591e-06, 6.320000000000631e-06, 6.472000000000422e-06, 6.334000000000201e-06, 6.333000000000727e-06, 6.472000000000422e-06]</msg>
<status status="PASS" starttime="20201115 22:01:09.538" endtime="20201115 22:01:09.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.534" endtime="20201115 22:01:09.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.543" endtime="20201115 22:01:09.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.546" endtime="20201115 22:01:09.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.545" endtime="20201115 22:01:09.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.541" endtime="20201115 22:01:09.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.176" endtime="20201115 22:01:09.567"></status>
</kw>
<msg timestamp="20201115 22:01:09.567" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.576" endtime="20201115 22:01:09.591"></status>
</kw>
<msg timestamp="20201115 22:01:09.592" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.574" endtime="20201115 22:01:09.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.594" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.593" endtime="20201115 22:01:09.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.595" endtime="20201115 22:01:09.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.572" endtime="20201115 22:01:09.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.570" endtime="20201115 22:01:09.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.604" endtime="20201115 22:01:09.891"></status>
</kw>
<msg timestamp="20201115 22:01:09.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022419917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022426625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.603" endtime="20201115 22:01:09.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022419917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022426625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.896" endtime="20201115 22:01:09.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.904" endtime="20201115 22:01:09.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.600" endtime="20201115 22:01:09.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.598" endtime="20201115 22:01:09.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.911" level="INFO">${RESULT} = [{'time': 0.022426625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7079999999976325e-06, 'source_diff': 6.7079999999976325e-06}, {'time': 0.022526181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:09.907" endtime="20201115 22:01:09.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.924" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:09.912" endtime="20201115 22:01:09.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.929" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:09.928" endtime="20201115 22:01:09.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.931" level="INFO">VALUE: [6.7079999999976325e-06, 6.4729999999998955e-06, 6.305999999997591e-06, 6.333000000000727e-06, 6.5279999999987015e-06, 6.320000000000631e-06, 6.347000000000297e-06, 6.458000000000852e-06, 6.319000000001157e-06, 6.347000000000297e-06, 6.458999999996856e-06, 6.292000000001491e-06, 6.333000000000727e-06, 6.459000000000326e-06, 6.333000000000727e-06, 6.347000000000297e-06, 6.485999999999992e-06, 6.319999999997161e-06, 6.347000000000297e-06, 6.401999999999103e-06, 6.333000000000727e-06, 6.347000000000297e-06, 6.459000000000326e-06, 6.304999999998118e-06, 6.3329999999972575e-06, 6.459000000000326e-06, 6.304999999998118e-06, 6.360999999999867e-06, 6.416999999998146e-06, 6.304999999998118e-06, 6.333000000000727e-06, 6.4029999999985765e-06, 6.320000000000631e-06, 6.346999999996827e-06, 6.444000000001282e-06, 6.347000000000297e-06, 6.333000000000727e-06, 6.499999999999562e-06, 6.374999999999437e-06, 6.334000000000201e-06, 6.485999999999992e-06, 6.304999999998118e-06, 6.347000000000297e-06, 6.403000000002046e-06, 6.320000000000631e-06, 6.319000000001157e-06, 6.528000000002171e-06, 6.305000000001587e-06, 6.347000000000297e-06, 6.445000000000756e-06]</msg>
<status status="PASS" starttime="20201115 22:01:09.930" endtime="20201115 22:01:09.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.925" endtime="20201115 22:01:09.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.934" endtime="20201115 22:01:09.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.938" endtime="20201115 22:01:09.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.936" endtime="20201115 22:01:09.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.933" endtime="20201115 22:01:09.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.568" endtime="20201115 22:01:09.958"></status>
</kw>
<msg timestamp="20201115 22:01:09.959" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.968" endtime="20201115 22:01:09.983"></status>
</kw>
<msg timestamp="20201115 22:01:09.984" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.966" endtime="20201115 22:01:09.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.986" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.985" endtime="20201115 22:01:09.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.987" endtime="20201115 22:01:09.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.963" endtime="20201115 22:01:09.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.961" endtime="20201115 22:01:09.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.996" endtime="20201115 22:01:10.283"></status>
</kw>
<msg timestamp="20201115 22:01:10.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022747861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022754556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.995" endtime="20201115 22:01:10.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022747861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022754556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.288" endtime="20201115 22:01:10.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.296" endtime="20201115 22:01:10.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.992" endtime="20201115 22:01:10.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.990" endtime="20201115 22:01:10.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:10.303" level="INFO">${RESULT} = [{'time': 0.022754556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.694999999997536e-06, 'source_diff': 6.694999999997536e-06}, {'time': 0.022854681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:10.300" endtime="20201115 22:01:10.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:10.359" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:10.304" endtime="20201115 22:01:10.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.364" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:10.363" endtime="20201115 22:01:10.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.366" level="INFO">VALUE: [6.694999999997536e-06, 6.459000000000326e-06, 6.306000000001061e-06, 6.334000000000201e-06, 6.472000000000422e-06, 6.333000000000727e-06, 6.347000000000297e-06, 6.485999999999992e-06, 6.319000000001157e-06, 6.334000000000201e-06, 6.472000000000422e-06, 6.304999999998118e-06, 6.360999999999867e-06, 6.472000000000422e-06, 6.306000000001061e-06, 6.320000000000631e-06, 6.4729999999998955e-06, 6.320000000000631e-06, 6.347000000000297e-06, 6.444000000001282e-06, 6.334000000000201e-06, 6.347000000000297e-06, 6.472000000000422e-06, 6.320000000000631e-06, 6.333000000000727e-06, 6.485999999999992e-06, 6.3479999999997705e-06, 6.333000000000727e-06, 6.459000000000326e-06, 6.306000000001061e-06, 6.333000000000727e-06, 6.472000000000422e-06, 6.320000000000631e-06, 6.360999999999867e-06, 6.444000000001282e-06, 6.318999999997688e-06, 6.388999999999007e-06, 6.4579999999973825e-06, 6.319000000001157e-06, 6.360999999999867e-06, 6.458000000000852e-06, 6.305999999997591e-06, 6.333000000000727e-06, 6.4729999999998955e-06, 6.292000000001491e-06, 6.333000000000727e-06, 6.471999999996952e-06, 6.306000000001061e-06, 6.333000000000727e-06, 6.472000000000422e-06]</msg>
<status status="PASS" starttime="20201115 22:01:10.365" endtime="20201115 22:01:10.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.360" endtime="20201115 22:01:10.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.370" endtime="20201115 22:01:10.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:10.373" endtime="20201115 22:01:10.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.371" endtime="20201115 22:01:10.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.368" endtime="20201115 22:01:10.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.959" endtime="20201115 22:01:10.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.390" endtime="20201115 22:01:10.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.389" endtime="20201115 22:01:10.394"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.396" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.406" endtime="20201115 22:01:10.421"></status>
</kw>
<msg timestamp="20201115 22:01:10.421" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.404" endtime="20201115 22:01:10.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.424" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.422" endtime="20201115 22:01:10.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.425" endtime="20201115 22:01:10.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.401" endtime="20201115 22:01:10.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.399" endtime="20201115 22:01:10.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.434" endtime="20201115 22:01:10.719"></status>
</kw>
<msg timestamp="20201115 22:01:10.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025352028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025358944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.433" endtime="20201115 22:01:10.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025352028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025358944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.723" endtime="20201115 22:01:10.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.732" endtime="20201115 22:01:10.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.430" endtime="20201115 22:01:10.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.428" endtime="20201115 22:01:10.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:10.738" level="INFO">${RESULT} = [{'time': 0.025358944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.916000000002642e-06, 'source_diff': 6.916000000002642e-06}, {'time': 0.025464861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:10.735" endtime="20201115 22:01:10.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:10.752" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:10.739" endtime="20201115 22:01:10.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.756" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:10.755" endtime="20201115 22:01:10.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.759" level="INFO">VALUE: [6.916000000002642e-06, 6.6669999999983964e-06, 6.485999999999992e-06, 6.513999999999132e-06, 6.665999999998923e-06, 6.541000000002267e-06, 6.541999999998271e-06, 6.679999999998493e-06, 6.528000000002171e-06, 6.499999999999562e-06, 6.6529999999988265e-06, 6.528000000002171e-06, 6.513999999999132e-06, 6.666000000002392e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.681000000001436e-06, 6.513999999999132e-06, 6.5279999999987015e-06, 6.638999999999257e-06, 6.542000000001741e-06, 6.540999999998798e-06, 6.680000000001962e-06, 6.472000000000422e-06, 6.513999999999132e-06, 6.6669999999983964e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.679999999998493e-06, 6.528000000002171e-06, 6.554999999998368e-06, 6.651999999999353e-06, 6.513999999999132e-06, 6.5279999999987015e-06, 6.681000000001436e-06, 6.597000000000547e-06, 6.499999999999562e-06, 6.679999999998493e-06, 6.554999999998368e-06, 6.513999999999132e-06, 6.708999999997106e-06, 6.513999999999132e-06, 6.458000000000852e-06, 6.680999999997966e-06, 6.5279999999987015e-06, 6.542000000001741e-06, 6.667000000001866e-06, 6.5279999999987015e-06, 6.499999999999562e-06, 6.693999999998063e-06]</msg>
<status status="PASS" starttime="20201115 22:01:10.757" endtime="20201115 22:01:10.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.752" endtime="20201115 22:01:10.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.762" endtime="20201115 22:01:10.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:10.765" endtime="20201115 22:01:10.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.763" endtime="20201115 22:01:10.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.760" endtime="20201115 22:01:10.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.397" endtime="20201115 22:01:10.786"></status>
</kw>
<msg timestamp="20201115 22:01:10.786" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.795" endtime="20201115 22:01:10.810"></status>
</kw>
<msg timestamp="20201115 22:01:10.811" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.794" endtime="20201115 22:01:10.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.814" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.812" endtime="20201115 22:01:10.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.815" endtime="20201115 22:01:10.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.791" endtime="20201115 22:01:10.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.788" endtime="20201115 22:01:10.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.824" endtime="20201115 22:01:11.110"></status>
</kw>
<msg timestamp="20201115 22:01:11.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023131222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023138194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.823" endtime="20201115 22:01:11.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023131222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023138194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.114" endtime="20201115 22:01:11.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.122" endtime="20201115 22:01:11.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.820" endtime="20201115 22:01:11.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.818" endtime="20201115 22:01:11.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.129" level="INFO">${RESULT} = [{'time': 0.023138194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.023243736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:11.126" endtime="20201115 22:01:11.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.142" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:11.130" endtime="20201115 22:01:11.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.147" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:11.146" endtime="20201115 22:01:11.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.150" level="INFO">VALUE: [6.972000000000922e-06, 6.638999999999257e-06, 6.5279999999987015e-06, 6.512999999999658e-06, 6.665999999998923e-06, 6.513999999999132e-06, 6.540999999998798e-06, 6.653000000002296e-06, 6.514000000002601e-06, 6.499999999999562e-06, 6.6529999999988265e-06, 6.514000000002601e-06, 6.5279999999987015e-06, 6.7230000000001455e-06, 6.541999999998271e-06, 6.512999999999658e-06, 6.680999999997966e-06, 6.512999999999658e-06, 6.499999999999562e-06, 6.681000000001436e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.6669999999983964e-06, 6.526999999999228e-06, 6.5279999999987015e-06, 6.693999999998063e-06, 6.5279999999987015e-06, 6.528000000002171e-06, 6.679999999998493e-06, 6.5279999999987015e-06, 6.5279999999987015e-06, 6.6529999999988265e-06, 6.526999999999228e-06, 6.541000000002267e-06, 6.6529999999988265e-06, 6.472000000000422e-06, 6.500000000003031e-06, 6.709000000000576e-06, 6.5279999999987015e-06, 6.499999999999562e-06, 6.694000000001532e-06, 6.5279999999987015e-06, 6.514000000002601e-06, 6.680000000001962e-06, 6.5279999999987015e-06, 6.499999999999562e-06, 6.694000000001532e-06, 6.513999999999132e-06, 6.5279999999987015e-06, 6.708000000001102e-06]</msg>
<status status="PASS" starttime="20201115 22:01:11.148" endtime="20201115 22:01:11.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.143" endtime="20201115 22:01:11.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.153" endtime="20201115 22:01:11.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.156" endtime="20201115 22:01:11.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.154" endtime="20201115 22:01:11.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.151" endtime="20201115 22:01:11.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.786" endtime="20201115 22:01:11.177"></status>
</kw>
<msg timestamp="20201115 22:01:11.177" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.186" endtime="20201115 22:01:11.202"></status>
</kw>
<msg timestamp="20201115 22:01:11.203" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.184" endtime="20201115 22:01:11.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.205" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.204" endtime="20201115 22:01:11.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.206" endtime="20201115 22:01:11.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.182" endtime="20201115 22:01:11.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.179" endtime="20201115 22:01:11.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.215" endtime="20201115 22:01:11.500"></status>
</kw>
<msg timestamp="20201115 22:01:11.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024161986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024168875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.214" endtime="20201115 22:01:11.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024161986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024168875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.504" endtime="20201115 22:01:11.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.512" endtime="20201115 22:01:11.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.211" endtime="20201115 22:01:11.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.209" endtime="20201115 22:01:11.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.519" level="INFO">${RESULT} = [{'time': 0.024168875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.024274306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:11.516" endtime="20201115 22:01:11.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.532" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:11.520" endtime="20201115 22:01:11.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.537" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:11.536" endtime="20201115 22:01:11.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.539" level="INFO">VALUE: [6.888999999999507e-06, 6.624999999999687e-06, 6.541000000002267e-06, 6.472000000000422e-06, 6.6669999999983964e-06, 6.5279999999987015e-06, 6.542000000001741e-06, 6.653000000002296e-06, 6.514000000002601e-06, 6.541999999998271e-06, 6.653000000002296e-06, 6.556000000001311e-06, 6.514000000002601e-06, 6.653000000002296e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.667000000001866e-06, 6.485999999999992e-06, 6.569000000001407e-06, 6.665999999998923e-06, 6.611000000000117e-06, 6.554999999998368e-06, 6.624999999999687e-06, 6.526999999999228e-06, 6.570000000000881e-06, 6.667000000001866e-06, 6.611000000000117e-06, 6.512999999999658e-06, 6.624999999999687e-06, 6.541999999998271e-06, 6.512999999999658e-06, 6.6669999999983964e-06, 6.584000000000451e-06, 6.541000000002267e-06, 6.611000000000117e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.624999999999687e-06, 6.512999999999658e-06, 6.486999999999465e-06, 6.653000000002296e-06, 6.514000000002601e-06, 6.541999999998271e-06, 6.680000000001962e-06, 6.514000000002601e-06, 6.513999999999132e-06, 6.6529999999988265e-06, 6.485999999999992e-06, 6.541000000002267e-06, 6.6669999999983964e-06]</msg>
<status status="PASS" starttime="20201115 22:01:11.538" endtime="20201115 22:01:11.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.533" endtime="20201115 22:01:11.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.542" endtime="20201115 22:01:11.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.546" endtime="20201115 22:01:11.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.544" endtime="20201115 22:01:11.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.541" endtime="20201115 22:01:11.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.177" endtime="20201115 22:01:11.567"></status>
</kw>
<msg timestamp="20201115 22:01:11.567" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.576" endtime="20201115 22:01:11.593"></status>
</kw>
<msg timestamp="20201115 22:01:11.593" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.574" endtime="20201115 22:01:11.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.596" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.594" endtime="20201115 22:01:11.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.597" endtime="20201115 22:01:11.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.572" endtime="20201115 22:01:11.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.570" endtime="20201115 22:01:11.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.606" endtime="20201115 22:01:11.898"></status>
</kw>
<msg timestamp="20201115 22:01:11.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023604556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023611472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.604" endtime="20201115 22:01:11.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023604556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023611472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.902" endtime="20201115 22:01:11.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.910" endtime="20201115 22:01:11.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.602" endtime="20201115 22:01:11.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.600" endtime="20201115 22:01:11.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.917" level="INFO">${RESULT} = [{'time': 0.023611472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.916000000002642e-06, 'source_diff': 6.916000000002642e-06}, {'time': 0.023717264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:11.913" endtime="20201115 22:01:11.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.931" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:11.918" endtime="20201115 22:01:11.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.936" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:11.935" endtime="20201115 22:01:11.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.938" level="INFO">VALUE: [6.916000000002642e-06, 6.610999999996647e-06, 6.528000000002171e-06, 6.513999999999132e-06, 6.666000000002392e-06, 6.528000000002171e-06, 6.458000000000852e-06, 6.6669999999983964e-06, 6.528000000002171e-06, 6.5279999999987015e-06, 6.6669999999983964e-06, 6.485999999999992e-06, 6.570000000000881e-06, 6.6529999999988265e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.653000000002296e-06, 6.526999999999228e-06, 6.513999999999132e-06, 6.6669999999983964e-06, 6.528000000002171e-06, 6.5279999999987015e-06, 6.681000000001436e-06, 6.541000000002267e-06, 6.499999999999562e-06, 6.666000000002392e-06, 6.528000000002171e-06, 6.445000000000756e-06, 6.667000000001866e-06, 6.528000000002171e-06, 6.513999999999132e-06, 6.679999999998493e-06, 6.527000000002697e-06, 6.514000000002601e-06, 6.653000000002296e-06, 6.444000000001282e-06, 6.485999999999992e-06, 6.680000000001962e-06, 6.541999999998271e-06, 6.5279999999987015e-06, 6.653000000002296e-06, 6.514000000002601e-06, 6.514000000002601e-06, 6.653000000002296e-06, 6.513999999999132e-06, 6.472000000000422e-06, 6.597000000000547e-06, 6.514000000002601e-06, 6.512999999999658e-06, 6.6669999999983964e-06]</msg>
<status status="PASS" starttime="20201115 22:01:11.937" endtime="20201115 22:01:11.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.932" endtime="20201115 22:01:11.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.942" endtime="20201115 22:01:11.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.945" endtime="20201115 22:01:11.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.943" endtime="20201115 22:01:11.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.940" endtime="20201115 22:01:11.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.568" endtime="20201115 22:01:11.966"></status>
</kw>
<msg timestamp="20201115 22:01:11.966" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.975" endtime="20201115 22:01:11.990"></status>
</kw>
<msg timestamp="20201115 22:01:11.990" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.973" endtime="20201115 22:01:11.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.993" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.991" endtime="20201115 22:01:11.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.994" endtime="20201115 22:01:11.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.971" endtime="20201115 22:01:11.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.968" endtime="20201115 22:01:11.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.004" endtime="20201115 22:01:12.289"></status>
</kw>
<msg timestamp="20201115 22:01:12.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.002" endtime="20201115 22:01:12.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.294" endtime="20201115 22:01:12.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.302" endtime="20201115 22:01:12.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.000" endtime="20201115 22:01:12.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.998" endtime="20201115 22:01:12.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:12.309" level="INFO">${RESULT} = [{'time': 0.022499167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888999999999507e-06, 'source_diff': 6.888999999999507e-06}, {'time': 0.022604833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:12.305" endtime="20201115 22:01:12.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:12.322" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:12.310" endtime="20201115 22:01:12.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.326" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:12.325" endtime="20201115 22:01:12.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.329" level="INFO">VALUE: [6.888999999999507e-06, 6.708000000001102e-06, 6.528000000002171e-06, 6.541999999998271e-06, 6.681000000001436e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.679999999998493e-06, 6.5279999999987015e-06, 6.540999999998798e-06, 6.666000000002392e-06, 6.526999999999228e-06, 6.514000000002601e-06, 6.666000000002392e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.6669999999983964e-06, 6.458000000000852e-06, 6.528000000002171e-06, 6.681000000001436e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.694000000001532e-06, 6.486999999999465e-06, 6.541000000002267e-06, 6.667000000001866e-06, 6.611000000000117e-06, 6.5279999999987015e-06, 6.681000000001436e-06, 6.485999999999992e-06, 6.513999999999132e-06, 6.679999999998493e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.680000000001962e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.6669999999983964e-06, 6.526999999999228e-06, 6.4579999999973825e-06, 6.638999999999257e-06, 6.540999999998798e-06, 6.513999999999132e-06, 6.5980000000000205e-06, 6.513999999999132e-06, 6.485999999999992e-06, 6.637999999999783e-06, 6.513999999999132e-06, 6.541000000002267e-06, 6.694000000001532e-06]</msg>
<status status="PASS" starttime="20201115 22:01:12.327" endtime="20201115 22:01:12.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.323" endtime="20201115 22:01:12.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.336" endtime="20201115 22:01:12.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:12.340" endtime="20201115 22:01:12.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.338" endtime="20201115 22:01:12.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.335" endtime="20201115 22:01:12.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.966" endtime="20201115 22:01:12.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.395" endtime="20201115 22:01:12.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.394" endtime="20201115 22:01:12.361"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.363" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.372" endtime="20201115 22:01:12.388"></status>
</kw>
<msg timestamp="20201115 22:01:12.388" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.370" endtime="20201115 22:01:12.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.391" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.389" endtime="20201115 22:01:12.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.392" endtime="20201115 22:01:12.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.368" endtime="20201115 22:01:12.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.366" endtime="20201115 22:01:12.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.401" endtime="20201115 22:01:12.686"></status>
</kw>
<msg timestamp="20201115 22:01:12.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024781236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024788319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.399" endtime="20201115 22:01:12.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024781236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024788319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.690" endtime="20201115 22:01:12.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.698" endtime="20201115 22:01:12.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.397" endtime="20201115 22:01:12.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.395" endtime="20201115 22:01:12.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:12.705" level="INFO">${RESULT} = [{'time': 0.024788319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.024899958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:12.701" endtime="20201115 22:01:12.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:12.718" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:12.706" endtime="20201115 22:01:12.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.723" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:12.722" endtime="20201115 22:01:12.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.726" level="INFO">VALUE: [7.0829999999980076e-06, 6.847000000000797e-06, 6.709000000000576e-06, 6.7369999999997154e-06, 6.861000000000367e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.861000000000367e-06, 6.709000000000576e-06, 6.750000000003281e-06, 6.861000000000367e-06, 6.7219999999972024e-06, 6.736000000000242e-06, 6.847000000000797e-06, 6.708000000001102e-06, 6.7919999999985214e-06, 6.861000000000367e-06, 6.694999999997536e-06, 6.7779999999989515e-06, 6.833000000001227e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.9169999999986465e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.861000000000367e-06, 6.7219999999972024e-06, 6.749999999999812e-06, 6.861000000000367e-06, 6.736000000000242e-06, 6.7230000000001455e-06, 6.874999999999937e-06, 6.7779999999989515e-06, 6.749999999999812e-06, 6.874999999999937e-06, 6.7079999999976325e-06, 6.722000000000672e-06, 6.7919999999985214e-06, 6.708000000001102e-06, 6.680999999997966e-06, 6.8619999999998404e-06, 6.695000000001006e-06, 6.736000000000242e-06, 6.861000000000367e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.874999999999937e-06, 6.695000000001006e-06, 6.749999999999812e-06, 6.861000000000367e-06]</msg>
<status status="PASS" starttime="20201115 22:01:12.724" endtime="20201115 22:01:12.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.719" endtime="20201115 22:01:12.727"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.730" endtime="20201115 22:01:12.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:12.733" endtime="20201115 22:01:12.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.731" endtime="20201115 22:01:12.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.728" endtime="20201115 22:01:12.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.364" endtime="20201115 22:01:12.754"></status>
</kw>
<msg timestamp="20201115 22:01:12.754" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.763" endtime="20201115 22:01:12.779"></status>
</kw>
<msg timestamp="20201115 22:01:12.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.761" endtime="20201115 22:01:12.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.782" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.780" endtime="20201115 22:01:12.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.783" endtime="20201115 22:01:12.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.759" endtime="20201115 22:01:12.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.756" endtime="20201115 22:01:12.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.793" endtime="20201115 22:01:13.078"></status>
</kw>
<msg timestamp="20201115 22:01:13.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022336694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02234375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:12.791" endtime="20201115 22:01:13.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022336694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02234375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:13.082" endtime="20201115 22:01:13.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.090" endtime="20201115 22:01:13.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.789" endtime="20201115 22:01:13.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.787" endtime="20201115 22:01:13.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.097" level="INFO">${RESULT} = [{'time': 0.02234375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.022455417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:13.093" endtime="20201115 22:01:13.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.110" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:13.098" endtime="20201115 22:01:13.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.115" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:13.114" endtime="20201115 22:01:13.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.117" level="INFO">VALUE: [7.055999999998341e-06, 6.7919999999985214e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.861000000000367e-06, 6.708000000001102e-06, 6.735999999996772e-06, 6.889000000002976e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.9029999999990765e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.820000000001131e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.8469999999973274e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.847000000000797e-06, 6.7230000000001455e-06, 6.722000000000672e-06, 6.833999999997231e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.847000000000797e-06, 6.708000000001102e-06, 6.7230000000001455e-06, 6.930999999998216e-06, 6.709000000000576e-06, 6.694999999997536e-06, 6.8469999999973274e-06, 6.679999999998493e-06, 6.708000000001102e-06, 6.847000000000797e-06, 6.694999999997536e-06, 6.736000000000242e-06, 6.861000000000367e-06, 6.722000000000672e-06, 6.763999999999382e-06, 6.861000000000367e-06, 6.681000000001436e-06, 6.722000000000672e-06, 6.874999999999937e-06, 6.708000000001102e-06, 6.749999999999812e-06, 6.861000000000367e-06, 6.7219999999972024e-06, 6.763999999999382e-06, 6.8619999999998404e-06]</msg>
<status status="PASS" starttime="20201115 22:01:13.116" endtime="20201115 22:01:13.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.111" endtime="20201115 22:01:13.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.121" endtime="20201115 22:01:13.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:13.124" endtime="20201115 22:01:13.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.122" endtime="20201115 22:01:13.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.119" endtime="20201115 22:01:13.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.754" endtime="20201115 22:01:13.145"></status>
</kw>
<msg timestamp="20201115 22:01:13.145" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.154" endtime="20201115 22:01:13.171"></status>
</kw>
<msg timestamp="20201115 22:01:13.171" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.152" endtime="20201115 22:01:13.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.174" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.172" endtime="20201115 22:01:13.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.175" endtime="20201115 22:01:13.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.150" endtime="20201115 22:01:13.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.147" endtime="20201115 22:01:13.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.185" endtime="20201115 22:01:13.470"></status>
</kw>
<msg timestamp="20201115 22:01:13.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023428111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023435236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.183" endtime="20201115 22:01:13.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023428111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023435236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.474" endtime="20201115 22:01:13.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.482" endtime="20201115 22:01:13.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.181" endtime="20201115 22:01:13.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.179" endtime="20201115 22:01:13.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.489" level="INFO">${RESULT} = [{'time': 0.023435236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.023546542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:13.486" endtime="20201115 22:01:13.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.504" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:13.490" endtime="20201115 22:01:13.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.508" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:13.507" endtime="20201115 22:01:13.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.511" level="INFO">VALUE: [7.125000000000187e-06, 6.8480000000002705e-06, 6.763999999999382e-06, 6.764000000002851e-06, 6.860999999996897e-06, 6.749999999999812e-06, 6.7230000000001455e-06, 6.7919999999985214e-06, 6.694000000001532e-06, 6.722000000000672e-06, 6.804999999998618e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.861000000000367e-06, 6.693999999998063e-06, 6.736000000000242e-06, 6.861000000000367e-06, 6.7079999999976325e-06, 6.695000000001006e-06, 6.8480000000002705e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.8480000000002705e-06, 6.7079999999976325e-06, 6.7230000000001455e-06, 6.9029999999990765e-06, 6.763999999999382e-06, 6.722000000000672e-06, 6.8469999999973274e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.8469999999973274e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.8480000000002705e-06, 6.709000000000576e-06, 6.776999999999478e-06, 6.818999999998188e-06, 6.7219999999972024e-06, 6.750000000003281e-06, 6.861000000000367e-06, 6.666000000002392e-06, 6.736000000000242e-06, 6.860999999996897e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.847000000000797e-06, 6.708000000001102e-06, 6.694999999997536e-06, 6.833000000001227e-06]</msg>
<status status="PASS" starttime="20201115 22:01:13.509" endtime="20201115 22:01:13.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.505" endtime="20201115 22:01:13.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.514" endtime="20201115 22:01:13.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:13.517" endtime="20201115 22:01:13.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.516" endtime="20201115 22:01:13.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.512" endtime="20201115 22:01:13.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.145" endtime="20201115 22:01:13.538"></status>
</kw>
<msg timestamp="20201115 22:01:13.538" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.547" endtime="20201115 22:01:13.564"></status>
</kw>
<msg timestamp="20201115 22:01:13.564" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.545" endtime="20201115 22:01:13.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.565" endtime="20201115 22:01:13.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.568" endtime="20201115 22:01:13.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.543" endtime="20201115 22:01:13.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.541" endtime="20201115 22:01:13.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.578" endtime="20201115 22:01:13.863"></status>
</kw>
<msg timestamp="20201115 22:01:13.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022741389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227485, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:13.576" endtime="20201115 22:01:13.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022741389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227485, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:13.867" endtime="20201115 22:01:13.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.876" endtime="20201115 22:01:13.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.574" endtime="20201115 22:01:13.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.572" endtime="20201115 22:01:13.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.882" level="INFO">${RESULT} = [{'time': 0.0227485, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.022860306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:13.879" endtime="20201115 22:01:13.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.896" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:13.883" endtime="20201115 22:01:13.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.900" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:13.899" endtime="20201115 22:01:13.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.903" level="INFO">VALUE: [7.111000000000617e-06, 6.8619999999998404e-06, 6.695000000001006e-06, 6.735999999996772e-06, 6.861000000000367e-06, 6.722000000000672e-06, 6.749999999999812e-06, 6.861000000000367e-06, 6.7079999999976325e-06, 6.736000000000242e-06, 6.8329999999977575e-06, 6.653000000002296e-06, 6.7230000000001455e-06, 6.861000000000367e-06, 6.736000000000242e-06, 6.7230000000001455e-06, 6.7919999999985214e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.861000000000367e-06, 6.7919999999985214e-06, 6.7230000000001455e-06, 6.874999999999937e-06, 6.709000000000576e-06, 6.6669999999983964e-06, 6.834000000000701e-06, 6.694000000001532e-06, 6.667000000001866e-06, 6.861000000000367e-06, 6.639000000002726e-06, 6.7219999999972024e-06, 6.805999999998091e-06, 6.722999999996676e-06, 6.722000000000672e-06, 6.8619999999998404e-06, 6.7219999999972024e-06, 6.7230000000001455e-06, 6.833000000001227e-06, 6.667000000001866e-06, 6.778000000002421e-06, 6.847000000000797e-06, 6.722000000000672e-06, 6.7230000000001455e-06, 6.847000000000797e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.847000000000797e-06, 6.653000000002296e-06, 6.665999999998923e-06, 6.861000000000367e-06]</msg>
<status status="PASS" starttime="20201115 22:01:13.901" endtime="20201115 22:01:13.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.897" endtime="20201115 22:01:13.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.906" endtime="20201115 22:01:13.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:13.909" endtime="20201115 22:01:13.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.908" endtime="20201115 22:01:13.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.904" endtime="20201115 22:01:13.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.539" endtime="20201115 22:01:13.930"></status>
</kw>
<msg timestamp="20201115 22:01:13.930" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.939" endtime="20201115 22:01:13.955"></status>
</kw>
<msg timestamp="20201115 22:01:13.956" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.938" endtime="20201115 22:01:13.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.958" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.957" endtime="20201115 22:01:13.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.959" endtime="20201115 22:01:13.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.935" endtime="20201115 22:01:13.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.933" endtime="20201115 22:01:13.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.969" endtime="20201115 22:01:14.255"></status>
</kw>
<msg timestamp="20201115 22:01:14.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022430097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.968" endtime="20201115 22:01:14.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022430097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.260" endtime="20201115 22:01:14.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.268" endtime="20201115 22:01:14.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.965" endtime="20201115 22:01:14.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.963" endtime="20201115 22:01:14.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:14.275" level="INFO">${RESULT} = [{'time': 0.022437181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.084000000000951e-06, 'source_diff': 7.084000000000951e-06}, {'time': 0.022549056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:14.271" endtime="20201115 22:01:14.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:14.288" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:14.276" endtime="20201115 22:01:14.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.292" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:14.291" endtime="20201115 22:01:14.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.295" level="INFO">VALUE: [7.084000000000951e-06, 6.8619999999998404e-06, 6.7230000000001455e-06, 6.7369999999997154e-06, 6.861000000000367e-06, 6.695000000001006e-06, 6.708000000001102e-06, 6.8480000000002705e-06, 6.695000000001006e-06, 6.722000000000672e-06, 6.874999999999937e-06, 6.7079999999976325e-06, 6.736000000000242e-06, 6.8619999999998404e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.847000000000797e-06, 6.679999999998493e-06, 6.679999999998493e-06, 6.860999999996897e-06, 6.736000000000242e-06, 6.7079999999976325e-06, 6.847000000000797e-06, 6.749999999999812e-06, 6.7079999999976325e-06, 6.834000000000701e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.874999999999937e-06, 6.708000000001102e-06, 6.7369999999997154e-06, 6.847000000000797e-06, 6.651999999999353e-06, 6.708000000001102e-06, 6.819000000001657e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.874999999999937e-06, 6.695000000001006e-06, 6.722000000000672e-06, 6.861000000000367e-06, 6.708000000001102e-06, 6.7079999999976325e-06, 6.833000000001227e-06, 6.708000000001102e-06, 6.722999999996676e-06, 6.8329999999977575e-06, 6.694000000001532e-06, 6.735999999996772e-06, 6.888999999999507e-06]</msg>
<status status="PASS" starttime="20201115 22:01:14.294" endtime="20201115 22:01:14.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.289" endtime="20201115 22:01:14.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.298" endtime="20201115 22:01:14.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.301" endtime="20201115 22:01:14.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.300" endtime="20201115 22:01:14.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.296" endtime="20201115 22:01:14.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.931" endtime="20201115 22:01:14.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.362" endtime="20201115 22:01:14.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.361" endtime="20201115 22:01:14.322"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.325" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.333" endtime="20201115 22:01:14.350"></status>
</kw>
<msg timestamp="20201115 22:01:14.350" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.332" endtime="20201115 22:01:14.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.353" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.351" endtime="20201115 22:01:14.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.354" endtime="20201115 22:01:14.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.329" endtime="20201115 22:01:14.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.327" endtime="20201115 22:01:14.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.363" endtime="20201115 22:01:14.646"></status>
</kw>
<msg timestamp="20201115 22:01:14.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024649903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024657208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.362" endtime="20201115 22:01:14.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024649903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024657208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.651" endtime="20201115 22:01:14.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.659" endtime="20201115 22:01:14.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.359" endtime="20201115 22:01:14.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.358" endtime="20201115 22:01:14.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:14.665" level="INFO">${RESULT} = [{'time': 0.024657208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.024775139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:14.662" endtime="20201115 22:01:14.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:14.679" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:14.666" endtime="20201115 22:01:14.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.683" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:14.682" endtime="20201115 22:01:14.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.686" level="INFO">VALUE: [7.304999999999118e-06, 7.056000000001811e-06, 6.9029999999990765e-06, 6.9169999999986465e-06, 7.041000000002767e-06, 6.9169999999986465e-06, 6.930999999998216e-06, 7.055999999998341e-06, 6.916000000002642e-06, 6.903000000002546e-06, 7.0419999999987715e-06, 6.9029999999990765e-06, 6.917000000002116e-06, 7.054999999998868e-06, 6.943999999998313e-06, 6.9029999999990765e-06, 7.138000000000283e-06, 6.903000000002546e-06, 6.930999999998216e-06, 7.028000000002671e-06, 6.944999999997786e-06, 6.874999999999937e-06, 7.055999999998341e-06, 6.9029999999990765e-06, 6.888999999999507e-06, 7.056000000001811e-06, 6.9029999999990765e-06, 6.903000000002546e-06, 7.055000000002337e-06, 6.888999999999507e-06, 6.888999999999507e-06, 7.0969999999975775e-06, 6.917000000002116e-06, 6.9029999999990765e-06, 7.083999999997481e-06, 6.917000000002116e-06, 6.930999999998216e-06, 7.040999999999298e-06, 6.9029999999990765e-06, 6.917000000002116e-06, 7.054999999998868e-06, 6.9029999999990765e-06, 6.888000000000033e-06, 7.055000000002337e-06, 6.915999999999173e-06, 6.930000000002212e-06, 7.054999999998868e-06, 6.901999999999603e-06, 6.915999999999173e-06, 7.055999999998341e-06]</msg>
<status status="PASS" starttime="20201115 22:01:14.684" endtime="20201115 22:01:14.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.680" endtime="20201115 22:01:14.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.689" endtime="20201115 22:01:14.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.692" endtime="20201115 22:01:14.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.691" endtime="20201115 22:01:14.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.687" endtime="20201115 22:01:14.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.325" endtime="20201115 22:01:14.713"></status>
</kw>
<msg timestamp="20201115 22:01:14.713" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.722" endtime="20201115 22:01:14.740"></status>
</kw>
<msg timestamp="20201115 22:01:14.740" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.721" endtime="20201115 22:01:14.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.743" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.741" endtime="20201115 22:01:14.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.745" endtime="20201115 22:01:14.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.718" endtime="20201115 22:01:14.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.716" endtime="20201115 22:01:14.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.756" endtime="20201115 22:01:15.041"></status>
</kw>
<msg timestamp="20201115 22:01:15.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.754" endtime="20201115 22:01:15.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.045" endtime="20201115 22:01:15.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.053" endtime="20201115 22:01:15.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.751" endtime="20201115 22:01:15.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.749" endtime="20201115 22:01:15.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:15.060" level="INFO">${RESULT} = [{'time': 0.022399194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.022517111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:15.056" endtime="20201115 22:01:15.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:15.074" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:15.061" endtime="20201115 22:01:15.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.079" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:15.078" endtime="20201115 22:01:15.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.081" level="INFO">VALUE: [7.290999999999548e-06, 7.054999999998868e-06, 6.888999999999507e-06, 6.9029999999990765e-06, 7.056000000001811e-06, 6.9169999999986465e-06, 6.903000000002546e-06, 7.056000000001811e-06, 6.915999999999173e-06, 6.917000000002116e-06, 7.0419999999987715e-06, 6.931000000001686e-06, 6.930000000002212e-06, 7.055999999998341e-06, 6.972000000000922e-06, 6.915999999999173e-06, 7.083000000001477e-06, 6.9169999999986465e-06, 6.9029999999990765e-06, 7.040999999999298e-06, 6.9029999999990765e-06, 6.9029999999990765e-06, 7.083000000001477e-06, 6.9169999999986465e-06, 6.9029999999990765e-06, 7.054999999998868e-06, 6.917000000002116e-06, 6.931000000001686e-06, 7.0419999999987715e-06, 6.9169999999986465e-06, 6.915999999999173e-06, 7.0419999999987715e-06, 6.972000000000922e-06, 6.9169999999986465e-06, 7.056000000001811e-06, 6.9169999999986465e-06, 6.931000000001686e-06, 7.0419999999987715e-06, 6.9169999999986465e-06, 6.888999999999507e-06, 7.083999999997481e-06, 6.917000000002116e-06, 6.917000000002116e-06, 7.027000000003197e-06, 6.9029999999990765e-06, 6.915999999999173e-06, 7.068999999998438e-06, 6.915999999999173e-06, 6.929999999998743e-06, 7.040999999999298e-06]</msg>
<status status="PASS" starttime="20201115 22:01:15.080" endtime="20201115 22:01:15.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.075" endtime="20201115 22:01:15.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.084" endtime="20201115 22:01:15.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:15.088" endtime="20201115 22:01:15.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.086" endtime="20201115 22:01:15.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.083" endtime="20201115 22:01:15.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.714" endtime="20201115 22:01:15.108"></status>
</kw>
<msg timestamp="20201115 22:01:15.109" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.118" endtime="20201115 22:01:15.134"></status>
</kw>
<msg timestamp="20201115 22:01:15.135" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.116" endtime="20201115 22:01:15.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.137" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.136" endtime="20201115 22:01:15.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.138" endtime="20201115 22:01:15.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.113" endtime="20201115 22:01:15.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.111" endtime="20201115 22:01:15.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.148" endtime="20201115 22:01:15.434"></status>
</kw>
<msg timestamp="20201115 22:01:15.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022819472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02282675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:15.147" endtime="20201115 22:01:15.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022819472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02282675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:15.438" endtime="20201115 22:01:15.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.446" endtime="20201115 22:01:15.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.144" endtime="20201115 22:01:15.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.143" endtime="20201115 22:01:15.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:15.453" level="INFO">${RESULT} = [{'time': 0.02282675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.022944403, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:15.450" endtime="20201115 22:01:15.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:15.466" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:15.454" endtime="20201115 22:01:15.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.471" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:15.470" endtime="20201115 22:01:15.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.473" level="INFO">VALUE: [7.2779999999994516e-06, 7.069999999997911e-06, 6.917000000002116e-06, 6.9029999999990765e-06, 7.0829999999980076e-06, 6.888999999999507e-06, 6.958000000001352e-06, 7.040999999999298e-06, 6.860999999996897e-06, 6.9169999999986465e-06, 7.0419999999987715e-06, 6.901999999999603e-06, 6.875000000003406e-06, 7.138999999999757e-06, 6.9719999999974525e-06, 6.915999999999173e-06, 7.125000000000187e-06, 6.874999999999937e-06, 6.916000000002642e-06, 7.055999999998341e-06, 6.9169999999986465e-06, 6.930999999998216e-06, 7.0419999999987715e-06, 6.9029999999990765e-06, 6.901999999999603e-06, 7.068999999998438e-06, 6.931000000001686e-06, 6.9029999999990765e-06, 7.0419999999987715e-06, 6.9029999999990765e-06, 6.889000000002976e-06, 7.055999999998341e-06, 6.847000000000797e-06, 6.915999999999173e-06, 7.054999999998868e-06, 6.943999999998313e-06, 6.915999999999173e-06, 7.0279999999992016e-06, 6.929999999998743e-06, 6.915999999999173e-06, 7.000000000000062e-06, 6.888999999999507e-06, 6.916000000002642e-06, 7.069999999997911e-06, 6.915999999999173e-06, 6.9169999999986465e-06, 7.056000000001811e-06, 6.903000000002546e-06, 6.9029999999990765e-06, 7.097000000001047e-06]</msg>
<status status="PASS" starttime="20201115 22:01:15.472" endtime="20201115 22:01:15.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.467" endtime="20201115 22:01:15.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.476" endtime="20201115 22:01:15.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:15.480" endtime="20201115 22:01:15.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.478" endtime="20201115 22:01:15.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.475" endtime="20201115 22:01:15.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.109" endtime="20201115 22:01:15.501"></status>
</kw>
<msg timestamp="20201115 22:01:15.501" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.510" endtime="20201115 22:01:15.526"></status>
</kw>
<msg timestamp="20201115 22:01:15.527" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.508" endtime="20201115 22:01:15.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.529" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.528" endtime="20201115 22:01:15.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.531" endtime="20201115 22:01:15.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.506" endtime="20201115 22:01:15.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.504" endtime="20201115 22:01:15.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.541" endtime="20201115 22:01:15.826"></status>
</kw>
<msg timestamp="20201115 22:01:15.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022659625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022666944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.539" endtime="20201115 22:01:15.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022659625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022666944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.830" endtime="20201115 22:01:15.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.838" endtime="20201115 22:01:15.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.536" endtime="20201115 22:01:15.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.535" endtime="20201115 22:01:15.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:15.845" level="INFO">${RESULT} = [{'time': 0.022666944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.022784653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:15.842" endtime="20201115 22:01:15.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:15.858" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:15.846" endtime="20201115 22:01:15.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.863" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:15.862" endtime="20201115 22:01:15.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.865" level="INFO">VALUE: [7.319000000002157e-06, 7.055999999998341e-06, 6.901999999999603e-06, 6.903000000002546e-06, 7.125000000000187e-06, 6.915999999999173e-06, 6.930999999998216e-06, 7.054999999998868e-06, 6.901999999999603e-06, 6.901999999999603e-06, 7.040999999999298e-06, 6.930999999998216e-06, 6.916000000002642e-06, 7.084000000000951e-06, 6.901999999999603e-06, 6.9029999999990765e-06, 7.068999999998438e-06, 6.959000000000826e-06, 6.915999999999173e-06, 7.070000000001381e-06, 6.9169999999986465e-06, 6.930000000002212e-06, 7.055999999998341e-06, 6.917000000002116e-06, 6.958000000001352e-06, 7.068999999998438e-06, 6.9029999999990765e-06, 6.888000000000033e-06, 7.0829999999980076e-06, 6.8329999999977575e-06, 6.929999999998743e-06, 7.0419999999987715e-06, 6.833000000001227e-06, 6.930999999998216e-06, 7.055999999998341e-06, 6.9029999999990765e-06, 6.915999999999173e-06, 7.054999999998868e-06, 6.915999999999173e-06, 6.903000000002546e-06, 7.026999999999728e-06, 6.889000000002976e-06, 6.915999999999173e-06, 7.070000000001381e-06, 6.915999999999173e-06, 6.915999999999173e-06, 7.055999999998341e-06, 6.944000000001782e-06, 6.9029999999990765e-06, 7.068999999998438e-06]</msg>
<status status="PASS" starttime="20201115 22:01:15.864" endtime="20201115 22:01:15.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.859" endtime="20201115 22:01:15.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.869" endtime="20201115 22:01:15.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:15.872" endtime="20201115 22:01:15.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.871" endtime="20201115 22:01:15.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.867" endtime="20201115 22:01:15.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.502" endtime="20201115 22:01:15.893"></status>
</kw>
<msg timestamp="20201115 22:01:15.893" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.902" endtime="20201115 22:01:15.918"></status>
</kw>
<msg timestamp="20201115 22:01:15.919" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.901" endtime="20201115 22:01:15.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.921" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.920" endtime="20201115 22:01:15.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.922" endtime="20201115 22:01:15.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.898" endtime="20201115 22:01:15.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.896" endtime="20201115 22:01:15.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.932" endtime="20201115 22:01:16.218"></status>
</kw>
<msg timestamp="20201115 22:01:16.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02239275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:15.931" endtime="20201115 22:01:16.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02239275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:16.222" endtime="20201115 22:01:16.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.230" endtime="20201115 22:01:16.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.928" endtime="20201115 22:01:16.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.926" endtime="20201115 22:01:16.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:16.237" level="INFO">${RESULT} = [{'time': 0.02239275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.022510611, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:16.234" endtime="20201115 22:01:16.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:16.251" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:16.238" endtime="20201115 22:01:16.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.255" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:16.254" endtime="20201115 22:01:16.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.258" level="INFO">VALUE: [7.2779999999994516e-06, 7.0279999999992016e-06, 6.916000000002642e-06, 6.861000000000367e-06, 7.068999999998438e-06, 6.847000000000797e-06, 6.9029999999990765e-06, 7.055000000002337e-06, 6.944999999997786e-06, 6.915999999999173e-06, 7.013999999999632e-06, 6.986000000000492e-06, 6.847000000000797e-06, 7.069000000001907e-06, 6.9029999999990765e-06, 6.931000000001686e-06, 7.070000000001381e-06, 6.888999999999507e-06, 6.903000000002546e-06, 7.068999999998438e-06, 6.9029999999990765e-06, 6.9029999999990765e-06, 7.083000000001477e-06, 6.930999999998216e-06, 6.9169999999986465e-06, 7.084000000000951e-06, 6.915999999999173e-06, 6.888000000000033e-06, 7.055999999998341e-06, 6.888000000000033e-06, 6.917000000002116e-06, 7.0829999999980076e-06, 6.9169999999986465e-06, 6.9169999999986465e-06, 7.055999999998341e-06, 6.917000000002116e-06, 7.000000000000062e-06, 7.055999999998341e-06, 6.917000000002116e-06, 6.901999999999603e-06, 7.055999999998341e-06, 6.930000000002212e-06, 6.930999999998216e-06, 7.054999999998868e-06, 6.931000000001686e-06, 6.930000000002212e-06, 7.0829999999980076e-06, 6.9169999999986465e-06, 6.915999999999173e-06, 7.054999999998868e-06]</msg>
<status status="PASS" starttime="20201115 22:01:16.256" endtime="20201115 22:01:16.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.251" endtime="20201115 22:01:16.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.261" endtime="20201115 22:01:16.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:16.264" endtime="20201115 22:01:16.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.263" endtime="20201115 22:01:16.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.259" endtime="20201115 22:01:16.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.894" endtime="20201115 22:01:16.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.324" endtime="20201115 22:01:16.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.323" endtime="20201115 22:01:16.285"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.288" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.296" endtime="20201115 22:01:16.314"></status>
</kw>
<msg timestamp="20201115 22:01:16.314" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.295" endtime="20201115 22:01:16.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.317" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.315" endtime="20201115 22:01:16.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.318" endtime="20201115 22:01:16.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.292" endtime="20201115 22:01:16.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.290" endtime="20201115 22:01:16.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.327" endtime="20201115 22:01:16.612"></status>
</kw>
<msg timestamp="20201115 22:01:16.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024886917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024894417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.325" endtime="20201115 22:01:16.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024886917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024894417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.616" endtime="20201115 22:01:16.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.624" endtime="20201115 22:01:16.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.323" endtime="20201115 22:01:16.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.321" endtime="20201115 22:01:16.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:16.631" level="INFO">${RESULT} = [{'time': 0.024894417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.499999999997092e-06, 'source_diff': 7.499999999997092e-06}, {'time': 0.025018694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:16.627" endtime="20201115 22:01:16.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:16.645" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:16.632" endtime="20201115 22:01:16.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.650" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:16.649" endtime="20201115 22:01:16.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.653" level="INFO">VALUE: [7.499999999997092e-06, 7.250000000000312e-06, 7.083000000001477e-06, 7.111000000000617e-06, 7.179999999998993e-06, 7.083000000001477e-06, 7.125000000000187e-06, 7.263999999999882e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.263999999999882e-06, 7.097000000001047e-06, 7.0829999999980076e-06, 7.2230000000006456e-06, 7.138000000000283e-06, 7.111000000000617e-06, 7.250000000000312e-06, 7.0279999999992016e-06, 7.0969999999975775e-06, 7.304999999999118e-06, 7.110999999997147e-06, 7.138999999999757e-06, 7.263999999999882e-06, 7.111000000000617e-06, 7.138999999999757e-06, 7.236000000000742e-06, 7.084000000000951e-06, 7.111000000000617e-06, 7.250000000000312e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.250000000000312e-06, 7.167000000002366e-06, 7.111000000000617e-06, 7.250000000000312e-06, 7.084000000000951e-06, 7.0829999999980076e-06, 7.263999999999882e-06, 7.0969999999975775e-06, 7.068999999998438e-06, 7.2919999999990215e-06, 7.083000000001477e-06, 7.139000000003226e-06, 7.2079999999981326e-06, 7.111000000000617e-06, 7.097000000001047e-06, 7.236000000000742e-06, 7.068999999998438e-06, 7.125000000000187e-06, 7.250000000000312e-06]</msg>
<status status="PASS" starttime="20201115 22:01:16.651" endtime="20201115 22:01:16.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.646" endtime="20201115 22:01:16.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.656" endtime="20201115 22:01:16.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:16.659" endtime="20201115 22:01:16.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.658" endtime="20201115 22:01:16.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.654" endtime="20201115 22:01:16.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.288" endtime="20201115 22:01:16.680"></status>
</kw>
<msg timestamp="20201115 22:01:16.680" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.689" endtime="20201115 22:01:16.706"></status>
</kw>
<msg timestamp="20201115 22:01:16.706" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.687" endtime="20201115 22:01:16.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.709" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.707" endtime="20201115 22:01:16.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.710" endtime="20201115 22:01:16.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.685" endtime="20201115 22:01:16.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.683" endtime="20201115 22:01:16.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.720" endtime="20201115 22:01:17.005"></status>
</kw>
<msg timestamp="20201115 22:01:17.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022262528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022270014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.718" endtime="20201115 22:01:17.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022262528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022270014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.009" endtime="20201115 22:01:17.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.017" endtime="20201115 22:01:17.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.716" endtime="20201115 22:01:17.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.714" endtime="20201115 22:01:17.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.024" level="INFO">${RESULT} = [{'time': 0.022270014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.022393861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:17.020" endtime="20201115 22:01:17.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.037" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:17.025" endtime="20201115 22:01:17.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.042" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:17.041" endtime="20201115 22:01:17.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.044" level="INFO">VALUE: [7.486000000000992e-06, 7.250000000000312e-06, 7.0829999999980076e-06, 7.111000000000617e-06, 7.236000000000742e-06, 7.068999999998438e-06, 7.097000000001047e-06, 7.250000000000312e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.304999999999118e-06, 7.097000000001047e-06, 7.138999999999757e-06, 7.250000000000312e-06, 7.0969999999975775e-06, 7.054999999998868e-06, 7.250000000000312e-06, 7.125000000000187e-06, 7.111000000000617e-06, 7.263999999999882e-06, 7.138000000000283e-06, 7.084000000000951e-06, 7.208000000001602e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.304999999999118e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.263999999999882e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.236000000000742e-06, 7.097000000001047e-06, 7.111000000000617e-06, 7.2370000000002155e-06, 7.097000000001047e-06, 7.111000000000617e-06, 7.236000000000742e-06, 7.1529999999993266e-06, 7.097000000001047e-06, 7.250000000000312e-06, 7.110999999997147e-06, 7.111000000000617e-06, 7.250000000000312e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.250000000000312e-06, 7.097000000001047e-06, 7.069000000001907e-06, 7.290999999999548e-06]</msg>
<status status="PASS" starttime="20201115 22:01:17.043" endtime="20201115 22:01:17.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.038" endtime="20201115 22:01:17.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.048" endtime="20201115 22:01:17.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:17.051" endtime="20201115 22:01:17.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.049" endtime="20201115 22:01:17.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.046" endtime="20201115 22:01:17.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.681" endtime="20201115 22:01:17.072"></status>
</kw>
<msg timestamp="20201115 22:01:17.072" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.081" endtime="20201115 22:01:17.098"></status>
</kw>
<msg timestamp="20201115 22:01:17.098" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.079" endtime="20201115 22:01:17.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.101" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.099" endtime="20201115 22:01:17.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.102" endtime="20201115 22:01:17.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.076" endtime="20201115 22:01:17.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.074" endtime="20201115 22:01:17.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.112" endtime="20201115 22:01:17.398"></status>
</kw>
<msg timestamp="20201115 22:01:17.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022508028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.110" endtime="20201115 22:01:17.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022508028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.402" endtime="20201115 22:01:17.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.410" endtime="20201115 22:01:17.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.108" endtime="20201115 22:01:17.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.106" endtime="20201115 22:01:17.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.416" level="INFO">${RESULT} = [{'time': 0.022508028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.022632194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:17.413" endtime="20201115 22:01:17.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.434" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:17.421" endtime="20201115 22:01:17.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.439" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:17.438" endtime="20201115 22:01:17.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.441" level="INFO">VALUE: [7.486000000000992e-06, 7.263000000000408e-06, 7.070000000001381e-06, 7.111000000000617e-06, 7.2629999999969386e-06, 7.111000000000617e-06, 7.097000000001047e-06, 7.236000000000742e-06, 7.0980000000005206e-06, 7.125000000000187e-06, 7.236000000000742e-06, 7.125000000000187e-06, 7.0980000000005206e-06, 7.305999999998591e-06, 7.083000000001477e-06, 7.125000000000187e-06, 7.250000000000312e-06, 7.111000000000617e-06, 7.138999999999757e-06, 7.208000000001602e-06, 7.069999999997911e-06, 7.097000000001047e-06, 7.250000000000312e-06, 7.097000000001047e-06, 7.111000000000617e-06, 7.263999999999882e-06, 7.083000000001477e-06, 7.111000000000617e-06, 7.249999999996842e-06, 7.083999999997481e-06, 7.125000000000187e-06, 7.250000000000312e-06, 7.097000000001047e-06, 7.111000000000617e-06, 7.250000000000312e-06, 7.083000000001477e-06, 7.097000000001047e-06, 7.276999999999978e-06, 7.0980000000005206e-06, 7.0980000000005206e-06, 7.305999999998591e-06, 7.0829999999980076e-06, 7.125000000000187e-06, 7.249999999996842e-06, 7.138999999999757e-06, 7.111000000000617e-06, 7.2079999999981326e-06, 7.097000000001047e-06, 7.055999999998341e-06, 7.236000000000742e-06]</msg>
<status status="PASS" starttime="20201115 22:01:17.440" endtime="20201115 22:01:17.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.435" endtime="20201115 22:01:17.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.444" endtime="20201115 22:01:17.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:17.448" endtime="20201115 22:01:17.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.446" endtime="20201115 22:01:17.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.443" endtime="20201115 22:01:17.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.072" endtime="20201115 22:01:17.468"></status>
</kw>
<msg timestamp="20201115 22:01:17.469" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.477" endtime="20201115 22:01:17.494"></status>
</kw>
<msg timestamp="20201115 22:01:17.495" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.476" endtime="20201115 22:01:17.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.497" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.496" endtime="20201115 22:01:17.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.498" endtime="20201115 22:01:17.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.473" endtime="20201115 22:01:17.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.471" endtime="20201115 22:01:17.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.508" endtime="20201115 22:01:17.801"></status>
</kw>
<msg timestamp="20201115 22:01:17.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.507" endtime="20201115 22:01:17.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.806" endtime="20201115 22:01:17.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.814" endtime="20201115 22:01:17.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.504" endtime="20201115 22:01:17.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.502" endtime="20201115 22:01:17.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.821" level="INFO">${RESULT} = [{'time': 0.022711569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.022835458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:17.818" endtime="20201115 22:01:17.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.834" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:17.822" endtime="20201115 22:01:17.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.839" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:17.838" endtime="20201115 22:01:17.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.842" level="INFO">VALUE: [7.486000000000992e-06, 7.250000000000312e-06, 7.097000000001047e-06, 7.1669999999988965e-06, 7.222000000001172e-06, 7.0279999999992016e-06, 7.069999999997911e-06, 7.250000000000312e-06, 7.179999999998993e-06, 7.0969999999975775e-06, 7.249999999996842e-06, 7.070000000001381e-06, 7.125000000000187e-06, 7.249999999996842e-06, 7.083000000001477e-06, 7.125000000000187e-06, 7.250000000000312e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.250000000000312e-06, 7.1529999999993266e-06, 7.097000000001047e-06, 7.2219999999977025e-06, 7.0980000000005206e-06, 7.124999999996717e-06, 7.249999999996842e-06, 7.0980000000005206e-06, 7.083000000001477e-06, 7.236000000000742e-06, 7.153000000002796e-06, 7.097000000001047e-06, 7.236000000000742e-06, 7.0969999999975775e-06, 7.111000000000617e-06, 7.250000000000312e-06, 7.111000000000617e-06, 7.111000000000617e-06, 7.250000000000312e-06, 7.083999999997481e-06, 7.111000000000617e-06, 7.236000000000742e-06, 7.110999999997147e-06, 7.0980000000005206e-06, 7.236000000000742e-06, 7.1529999999993266e-06, 7.125000000000187e-06, 7.236000000000742e-06, 7.0829999999980076e-06, 7.138999999999757e-06, 7.250000000000312e-06]</msg>
<status status="PASS" starttime="20201115 22:01:17.840" endtime="20201115 22:01:17.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.835" endtime="20201115 22:01:17.842"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.845" endtime="20201115 22:01:17.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:17.848" endtime="20201115 22:01:17.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.846" endtime="20201115 22:01:17.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.843" endtime="20201115 22:01:17.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.469" endtime="20201115 22:01:17.869"></status>
</kw>
<msg timestamp="20201115 22:01:17.869" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.878" endtime="20201115 22:01:17.895"></status>
</kw>
<msg timestamp="20201115 22:01:17.895" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.876" endtime="20201115 22:01:17.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.897" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.896" endtime="20201115 22:01:17.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.899" endtime="20201115 22:01:17.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.874" endtime="20201115 22:01:17.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.872" endtime="20201115 22:01:17.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.909" endtime="20201115 22:01:18.194"></status>
</kw>
<msg timestamp="20201115 22:01:18.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022259167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.907" endtime="20201115 22:01:18.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022259167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.199" endtime="20201115 22:01:18.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.207" endtime="20201115 22:01:18.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.904" endtime="20201115 22:01:18.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.903" endtime="20201115 22:01:18.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:18.214" level="INFO">${RESULT} = [{'time': 0.022259167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.022382917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:18.210" endtime="20201115 22:01:18.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:18.228" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:18.215" endtime="20201115 22:01:18.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.232" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:18.231" endtime="20201115 22:01:18.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.235" level="INFO">VALUE: [7.486000000000992e-06, 7.250000000000312e-06, 7.070000000001381e-06, 7.097000000001047e-06, 7.194999999998036e-06, 7.069000000001907e-06, 7.125000000000187e-06, 7.236000000000742e-06, 7.151999999999853e-06, 7.111000000000617e-06, 7.320000000001631e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.236000000000742e-06, 7.097000000001047e-06, 7.1120000000000905e-06, 7.263999999999882e-06, 7.138000000000283e-06, 7.1120000000000905e-06, 7.250000000000312e-06, 7.084000000000951e-06, 7.138999999999757e-06, 7.250000000000312e-06, 7.070000000001381e-06, 7.069000000001907e-06, 7.250000000000312e-06, 7.084000000000951e-06, 7.097000000001047e-06, 7.250000000000312e-06, 7.125000000000187e-06, 7.167000000002366e-06, 7.236000000000742e-06, 7.068999999998438e-06, 7.125000000000187e-06, 7.290999999999548e-06, 7.097000000001047e-06, 7.138999999999757e-06, 7.2370000000002155e-06, 7.1120000000000905e-06, 7.180000000002462e-06, 7.236000000000742e-06, 7.111000000000617e-06, 7.097000000001047e-06, 7.250000000000312e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.222000000001172e-06, 7.1120000000000905e-06, 7.0969999999975775e-06, 7.208000000001602e-06]</msg>
<status status="PASS" starttime="20201115 22:01:18.233" endtime="20201115 22:01:18.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.229" endtime="20201115 22:01:18.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.238" endtime="20201115 22:01:18.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.242" endtime="20201115 22:01:18.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.240" endtime="20201115 22:01:18.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.236" endtime="20201115 22:01:18.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.869" endtime="20201115 22:01:18.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.287" endtime="20201115 22:01:18.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.286" endtime="20201115 22:01:18.263"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.265" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.274" endtime="20201115 22:01:18.291"></status>
</kw>
<msg timestamp="20201115 22:01:18.291" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.272" endtime="20201115 22:01:18.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.294" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.292" endtime="20201115 22:01:18.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.295" endtime="20201115 22:01:18.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.270" endtime="20201115 22:01:18.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.267" endtime="20201115 22:01:18.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.304" endtime="20201115 22:01:18.590"></status>
</kw>
<msg timestamp="20201115 22:01:18.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024809611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024817278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.303" endtime="20201115 22:01:18.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024809611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024817278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.594" endtime="20201115 22:01:18.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.602" endtime="20201115 22:01:18.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.300" endtime="20201115 22:01:18.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.298" endtime="20201115 22:01:18.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:18.609" level="INFO">${RESULT} = [{'time': 0.024817278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.024947722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:18.606" endtime="20201115 22:01:18.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:18.622" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:18.610" endtime="20201115 22:01:18.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.627" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:18.626" endtime="20201115 22:01:18.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.629" level="INFO">VALUE: [7.667000000002866e-06, 7.402999999999577e-06, 7.2919999999990215e-06, 7.290999999999548e-06, 7.444000000002282e-06, 7.305999999998591e-06, 7.305000000002587e-06, 7.417000000002616e-06, 7.250000000000312e-06, 7.304999999999118e-06, 7.430999999998716e-06, 7.208000000001602e-06, 7.2919999999990215e-06, 7.443999999998813e-06, 7.305000000002587e-06, 7.304999999999118e-06, 7.444000000002282e-06, 7.290999999999548e-06, 7.263999999999882e-06, 7.444000000002282e-06, 7.305999999998591e-06, 7.276999999999978e-06, 7.527999999999702e-06, 7.236000000000742e-06, 7.304999999999118e-06, 7.430000000002712e-06, 7.319999999998161e-06, 7.304999999999118e-06, 7.430999999998716e-06, 7.332999999998258e-06, 7.319000000002157e-06, 7.443999999998813e-06, 7.305999999998591e-06, 7.306000000002061e-06, 7.429999999999243e-06, 7.305999999998591e-06, 7.2919999999990215e-06, 7.444000000002282e-06, 7.292000000002491e-06, 7.318999999998688e-06, 7.457999999998383e-06, 7.2779999999994516e-06, 7.305000000002587e-06, 7.472000000001422e-06, 7.304999999999118e-06, 7.304999999999118e-06, 7.444999999998286e-06, 7.2919999999990215e-06, 7.306000000002061e-06, 7.500000000000562e-06]</msg>
<status status="PASS" starttime="20201115 22:01:18.628" endtime="20201115 22:01:18.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.623" endtime="20201115 22:01:18.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.633" endtime="20201115 22:01:18.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.636" endtime="20201115 22:01:18.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.634" endtime="20201115 22:01:18.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.631" endtime="20201115 22:01:18.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.265" endtime="20201115 22:01:18.657"></status>
</kw>
<msg timestamp="20201115 22:01:18.657" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.665" endtime="20201115 22:01:18.683"></status>
</kw>
<msg timestamp="20201115 22:01:18.683" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.664" endtime="20201115 22:01:18.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.686" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.684" endtime="20201115 22:01:18.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.687" endtime="20201115 22:01:18.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.661" endtime="20201115 22:01:18.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.659" endtime="20201115 22:01:18.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.697" endtime="20201115 22:01:18.985"></status>
</kw>
<msg timestamp="20201115 22:01:18.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022521903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022529569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.696" endtime="20201115 22:01:18.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022521903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022529569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.989" endtime="20201115 22:01:18.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.998" endtime="20201115 22:01:18.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.693" endtime="20201115 22:01:19.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.691" endtime="20201115 22:01:19.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.004" level="INFO">${RESULT} = [{'time': 0.022529569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.665999999999923e-06, 'source_diff': 7.665999999999923e-06}, {'time': 0.022660333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:19.001" endtime="20201115 22:01:19.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.018" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:19.005" endtime="20201115 22:01:19.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.022" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.021" endtime="20201115 22:01:19.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.025" level="INFO">VALUE: [7.665999999999923e-06, 7.389000000000007e-06, 7.2779999999994516e-06, 7.305999999998591e-06, 7.459000000001326e-06, 7.332999999998258e-06, 7.304999999999118e-06, 7.458999999997856e-06, 7.318999999998688e-06, 7.292000000002491e-06, 7.444999999998286e-06, 7.263000000000408e-06, 7.361000000000867e-06, 7.457999999998383e-06, 7.306000000002061e-06, 7.305999999998591e-06, 7.457999999998383e-06, 7.305000000002587e-06, 7.306000000002061e-06, 7.444999999998286e-06, 7.222000000001172e-06, 7.2919999999990215e-06, 7.444999999998286e-06, 7.318999999998688e-06, 7.305999999998591e-06, 7.472000000001422e-06, 7.305999999998591e-06, 7.290999999999548e-06, 7.415999999999673e-06, 7.291000000003017e-06, 7.348000000000771e-06, 7.4169999999991465e-06, 7.2919999999990215e-06, 7.306000000002061e-06, 7.444000000002282e-06, 7.2779999999994516e-06, 7.360999999997397e-06, 7.4719999999979525e-06, 7.305999999998591e-06, 7.320000000001631e-06, 7.444999999998286e-06, 7.263999999999882e-06, 7.306000000002061e-06, 7.458000000001852e-06, 7.264000000003351e-06, 7.306000000002061e-06, 7.445000000001756e-06, 7.304999999999118e-06, 7.290999999999548e-06, 7.445000000001756e-06]</msg>
<status status="PASS" starttime="20201115 22:01:19.023" endtime="20201115 22:01:19.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.019" endtime="20201115 22:01:19.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.028" endtime="20201115 22:01:19.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.031" endtime="20201115 22:01:19.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.030" endtime="20201115 22:01:19.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.026" endtime="20201115 22:01:19.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.657" endtime="20201115 22:01:19.052"></status>
</kw>
<msg timestamp="20201115 22:01:19.052" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.062" endtime="20201115 22:01:19.078"></status>
</kw>
<msg timestamp="20201115 22:01:19.079" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.060" endtime="20201115 22:01:19.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.081" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.080" endtime="20201115 22:01:19.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.082" endtime="20201115 22:01:19.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.057" endtime="20201115 22:01:19.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.055" endtime="20201115 22:01:19.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.092" endtime="20201115 22:01:19.378"></status>
</kw>
<msg timestamp="20201115 22:01:19.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.091" endtime="20201115 22:01:19.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.382" endtime="20201115 22:01:19.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.391" endtime="20201115 22:01:19.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.088" endtime="20201115 22:01:19.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.087" endtime="20201115 22:01:19.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.397" level="INFO">${RESULT} = [{'time': 0.022835417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.022966097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:19.394" endtime="20201115 22:01:19.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.411" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:19.398" endtime="20201115 22:01:19.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.415" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.414" endtime="20201115 22:01:19.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.418" level="INFO">VALUE: [7.680999999998966e-06, 7.458000000001852e-06, 7.333000000001727e-06, 7.290999999999548e-06, 7.431000000002186e-06, 7.276999999999978e-06, 7.2919999999990215e-06, 7.459000000001326e-06, 7.306000000002061e-06, 7.347000000001297e-06, 7.431000000002186e-06, 7.304999999999118e-06, 7.250000000000312e-06, 7.443999999998813e-06, 7.320000000001631e-06, 7.389000000000007e-06, 7.472000000001422e-06, 7.2919999999990215e-06, 7.305000000002587e-06, 7.457999999998383e-06, 7.305000000002587e-06, 7.290999999999548e-06, 7.443999999998813e-06, 7.2230000000006456e-06, 7.304999999999118e-06, 7.444999999998286e-06, 7.304999999999118e-06, 7.306000000002061e-06, 7.486000000000992e-06, 7.306000000002061e-06, 7.276999999999978e-06, 7.473000000000896e-06, 7.305999999998591e-06, 7.318999999998688e-06, 7.457999999998383e-06, 7.2919999999990215e-06, 7.306000000002061e-06, 7.458999999997856e-06, 7.292000000002491e-06, 7.292000000002491e-06, 7.457999999998383e-06, 7.263000000000408e-06, 7.2779999999994516e-06, 7.431000000002186e-06, 7.2779999999994516e-06, 7.306000000002061e-06, 7.486000000000992e-06, 7.292000000002491e-06, 7.374999999996967e-06, 7.402999999999577e-06]</msg>
<status status="PASS" starttime="20201115 22:01:19.416" endtime="20201115 22:01:19.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.412" endtime="20201115 22:01:19.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.421" endtime="20201115 22:01:19.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.424" endtime="20201115 22:01:19.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.423" endtime="20201115 22:01:19.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.419" endtime="20201115 22:01:19.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.053" endtime="20201115 22:01:19.446"></status>
</kw>
<msg timestamp="20201115 22:01:19.446" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.455" endtime="20201115 22:01:19.472"></status>
</kw>
<msg timestamp="20201115 22:01:19.473" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.453" endtime="20201115 22:01:19.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.475" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.474" endtime="20201115 22:01:19.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.476" endtime="20201115 22:01:19.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.451" endtime="20201115 22:01:19.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.449" endtime="20201115 22:01:19.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.486" endtime="20201115 22:01:19.772"></status>
</kw>
<msg timestamp="20201115 22:01:19.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022786847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022794611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.485" endtime="20201115 22:01:19.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022786847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022794611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.776" endtime="20201115 22:01:19.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.785" endtime="20201115 22:01:19.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.482" endtime="20201115 22:01:19.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.480" endtime="20201115 22:01:19.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.791" level="INFO">${RESULT} = [{'time': 0.022794611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.022924861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:19.788" endtime="20201115 22:01:19.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.806" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:19.792" endtime="20201115 22:01:19.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.810" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.809" endtime="20201115 22:01:19.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.813" level="INFO">VALUE: [7.764000000000382e-06, 7.458000000001852e-06, 7.2919999999990215e-06, 7.361000000000867e-06, 7.389000000000007e-06, 7.318999999998688e-06, 7.2779999999994516e-06, 7.431000000002186e-06, 7.304999999999118e-06, 7.320000000001631e-06, 7.458000000001852e-06, 7.305999999998591e-06, 7.304999999999118e-06, 7.458000000001852e-06, 7.2919999999990215e-06, 7.276999999999978e-06, 7.485999999997522e-06, 7.318999999998688e-06, 7.2919999999990215e-06, 7.457999999998383e-06, 7.2779999999994516e-06, 7.2919999999990215e-06, 7.472000000001422e-06, 7.2919999999990215e-06, 7.305999999998591e-06, 7.443999999998813e-06, 7.305999999998591e-06, 7.306000000002061e-06, 7.443999999998813e-06, 7.305999999998591e-06, 7.2919999999990215e-06, 7.486000000000992e-06, 7.332999999998258e-06, 7.2919999999990215e-06, 7.444999999998286e-06, 7.2919999999990215e-06, 7.2919999999990215e-06, 7.429999999999243e-06, 7.263999999999882e-06, 7.305999999998591e-06, 7.458000000001852e-06, 7.2919999999990215e-06, 7.305999999998591e-06, 7.4719999999979525e-06, 7.292000000002491e-06, 7.347000000001297e-06, 7.445000000001756e-06, 7.318999999998688e-06, 7.290999999999548e-06, 7.444999999998286e-06]</msg>
<status status="PASS" starttime="20201115 22:01:19.812" endtime="20201115 22:01:19.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.807" endtime="20201115 22:01:19.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.816" endtime="20201115 22:01:19.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.820" endtime="20201115 22:01:19.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.818" endtime="20201115 22:01:19.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.815" endtime="20201115 22:01:19.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.447" endtime="20201115 22:01:19.841"></status>
</kw>
<msg timestamp="20201115 22:01:19.841" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.850" endtime="20201115 22:01:19.868"></status>
</kw>
<msg timestamp="20201115 22:01:19.868" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.849" endtime="20201115 22:01:19.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.871" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.869" endtime="20201115 22:01:19.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.872" endtime="20201115 22:01:19.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.846" endtime="20201115 22:01:19.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.844" endtime="20201115 22:01:19.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.882" endtime="20201115 22:01:20.167"></status>
</kw>
<msg timestamp="20201115 22:01:20.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022939681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.880" endtime="20201115 22:01:20.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022939681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.171" endtime="20201115 22:01:20.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.179" endtime="20201115 22:01:20.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.878" endtime="20201115 22:01:20.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.876" endtime="20201115 22:01:20.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.186" level="INFO">${RESULT} = [{'time': 0.022939681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.023070333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:20.183" endtime="20201115 22:01:20.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.200" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:20.187" endtime="20201115 22:01:20.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.204" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.203" endtime="20201115 22:01:20.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.207" level="INFO">VALUE: [7.666999999999397e-06, 7.457999999998383e-06, 7.304999999999118e-06, 7.306000000002061e-06, 7.444000000002282e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.402999999999577e-06, 7.2919999999990215e-06, 7.304999999999118e-06, 7.457999999998383e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.444000000002282e-06, 7.305999999998591e-06, 7.305000000002587e-06, 7.430999999998716e-06, 7.292000000002491e-06, 7.276999999999978e-06, 7.443999999998813e-06, 7.3620000000003405e-06, 7.304999999999118e-06, 7.429999999999243e-06, 7.305999999998591e-06, 7.292000000002491e-06, 7.444999999998286e-06, 7.2779999999994516e-06, 7.361000000000867e-06, 7.459000000001326e-06, 7.305999999998591e-06, 7.318999999998688e-06, 7.443999999998813e-06, 7.290999999999548e-06, 7.319999999998161e-06, 7.4870000000004655e-06, 7.318999999998688e-06, 7.304999999999118e-06, 7.429999999999243e-06, 7.3620000000003405e-06, 7.319999999998161e-06, 7.459000000001326e-06, 7.305999999998591e-06, 7.2919999999990215e-06, 7.458000000001852e-06, 7.290999999999548e-06, 7.2370000000002155e-06, 7.443999999998813e-06, 7.2779999999994516e-06, 7.304999999999118e-06, 7.500000000000562e-06]</msg>
<status status="PASS" starttime="20201115 22:01:20.205" endtime="20201115 22:01:20.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.201" endtime="20201115 22:01:20.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.210" endtime="20201115 22:01:20.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:20.214" endtime="20201115 22:01:20.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.212" endtime="20201115 22:01:20.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.209" endtime="20201115 22:01:20.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.842" endtime="20201115 22:01:20.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.264" endtime="20201115 22:01:20.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.263" endtime="20201115 22:01:20.235"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.237" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.246" endtime="20201115 22:01:20.264"></status>
</kw>
<msg timestamp="20201115 22:01:20.265" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.244" endtime="20201115 22:01:20.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.267" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.266" endtime="20201115 22:01:20.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.268" endtime="20201115 22:01:20.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.242" endtime="20201115 22:01:20.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.240" endtime="20201115 22:01:20.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.277" endtime="20201115 22:01:20.563"></status>
</kw>
<msg timestamp="20201115 22:01:20.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024775042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024782917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.276" endtime="20201115 22:01:20.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024775042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024782917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.567" endtime="20201115 22:01:20.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.575" endtime="20201115 22:01:20.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.273" endtime="20201115 22:01:20.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.272" endtime="20201115 22:01:20.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.581" level="INFO">${RESULT} = [{'time': 0.024782917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.875000000000937e-06, 'source_diff': 7.875000000000937e-06}, {'time': 0.024919917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:20.578" endtime="20201115 22:01:20.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.595" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:20.582" endtime="20201115 22:01:20.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.599" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.598" endtime="20201115 22:01:20.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.602" level="INFO">VALUE: [7.875000000000937e-06, 7.611000000001117e-06, 7.486000000000992e-06, 7.500000000000562e-06, 7.638000000000783e-06, 7.500000000000562e-06, 7.500000000000562e-06, 7.624999999997217e-06, 7.430999999998716e-06, 7.486000000000992e-06, 7.639000000000257e-06, 7.499999999997092e-06, 7.500000000000562e-06, 7.625000000000687e-06, 7.473000000000896e-06, 7.500000000000562e-06, 7.639000000000257e-06, 7.486000000000992e-06, 7.514000000000132e-06, 7.625000000000687e-06, 7.472999999997426e-06, 7.527999999999702e-06, 7.639000000000257e-06, 7.486000000000992e-06, 7.513000000000658e-06, 7.652999999999827e-06, 7.555000000002837e-06, 7.514000000000132e-06, 7.597000000001547e-06, 7.443999999998813e-06, 7.500000000000562e-06, 7.652999999999827e-06, 7.527000000000228e-06, 7.514000000000132e-06, 7.6109999999976474e-06, 7.486000000000992e-06, 7.500000000000562e-06, 7.611000000001117e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.625000000000687e-06, 7.486000000000992e-06, 7.513999999996662e-06, 7.639000000000257e-06, 7.430000000002712e-06, 7.500000000000562e-06, 7.639000000000257e-06, 7.486000000000992e-06, 7.486000000000992e-06, 7.638999999996787e-06]</msg>
<status status="PASS" starttime="20201115 22:01:20.600" endtime="20201115 22:01:20.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.596" endtime="20201115 22:01:20.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.605" endtime="20201115 22:01:20.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:20.609" endtime="20201115 22:01:20.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.607" endtime="20201115 22:01:20.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.604" endtime="20201115 22:01:20.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.238" endtime="20201115 22:01:20.629"></status>
</kw>
<msg timestamp="20201115 22:01:20.630" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.639" endtime="20201115 22:01:20.657"></status>
</kw>
<msg timestamp="20201115 22:01:20.657" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.637" endtime="20201115 22:01:20.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.660" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.658" endtime="20201115 22:01:20.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.661" endtime="20201115 22:01:20.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.634" endtime="20201115 22:01:20.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.632" endtime="20201115 22:01:20.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.671" endtime="20201115 22:01:20.956"></status>
</kw>
<msg timestamp="20201115 22:01:20.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022812625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022820486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.669" endtime="20201115 22:01:20.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022812625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022820486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.960" endtime="20201115 22:01:20.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.968" endtime="20201115 22:01:20.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.667" endtime="20201115 22:01:20.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.665" endtime="20201115 22:01:20.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.975" level="INFO">${RESULT} = [{'time': 0.022820486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.022957403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:20.972" endtime="20201115 22:01:20.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.988" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:20.976" endtime="20201115 22:01:20.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.993" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.992" endtime="20201115 22:01:20.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.996" level="INFO">VALUE: [7.861000000001367e-06, 7.652999999999827e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.625000000000687e-06, 7.457999999998383e-06, 7.541000000003267e-06, 7.611000000001117e-06, 7.473000000000896e-06, 7.500000000000562e-06, 7.611000000001117e-06, 7.472999999997426e-06, 7.500000000000562e-06, 7.665999999999923e-06, 7.486000000000992e-06, 7.514000000000132e-06, 7.652999999999827e-06, 7.458000000001852e-06, 7.4870000000004655e-06, 7.695000000002006e-06, 7.458999999997856e-06, 7.555999999998841e-06, 7.6109999999976474e-06, 7.459000000001326e-06, 7.4719999999979525e-06, 7.639000000000257e-06, 7.486000000000992e-06, 7.514000000000132e-06, 7.625000000000687e-06, 7.4870000000004655e-06, 7.528000000003171e-06, 7.639000000000257e-06, 7.500000000000562e-06, 7.486000000000992e-06, 7.666999999999397e-06, 7.472999999997426e-06, 7.514000000000132e-06, 7.652999999999827e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.639000000000257e-06, 7.4719999999979525e-06, 7.500000000000562e-06, 7.639000000000257e-06, 7.486000000000992e-06, 7.500000000000562e-06, 7.582999999998508e-06, 7.457999999998383e-06, 7.500000000000562e-06, 7.625000000000687e-06]</msg>
<status status="PASS" starttime="20201115 22:01:20.994" endtime="20201115 22:01:20.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.990" endtime="20201115 22:01:20.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.999" endtime="20201115 22:01:21.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.002" endtime="20201115 22:01:21.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.001" endtime="20201115 22:01:21.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.997" endtime="20201115 22:01:21.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.630" endtime="20201115 22:01:21.023"></status>
</kw>
<msg timestamp="20201115 22:01:21.023" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.032" endtime="20201115 22:01:21.049"></status>
</kw>
<msg timestamp="20201115 22:01:21.050" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.030" endtime="20201115 22:01:21.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.052" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.051" endtime="20201115 22:01:21.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.053" endtime="20201115 22:01:21.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.028" endtime="20201115 22:01:21.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.026" endtime="20201115 22:01:21.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.063" endtime="20201115 22:01:21.349"></status>
</kw>
<msg timestamp="20201115 22:01:21.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02228475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022292583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:21.062" endtime="20201115 22:01:21.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02228475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022292583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:21.353" endtime="20201115 22:01:21.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.361" endtime="20201115 22:01:21.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.059" endtime="20201115 22:01:21.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.057" endtime="20201115 22:01:21.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.368" level="INFO">${RESULT} = [{'time': 0.022292583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.833000000002227e-06, 'source_diff': 7.833000000002227e-06}, {'time': 0.022429667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:21.364" endtime="20201115 22:01:21.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.382" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:21.369" endtime="20201115 22:01:21.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.387" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.386" endtime="20201115 22:01:21.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.389" level="INFO">VALUE: [7.833000000002227e-06, 7.625000000000687e-06, 7.500000000000562e-06, 7.500000000000562e-06, 7.639000000000257e-06, 7.472000000001422e-06, 7.514000000000132e-06, 7.637999999997314e-06, 7.485999999997522e-06, 7.514000000000132e-06, 7.639000000000257e-06, 7.472000000001422e-06, 7.500000000000562e-06, 7.652999999999827e-06, 7.500000000000562e-06, 7.499999999997092e-06, 7.639000000000257e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.639000000000257e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.6120000000005905e-06, 7.486000000000992e-06, 7.500000000000562e-06, 7.639000000000257e-06, 7.443999999998813e-06, 7.554999999999368e-06, 7.639000000000257e-06, 7.430000000002712e-06, 7.514000000000132e-06, 7.652999999999827e-06, 7.500000000000562e-06, 7.500000000000562e-06, 7.652999999999827e-06, 7.500000000000562e-06, 7.486000000000992e-06, 7.639000000000257e-06, 7.486000000000992e-06, 7.500000000000562e-06, 7.597000000001547e-06, 7.472000000001422e-06, 7.500000000000562e-06, 7.639000000000257e-06, 7.458000000001852e-06, 7.500000000000562e-06, 7.652999999999827e-06, 7.486000000000992e-06, 7.500000000000562e-06, 7.624999999997217e-06]</msg>
<status status="PASS" starttime="20201115 22:01:21.388" endtime="20201115 22:01:21.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.383" endtime="20201115 22:01:21.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.393" endtime="20201115 22:01:21.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.396" endtime="20201115 22:01:21.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.395" endtime="20201115 22:01:21.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.391" endtime="20201115 22:01:21.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.024" endtime="20201115 22:01:21.417"></status>
</kw>
<msg timestamp="20201115 22:01:21.417" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.426" endtime="20201115 22:01:21.442"></status>
</kw>
<msg timestamp="20201115 22:01:21.443" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.424" endtime="20201115 22:01:21.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.445" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.444" endtime="20201115 22:01:21.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.446" endtime="20201115 22:01:21.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.422" endtime="20201115 22:01:21.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.420" endtime="20201115 22:01:21.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.456" endtime="20201115 22:01:21.742"></status>
</kw>
<msg timestamp="20201115 22:01:21.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02241925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022427069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:21.454" endtime="20201115 22:01:21.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02241925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022427069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:21.746" endtime="20201115 22:01:21.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.754" endtime="20201115 22:01:21.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.452" endtime="20201115 22:01:21.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.450" endtime="20201115 22:01:21.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.761" level="INFO">${RESULT} = [{'time': 0.022427069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.818999999999188e-06, 'source_diff': 7.818999999999188e-06}, {'time': 0.022563958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:21.758" endtime="20201115 22:01:21.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.774" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:21.762" endtime="20201115 22:01:21.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.779" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.778" endtime="20201115 22:01:21.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.781" level="INFO">VALUE: [7.818999999999188e-06, 7.639000000000257e-06, 7.459000000001326e-06, 7.499999999997092e-06, 7.680999999998966e-06, 7.527999999999702e-06, 7.499999999997092e-06, 7.625000000000687e-06, 7.472000000001422e-06, 7.514000000000132e-06, 7.666999999999397e-06, 7.457999999998383e-06, 7.458999999997856e-06, 7.625000000000687e-06, 7.486000000000992e-06, 7.514000000000132e-06, 7.639000000000257e-06, 7.486000000000992e-06, 7.500000000000562e-06, 7.637999999997314e-06, 7.500000000000562e-06, 7.500000000000562e-06, 7.639000000000257e-06, 7.486000000000992e-06, 7.499999999997092e-06, 7.624999999997217e-06, 7.472000000001422e-06, 7.500000000000562e-06, 7.611000000001117e-06, 7.457999999998383e-06, 7.486000000000992e-06, 7.625000000000687e-06, 7.485999999997522e-06, 7.513999999996662e-06, 7.694999999998536e-06, 7.500000000000562e-06, 7.473000000000896e-06, 7.568999999998938e-06, 7.457999999998383e-06, 7.500000000000562e-06, 7.639000000000257e-06, 7.4870000000004655e-06, 7.500000000000562e-06, 7.652999999999827e-06, 7.4719999999979525e-06, 7.500000000000562e-06, 7.625000000000687e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.625000000000687e-06]</msg>
<status status="PASS" starttime="20201115 22:01:21.780" endtime="20201115 22:01:21.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.775" endtime="20201115 22:01:21.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.784" endtime="20201115 22:01:21.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.788" endtime="20201115 22:01:21.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.786" endtime="20201115 22:01:21.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.783" endtime="20201115 22:01:21.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.418" endtime="20201115 22:01:21.809"></status>
</kw>
<msg timestamp="20201115 22:01:21.809" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.818" endtime="20201115 22:01:21.835"></status>
</kw>
<msg timestamp="20201115 22:01:21.836" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.816" endtime="20201115 22:01:21.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.838" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.837" endtime="20201115 22:01:21.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.839" endtime="20201115 22:01:21.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.814" endtime="20201115 22:01:21.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.811" endtime="20201115 22:01:21.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.849" endtime="20201115 22:01:22.135"></status>
</kw>
<msg timestamp="20201115 22:01:22.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022420306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.848" endtime="20201115 22:01:22.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022420306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.139" endtime="20201115 22:01:22.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.148" endtime="20201115 22:01:22.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.845" endtime="20201115 22:01:22.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.843" endtime="20201115 22:01:22.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.154" level="INFO">${RESULT} = [{'time': 0.022420306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.875000000000937e-06, 'source_diff': 7.875000000000937e-06}, {'time': 0.022557181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:22.151" endtime="20201115 22:01:22.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.168" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:22.155" endtime="20201115 22:01:22.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.172" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.171" endtime="20201115 22:01:22.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.175" level="INFO">VALUE: [7.875000000000937e-06, 7.652999999999827e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.652999999999827e-06, 7.430999999998716e-06, 7.514000000000132e-06, 7.666999999999397e-06, 7.500000000000562e-06, 7.4870000000004655e-06, 7.639000000000257e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.625000000000687e-06, 7.499999999997092e-06, 7.527999999999702e-06, 7.639000000000257e-06, 7.457999999998383e-06, 7.486999999996996e-06, 7.624999999997217e-06, 7.527999999999702e-06, 7.528000000003171e-06, 7.597000000001547e-06, 7.458000000001852e-06, 7.472000000001422e-06, 7.652999999999827e-06, 7.444000000002282e-06, 7.500000000000562e-06, 7.639000000000257e-06, 7.556000000002311e-06, 7.4719999999979525e-06, 7.625000000000687e-06, 7.486000000000992e-06, 7.514000000000132e-06, 7.624999999997217e-06, 7.485999999997522e-06, 7.500000000000562e-06, 7.624999999997217e-06, 7.457999999998383e-06, 7.500000000000562e-06, 7.639000000000257e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.652999999999827e-06, 7.472000000001422e-06, 7.500000000000562e-06, 7.652999999999827e-06, 7.514000000000132e-06, 7.569000000002407e-06, 7.625000000000687e-06]</msg>
<status status="PASS" starttime="20201115 22:01:22.173" endtime="20201115 22:01:22.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.169" endtime="20201115 22:01:22.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.178" endtime="20201115 22:01:22.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:22.181" endtime="20201115 22:01:22.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.180" endtime="20201115 22:01:22.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.176" endtime="20201115 22:01:22.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.809" endtime="20201115 22:01:22.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.236" endtime="20201115 22:01:22.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.235" endtime="20201115 22:01:22.202"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.204" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.213" endtime="20201115 22:01:22.231"></status>
</kw>
<msg timestamp="20201115 22:01:22.232" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.212" endtime="20201115 22:01:22.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.234" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.233" endtime="20201115 22:01:22.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.236" endtime="20201115 22:01:22.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.209" endtime="20201115 22:01:22.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.207" endtime="20201115 22:01:22.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.245" endtime="20201115 22:01:22.531"></status>
</kw>
<msg timestamp="20201115 22:01:22.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024569167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024577264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.244" endtime="20201115 22:01:22.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024569167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024577264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.535" endtime="20201115 22:01:22.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.543" endtime="20201115 22:01:22.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.241" endtime="20201115 22:01:22.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.239" endtime="20201115 22:01:22.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.550" level="INFO">${RESULT} = [{'time': 0.024577264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.097000000002047e-06, 'source_diff': 8.097000000002047e-06}, {'time': 0.024721125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:22.546" endtime="20201115 22:01:22.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.563" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:22.551" endtime="20201115 22:01:22.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.568" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.567" endtime="20201115 22:01:22.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.570" level="INFO">VALUE: [8.097000000002047e-06, 7.875000000000937e-06, 7.694999999998536e-06, 7.681000000002436e-06, 7.832999999998758e-06, 7.666999999999397e-06, 7.679999999999493e-06, 7.930999999999216e-06, 7.693999999999063e-06, 7.694000000002532e-06, 7.847000000001797e-06, 7.625000000000687e-06, 7.707999999998633e-06, 7.846999999998328e-06, 7.694000000002532e-06, 7.723000000001146e-06, 7.805999999999091e-06, 7.694000000002532e-06, 7.693999999999063e-06, 7.833999999998231e-06, 7.695000000002006e-06, 7.665999999999923e-06, 7.832999999998758e-06, 7.679999999999493e-06, 7.666999999999397e-06, 7.8340000000017e-06, 7.693999999999063e-06, 7.680999999998966e-06, 7.8340000000017e-06, 7.680999999998966e-06, 7.750000000000812e-06, 7.846999999998328e-06, 7.611000000001117e-06, 7.736000000001242e-06, 7.861000000001367e-06, 7.708999999998106e-06, 7.666999999999397e-06, 7.847000000001797e-06, 7.693999999999063e-06, 7.693999999999063e-06, 7.875000000000937e-06, 7.695000000002006e-06, 7.749999999997342e-06, 7.86200000000084e-06, 7.624999999997217e-06, 7.680999999998966e-06, 7.8340000000017e-06, 7.681000000002436e-06, 7.695000000002006e-06, 7.860999999997897e-06]</msg>
<status status="PASS" starttime="20201115 22:01:22.569" endtime="20201115 22:01:22.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.564" endtime="20201115 22:01:22.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.573" endtime="20201115 22:01:22.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:22.577" endtime="20201115 22:01:22.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.575" endtime="20201115 22:01:22.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.572" endtime="20201115 22:01:22.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.205" endtime="20201115 22:01:22.598"></status>
</kw>
<msg timestamp="20201115 22:01:22.598" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.606" endtime="20201115 22:01:22.625"></status>
</kw>
<msg timestamp="20201115 22:01:22.625" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.605" endtime="20201115 22:01:22.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.627" endtime="20201115 22:01:22.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.634" endtime="20201115 22:01:22.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.602" endtime="20201115 22:01:22.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.600" endtime="20201115 22:01:22.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.644" endtime="20201115 22:01:22.929"></status>
</kw>
<msg timestamp="20201115 22:01:22.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226895, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:22.642" endtime="20201115 22:01:22.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226895, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:22.933" endtime="20201115 22:01:22.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.941" endtime="20201115 22:01:22.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.640" endtime="20201115 22:01:22.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.638" endtime="20201115 22:01:22.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.948" level="INFO">${RESULT} = [{'time': 0.0226895, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.056000000002811e-06, 'source_diff': 8.056000000002811e-06}, {'time': 0.022833431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:22.945" endtime="20201115 22:01:22.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.963" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:22.949" endtime="20201115 22:01:22.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.967" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.966" endtime="20201115 22:01:22.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.970" level="INFO">VALUE: [8.056000000002811e-06, 7.8340000000017e-06, 7.694000000002532e-06, 7.680999999998966e-06, 7.847000000001797e-06, 7.680999999998966e-06, 7.680999999998966e-06, 7.833999999998231e-06, 7.695000000002006e-06, 7.708999999998106e-06, 7.818999999999188e-06, 7.694000000002532e-06, 7.693999999999063e-06, 7.832999999998758e-06, 7.679999999999493e-06, 7.695000000002006e-06, 7.846999999998328e-06, 7.681000000002436e-06, 7.680999999998966e-06, 7.847999999997801e-06, 7.707999999998633e-06, 7.666999999999397e-06, 7.8340000000017e-06, 7.695000000002006e-06, 7.708000000002102e-06, 7.860999999997897e-06, 7.680999999998966e-06, 7.679999999999493e-06, 7.860999999997897e-06, 7.666999999999397e-06, 7.722000000001672e-06, 7.846999999998328e-06, 7.693999999999063e-06, 7.680999999998966e-06, 7.777999999999952e-06, 7.679999999999493e-06, 7.681000000002436e-06, 7.832999999998758e-06, 7.693999999999063e-06, 7.693999999999063e-06, 7.832999999998758e-06, 7.695000000002006e-06, 7.693999999999063e-06, 7.8340000000017e-06, 7.681000000002436e-06, 7.625000000000687e-06, 7.832999999998758e-06, 7.694000000002532e-06, 7.695000000002006e-06, 7.847000000001797e-06]</msg>
<status status="PASS" starttime="20201115 22:01:22.968" endtime="20201115 22:01:22.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.964" endtime="20201115 22:01:22.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.973" endtime="20201115 22:01:22.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:22.976" endtime="20201115 22:01:22.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.975" endtime="20201115 22:01:22.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.971" endtime="20201115 22:01:22.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.598" endtime="20201115 22:01:22.997"></status>
</kw>
<msg timestamp="20201115 22:01:22.997" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.007" endtime="20201115 22:01:23.024"></status>
</kw>
<msg timestamp="20201115 22:01:23.024" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.005" endtime="20201115 22:01:23.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.027" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.025" endtime="20201115 22:01:23.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.028" endtime="20201115 22:01:23.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.002" endtime="20201115 22:01:23.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.000" endtime="20201115 22:01:23.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.038" endtime="20201115 22:01:23.324"></status>
</kw>
<msg timestamp="20201115 22:01:23.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023417708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023425792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.036" endtime="20201115 22:01:23.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023417708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023425792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.328" endtime="20201115 22:01:23.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.336" endtime="20201115 22:01:23.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.034" endtime="20201115 22:01:23.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.032" endtime="20201115 22:01:23.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.343" level="INFO">${RESULT} = [{'time': 0.023425792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.08400000000195e-06, 'source_diff': 8.08400000000195e-06}, {'time': 0.023569444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:23.340" endtime="20201115 22:01:23.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.357" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:23.344" endtime="20201115 22:01:23.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.361" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.360" endtime="20201115 22:01:23.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.364" level="INFO">VALUE: [8.08400000000195e-06, 7.832999999998758e-06, 7.695000000002006e-06, 7.707999999998633e-06, 7.805999999999091e-06, 7.681000000002436e-06, 7.694000000002532e-06, 7.847999999997801e-06, 7.681000000002436e-06, 7.624999999997217e-06, 7.8340000000017e-06, 7.694000000002532e-06, 7.694999999998536e-06, 7.84800000000127e-06, 7.680999999998966e-06, 7.693999999999063e-06, 7.8340000000017e-06, 7.679999999999493e-06, 7.709000000001576e-06, 7.847000000001797e-06, 7.667000000002866e-06, 7.693999999999063e-06, 7.861999999997371e-06, 7.707999999998633e-06, 7.694999999998536e-06, 7.847000000001797e-06, 7.695000000002006e-06, 7.694999999998536e-06, 7.903000000000077e-06, 7.679999999999493e-06, 7.693999999999063e-06, 7.818999999999188e-06, 7.694999999998536e-06, 7.708999999998106e-06, 7.819999999998661e-06, 7.625000000000687e-06, 7.694999999998536e-06, 7.819999999998661e-06, 7.764000000000382e-06, 7.625000000000687e-06, 7.847000000001797e-06, 7.764000000000382e-06, 7.679999999999493e-06, 7.832999999998758e-06, 7.750000000000812e-06, 7.679999999999493e-06, 7.832999999998758e-06, 7.680999999998966e-06, 7.652999999999827e-06, 7.832999999998758e-06]</msg>
<status status="PASS" starttime="20201115 22:01:23.362" endtime="20201115 22:01:23.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.358" endtime="20201115 22:01:23.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.367" endtime="20201115 22:01:23.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.370" endtime="20201115 22:01:23.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.369" endtime="20201115 22:01:23.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.365" endtime="20201115 22:01:23.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.998" endtime="20201115 22:01:23.391"></status>
</kw>
<msg timestamp="20201115 22:01:23.391" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.400" endtime="20201115 22:01:23.418"></status>
</kw>
<msg timestamp="20201115 22:01:23.418" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.399" endtime="20201115 22:01:23.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.420" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.419" endtime="20201115 22:01:23.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.421" endtime="20201115 22:01:23.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.396" endtime="20201115 22:01:23.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.394" endtime="20201115 22:01:23.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.432" endtime="20201115 22:01:23.717"></status>
</kw>
<msg timestamp="20201115 22:01:23.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022737417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.430" endtime="20201115 22:01:23.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022737417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.721" endtime="20201115 22:01:23.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.729" endtime="20201115 22:01:23.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.427" endtime="20201115 22:01:23.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.426" endtime="20201115 22:01:23.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.736" level="INFO">${RESULT} = [{'time': 0.022745472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.022889181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:23.733" endtime="20201115 22:01:23.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.749" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:23.737" endtime="20201115 22:01:23.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.754" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.753" endtime="20201115 22:01:23.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.756" level="INFO">VALUE: [8.054999999999868e-06, 7.8340000000017e-06, 7.680000000002962e-06, 7.695000000002006e-06, 7.832999999998758e-06, 7.764000000000382e-06, 7.694000000002532e-06, 7.84800000000127e-06, 7.777999999999952e-06, 7.722000000001672e-06, 7.903000000000077e-06, 7.695000000002006e-06, 7.693999999999063e-06, 7.846999999998328e-06, 7.666999999999397e-06, 7.694999999998536e-06, 7.833000000002227e-06, 7.679999999999493e-06, 7.721999999998203e-06, 7.833999999998231e-06, 7.680999999998966e-06, 7.694000000002532e-06, 7.819000000002657e-06, 7.693999999999063e-06, 7.736000000001242e-06, 7.833999999998231e-06, 7.708000000002102e-06, 7.679999999999493e-06, 7.84800000000127e-06, 7.694000000002532e-06, 7.695000000002006e-06, 7.847000000001797e-06, 7.694000000002532e-06, 7.695000000002006e-06, 7.847000000001797e-06, 7.680999999998966e-06, 7.681000000002436e-06, 7.847999999997801e-06, 7.708000000002102e-06, 7.736000000001242e-06, 7.832999999998758e-06, 7.639000000000257e-06, 7.680999999998966e-06, 7.832999999998758e-06, 7.665999999999923e-06, 7.693999999999063e-06, 7.777999999999952e-06, 7.679999999999493e-06, 7.763999999996912e-06, 7.832999999998758e-06]</msg>
<status status="PASS" starttime="20201115 22:01:23.755" endtime="20201115 22:01:23.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.750" endtime="20201115 22:01:23.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.760" endtime="20201115 22:01:23.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.764" endtime="20201115 22:01:23.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.762" endtime="20201115 22:01:23.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.758" endtime="20201115 22:01:23.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.392" endtime="20201115 22:01:23.784"></status>
</kw>
<msg timestamp="20201115 22:01:23.784" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.793" endtime="20201115 22:01:23.811"></status>
</kw>
<msg timestamp="20201115 22:01:23.811" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.792" endtime="20201115 22:01:23.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.814" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.812" endtime="20201115 22:01:23.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.815" endtime="20201115 22:01:23.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.789" endtime="20201115 22:01:23.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.787" endtime="20201115 22:01:23.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.825" endtime="20201115 22:01:24.110"></status>
</kw>
<msg timestamp="20201115 22:01:24.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022400569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.823" endtime="20201115 22:01:24.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022400569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.114" endtime="20201115 22:01:24.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.123" endtime="20201115 22:01:24.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.821" endtime="20201115 22:01:24.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.819" endtime="20201115 22:01:24.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:24.129" level="INFO">${RESULT} = [{'time': 0.022400569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.022544333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:24.126" endtime="20201115 22:01:24.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:24.143" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:24.130" endtime="20201115 22:01:24.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.147" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:24.146" endtime="20201115 22:01:24.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.150" level="INFO">VALUE: [8.082999999999008e-06, 7.832999999998758e-06, 7.653000000003296e-06, 7.694999999998536e-06, 7.84800000000127e-06, 7.639000000000257e-06, 7.680999999998966e-06, 7.846999999998328e-06, 7.694999999998536e-06, 7.709000000001576e-06, 7.847000000001797e-06, 7.695000000002006e-06, 7.679999999999493e-06, 7.805999999999091e-06, 7.695000000002006e-06, 7.709000000001576e-06, 7.833000000002227e-06, 7.695000000002006e-06, 7.693999999999063e-06, 7.889000000000507e-06, 7.680999999998966e-06, 7.707999999998633e-06, 7.833999999998231e-06, 7.679999999999493e-06, 7.679999999999493e-06, 7.847000000001797e-06, 7.721999999998203e-06, 7.665999999999923e-06, 7.833000000002227e-06, 7.681000000002436e-06, 7.694000000002532e-06, 7.861000000001367e-06, 7.680999999998966e-06, 7.735999999997772e-06, 7.832999999998758e-06, 7.680000000002962e-06, 7.693999999999063e-06, 7.833000000002227e-06, 7.680999999998966e-06, 7.707999999998633e-06, 7.861999999997371e-06, 7.707999999998633e-06, 7.680999999998966e-06, 7.847000000001797e-06, 7.680999999998966e-06, 7.680999999998966e-06, 7.777999999999952e-06, 7.694999999998536e-06, 7.680000000002962e-06, 7.818999999999188e-06]</msg>
<status status="PASS" starttime="20201115 22:01:24.148" endtime="20201115 22:01:24.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.144" endtime="20201115 22:01:24.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.153" endtime="20201115 22:01:24.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:24.157" endtime="20201115 22:01:24.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.155" endtime="20201115 22:01:24.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.152" endtime="20201115 22:01:24.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.785" endtime="20201115 22:01:24.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.203" endtime="20201115 22:01:24.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.203" endtime="20201115 22:01:24.178"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.181" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.190" endtime="20201115 22:01:24.207"></status>
</kw>
<msg timestamp="20201115 22:01:24.207" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.188" endtime="20201115 22:01:24.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.210" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.208" endtime="20201115 22:01:24.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.211" endtime="20201115 22:01:24.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.185" endtime="20201115 22:01:24.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.183" endtime="20201115 22:01:24.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.220" endtime="20201115 22:01:24.519"></status>
</kw>
<msg timestamp="20201115 22:01:24.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025546583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025554847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.218" endtime="20201115 22:01:24.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025546583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025554847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.523" endtime="20201115 22:01:24.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.531" endtime="20201115 22:01:24.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.216" endtime="20201115 22:01:24.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.214" endtime="20201115 22:01:24.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:24.538" level="INFO">${RESULT} = [{'time': 0.025554847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.263999999997412e-06, 'source_diff': 8.263999999997412e-06}, {'time': 0.025705292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:24.534" endtime="20201115 22:01:24.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:24.552" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:24.539" endtime="20201115 22:01:24.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.557" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:24.555" endtime="20201115 22:01:24.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.559" level="INFO">VALUE: [8.263999999997412e-06, 7.945000000002256e-06, 7.874999999997467e-06, 7.959000000001826e-06, 8.014000000000632e-06, 7.875000000000937e-06, 7.874999999997467e-06, 8.027000000000728e-06, 7.861000000001367e-06, 7.903000000000077e-06, 8.000000000001062e-06, 7.860999999997897e-06, 7.902000000000603e-06, 8.014000000000632e-06, 7.874999999997467e-06, 7.903000000000077e-06, 8.041000000000298e-06, 7.846999999998328e-06, 7.889000000000507e-06, 8.097999999998051e-06, 7.875000000000937e-06, 7.929999999999743e-06, 8.026999999997259e-06, 7.875000000000937e-06, 7.929999999999743e-06, 8.014000000000632e-06, 7.875000000000937e-06, 7.889000000000507e-06, 8.014000000000632e-06, 7.916000000000173e-06, 7.86200000000084e-06, 8.014000000000632e-06, 7.889000000000507e-06, 7.889000000000507e-06, 8.027000000000728e-06, 7.861999999997371e-06, 7.903000000000077e-06, 8.028000000000202e-06, 7.888999999997037e-06, 7.901999999997134e-06, 8.026999999993789e-06, 7.832999999998758e-06, 7.916000000003642e-06, 8.014000000000632e-06, 7.861000000004836e-06, 7.901999999997134e-06, 8.027000000000728e-06, 7.875000000004406e-06, 7.930000000003212e-06, 8.014000000000632e-06]</msg>
<status status="PASS" starttime="20201115 22:01:24.558" endtime="20201115 22:01:24.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.553" endtime="20201115 22:01:24.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.563" endtime="20201115 22:01:24.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:24.566" endtime="20201115 22:01:24.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.564" endtime="20201115 22:01:24.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.561" endtime="20201115 22:01:24.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.181" endtime="20201115 22:01:24.587"></status>
</kw>
<msg timestamp="20201115 22:01:24.587" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.596" endtime="20201115 22:01:24.614"></status>
</kw>
<msg timestamp="20201115 22:01:24.615" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.594" endtime="20201115 22:01:24.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.617" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.616" endtime="20201115 22:01:24.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.618" endtime="20201115 22:01:24.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.591" endtime="20201115 22:01:24.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.589" endtime="20201115 22:01:24.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.628" endtime="20201115 22:01:24.915"></status>
</kw>
<msg timestamp="20201115 22:01:24.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022591792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.627" endtime="20201115 22:01:24.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022591792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.919" endtime="20201115 22:01:24.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.927" endtime="20201115 22:01:24.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.624" endtime="20201115 22:01:24.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.622" endtime="20201115 22:01:24.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:24.934" level="INFO">${RESULT} = [{'time': 0.022591792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208999999998606e-06, 'source_diff': 8.208999999998606e-06}, {'time': 0.022742208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:24.931" endtime="20201115 22:01:24.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:24.947" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:24.935" endtime="20201115 22:01:24.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.952" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:24.951" endtime="20201115 22:01:24.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.955" level="INFO">VALUE: [8.208999999998606e-06, 8.041000000000298e-06, 7.874999999997467e-06, 7.819000000002657e-06, 8.041000000000298e-06, 7.86200000000084e-06, 7.902000000000603e-06, 8.028000000000202e-06, 7.889000000000507e-06, 7.874999999997467e-06, 8.000000000001062e-06, 7.874999999997467e-06, 7.916000000000173e-06, 8.068999999999438e-06, 7.916000000000173e-06, 7.889000000000507e-06, 8.07000000000238e-06, 7.833000000002227e-06, 7.958000000002352e-06, 8.014000000000632e-06, 7.874999999997467e-06, 7.889000000000507e-06, 8.000000000001062e-06, 7.819000000002657e-06, 7.903000000000077e-06, 8.012999999997689e-06, 7.819999999998661e-06, 7.889000000000507e-06, 8.026999999997259e-06, 7.860999999997897e-06, 7.972000000001922e-06, 8.028000000000202e-06, 7.889000000000507e-06, 7.959000000001826e-06, 7.999999999997592e-06, 7.875000000000937e-06, 7.86200000000084e-06, 7.985999999998022e-06, 7.888999999997037e-06, 7.889000000000507e-06, 8.041000000000298e-06, 7.846999999998328e-06, 7.832999999998758e-06, 8.000000000001062e-06, 7.875000000000937e-06, 7.889000000000507e-06, 8.028000000000202e-06, 7.973000000001396e-06, 7.889000000000507e-06, 8.014000000000632e-06]</msg>
<status status="PASS" starttime="20201115 22:01:24.953" endtime="20201115 22:01:24.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.949" endtime="20201115 22:01:24.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.958" endtime="20201115 22:01:24.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:24.961" endtime="20201115 22:01:24.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.960" endtime="20201115 22:01:24.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.956" endtime="20201115 22:01:24.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.587" endtime="20201115 22:01:24.982"></status>
</kw>
<msg timestamp="20201115 22:01:24.982" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.991" endtime="20201115 22:01:25.009"></status>
</kw>
<msg timestamp="20201115 22:01:25.009" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.989" endtime="20201115 22:01:25.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.012" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.010" endtime="20201115 22:01:25.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.013" endtime="20201115 22:01:25.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.987" endtime="20201115 22:01:25.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.985" endtime="20201115 22:01:25.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.023" endtime="20201115 22:01:25.309"></status>
</kw>
<msg timestamp="20201115 22:01:25.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022409333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.021" endtime="20201115 22:01:25.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022409333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.313" endtime="20201115 22:01:25.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.321" endtime="20201115 22:01:25.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.019" endtime="20201115 22:01:25.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.017" endtime="20201115 22:01:25.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.328" level="INFO">${RESULT} = [{'time': 0.022417625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.022568208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:25.324" endtime="20201115 22:01:25.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.342" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:25.329" endtime="20201115 22:01:25.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.346" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.345" endtime="20201115 22:01:25.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.349" level="INFO">VALUE: [8.292000000000022e-06, 8.027000000000728e-06, 7.875000000000937e-06, 7.888999999997037e-06, 8.028000000000202e-06, 7.861000000001367e-06, 7.889000000000507e-06, 8.041999999999772e-06, 7.819999999998661e-06, 7.902000000000603e-06, 8.000000000001062e-06, 7.875000000000937e-06, 7.888000000001033e-06, 8.000000000001062e-06, 7.777999999999952e-06, 7.931000000002686e-06, 8.028000000000202e-06, 7.875000000000937e-06, 7.889000000000507e-06, 8.026999999997259e-06, 7.875000000000937e-06, 7.902000000000603e-06, 8.041999999999772e-06, 7.860999999997897e-06, 7.861000000001367e-06, 8.014000000000632e-06, 7.860999999997897e-06, 7.888000000001033e-06, 8.028000000000202e-06, 7.86200000000084e-06, 7.903000000000077e-06, 7.972000000001922e-06, 7.846999999998328e-06, 7.903000000000077e-06, 8.054999999999868e-06, 7.875000000000937e-06, 7.889000000000507e-06, 8.028000000000202e-06, 7.861000000001367e-06, 7.875000000000937e-06, 8.054999999999868e-06, 7.875000000000937e-06, 7.916000000000173e-06, 8.014000000000632e-06, 7.957999999998883e-06, 7.888000000001033e-06, 8.027999999996732e-06, 7.875000000000937e-06, 7.903000000000077e-06, 7.999999999997592e-06]</msg>
<status status="PASS" starttime="20201115 22:01:25.347" endtime="20201115 22:01:25.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.343" endtime="20201115 22:01:25.350"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.352" endtime="20201115 22:01:25.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.355" endtime="20201115 22:01:25.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.354" endtime="20201115 22:01:25.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.350" endtime="20201115 22:01:25.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.983" endtime="20201115 22:01:25.376"></status>
</kw>
<msg timestamp="20201115 22:01:25.376" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.385" endtime="20201115 22:01:25.402"></status>
</kw>
<msg timestamp="20201115 22:01:25.403" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.383" endtime="20201115 22:01:25.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.405" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.404" endtime="20201115 22:01:25.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.406" endtime="20201115 22:01:25.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.381" endtime="20201115 22:01:25.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.379" endtime="20201115 22:01:25.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.416" endtime="20201115 22:01:25.703"></status>
</kw>
<msg timestamp="20201115 22:01:25.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022291667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022299931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.415" endtime="20201115 22:01:25.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022291667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022299931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.707" endtime="20201115 22:01:25.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.715" endtime="20201115 22:01:25.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.412" endtime="20201115 22:01:25.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.411" endtime="20201115 22:01:25.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.722" level="INFO">${RESULT} = [{'time': 0.022299931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.263999999997412e-06, 'source_diff': 8.263999999997412e-06}, {'time': 0.022450208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:25.719" endtime="20201115 22:01:25.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.735" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:25.723" endtime="20201115 22:01:25.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.740" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.739" endtime="20201115 22:01:25.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.742" level="INFO">VALUE: [8.263999999997412e-06, 8.027000000000728e-06, 7.945000000002256e-06, 7.889000000000507e-06, 8.014000000000632e-06, 7.875000000000937e-06, 7.875000000000937e-06, 7.986000000001492e-06, 7.875000000000937e-06, 7.903000000000077e-06, 8.013999999997162e-06, 7.860999999997897e-06, 7.874999999997467e-06, 8.028000000000202e-06, 7.875000000000937e-06, 7.889000000000507e-06, 8.041000000000298e-06, 7.875000000000937e-06, 7.888999999997037e-06, 8.041999999999772e-06, 7.875000000000937e-06, 7.902000000000603e-06, 8.014000000000632e-06, 7.916999999999647e-06, 7.902000000000603e-06, 8.041999999999772e-06, 7.903000000000077e-06, 7.916000000000173e-06, 8.014000000000632e-06, 7.875000000000937e-06, 7.930999999999216e-06, 8.014000000000632e-06, 7.889000000000507e-06, 7.875000000000937e-06, 8.014000000000632e-06, 7.860999999997897e-06, 7.902000000000603e-06, 8.028000000000202e-06, 7.860999999997897e-06, 7.861000000001367e-06, 8.083999999998481e-06, 7.874999999997467e-06, 7.846999999998328e-06, 8.014000000000632e-06, 7.875000000000937e-06, 7.889000000000507e-06, 8.028000000000202e-06, 7.861000000001367e-06, 7.903000000000077e-06, 8.027999999996732e-06]</msg>
<status status="PASS" starttime="20201115 22:01:25.741" endtime="20201115 22:01:25.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.736" endtime="20201115 22:01:25.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.745" endtime="20201115 22:01:25.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.749" endtime="20201115 22:01:25.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.747" endtime="20201115 22:01:25.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.744" endtime="20201115 22:01:25.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.377" endtime="20201115 22:01:25.770"></status>
</kw>
<msg timestamp="20201115 22:01:25.770" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.779" endtime="20201115 22:01:25.796"></status>
</kw>
<msg timestamp="20201115 22:01:25.796" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.777" endtime="20201115 22:01:25.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.799" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.798" endtime="20201115 22:01:25.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.800" endtime="20201115 22:01:25.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.774" endtime="20201115 22:01:25.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.772" endtime="20201115 22:01:25.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.810" endtime="20201115 22:01:26.096"></status>
</kw>
<msg timestamp="20201115 22:01:26.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.808" endtime="20201115 22:01:26.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.100" endtime="20201115 22:01:26.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.108" endtime="20201115 22:01:26.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.806" endtime="20201115 22:01:26.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.804" endtime="20201115 22:01:26.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:26.115" level="INFO">${RESULT} = [{'time': 0.022342389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.022492986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:26.112" endtime="20201115 22:01:26.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:26.129" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:26.116" endtime="20201115 22:01:26.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.134" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:26.133" endtime="20201115 22:01:26.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.136" level="INFO">VALUE: [8.332999999999258e-06, 8.041999999999772e-06, 7.889000000000507e-06, 7.903000000000077e-06, 8.013000000001158e-06, 7.861000000001367e-06, 7.889000000000507e-06, 8.027999999996732e-06, 7.874999999997467e-06, 7.903000000000077e-06, 7.943999999999313e-06, 7.791999999999522e-06, 7.889000000000507e-06, 8.014000000000632e-06, 7.959000000001826e-06, 7.944000000002782e-06, 7.999999999997592e-06, 7.875000000000937e-06, 7.889000000000507e-06, 8.000000000001062e-06, 7.875000000000937e-06, 7.901999999997134e-06, 8.014000000000632e-06, 7.874999999997467e-06, 7.903000000000077e-06, 8.000000000001062e-06, 7.875000000000937e-06, 7.887999999997564e-06, 8.028000000000202e-06, 7.860999999997897e-06, 7.889000000000507e-06, 8.041000000000298e-06, 7.861000000001367e-06, 7.916000000000173e-06, 8.014000000000632e-06, 7.887999999997564e-06, 7.889000000000507e-06, 8.000000000001062e-06, 7.888999999997037e-06, 7.972000000001922e-06, 8.028000000000202e-06, 7.861000000001367e-06, 7.916000000000173e-06, 8.028000000000202e-06, 7.860999999997897e-06, 7.916999999999647e-06, 8.041999999999772e-06, 7.861000000001367e-06, 7.903000000000077e-06, 8.041999999999772e-06]</msg>
<status status="PASS" starttime="20201115 22:01:26.135" endtime="20201115 22:01:26.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.130" endtime="20201115 22:01:26.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.139" endtime="20201115 22:01:26.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:26.143" endtime="20201115 22:01:26.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.141" endtime="20201115 22:01:26.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.138" endtime="20201115 22:01:26.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.770" endtime="20201115 22:01:26.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.180" endtime="20201115 22:01:26.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.179" endtime="20201115 22:01:26.164"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.166" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.175" endtime="20201115 22:01:26.193"></status>
</kw>
<msg timestamp="20201115 22:01:26.194" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.173" endtime="20201115 22:01:26.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.196" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.195" endtime="20201115 22:01:26.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.197" endtime="20201115 22:01:26.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.171" endtime="20201115 22:01:26.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.168" endtime="20201115 22:01:26.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.207" endtime="20201115 22:01:26.492"></status>
</kw>
<msg timestamp="20201115 22:01:26.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024527583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024535958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.205" endtime="20201115 22:01:26.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024527583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024535958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.496" endtime="20201115 22:01:26.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.505" endtime="20201115 22:01:26.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.203" endtime="20201115 22:01:26.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.201" endtime="20201115 22:01:26.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:26.511" level="INFO">${RESULT} = [{'time': 0.024535958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.375000000001437e-06, 'source_diff': 8.375000000001437e-06}, {'time': 0.024693736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:26.508" endtime="20201115 22:01:26.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:26.525" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:26.512" endtime="20201115 22:01:26.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.529" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:26.528" endtime="20201115 22:01:26.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.532" level="INFO">VALUE: [8.375000000001437e-06, 8.236000000001742e-06, 8.096999999998578e-06, 8.068999999999438e-06, 8.207999999999133e-06, 8.054999999999868e-06, 8.08400000000195e-06, 8.235999999998272e-06, 8.096999999998578e-06, 8.054999999999868e-06, 8.208000000002602e-06, 8.083000000002477e-06, 8.083999999998481e-06, 8.222000000002172e-06, 8.08400000000195e-06, 8.082999999999008e-06, 8.223000000001646e-06, 8.096999999998578e-06, 8.096999999998578e-06, 8.237000000001216e-06, 8.069999999998911e-06, 8.056000000002811e-06, 8.221999999998703e-06, 8.028000000000202e-06, 8.069999999998911e-06, 8.222000000002172e-06, 8.07000000000238e-06, 8.08400000000195e-06, 8.278000000000452e-06, 8.09800000000152e-06, 8.000000000001062e-06, 8.222000000002172e-06, 8.07000000000238e-06, 8.082999999999008e-06, 8.180999999999466e-06, 8.152000000000853e-06, 8.082999999999008e-06, 8.194999999999036e-06, 8.07000000000238e-06, 8.028000000000202e-06, 8.223000000001646e-06, 8.055999999999341e-06, 8.083000000002477e-06, 8.195000000002506e-06, 8.068999999999438e-06, 8.138999999997287e-06, 8.236000000001742e-06, 8.068999999999438e-06, 8.082999999999008e-06, 8.208999999995137e-06]</msg>
<status status="PASS" starttime="20201115 22:01:26.530" endtime="20201115 22:01:26.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.525" endtime="20201115 22:01:26.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.535" endtime="20201115 22:01:26.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:26.538" endtime="20201115 22:01:26.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.536" endtime="20201115 22:01:26.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.533" endtime="20201115 22:01:26.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.166" endtime="20201115 22:01:26.559"></status>
</kw>
<msg timestamp="20201115 22:01:26.559" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.568" endtime="20201115 22:01:26.586"></status>
</kw>
<msg timestamp="20201115 22:01:26.587" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.566" endtime="20201115 22:01:26.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.590" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.588" endtime="20201115 22:01:26.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.591" endtime="20201115 22:01:26.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.564" endtime="20201115 22:01:26.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.562" endtime="20201115 22:01:26.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.601" endtime="20201115 22:01:26.886"></status>
</kw>
<msg timestamp="20201115 22:01:26.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022488764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.599" endtime="20201115 22:01:26.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022488764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.890" endtime="20201115 22:01:26.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.898" endtime="20201115 22:01:26.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.597" endtime="20201115 22:01:26.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.595" endtime="20201115 22:01:26.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:26.905" level="INFO">${RESULT} = [{'time': 0.022488764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.458000000002852e-06, 'source_diff': 8.458000000002852e-06}, {'time': 0.022646472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:26.902" endtime="20201115 22:01:26.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:26.918" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:26.906" endtime="20201115 22:01:26.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.923" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:26.922" endtime="20201115 22:01:26.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.925" level="INFO">VALUE: [8.458000000002852e-06, 8.222000000002172e-06, 8.055999999999341e-06, 8.055999999999341e-06, 8.221999999998703e-06, 8.125000000001187e-06, 8.096999999998578e-06, 8.222000000002172e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.222000000002172e-06, 8.08400000000195e-06, 8.083999999998481e-06, 8.236000000001742e-06, 8.11200000000109e-06, 8.082999999999008e-06, 8.221999999998703e-06, 8.07000000000238e-06, 8.068999999999438e-06, 8.207999999999133e-06, 8.083999999998481e-06, 8.096999999998578e-06, 8.222000000002172e-06, 8.07000000000238e-06, 8.083999999998481e-06, 8.264000000000882e-06, 8.097000000002047e-06, 8.097999999998051e-06, 8.250000000001312e-06, 8.083999999998481e-06, 8.082999999999008e-06, 8.221999999998703e-06, 8.013999999997162e-06, 8.068999999999438e-06, 8.166999999999897e-06, 8.054999999999868e-06, 8.09800000000152e-06, 8.194000000003032e-06, 8.068999999999438e-06, 8.042000000003241e-06, 8.249999999997842e-06, 8.054999999999868e-06, 8.083999999998481e-06, 8.179999999999993e-06, 8.068999999999438e-06, 8.125000000001187e-06, 8.290999999997078e-06, 8.09800000000152e-06, 8.069999999998911e-06, 8.250000000001312e-06]</msg>
<status status="PASS" starttime="20201115 22:01:26.924" endtime="20201115 22:01:26.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.919" endtime="20201115 22:01:26.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.929" endtime="20201115 22:01:26.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:26.932" endtime="20201115 22:01:26.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.930" endtime="20201115 22:01:26.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.927" endtime="20201115 22:01:26.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.560" endtime="20201115 22:01:26.953"></status>
</kw>
<msg timestamp="20201115 22:01:26.953" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.963" endtime="20201115 22:01:26.981"></status>
</kw>
<msg timestamp="20201115 22:01:26.982" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.961" endtime="20201115 22:01:26.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.984" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.983" endtime="20201115 22:01:26.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.985" endtime="20201115 22:01:26.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.958" endtime="20201115 22:01:26.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.956" endtime="20201115 22:01:26.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.995" endtime="20201115 22:01:27.281"></status>
</kw>
<msg timestamp="20201115 22:01:27.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023062833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023071278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.994" endtime="20201115 22:01:27.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023062833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023071278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.285" endtime="20201115 22:01:27.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.293" endtime="20201115 22:01:27.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.991" endtime="20201115 22:01:27.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.989" endtime="20201115 22:01:27.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:27.300" level="INFO">${RESULT} = [{'time': 0.023071278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.444999999999286e-06, 'source_diff': 8.444999999999286e-06}, {'time': 0.023228681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:27.297" endtime="20201115 22:01:27.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.313" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:27.301" endtime="20201115 22:01:27.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.318" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.317" endtime="20201115 22:01:27.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.320" level="INFO">VALUE: [8.444999999999286e-06, 8.223000000001646e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.195000000002506e-06, 8.111000000001617e-06, 8.054999999999868e-06, 8.221999999998703e-06, 8.068999999999438e-06, 8.041999999999772e-06, 8.221999999998703e-06, 8.083999999998481e-06, 8.09800000000152e-06, 8.208000000002602e-06, 8.09800000000152e-06, 8.083000000002477e-06, 8.236000000001742e-06, 8.000000000001062e-06, 8.083000000002477e-06, 8.236000000001742e-06, 8.069999999998911e-06, 8.069999999998911e-06, 8.277000000000978e-06, 8.08400000000195e-06, 8.041999999999772e-06, 8.237000000001216e-06, 8.083999999998481e-06, 8.139000000000757e-06, 8.193999999999563e-06, 8.069999999998911e-06, 8.139000000000757e-06, 8.221999999998703e-06, 8.083999999998481e-06, 8.08400000000195e-06, 8.235999999998272e-06, 8.069999999998911e-06, 8.014000000000632e-06, 8.221999999998703e-06, 8.096999999998578e-06, 8.055999999999341e-06, 8.207999999999133e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.236000000001742e-06, 8.069000000002907e-06, 8.083000000002477e-06, 8.236000000001742e-06, 8.069999999998911e-06, 8.08400000000195e-06, 8.139000000000757e-06]</msg>
<status status="PASS" starttime="20201115 22:01:27.319" endtime="20201115 22:01:27.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.314" endtime="20201115 22:01:27.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.323" endtime="20201115 22:01:27.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.327" endtime="20201115 22:01:27.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.325" endtime="20201115 22:01:27.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.322" endtime="20201115 22:01:27.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.954" endtime="20201115 22:01:27.347"></status>
</kw>
<msg timestamp="20201115 22:01:27.348" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.357" endtime="20201115 22:01:27.375"></status>
</kw>
<msg timestamp="20201115 22:01:27.376" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.355" endtime="20201115 22:01:27.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.378" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.377" endtime="20201115 22:01:27.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.379" endtime="20201115 22:01:27.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.353" endtime="20201115 22:01:27.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.351" endtime="20201115 22:01:27.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.389" endtime="20201115 22:01:27.675"></status>
</kw>
<msg timestamp="20201115 22:01:27.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022897917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.388" endtime="20201115 22:01:27.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022897917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.679" endtime="20201115 22:01:27.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.687" endtime="20201115 22:01:27.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.385" endtime="20201115 22:01:27.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.383" endtime="20201115 22:01:27.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:27.693" level="INFO">${RESULT} = [{'time': 0.022906319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.402000000001103e-06, 'source_diff': 8.402000000001103e-06}, {'time': 0.023063639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:27.690" endtime="20201115 22:01:27.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.708" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:27.694" endtime="20201115 22:01:27.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.712" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.711" endtime="20201115 22:01:27.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.715" level="INFO">VALUE: [8.402000000001103e-06, 8.236000000001742e-06, 8.111000000001617e-06, 8.082999999999008e-06, 8.194999999999036e-06, 8.139000000000757e-06, 8.069999999998911e-06, 8.209000000002076e-06, 8.082999999999008e-06, 8.083999999998481e-06, 8.250000000001312e-06, 8.083999999998481e-06, 8.027000000000728e-06, 8.207999999999133e-06, 8.041999999999772e-06, 8.082999999999008e-06, 8.236999999997746e-06, 8.083999999998481e-06, 8.082999999999008e-06, 8.222000000002172e-06, 8.055999999999341e-06, 8.096999999998578e-06, 8.278000000000452e-06, 8.083999999998481e-06, 8.111000000001617e-06, 8.222000000002172e-06, 8.083000000002477e-06, 8.083000000002477e-06, 8.222999999998176e-06, 8.054999999999868e-06, 8.083999999998481e-06, 8.222999999998176e-06, 8.028000000000202e-06, 8.096999999998578e-06, 8.235999999998272e-06, 8.041000000000298e-06, 8.110999999998147e-06, 8.221999999998703e-06, 8.096999999998578e-06, 8.083999999998481e-06, 8.278000000000452e-06, 8.07000000000238e-06, 8.110999999998147e-06, 8.207999999999133e-06, 8.055999999999341e-06, 8.041000000000298e-06, 8.235999999998272e-06, 8.069999999998911e-06, 8.082999999999008e-06, 8.263999999997412e-06]</msg>
<status status="PASS" starttime="20201115 22:01:27.713" endtime="20201115 22:01:27.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.709" endtime="20201115 22:01:27.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.718" endtime="20201115 22:01:27.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.726" endtime="20201115 22:01:27.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.724" endtime="20201115 22:01:27.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.716" endtime="20201115 22:01:27.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.349" endtime="20201115 22:01:27.746"></status>
</kw>
<msg timestamp="20201115 22:01:27.746" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.755" endtime="20201115 22:01:27.775"></status>
</kw>
<msg timestamp="20201115 22:01:27.775" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.754" endtime="20201115 22:01:27.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.778" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.776" endtime="20201115 22:01:27.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.779" endtime="20201115 22:01:27.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.751" endtime="20201115 22:01:27.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.749" endtime="20201115 22:01:27.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.789" endtime="20201115 22:01:28.075"></status>
</kw>
<msg timestamp="20201115 22:01:28.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022281847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.787" endtime="20201115 22:01:28.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022281847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.079" endtime="20201115 22:01:28.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.087" endtime="20201115 22:01:28.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.785" endtime="20201115 22:01:28.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.783" endtime="20201115 22:01:28.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.094" level="INFO">${RESULT} = [{'time': 0.022281847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.022439083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:28.090" endtime="20201115 22:01:28.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.107" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:28.095" endtime="20201115 22:01:28.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.111" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.110" endtime="20201115 22:01:28.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.114" level="INFO">VALUE: [8.457999999999383e-06, 8.221999999998703e-06, 8.08400000000195e-06, 8.07000000000238e-06, 8.236000000001742e-06, 8.07000000000238e-06, 8.07000000000238e-06, 8.249999999997842e-06, 8.08400000000195e-06, 8.096999999998578e-06, 8.221999999998703e-06, 8.055999999999341e-06, 8.041999999999772e-06, 8.277000000000978e-06, 8.082999999999008e-06, 8.096999999998578e-06, 8.221999999998703e-06, 8.09800000000152e-06, 8.068999999999438e-06, 8.222999999998176e-06, 8.111000000001617e-06, 8.068999999999438e-06, 8.235999999998272e-06, 8.068999999999438e-06, 8.083000000002477e-06, 8.235999999998272e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.221999999998703e-06, 8.083999999998481e-06, 8.082999999999008e-06, 8.208999999998606e-06, 8.082999999999008e-06, 8.082999999999008e-06, 8.235999999998272e-06, 8.041999999999772e-06, 8.068999999999438e-06, 8.235999999998272e-06, 8.07000000000238e-06, 8.055999999999341e-06, 8.222999999998176e-06, 8.041999999999772e-06, 8.110999999998147e-06, 8.235999999998272e-06, 8.069999999998911e-06, 8.111000000001617e-06, 8.222000000002172e-06, 8.139000000000757e-06, 8.054999999999868e-06, 8.180999999999466e-06]</msg>
<status status="PASS" starttime="20201115 22:01:28.113" endtime="20201115 22:01:28.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.108" endtime="20201115 22:01:28.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.118" endtime="20201115 22:01:28.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.121" endtime="20201115 22:01:28.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.119" endtime="20201115 22:01:28.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.116" endtime="20201115 22:01:28.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.747" endtime="20201115 22:01:28.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.165" endtime="20201115 22:01:28.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.164" endtime="20201115 22:01:28.142"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.144" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.153" endtime="20201115 22:01:28.172"></status>
</kw>
<msg timestamp="20201115 22:01:28.172" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.151" endtime="20201115 22:01:28.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.175" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.173" endtime="20201115 22:01:28.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.176" endtime="20201115 22:01:28.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.149" endtime="20201115 22:01:28.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.147" endtime="20201115 22:01:28.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.185" endtime="20201115 22:01:28.470"></status>
</kw>
<msg timestamp="20201115 22:01:28.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025110917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025119556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.183" endtime="20201115 22:01:28.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025110917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025119556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.474" endtime="20201115 22:01:28.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.482" endtime="20201115 22:01:28.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.180" endtime="20201115 22:01:28.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.179" endtime="20201115 22:01:28.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.489" level="INFO">${RESULT} = [{'time': 0.025119556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.025284097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:28.485" endtime="20201115 22:01:28.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.502" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:28.490" endtime="20201115 22:01:28.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.506" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.505" endtime="20201115 22:01:28.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.509" level="INFO">VALUE: [8.639000000001257e-06, 8.415999999997203e-06, 8.236000000001742e-06, 8.278000000000452e-06, 8.403000000000577e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.471999999998953e-06, 8.278000000000452e-06, 8.277000000000978e-06, 8.416000000000673e-06, 8.264000000000882e-06, 8.347000000002297e-06, 8.416999999996677e-06, 8.264000000000882e-06, 8.264000000000882e-06, 8.318999999999688e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.485999999998523e-06, 8.262999999997939e-06, 8.264000000000882e-06, 8.403000000000577e-06, 8.235999999998272e-06, 8.277000000000978e-06, 8.415999999997203e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.430999999999716e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.402000000001103e-06, 8.250000000001312e-06, 8.292000000000022e-06, 8.417000000000147e-06, 8.263999999997412e-06, 8.278000000000452e-06, 8.333999999998731e-06, 8.264000000000882e-06, 8.264000000000882e-06, 8.416999999996677e-06, 8.277000000000978e-06, 8.292000000000022e-06, 8.444000000003282e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.402999999997107e-06, 8.194000000003032e-06, 8.278000000000452e-06, 8.402999999997107e-06]</msg>
<status status="PASS" starttime="20201115 22:01:28.507" endtime="20201115 22:01:28.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.503" endtime="20201115 22:01:28.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.513" endtime="20201115 22:01:28.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.516" endtime="20201115 22:01:28.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.514" endtime="20201115 22:01:28.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.511" endtime="20201115 22:01:28.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.145" endtime="20201115 22:01:28.536"></status>
</kw>
<msg timestamp="20201115 22:01:28.537" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.545" endtime="20201115 22:01:28.564"></status>
</kw>
<msg timestamp="20201115 22:01:28.564" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.544" endtime="20201115 22:01:28.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.565" endtime="20201115 22:01:28.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.568" endtime="20201115 22:01:28.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.541" endtime="20201115 22:01:28.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.539" endtime="20201115 22:01:28.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.578" endtime="20201115 22:01:28.862"></status>
</kw>
<msg timestamp="20201115 22:01:28.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.576" endtime="20201115 22:01:28.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.866" endtime="20201115 22:01:28.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.874" endtime="20201115 22:01:28.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.574" endtime="20201115 22:01:28.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.572" endtime="20201115 22:01:28.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.881" level="INFO">${RESULT} = [{'time': 0.022555611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.022720028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:28.878" endtime="20201115 22:01:28.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.894" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:28.882" endtime="20201115 22:01:28.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.899" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.898" endtime="20201115 22:01:28.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.902" level="INFO">VALUE: [8.639000000001257e-06, 8.389000000001007e-06, 8.278000000000452e-06, 8.306000000003061e-06, 8.403000000000577e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.389000000001007e-06, 8.249999999997842e-06, 8.318999999999688e-06, 8.361000000001867e-06, 8.263999999997412e-06, 8.278000000000452e-06, 8.417000000000147e-06, 8.249999999997842e-06, 8.278000000000452e-06, 8.402999999997107e-06, 8.263000000001408e-06, 8.262999999997939e-06, 8.402000000001103e-06, 8.235999999998272e-06, 8.278000000000452e-06, 8.417000000000147e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.389000000001007e-06, 8.291000000000548e-06, 8.333999999998731e-06, 8.417000000000147e-06, 8.264000000000882e-06, 8.235999999998272e-06, 8.389000000001007e-06, 8.249999999997842e-06, 8.278000000000452e-06, 8.430000000000243e-06, 8.264000000000882e-06, 8.292000000000022e-06, 8.417000000000147e-06, 8.264000000000882e-06, 8.292000000000022e-06, 8.403000000000577e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.430999999999716e-06, 8.292000000000022e-06, 8.249999999997842e-06, 8.360999999998397e-06, 8.277000000000978e-06, 8.292000000000022e-06, 8.417000000000147e-06]</msg>
<status status="PASS" starttime="20201115 22:01:28.900" endtime="20201115 22:01:28.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.896" endtime="20201115 22:01:28.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.905" endtime="20201115 22:01:28.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.908" endtime="20201115 22:01:28.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.907" endtime="20201115 22:01:28.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.903" endtime="20201115 22:01:28.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.537" endtime="20201115 22:01:28.929"></status>
</kw>
<msg timestamp="20201115 22:01:28.929" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.938" endtime="20201115 22:01:28.956"></status>
</kw>
<msg timestamp="20201115 22:01:28.957" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.936" endtime="20201115 22:01:28.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.959" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.958" endtime="20201115 22:01:28.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.960" endtime="20201115 22:01:28.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.934" endtime="20201115 22:01:28.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.932" endtime="20201115 22:01:28.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.971" endtime="20201115 22:01:29.257"></status>
</kw>
<msg timestamp="20201115 22:01:29.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022532542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.970" endtime="20201115 22:01:29.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022532542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.261" endtime="20201115 22:01:29.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.269" endtime="20201115 22:01:29.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.967" endtime="20201115 22:01:29.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.965" endtime="20201115 22:01:29.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.276" level="INFO">${RESULT} = [{'time': 0.022532542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.022697319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:29.273" endtime="20201115 22:01:29.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.291" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:29.277" endtime="20201115 22:01:29.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.295" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.294" endtime="20201115 22:01:29.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.298" level="INFO">VALUE: [8.638999999997787e-06, 8.416000000000673e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.403000000000577e-06, 8.278000000000452e-06, 8.305000000000118e-06, 8.430000000000243e-06, 8.264000000000882e-06, 8.292000000000022e-06, 8.430000000000243e-06, 8.3340000000022e-06, 8.290999999997078e-06, 8.417000000000147e-06, 8.263999999997412e-06, 8.305000000000118e-06, 8.374999999997967e-06, 8.264000000000882e-06, 8.277000000000978e-06, 8.403000000000577e-06, 8.278000000000452e-06, 8.263999999997412e-06, 8.347999999998301e-06, 8.235999999998272e-06, 8.278000000000452e-06, 8.457999999999383e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.417000000000147e-06, 8.263999999997412e-06, 8.291000000000548e-06, 8.430999999999716e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.415999999997203e-06, 8.263999999997412e-06, 8.305999999999591e-06, 8.389000000001007e-06, 8.263999999997412e-06, 8.278000000000452e-06, 8.374999999997967e-06, 8.292000000000022e-06, 8.292000000000022e-06, 8.417000000000147e-06, 8.249999999997842e-06, 8.264000000000882e-06, 8.417000000000147e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.415999999997203e-06]</msg>
<status status="PASS" starttime="20201115 22:01:29.296" endtime="20201115 22:01:29.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.292" endtime="20201115 22:01:29.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.301" endtime="20201115 22:01:29.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.304" endtime="20201115 22:01:29.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.303" endtime="20201115 22:01:29.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.299" endtime="20201115 22:01:29.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.930" endtime="20201115 22:01:29.325"></status>
</kw>
<msg timestamp="20201115 22:01:29.325" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.334" endtime="20201115 22:01:29.352"></status>
</kw>
<msg timestamp="20201115 22:01:29.353" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.332" endtime="20201115 22:01:29.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.355" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.354" endtime="20201115 22:01:29.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.356" endtime="20201115 22:01:29.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.330" endtime="20201115 22:01:29.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.328" endtime="20201115 22:01:29.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.366" endtime="20201115 22:01:29.652"></status>
</kw>
<msg timestamp="20201115 22:01:29.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022584208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.365" endtime="20201115 22:01:29.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022584208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.656" endtime="20201115 22:01:29.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.665" endtime="20201115 22:01:29.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.362" endtime="20201115 22:01:29.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.360" endtime="20201115 22:01:29.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.671" level="INFO">${RESULT} = [{'time': 0.022592847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.022757431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:29.668" endtime="20201115 22:01:29.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.685" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:29.672" endtime="20201115 22:01:29.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.689" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.688" endtime="20201115 22:01:29.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.692" level="INFO">VALUE: [8.638999999997787e-06, 8.3340000000022e-06, 8.264000000000882e-06, 8.263000000001408e-06, 8.388999999997537e-06, 8.249999999997842e-06, 8.278000000000452e-06, 8.416000000000673e-06, 8.264000000000882e-06, 8.319000000003157e-06, 8.417000000000147e-06, 8.250000000001312e-06, 8.291000000000548e-06, 8.430999999999716e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.443999999999813e-06, 8.249999999997842e-06, 8.276999999997509e-06, 8.430999999999716e-06, 8.250000000001312e-06, 8.278000000000452e-06, 8.417000000000147e-06, 8.319999999999161e-06, 8.278000000000452e-06, 8.388999999997537e-06, 8.361000000001867e-06, 8.278000000000452e-06, 8.416000000000673e-06, 8.249999999997842e-06, 8.292000000000022e-06, 8.417000000000147e-06, 8.264000000000882e-06, 8.292000000000022e-06, 8.388999999997537e-06, 8.277000000000978e-06, 8.264000000000882e-06, 8.443999999999813e-06, 8.221999999998703e-06, 8.278000000000452e-06, 8.403000000000577e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.389000000001007e-06, 8.249999999997842e-06, 8.223000000001646e-06, 8.389000000001007e-06, 8.264000000000882e-06, 8.291000000000548e-06, 8.472000000002422e-06]</msg>
<status status="PASS" starttime="20201115 22:01:29.690" endtime="20201115 22:01:29.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.686" endtime="20201115 22:01:29.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.695" endtime="20201115 22:01:29.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.698" endtime="20201115 22:01:29.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.696" endtime="20201115 22:01:29.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.693" endtime="20201115 22:01:29.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.326" endtime="20201115 22:01:29.719"></status>
</kw>
<msg timestamp="20201115 22:01:29.719" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.728" endtime="20201115 22:01:29.748"></status>
</kw>
<msg timestamp="20201115 22:01:29.748" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.726" endtime="20201115 22:01:29.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.751" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.749" endtime="20201115 22:01:29.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.752" endtime="20201115 22:01:29.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.724" endtime="20201115 22:01:29.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.722" endtime="20201115 22:01:29.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.762" endtime="20201115 22:01:30.049"></status>
</kw>
<msg timestamp="20201115 22:01:30.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022536014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.760" endtime="20201115 22:01:30.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022536014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.054" endtime="20201115 22:01:30.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.062" endtime="20201115 22:01:30.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.758" endtime="20201115 22:01:30.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.756" endtime="20201115 22:01:30.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.069" level="INFO">${RESULT} = [{'time': 0.022536014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.653000000000827e-06, 'source_diff': 8.653000000000827e-06}, {'time': 0.022700806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:30.065" endtime="20201115 22:01:30.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.082" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:30.070" endtime="20201115 22:01:30.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.087" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.086" endtime="20201115 22:01:30.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.089" level="INFO">VALUE: [8.653000000000827e-06, 8.403000000000577e-06, 8.249999999997842e-06, 8.278000000000452e-06, 8.416000000000673e-06, 8.208999999998606e-06, 8.236000000001742e-06, 8.417000000000147e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.417000000000147e-06, 8.263999999997412e-06, 8.319000000003157e-06, 8.403000000000577e-06, 8.278000000000452e-06, 8.375000000001437e-06, 8.403000000000577e-06, 8.264000000000882e-06, 8.277000000000978e-06, 8.403000000000577e-06, 8.235999999998272e-06, 8.305000000000118e-06, 8.389000000001007e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.389000000001007e-06, 8.236000000001742e-06, 8.278000000000452e-06, 8.389000000001007e-06, 8.263999999997412e-06, 8.291000000000548e-06, 8.417000000000147e-06, 8.305000000000118e-06, 8.264000000000882e-06, 8.403000000000577e-06, 8.250000000001312e-06, 8.277000000000978e-06, 8.388000000001533e-06, 8.236000000001742e-06, 8.277999999996982e-06, 8.430999999999716e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.417000000000147e-06, 8.262999999997939e-06, 8.278000000000452e-06, 8.401999999997634e-06, 8.263999999997412e-06, 8.292000000000022e-06, 8.401999999997634e-06]</msg>
<status status="PASS" starttime="20201115 22:01:30.088" endtime="20201115 22:01:30.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.083" endtime="20201115 22:01:30.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.092" endtime="20201115 22:01:30.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.096" endtime="20201115 22:01:30.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.094" endtime="20201115 22:01:30.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.091" endtime="20201115 22:01:30.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.720" endtime="20201115 22:01:30.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.143" endtime="20201115 22:01:30.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.142" endtime="20201115 22:01:30.117"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.119" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.128" endtime="20201115 22:01:30.146"></status>
</kw>
<msg timestamp="20201115 22:01:30.146" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.126" endtime="20201115 22:01:30.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.149" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.148" endtime="20201115 22:01:30.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.150" endtime="20201115 22:01:30.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.123" endtime="20201115 22:01:30.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.121" endtime="20201115 22:01:30.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.160" endtime="20201115 22:01:30.445"></status>
</kw>
<msg timestamp="20201115 22:01:30.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024720167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024729014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.158" endtime="20201115 22:01:30.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024720167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024729014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.449" endtime="20201115 22:01:30.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.457" endtime="20201115 22:01:30.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.155" endtime="20201115 22:01:30.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.154" endtime="20201115 22:01:30.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.464" level="INFO">${RESULT} = [{'time': 0.024729014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.024900653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:30.461" endtime="20201115 22:01:30.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.477" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:30.465" endtime="20201115 22:01:30.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.482" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.481" endtime="20201115 22:01:30.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.484" level="INFO">VALUE: [8.846999999999328e-06, 8.610999999998648e-06, 8.471999999998953e-06, 8.416000000000673e-06, 8.596999999999078e-06, 8.459000000002326e-06, 8.458000000002852e-06, 8.625000000001687e-06, 8.457999999999383e-06, 8.443999999999813e-06, 8.582999999999508e-06, 8.485999999998523e-06, 8.485999999998523e-06, 8.611000000002117e-06, 8.472999999998426e-06, 8.471999999998953e-06, 8.611000000002117e-06, 8.528000000000702e-06, 8.471999999998953e-06, 8.596999999999078e-06, 8.458999999998856e-06, 8.457999999999383e-06, 8.653000000000827e-06, 8.444999999999286e-06, 8.486000000001992e-06, 8.61200000000159e-06, 8.485999999998523e-06, 8.472999999998426e-06, 8.625000000001687e-06, 8.457999999999383e-06, 8.389000000001007e-06, 8.610999999998648e-06, 8.430000000000243e-06, 8.499999999998092e-06, 8.639000000001257e-06, 8.457999999999383e-06, 8.457999999999383e-06, 8.596999999999078e-06, 8.499999999998092e-06, 8.499999999994623e-06, 8.638999999997787e-06, 8.499999999994623e-06, 8.472000000002422e-06, 8.624999999998217e-06, 8.430000000003712e-06, 8.457999999995913e-06, 8.596999999999078e-06, 8.486000000001992e-06, 8.499999999994623e-06, 8.611999999998121e-06]</msg>
<status status="PASS" starttime="20201115 22:01:30.483" endtime="20201115 22:01:30.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.478" endtime="20201115 22:01:30.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.488" endtime="20201115 22:01:30.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.491" endtime="20201115 22:01:30.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.489" endtime="20201115 22:01:30.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.486" endtime="20201115 22:01:30.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.119" endtime="20201115 22:01:30.512"></status>
</kw>
<msg timestamp="20201115 22:01:30.512" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.521" endtime="20201115 22:01:30.540"></status>
</kw>
<msg timestamp="20201115 22:01:30.540" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.519" endtime="20201115 22:01:30.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.543" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.541" endtime="20201115 22:01:30.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.544" endtime="20201115 22:01:30.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.516" endtime="20201115 22:01:30.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.514" endtime="20201115 22:01:30.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.554" endtime="20201115 22:01:30.841"></status>
</kw>
<msg timestamp="20201115 22:01:30.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022361306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022370125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.553" endtime="20201115 22:01:30.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022361306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022370125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.845" endtime="20201115 22:01:30.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.853" endtime="20201115 22:01:30.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.550" endtime="20201115 22:01:30.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.549" endtime="20201115 22:01:30.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.860" level="INFO">${RESULT} = [{'time': 0.022370125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.022542125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:30.856" endtime="20201115 22:01:30.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.874" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:30.861" endtime="20201115 22:01:30.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.879" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.878" endtime="20201115 22:01:30.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.881" level="INFO">VALUE: [8.819000000000188e-06, 8.596999999999078e-06, 8.471999999998953e-06, 8.471999999998953e-06, 8.624999999998217e-06, 8.472000000002422e-06, 8.457999999999383e-06, 8.639000000001257e-06, 8.471999999998953e-06, 8.471999999998953e-06, 8.625000000001687e-06, 8.444999999999286e-06, 8.458000000002852e-06, 8.624999999998217e-06, 8.416000000000673e-06, 8.500000000001562e-06, 8.610999999998648e-06, 8.457999999999383e-06, 8.473000000001896e-06, 8.651999999997884e-06, 8.471999999998953e-06, 8.457999999999383e-06, 8.61200000000159e-06, 8.444999999999286e-06, 8.528000000000702e-06, 8.610999999998648e-06, 8.457999999999383e-06, 8.458999999998856e-06, 8.611000000002117e-06, 8.471999999998953e-06, 8.459000000002326e-06, 8.624999999998217e-06, 8.472000000002422e-06, 8.458000000002852e-06, 8.610999999998648e-06, 8.457999999999383e-06, 8.473000000001896e-06, 8.611000000002117e-06, 8.457999999999383e-06, 8.443999999999813e-06, 8.624999999998217e-06, 8.472000000002422e-06, 8.472000000002422e-06, 8.597999999998551e-06, 8.472000000002422e-06, 8.471999999998953e-06, 8.611000000002117e-06, 8.471999999998953e-06, 8.459000000002326e-06, 8.597999999998551e-06]</msg>
<status status="PASS" starttime="20201115 22:01:30.880" endtime="20201115 22:01:30.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.875" endtime="20201115 22:01:30.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.884" endtime="20201115 22:01:30.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.888" endtime="20201115 22:01:30.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.886" endtime="20201115 22:01:30.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.883" endtime="20201115 22:01:30.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.512" endtime="20201115 22:01:30.908"></status>
</kw>
<msg timestamp="20201115 22:01:30.909" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.918" endtime="20201115 22:01:30.938"></status>
</kw>
<msg timestamp="20201115 22:01:30.938" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.916" endtime="20201115 22:01:30.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.941" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.939" endtime="20201115 22:01:30.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.942" endtime="20201115 22:01:30.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.913" endtime="20201115 22:01:30.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.911" endtime="20201115 22:01:30.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.952" endtime="20201115 22:01:31.237"></status>
</kw>
<msg timestamp="20201115 22:01:31.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023097292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023106139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.950" endtime="20201115 22:01:31.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023097292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023106139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.241" endtime="20201115 22:01:31.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.249" endtime="20201115 22:01:31.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.947" endtime="20201115 22:01:31.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.946" endtime="20201115 22:01:31.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:31.256" level="INFO">${RESULT} = [{'time': 0.023106139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.847000000002797e-06, 'source_diff': 8.847000000002797e-06}, {'time': 0.023278139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:31.253" endtime="20201115 22:01:31.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:31.269" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:31.257" endtime="20201115 22:01:31.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.274" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:31.273" endtime="20201115 22:01:31.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.276" level="INFO">VALUE: [8.847000000002797e-06, 8.610999999998648e-06, 8.471999999998953e-06, 8.471999999998953e-06, 8.611000000002117e-06, 8.472999999998426e-06, 8.471999999998953e-06, 8.625000000001687e-06, 8.500000000001562e-06, 8.375000000001437e-06, 8.611000000002117e-06, 8.458000000002852e-06, 8.472000000002422e-06, 8.625000000001687e-06, 8.458999999998856e-06, 8.458000000002852e-06, 8.624999999998217e-06, 8.472999999998426e-06, 8.416000000000673e-06, 8.639000000001257e-06, 8.457999999999383e-06, 8.485999999998523e-06, 8.625000000001687e-06, 8.471999999998953e-06, 8.417000000000147e-06, 8.610999999998648e-06, 8.485999999998523e-06, 8.471999999998953e-06, 8.59800000000202e-06, 8.486999999997996e-06, 8.457999999999383e-06, 8.625000000001687e-06, 8.403000000000577e-06, 8.471999999998953e-06, 8.624999999998217e-06, 8.458999999998856e-06, 8.417000000000147e-06, 8.624999999998217e-06, 8.457999999999383e-06, 8.472999999998426e-06, 8.596999999999078e-06, 8.500000000001562e-06, 8.457999999999383e-06, 8.624999999998217e-06, 8.485999999998523e-06, 8.403000000000577e-06, 8.610999999998648e-06, 8.485999999998523e-06, 8.472000000002422e-06, 8.624999999998217e-06]</msg>
<status status="PASS" starttime="20201115 22:01:31.275" endtime="20201115 22:01:31.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.270" endtime="20201115 22:01:31.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.279" endtime="20201115 22:01:31.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:31.283" endtime="20201115 22:01:31.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.281" endtime="20201115 22:01:31.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.278" endtime="20201115 22:01:31.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.909" endtime="20201115 22:01:31.304"></status>
</kw>
<msg timestamp="20201115 22:01:31.304" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.313" endtime="20201115 22:01:31.332"></status>
</kw>
<msg timestamp="20201115 22:01:31.332" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.311" endtime="20201115 22:01:31.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.335" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.333" endtime="20201115 22:01:31.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.336" endtime="20201115 22:01:31.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.309" endtime="20201115 22:01:31.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.306" endtime="20201115 22:01:31.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.346" endtime="20201115 22:01:31.631"></status>
</kw>
<msg timestamp="20201115 22:01:31.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022734167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.344" endtime="20201115 22:01:31.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022734167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.635" endtime="20201115 22:01:31.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.643" endtime="20201115 22:01:31.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.342" endtime="20201115 22:01:31.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.340" endtime="20201115 22:01:31.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:31.649" level="INFO">${RESULT} = [{'time': 0.022734167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.833999999999231e-06, 'source_diff': 8.833999999999231e-06}, {'time': 0.022905778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:31.646" endtime="20201115 22:01:31.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:31.663" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:31.650" endtime="20201115 22:01:31.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.667" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:31.666" endtime="20201115 22:01:31.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.670" level="INFO">VALUE: [8.833999999999231e-06, 8.625000000001687e-06, 8.472000000002422e-06, 8.499999999998092e-06, 8.611000000002117e-06, 8.417000000000147e-06, 8.486000000001992e-06, 8.625000000001687e-06, 8.457999999999383e-06, 8.457999999999383e-06, 8.610999999998648e-06, 8.473000000001896e-06, 8.471999999998953e-06, 8.570000000002881e-06, 8.486000000001992e-06, 8.459000000002326e-06, 8.652999999997357e-06, 8.459000000002326e-06, 8.430999999999716e-06, 8.624999999998217e-06, 8.429999999996773e-06, 8.471999999998953e-06, 8.624999999998217e-06, 8.471999999998953e-06, 8.500000000001562e-06, 8.638999999997787e-06, 8.486000000001992e-06, 8.485999999998523e-06, 8.624999999998217e-06, 8.443999999999813e-06, 8.458000000002852e-06, 8.638999999997787e-06, 8.486000000001992e-06, 8.473000000001896e-06, 8.610999999998648e-06, 8.471999999998953e-06, 8.514000000001132e-06, 8.610999999998648e-06, 8.471999999998953e-06, 8.471999999998953e-06, 8.569999999999411e-06, 8.472000000002422e-06, 8.457999999999383e-06, 8.611999999998121e-06, 8.472000000002422e-06, 8.472000000002422e-06, 8.555999999999842e-06, 8.472000000002422e-06, 8.417000000000147e-06, 8.625000000001687e-06]</msg>
<status status="PASS" starttime="20201115 22:01:31.668" endtime="20201115 22:01:31.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.664" endtime="20201115 22:01:31.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.673" endtime="20201115 22:01:31.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:31.677" endtime="20201115 22:01:31.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.675" endtime="20201115 22:01:31.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.672" endtime="20201115 22:01:31.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.304" endtime="20201115 22:01:31.697"></status>
</kw>
<msg timestamp="20201115 22:01:31.698" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.706" endtime="20201115 22:01:31.726"></status>
</kw>
<msg timestamp="20201115 22:01:31.726" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.705" endtime="20201115 22:01:31.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.729" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.727" endtime="20201115 22:01:31.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.730" endtime="20201115 22:01:31.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.702" endtime="20201115 22:01:31.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.700" endtime="20201115 22:01:31.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.740" endtime="20201115 22:01:32.025"></status>
</kw>
<msg timestamp="20201115 22:01:32.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022281236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.738" endtime="20201115 22:01:32.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022281236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.030" endtime="20201115 22:01:32.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.038" endtime="20201115 22:01:32.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.736" endtime="20201115 22:01:32.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.734" endtime="20201115 22:01:32.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:32.044" level="INFO">${RESULT} = [{'time': 0.022281236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.022452917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:32.041" endtime="20201115 22:01:32.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:32.058" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 22:01:32.045" endtime="20201115 22:01:32.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.062" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:32.061" endtime="20201115 22:01:32.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.065" level="INFO">VALUE: [8.860999999998898e-06, 8.610999999998648e-06, 8.471999999998953e-06, 8.471999999998953e-06, 8.610999999998648e-06, 8.471999999998953e-06, 8.458000000002852e-06, 8.542000000000272e-06, 8.457999999999383e-06, 8.471999999998953e-06, 8.597000000002547e-06, 8.444000000003282e-06, 8.457999999999383e-06, 8.611000000002117e-06, 8.471999999998953e-06, 8.443999999999813e-06, 8.59800000000202e-06, 8.417000000000147e-06, 8.457999999999383e-06, 8.610999999998648e-06, 8.485999999998523e-06, 8.471999999998953e-06, 8.639000000001257e-06, 8.499999999998092e-06, 8.457999999999383e-06, 8.611000000002117e-06, 8.485999999998523e-06, 8.513999999997662e-06, 8.625000000001687e-06, 8.485999999998523e-06, 8.471999999998953e-06, 8.596999999999078e-06, 8.430000000000243e-06, 8.471999999998953e-06, 8.596999999999078e-06, 8.473000000001896e-06, 8.457999999999383e-06, 8.624999999998217e-06, 8.500000000001562e-06, 8.417000000000147e-06, 8.610999999998648e-06, 8.430999999999716e-06, 8.458999999998856e-06, 8.625000000001687e-06, 8.471999999998953e-06, 8.457999999999383e-06, 8.624999999998217e-06, 8.471999999998953e-06, 8.457999999999383e-06, 8.625000000001687e-06]</msg>
<status status="PASS" starttime="20201115 22:01:32.063" endtime="20201115 22:01:32.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.059" endtime="20201115 22:01:32.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.068" endtime="20201115 22:01:32.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.072" endtime="20201115 22:01:32.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.070" endtime="20201115 22:01:32.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.067" endtime="20201115 22:01:32.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.698" endtime="20201115 22:01:32.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.118" endtime="20201115 22:01:32.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.117" endtime="20201115 22:01:32.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.843" endtime="20201115 22:01:32.093"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.098" endtime="20201115 22:01:32.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.096" endtime="20201115 22:01:32.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.095" endtime="20201115 22:01:32.118"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:00:42.772" endtime="20201115 22:01:32.119" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 21:59:48.179" endtime="20201115 22:01:32.125"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 21:59:46.156" endtime="20201115 22:01:32.145"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
