<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:01:38.707" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.273" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:01:39.281" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:01:40.390" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:01:39.272" endtime="20201115 22:01:40.391"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.394" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:01:40.392" endtime="20201115 22:01:40.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.270" endtime="20201115 22:01:40.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:40.397" endtime="20201115 22:01:40.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.395" endtime="20201115 22:01:40.581"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.594" endtime="20201115 22:01:40.609"></status>
</kw>
<msg timestamp="20201115 22:01:40.609" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.592" endtime="20201115 22:01:40.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.612" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.610" endtime="20201115 22:01:40.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.615" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:40.613" endtime="20201115 22:01:40.615"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:40.590" endtime="20201115 22:01:40.616"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:40.588" endtime="20201115 22:01:40.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.586" endtime="20201115 22:01:40.617"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:40.621" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:40.620" endtime="20201115 22:01:40.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.618" endtime="20201115 22:01:40.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.586" endtime="20201115 22:01:40.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.585" endtime="20201115 22:01:40.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.623" endtime="20201115 22:01:40.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.583" endtime="20201115 22:01:40.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.626" endtime="20201115 22:01:40.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.582" endtime="20201115 22:01:40.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.269" endtime="20201115 22:01:40.629"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:40.635" endtime="20201115 22:01:40.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.634" endtime="20201115 22:01:40.655"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.670" endtime="20201115 22:01:40.684"></status>
</kw>
<msg timestamp="20201115 22:01:40.684" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.667" endtime="20201115 22:01:40.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.687" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.685" endtime="20201115 22:01:40.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.690" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:40.688" endtime="20201115 22:01:40.690"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:40.664" endtime="20201115 22:01:40.691"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:40.662" endtime="20201115 22:01:40.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.660" endtime="20201115 22:01:40.691"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:40.695" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:40.694" endtime="20201115 22:01:40.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.692" endtime="20201115 22:01:40.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.659" endtime="20201115 22:01:40.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.659" endtime="20201115 22:01:40.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.697" endtime="20201115 22:01:40.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.657" endtime="20201115 22:01:40.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.656" endtime="20201115 22:01:40.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.632" endtime="20201115 22:01:40.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.707" endtime="20201115 22:01:40.717"></status>
</kw>
<msg timestamp="20201115 22:01:40.718" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.705" endtime="20201115 22:01:40.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.720" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.719" endtime="20201115 22:01:40.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.721" endtime="20201115 22:01:40.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.703" endtime="20201115 22:01:40.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.701" endtime="20201115 22:01:40.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.729" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:01:40.727" endtime="20201115 22:01:40.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.731" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 22:01:40.730" endtime="20201115 22:01:40.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.725" endtime="20201115 22:01:40.731"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:40.629" endtime="20201115 22:01:40.732" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:01:38.819" endtime="20201115 22:01:40.735"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.790" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:01:40.798" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:01:42.012" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:01:40.789" endtime="20201115 22:01:42.012"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.015" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:01:42.013" endtime="20201115 22:01:42.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.788" endtime="20201115 22:01:42.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:42.018" endtime="20201115 22:01:42.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.016" endtime="20201115 22:01:42.239"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.252" endtime="20201115 22:01:42.265"></status>
</kw>
<msg timestamp="20201115 22:01:42.266" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.250" endtime="20201115 22:01:42.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.269" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.267" endtime="20201115 22:01:42.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.272" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:42.270" endtime="20201115 22:01:42.272"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:42.248" endtime="20201115 22:01:42.273"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:42.245" endtime="20201115 22:01:42.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.244" endtime="20201115 22:01:42.273"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:42.277" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:42.276" endtime="20201115 22:01:42.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.274" endtime="20201115 22:01:42.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.243" endtime="20201115 22:01:42.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.243" endtime="20201115 22:01:42.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.279" endtime="20201115 22:01:42.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.242" endtime="20201115 22:01:42.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.282" endtime="20201115 22:01:42.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.240" endtime="20201115 22:01:42.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.786" endtime="20201115 22:01:42.284"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:42.291" endtime="20201115 22:01:42.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.289" endtime="20201115 22:01:42.311"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.324" endtime="20201115 22:01:42.337"></status>
</kw>
<msg timestamp="20201115 22:01:42.338" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.322" endtime="20201115 22:01:42.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.341" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.339" endtime="20201115 22:01:42.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.344" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:42.342" endtime="20201115 22:01:42.344"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:42.320" endtime="20201115 22:01:42.345"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:42.317" endtime="20201115 22:01:42.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.316" endtime="20201115 22:01:42.346"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:42.350" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:42.349" endtime="20201115 22:01:42.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.347" endtime="20201115 22:01:42.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.315" endtime="20201115 22:01:42.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.315" endtime="20201115 22:01:42.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.351" endtime="20201115 22:01:42.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.313" endtime="20201115 22:01:42.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.312" endtime="20201115 22:01:42.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.287" endtime="20201115 22:01:42.354"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:01:42.357" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.364" endtime="20201115 22:01:42.376"></status>
</kw>
<msg timestamp="20201115 22:01:42.376" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.363" endtime="20201115 22:01:42.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.379" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.377" endtime="20201115 22:01:42.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.380" endtime="20201115 22:01:42.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.360" endtime="20201115 22:01:42.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.359" endtime="20201115 22:01:42.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.389" endtime="20201115 22:01:42.678"></status>
</kw>
<msg timestamp="20201115 22:01:42.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063986569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063994639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:42.387" endtime="20201115 22:01:42.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063986569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063994639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:42.681" endtime="20201115 22:01:42.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.686" endtime="20201115 22:01:42.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.385" endtime="20201115 22:01:42.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.383" endtime="20201115 22:01:42.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:42.692" level="INFO">${RESULT} = [{'time': 0.063994639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.07000000001279e-06, 'source_diff': 8.07000000001279e-06}, {'time': 0.064004528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:42.690" endtime="20201115 22:01:42.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:42.701" level="INFO">${GPIO_OVERHEAD} = {'time': [0.063994639, 0.064004528, 0.064011583, 0.064028292, 0.064039542, 0.064053153, 0.064065319, 0.064079236, 0.064089625, 0.064102181, 0.064114069, 0.064122736, 0.064131542, 0.064138069, 0.064153...</msg>
<status status="PASS" starttime="20201115 22:01:42.693" endtime="20201115 22:01:42.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.705" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:42.704" endtime="20201115 22:01:42.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.708" level="INFO">VALUE: [8.07000000001279e-06, 5.0000000000050004e-06, 3.1389999999992257e-06, 7.55600000000578e-06, 9.723000000003146e-06, 7.152999999995857e-06, 3.137999999999752e-06, 9.318999999993749e-06, 1.9170000000040543e-06, 9.152999999997857e-06, 6.5969999999970774e-06, 7.152999999995857e-06, 2.305999999993591e-06, 5.013000000012036e-06, 9.819999999993723e-06, 2.4439999999903428e-06, 1.6390000000116034e-06, 7.819000000006127e-06, 3.860999999993897e-06, 2.874999999999406e-06, 4.721999999998672e-06, 6.8879999999965635e-06, 8.624999999998217e-06, 4.596999999995077e-06, 5.52800000000464e-06]</msg>
<status status="PASS" starttime="20201115 22:01:42.706" endtime="20201115 22:01:42.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.702" endtime="20201115 22:01:42.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.711" endtime="20201115 22:01:42.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:42.714" endtime="20201115 22:01:42.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.713" endtime="20201115 22:01:42.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.709" endtime="20201115 22:01:42.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.357" endtime="20201115 22:01:42.735"></status>
</kw>
<msg timestamp="20201115 22:01:42.735" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.743" endtime="20201115 22:01:42.753"></status>
</kw>
<msg timestamp="20201115 22:01:42.753" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.741" endtime="20201115 22:01:42.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.756" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.754" endtime="20201115 22:01:42.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.757" endtime="20201115 22:01:42.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.739" endtime="20201115 22:01:42.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.737" endtime="20201115 22:01:42.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.766" endtime="20201115 22:01:43.034"></status>
</kw>
<msg timestamp="20201115 22:01:43.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018474278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018481944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:42.764" endtime="20201115 22:01:43.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018474278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018481944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.037" endtime="20201115 22:01:43.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.042" endtime="20201115 22:01:43.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.762" endtime="20201115 22:01:43.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.760" endtime="20201115 22:01:43.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:43.048" level="INFO">${RESULT} = [{'time': 0.018481944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.665999999999923e-06, 'source_diff': 7.665999999999923e-06}, {'time': 0.018492361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:43.046" endtime="20201115 22:01:43.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:43.115" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018481944, 0.018492361, 0.018503583, 0.018510097, 0.018516347, 0.018528778, 0.018542681, 0.018559681, 0.018570222, 0.018577806, 0.018592, 0.018602681, 0.018614167, 0.018623486, 0.018635375...</msg>
<status status="PASS" starttime="20201115 22:01:43.108" endtime="20201115 22:01:43.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.119" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:43.118" endtime="20201115 22:01:43.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.122" level="INFO">VALUE: [7.665999999999923e-06, 1.6529999999972955e-06, 3.124999999999656e-06, 4.9999999999980616e-06, 4.165999999999892e-06, 2.8200000000006e-06, 7.694999999998536e-06, 8.08400000000195e-06, 7.554999999999368e-06, 3.1669999999983656e-06, 7.972000000001922e-06, 8.638999999997787e-06, 9.834000000000231e-06, 1.639000000001195e-06, 9.693999999997593e-06, 3.943999999998782e-06, 6.110999999999617e-06, 8.097000000002047e-06, 7.2779999999994516e-06, 9.292000000001022e-06, 4.721999999998672e-06, 7.1529999999993266e-06, 7.681000000002436e-06, 9.318999999997218e-06, 9.208999999999606e-06]</msg>
<status status="PASS" starttime="20201115 22:01:43.120" endtime="20201115 22:01:43.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.116" endtime="20201115 22:01:43.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.125" endtime="20201115 22:01:43.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:43.128" endtime="20201115 22:01:43.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.126" endtime="20201115 22:01:43.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.123" endtime="20201115 22:01:43.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.736" endtime="20201115 22:01:43.149"></status>
</kw>
<msg timestamp="20201115 22:01:43.149" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.157" endtime="20201115 22:01:43.166"></status>
</kw>
<msg timestamp="20201115 22:01:43.167" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.155" endtime="20201115 22:01:43.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.169" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.168" endtime="20201115 22:01:43.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.170" endtime="20201115 22:01:43.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.152" endtime="20201115 22:01:43.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.151" endtime="20201115 22:01:43.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.179" endtime="20201115 22:01:43.463"></status>
</kw>
<msg timestamp="20201115 22:01:43.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018513431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018520681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.178" endtime="20201115 22:01:43.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018513431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018520681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.466" endtime="20201115 22:01:43.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.471" endtime="20201115 22:01:43.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.175" endtime="20201115 22:01:43.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.173" endtime="20201115 22:01:43.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:43.477" level="INFO">${RESULT} = [{'time': 0.018520681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.018531222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:43.474" endtime="20201115 22:01:43.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:43.486" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018520681, 0.018531222, 0.018545806, 0.018557556, 0.018568639, 0.018576639, 0.018590694, 0.018601944, 0.018612194, 0.018621778, 0.018636236, 0.018649458, 0.018667319, 0.018682361, 0.018693...</msg>
<status status="PASS" starttime="20201115 22:01:43.478" endtime="20201115 22:01:43.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.490" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:43.489" endtime="20201115 22:01:43.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.492" level="INFO">VALUE: [7.250000000000312e-06, 5.541000000001267e-06, 8.09800000000152e-06, 7.958999999998356e-06, 9.667000000001397e-06, 4.9999999999980616e-06, 5.277000000001447e-06, 7.985999999998022e-06, 7.165999999999423e-06, 7.2779999999994516e-06, 6.9029999999990765e-06, 7.554999999999368e-06, 9.375000000002437e-06, 9.153000000001327e-06, 6.485999999999992e-06, 9.026999999998259e-06, 1.7910000000009862e-06, 3.79200000000246e-06, 9.722999999999676e-06, 5.1389999999977565e-06, 6.610999999996647e-06, 8.889000000001507e-06, 3.137999999999752e-06, 2.05600000000028e-06, 5.028000000000671e-06]</msg>
<status status="PASS" starttime="20201115 22:01:43.491" endtime="20201115 22:01:43.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.487" endtime="20201115 22:01:43.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.495" endtime="20201115 22:01:43.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:43.499" endtime="20201115 22:01:43.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.497" endtime="20201115 22:01:43.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.494" endtime="20201115 22:01:43.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.149" endtime="20201115 22:01:43.519"></status>
</kw>
<msg timestamp="20201115 22:01:43.520" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.527" endtime="20201115 22:01:43.538"></status>
</kw>
<msg timestamp="20201115 22:01:43.538" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.526" endtime="20201115 22:01:43.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.540" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.539" endtime="20201115 22:01:43.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.541" endtime="20201115 22:01:43.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.523" endtime="20201115 22:01:43.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.521" endtime="20201115 22:01:43.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.550" endtime="20201115 22:01:43.814"></status>
</kw>
<msg timestamp="20201115 22:01:43.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018167764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018173556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.549" endtime="20201115 22:01:43.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018167764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018173556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.817" endtime="20201115 22:01:43.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.823" endtime="20201115 22:01:43.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.546" endtime="20201115 22:01:43.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.544" endtime="20201115 22:01:43.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:43.829" level="INFO">${RESULT} = [{'time': 0.018173556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.018186403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:43.826" endtime="20201115 22:01:43.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:43.837" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018173556, 0.018186403, 0.018198417, 0.018213125, 0.018226083, 0.018234208, 0.018250556, 0.018260139, 0.018270569, 0.018287014, 0.018299042, 0.018315111, 0.018328181, 0.018332028, 0.018341...</msg>
<status status="PASS" starttime="20201115 22:01:43.830" endtime="20201115 22:01:43.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.842" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:43.840" endtime="20201115 22:01:43.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.844" level="INFO">VALUE: [5.792000000000991e-06, 9.570000000000412e-06, 8.236000000001742e-06, 5.542000000000741e-06, 3.2639999999993508e-06, 2.3189999999971567e-06, 6.486999999999465e-06, 7.139000000003226e-06, 7.832999999998758e-06, 6.736000000000242e-06, 9.167000000000897e-06, 9.054999999997398e-06, 5.2639999999978815e-06, 1.653000000000765e-06, 4.179999999999462e-06, 9.458000000000383e-06, 1.51400000000107e-06, 2.944000000001251e-06, 9.042000000000772e-06, 2.4439999999972817e-06, 6.347000000000297e-06, 2.7229999999996146e-06, 8.374999999997967e-06, 8.125000000001187e-06, 1.7500000000017502e-06]</msg>
<status status="PASS" starttime="20201115 22:01:43.843" endtime="20201115 22:01:43.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.838" endtime="20201115 22:01:43.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.847" endtime="20201115 22:01:43.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:43.851" endtime="20201115 22:01:43.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.849" endtime="20201115 22:01:43.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.846" endtime="20201115 22:01:43.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.520" endtime="20201115 22:01:43.871"></status>
</kw>
<msg timestamp="20201115 22:01:43.872" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.879" endtime="20201115 22:01:43.889"></status>
</kw>
<msg timestamp="20201115 22:01:43.889" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.878" endtime="20201115 22:01:43.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.892" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.890" endtime="20201115 22:01:43.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.893" endtime="20201115 22:01:43.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.875" endtime="20201115 22:01:43.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.873" endtime="20201115 22:01:43.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.902" endtime="20201115 22:01:44.167"></status>
</kw>
<msg timestamp="20201115 22:01:44.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018145028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018148653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.900" endtime="20201115 22:01:44.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018145028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018148653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.170" endtime="20201115 22:01:44.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.175" endtime="20201115 22:01:44.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.897" endtime="20201115 22:01:44.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.896" endtime="20201115 22:01:44.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:44.181" level="INFO">${RESULT} = [{'time': 0.018148653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.018160667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:44.178" endtime="20201115 22:01:44.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:44.191" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018148653, 0.018160667, 0.018174972, 0.018184583, 0.018194222, 0.018204347, 0.018219389, 0.018228111, 0.018238528, 0.018253, 0.018263125, 0.018270722, 0.018276417, 0.018290056, 0.018303417...</msg>
<status status="PASS" starttime="20201115 22:01:44.182" endtime="20201115 22:01:44.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.195" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:44.194" endtime="20201115 22:01:44.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.197" level="INFO">VALUE: [3.625000000000156e-06, 7.013999999999632e-06, 9.166000000001423e-06, 2.860999999999836e-06, 8.110999999998147e-06, 7.971999999998453e-06, 7.903000000000077e-06, 4.319000000002626e-06, 6.485999999999992e-06, 8.527999999997232e-06, 7.292000000002491e-06, 4.346999999998297e-06, 2.04200000000071e-06, 5.541999999997271e-06, 8.083999999998481e-06, 8.625000000001687e-06, 3.500000000000031e-06, 8.625000000001687e-06, 3.945000000001725e-06, 2.055000000000806e-06, 2.985999999999961e-06, 8.652000000001353e-06, 8.778000000000952e-06, 2.0270000000016664e-06, 6.3329999999972575e-06]</msg>
<status status="PASS" starttime="20201115 22:01:44.196" endtime="20201115 22:01:44.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.191" endtime="20201115 22:01:44.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.200" endtime="20201115 22:01:44.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.203" endtime="20201115 22:01:44.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.202" endtime="20201115 22:01:44.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.199" endtime="20201115 22:01:44.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.872" endtime="20201115 22:01:44.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.355" endtime="20201115 22:01:44.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.230" endtime="20201115 22:01:44.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.228" endtime="20201115 22:01:44.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.226" endtime="20201115 22:01:44.250"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:42.284" endtime="20201115 22:01:44.250" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.258" endtime="20201115 22:01:44.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.257" endtime="20201115 22:01:44.279"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.291" endtime="20201115 22:01:44.305"></status>
</kw>
<msg timestamp="20201115 22:01:44.306" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.290" endtime="20201115 22:01:44.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.308" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.307" endtime="20201115 22:01:44.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.311" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:44.309" endtime="20201115 22:01:44.312"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:44.287" endtime="20201115 22:01:44.312"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:44.285" endtime="20201115 22:01:44.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.284" endtime="20201115 22:01:44.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:44.317" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:44.316" endtime="20201115 22:01:44.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.314" endtime="20201115 22:01:44.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.283" endtime="20201115 22:01:44.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.282" endtime="20201115 22:01:44.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.319" endtime="20201115 22:01:44.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.281" endtime="20201115 22:01:44.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.279" endtime="20201115 22:01:44.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.255" endtime="20201115 22:01:44.322"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:01:44.324" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.333" endtime="20201115 22:01:44.344"></status>
</kw>
<msg timestamp="20201115 22:01:44.345" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.331" endtime="20201115 22:01:44.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.347" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.346" endtime="20201115 22:01:44.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.348" endtime="20201115 22:01:44.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.329" endtime="20201115 22:01:44.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.326" endtime="20201115 22:01:44.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.357" endtime="20201115 22:01:44.644"></status>
</kw>
<msg timestamp="20201115 22:01:44.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065264375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065265819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.356" endtime="20201115 22:01:44.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065264375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065265819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.648" endtime="20201115 22:01:44.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.656" endtime="20201115 22:01:44.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.353" endtime="20201115 22:01:44.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.352" endtime="20201115 22:01:44.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:44.663" level="INFO">${RESULT} = [{'time': 0.065265819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4440000000032205e-06, 'source_diff': 1.4440000000032205e-06}, {'time': 0.065269153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:44.660" endtime="20201115 22:01:44.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:44.676" level="INFO">${OVERHEAD} = {'time': [0.065265819, 0.065269153, 0.065273778, 0.065280972, 0.065284153, 0.065291611, 0.065295167, 0.065297806, 0.065301264, 0.065307653, 0.065315389, 0.065318139, 0.065324264, 0.065332403, 0.065340...</msg>
<status status="PASS" starttime="20201115 22:01:44.664" endtime="20201115 22:01:44.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.680" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:44.679" endtime="20201115 22:01:44.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.683" level="INFO">VALUE: [1.4440000000032205e-06, 1.096999999991577e-06, 1.0970000000054547e-06, 1.0830000000128237e-06, 1.0699999999919108e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.096999999991577e-06, 1.096999999991577e-06, 1.0970000000054547e-06, 1.0699999999919108e-06, 1.0830000000128237e-06, 1.0839999999984196e-06, 1.0699999999919108e-06, 1.0970000000054547e-06, 1.082999999998946e-06, 1.096999999991577e-06, 1.0700000000057885e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.0840000000122973e-06, 1.096999999991577e-06, 1.082999999998946e-06, 1.0830000000128237e-06, 1.000000000001e-06, 1.1109999999980857e-06, 1.0689999999924371e-06, 1.082999999998946e-06, 1.0420000000066487e-06, 1.069000000006315e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.0839999999984196e-06, 1.0980000000049284e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0409999999932973e-06, 1.0830000000128237e-06, 1.0689999999924371e-06, 1.082999999998946e-06, 1.1249999999907168e-06, 1.069000000006315e-06, 1.082999999998946e-06, 1.0970000000054547e-06, 1.096999999991577e-06, 1.096999999991577e-06, 1.082999999998946e-06, 1.069000000006315e-06]</msg>
<status status="PASS" starttime="20201115 22:01:44.681" endtime="20201115 22:01:44.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.677" endtime="20201115 22:01:44.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.686" endtime="20201115 22:01:44.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.690" endtime="20201115 22:01:44.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.688" endtime="20201115 22:01:44.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.685" endtime="20201115 22:01:44.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.324" endtime="20201115 22:01:44.710"></status>
</kw>
<msg timestamp="20201115 22:01:44.711" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.719" endtime="20201115 22:01:44.730"></status>
</kw>
<msg timestamp="20201115 22:01:44.731" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.717" endtime="20201115 22:01:44.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.733" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.732" endtime="20201115 22:01:44.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.734" endtime="20201115 22:01:44.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.714" endtime="20201115 22:01:44.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.712" endtime="20201115 22:01:44.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.743" endtime="20201115 22:01:45.024"></status>
</kw>
<msg timestamp="20201115 22:01:45.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020107681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020109111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.741" endtime="20201115 22:01:45.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020107681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020109111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.029" endtime="20201115 22:01:45.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.037" endtime="20201115 22:01:45.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.739" endtime="20201115 22:01:45.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.737" endtime="20201115 22:01:45.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:45.043" level="INFO">${RESULT} = [{'time': 0.020109111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.020119792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:45.040" endtime="20201115 22:01:45.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:45.056" level="INFO">${OVERHEAD} = {'time': [0.020109111, 0.020119792, 0.020125639, 0.020130431, 0.020138708, 0.020141222, 0.020149625, 0.020156542, 0.020164667, 0.02017175, 0.0201765, 0.020179, 0.020182986, 0.020188306, 0.020194694, 0...</msg>
<status status="PASS" starttime="20201115 22:01:45.044" endtime="20201115 22:01:45.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.061" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:45.060" endtime="20201115 22:01:45.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.063" level="INFO">VALUE: [1.4300000000001811e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.084000000001889e-06, 1.0270000000006663e-06, 1.0970000000019853e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.000000000001e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0970000000019853e-06, 1.1529999999967955e-06, 1.0979999999979895e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.0830000000024154e-06, 1.1110000000015552e-06, 1.0699999999988496e-06, 1.0839999999984196e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.0979999999979895e-06, 1.0969999999985158e-06]</msg>
<status status="PASS" starttime="20201115 22:01:45.062" endtime="20201115 22:01:45.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.057" endtime="20201115 22:01:45.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.067" endtime="20201115 22:01:45.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:45.070" endtime="20201115 22:01:45.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.069" endtime="20201115 22:01:45.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.065" endtime="20201115 22:01:45.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.711" endtime="20201115 22:01:45.091"></status>
</kw>
<msg timestamp="20201115 22:01:45.091" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.098" endtime="20201115 22:01:45.110"></status>
</kw>
<msg timestamp="20201115 22:01:45.111" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.097" endtime="20201115 22:01:45.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.113" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.112" endtime="20201115 22:01:45.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.114" endtime="20201115 22:01:45.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.094" endtime="20201115 22:01:45.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.093" endtime="20201115 22:01:45.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.124" endtime="20201115 22:01:45.407"></status>
</kw>
<msg timestamp="20201115 22:01:45.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019258653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019260097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.122" endtime="20201115 22:01:45.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019258653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019260097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.411" endtime="20201115 22:01:45.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.419" endtime="20201115 22:01:45.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.119" endtime="20201115 22:01:45.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.117" endtime="20201115 22:01:45.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:45.426" level="INFO">${RESULT} = [{'time': 0.019260097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.019265542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:45.423" endtime="20201115 22:01:45.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:45.439" level="INFO">${OVERHEAD} = {'time': [0.019260097, 0.019265542, 0.019271806, 0.019282486, 0.019287806, 0.01929325, 0.019295875, 0.019303347, 0.019313778, 0.019321903, 0.019328167, 0.019336569, 0.019341472, 0.019352028, 0.0193558...</msg>
<status status="PASS" starttime="20201115 22:01:45.427" endtime="20201115 22:01:45.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.443" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:45.442" endtime="20201115 22:01:45.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.446" level="INFO">VALUE: [1.443999999999751e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.054999999999806e-06, 1.084000000001889e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.070000000002319e-06, 1.084000000001889e-06, 1.0830000000024154e-06, 1.0409999999967667e-06, 1.02800000000014e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.098000000001459e-06, 1.0560000000027492e-06, 1.084000000001889e-06, 1.084000000001889e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.1110000000015552e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0970000000019853e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0970000000019853e-06]</msg>
<status status="PASS" starttime="20201115 22:01:45.444" endtime="20201115 22:01:45.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.440" endtime="20201115 22:01:45.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.449" endtime="20201115 22:01:45.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:45.453" endtime="20201115 22:01:45.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.451" endtime="20201115 22:01:45.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.448" endtime="20201115 22:01:45.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.091" endtime="20201115 22:01:45.473"></status>
</kw>
<msg timestamp="20201115 22:01:45.473" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.481" endtime="20201115 22:01:45.492"></status>
</kw>
<msg timestamp="20201115 22:01:45.493" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.479" endtime="20201115 22:01:45.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.495" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.494" endtime="20201115 22:01:45.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.496" endtime="20201115 22:01:45.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.477" endtime="20201115 22:01:45.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.475" endtime="20201115 22:01:45.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.506" endtime="20201115 22:01:45.790"></status>
</kw>
<msg timestamp="20201115 22:01:45.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019275278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019276736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.503" endtime="20201115 22:01:45.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019275278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019276736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.794" endtime="20201115 22:01:45.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.802" endtime="20201115 22:01:45.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.501" endtime="20201115 22:01:45.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.499" endtime="20201115 22:01:45.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:45.809" level="INFO">${RESULT} = [{'time': 0.019276736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.019278958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:45.805" endtime="20201115 22:01:45.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:45.823" level="INFO">${OVERHEAD} = {'time': [0.019276736, 0.019278958, 0.019289653, 0.019294014, 0.019302417, 0.019309347, 0.01931525, 0.019324681, 0.019334847, 0.019344347, 0.019347611, 0.019351444, 0.019358014, 0.019361542, 0.0193700...</msg>
<status status="PASS" starttime="20201115 22:01:45.810" endtime="20201115 22:01:45.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.827" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:45.826" endtime="20201115 22:01:45.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.830" level="INFO">VALUE: [1.457999999999321e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.0839999999984196e-06, 1.02800000000014e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.068999999999376e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.0269999999971968e-06, 1.125000000001125e-06, 1.0839999999984196e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.139000000000695e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 9.999999999975306e-07, 1.068999999999376e-06, 1.084000000001889e-06, 1.1109999999980857e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.0970000000019853e-06, 1.0970000000019853e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.0830000000024154e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.0839999999984196e-06, 1.068999999999376e-06]</msg>
<status status="PASS" starttime="20201115 22:01:45.828" endtime="20201115 22:01:45.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.824" endtime="20201115 22:01:45.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.833" endtime="20201115 22:01:45.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:45.837" endtime="20201115 22:01:45.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.835" endtime="20201115 22:01:45.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.832" endtime="20201115 22:01:45.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.474" endtime="20201115 22:01:45.857"></status>
</kw>
<msg timestamp="20201115 22:01:45.857" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.865" endtime="20201115 22:01:45.877"></status>
</kw>
<msg timestamp="20201115 22:01:45.878" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.863" endtime="20201115 22:01:45.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.880" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.879" endtime="20201115 22:01:45.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.881" endtime="20201115 22:01:45.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.861" endtime="20201115 22:01:45.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.859" endtime="20201115 22:01:45.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.890" endtime="20201115 22:01:46.173"></status>
</kw>
<msg timestamp="20201115 22:01:46.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019235194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019236653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.889" endtime="20201115 22:01:46.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019235194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019236653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.177" endtime="20201115 22:01:46.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.185" endtime="20201115 22:01:46.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.886" endtime="20201115 22:01:46.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.884" endtime="20201115 22:01:46.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:46.192" level="INFO">${RESULT} = [{'time': 0.019236653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.019240097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:46.188" endtime="20201115 22:01:46.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:46.205" level="INFO">${OVERHEAD} = {'time': [0.019236653, 0.019240097, 0.019245806, 0.019250986, 0.019256972, 0.019260153, 0.019268264, 0.019273042, 0.019279708, 0.019286639, 0.019297319, 0.019300361, 0.019307417, 0.019310583, 0.019317...</msg>
<status status="PASS" starttime="20201115 22:01:46.193" endtime="20201115 22:01:46.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.209" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:46.208" endtime="20201115 22:01:46.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.211" level="INFO">VALUE: [1.4589999999987946e-06, 1.0410000000002362e-06, 1.084000000001889e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.0839999999984196e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0410000000002362e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.139000000000695e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.084000000001889e-06, 1.0699999999988496e-06, 1.084000000001889e-06, 1.0979999999979895e-06, 1.0699999999988496e-06, 1.098000000001459e-06, 1.0830000000024154e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.1249999999976557e-06, 1.0839999999984196e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0830000000024154e-06, 1.068999999999376e-06]</msg>
<status status="PASS" starttime="20201115 22:01:46.210" endtime="20201115 22:01:46.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.206" endtime="20201115 22:01:46.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.215" endtime="20201115 22:01:46.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.218" endtime="20201115 22:01:46.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.217" endtime="20201115 22:01:46.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.213" endtime="20201115 22:01:46.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.858" endtime="20201115 22:01:46.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.323" endtime="20201115 22:01:46.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.244" endtime="20201115 22:01:46.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.242" endtime="20201115 22:01:46.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.241" endtime="20201115 22:01:46.264"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:44.252" endtime="20201115 22:01:46.264" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.272" endtime="20201115 22:01:46.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.270" endtime="20201115 22:01:46.292"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.307" endtime="20201115 22:01:46.320"></status>
</kw>
<msg timestamp="20201115 22:01:46.320" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.304" endtime="20201115 22:01:46.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.323" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.321" endtime="20201115 22:01:46.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.326" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:46.324" endtime="20201115 22:01:46.326"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:46.302" endtime="20201115 22:01:46.327"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:46.299" endtime="20201115 22:01:46.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.298" endtime="20201115 22:01:46.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:46.331" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:46.331" endtime="20201115 22:01:46.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.328" endtime="20201115 22:01:46.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.297" endtime="20201115 22:01:46.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.296" endtime="20201115 22:01:46.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.333" endtime="20201115 22:01:46.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.295" endtime="20201115 22:01:46.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.293" endtime="20201115 22:01:46.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.269" endtime="20201115 22:01:46.336"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.339" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.348" endtime="20201115 22:01:46.360"></status>
</kw>
<msg timestamp="20201115 22:01:46.361" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.347" endtime="20201115 22:01:46.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.363" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.362" endtime="20201115 22:01:46.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.364" endtime="20201115 22:01:46.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.344" endtime="20201115 22:01:46.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.341" endtime="20201115 22:01:46.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.373" endtime="20201115 22:01:46.660"></status>
</kw>
<msg timestamp="20201115 22:01:46.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068646528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068650444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.372" endtime="20201115 22:01:46.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068646528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068650444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.664" endtime="20201115 22:01:46.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.672" endtime="20201115 22:01:46.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.369" endtime="20201115 22:01:46.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.367" endtime="20201115 22:01:46.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:46.679" level="INFO">${RESULT} = [{'time': 0.068650444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916000000006581e-06, 'source_diff': 3.916000000006581e-06}, {'time': 0.068699917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:46.676" endtime="20201115 22:01:46.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:46.692" level="INFO">${OVERHEAD} = {'time': [0.068650444, 0.068699917, 0.068747417, 0.068791125, 0.068834528, 0.068879667, 0.068924528, 0.068973986, 0.069023583, 0.069066736, 0.069111431, 0.069158194, 0.069204014, 0.06924875, 0.0692912...</msg>
<status status="PASS" starttime="20201115 22:01:46.680" endtime="20201115 22:01:46.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.696" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:46.695" endtime="20201115 22:01:46.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.699" level="INFO">VALUE: [3.916000000006581e-06, 3.3200000000011e-06, 3.2360000000036804e-06, 3.2639999999889424e-06, 3.278000000009329e-06, 3.209000000004014e-06, 3.2360000000036804e-06, 3.26400000000282e-06, 3.2769999999959776e-06, 3.29200000000196e-06, 3.237000000003154e-06, 3.2360000000036804e-06, 3.2219999999971716e-06, 3.1939999999980317e-06, 3.29200000000196e-06, 3.26400000000282e-06, 3.2499999999963114e-06, 3.2779999999954512e-06, 3.26400000000282e-06, 3.2360000000036804e-06, 3.26400000000282e-06, 3.2499999999963114e-06, 3.26400000000282e-06, 3.1669999999983656e-06, 3.250000000010189e-06, 3.2229999999966452e-06, 3.2359999999898026e-06, 3.26400000000282e-06, 3.250000000010189e-06, 3.2219999999971716e-06, 3.29200000000196e-06, 3.26400000000282e-06, 3.26400000000282e-06, 3.250000000010189e-06, 3.2779999999954512e-06, 3.2499999999963114e-06, 3.2499999999963114e-06, 3.2219999999971716e-06, 3.2779999999954512e-06, 3.2499999999963114e-06, 3.29200000000196e-06, 3.305000000008995e-06, 3.2360000000036804e-06, 3.2360000000036804e-06, 3.2779999999954512e-06, 3.2499999999963114e-06, 3.2909999999886086e-06, 3.2080000000045406e-06, 3.2499999999963114e-06, 3.2219999999971716e-06]</msg>
<status status="PASS" starttime="20201115 22:01:46.698" endtime="20201115 22:01:46.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.693" endtime="20201115 22:01:46.700"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.702" endtime="20201115 22:01:46.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.705" endtime="20201115 22:01:46.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.704" endtime="20201115 22:01:46.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.700" endtime="20201115 22:01:46.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.340" endtime="20201115 22:01:46.726"></status>
</kw>
<msg timestamp="20201115 22:01:46.726" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.735" endtime="20201115 22:01:46.747"></status>
</kw>
<msg timestamp="20201115 22:01:46.748" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.734" endtime="20201115 22:01:46.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.750" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.749" endtime="20201115 22:01:46.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.751" endtime="20201115 22:01:46.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.731" endtime="20201115 22:01:46.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.729" endtime="20201115 22:01:46.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.760" endtime="20201115 22:01:47.047"></status>
</kw>
<msg timestamp="20201115 22:01:47.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022195042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.759" endtime="20201115 22:01:47.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022195042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.051" endtime="20201115 22:01:47.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.059" endtime="20201115 22:01:47.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.756" endtime="20201115 22:01:47.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.754" endtime="20201115 22:01:47.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:47.066" level="INFO">${RESULT} = [{'time': 0.022195042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.77800000000289e-06, 'source_diff': 3.77800000000289e-06}, {'time': 0.022242986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:47.062" endtime="20201115 22:01:47.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:47.079" level="INFO">${OVERHEAD} = {'time': [0.022195042, 0.022242986, 0.022290903, 0.022339278, 0.022387375, 0.022432, 0.022482528, 0.022528611, 0.022573125, 0.022621597, 0.022667819, 0.022714583, 0.022758931, 0.022809167, 0.022859167...</msg>
<status status="PASS" starttime="20201115 22:01:47.066" endtime="20201115 22:01:47.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.083" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:47.082" endtime="20201115 22:01:47.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.085" level="INFO">VALUE: [3.77800000000289e-06, 3.2639999999993508e-06, 3.195000000000975e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.2639999999993508e-06, 3.27800000000239e-06, 3.2639999999993508e-06, 3.2919999999984906e-06, 3.222000000000641e-06, 3.249999999999781e-06, 3.222000000000641e-06, 3.2090000000005448e-06, 3.2230000000001147e-06, 3.2639999999993508e-06, 3.2230000000001147e-06, 3.262999999999877e-06, 3.2500000000032503e-06, 3.208000000001071e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.195000000000975e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.2639999999993508e-06, 3.249999999999781e-06, 3.165999999998892e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.195000000000975e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.262999999999877e-06, 3.249999999999781e-06, 3.27800000000239e-06, 3.2230000000001147e-06, 3.236000000000211e-06, 3.2500000000032503e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.26400000000282e-06, 3.222000000000641e-06, 3.29200000000196e-06, 3.249999999999781e-06, 3.222000000000641e-06, 3.2639999999993508e-06]</msg>
<status status="PASS" starttime="20201115 22:01:47.084" endtime="20201115 22:01:47.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.080" endtime="20201115 22:01:47.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.089" endtime="20201115 22:01:47.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:47.092" endtime="20201115 22:01:47.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.091" endtime="20201115 22:01:47.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.087" endtime="20201115 22:01:47.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.727" endtime="20201115 22:01:47.113"></status>
</kw>
<msg timestamp="20201115 22:01:47.113" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.122" endtime="20201115 22:01:47.135"></status>
</kw>
<msg timestamp="20201115 22:01:47.135" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.121" endtime="20201115 22:01:47.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.138" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.136" endtime="20201115 22:01:47.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.139" endtime="20201115 22:01:47.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.118" endtime="20201115 22:01:47.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.116" endtime="20201115 22:01:47.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.148" endtime="20201115 22:01:47.434"></status>
</kw>
<msg timestamp="20201115 22:01:47.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021793694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.146" endtime="20201115 22:01:47.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021793694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.439" endtime="20201115 22:01:47.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.447" endtime="20201115 22:01:47.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.144" endtime="20201115 22:01:47.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.142" endtime="20201115 22:01:47.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:47.454" level="INFO">${RESULT} = [{'time': 0.021793694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.021836944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:47.450" endtime="20201115 22:01:47.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:47.467" level="INFO">${OVERHEAD} = {'time': [0.021793694, 0.021836944, 0.021883556, 0.021926778, 0.021973264, 0.02202325, 0.022068278, 0.022111153, 0.022154431, 0.022199833, 0.022246722, 0.022297111, 0.022343736, 0.022386611, 0.0224343...</msg>
<status status="PASS" starttime="20201115 22:01:47.454" endtime="20201115 22:01:47.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.471" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:47.470" endtime="20201115 22:01:47.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.473" level="INFO">VALUE: [3.846999999997797e-06, 3.361000000000336e-06, 3.2919999999984906e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.2639999999993508e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.26400000000282e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.2090000000005448e-06, 3.249999999999781e-06, 3.2359999999967415e-06, 3.27800000000239e-06, 3.3059999999980605e-06, 3.236000000000211e-06, 3.208000000001071e-06, 3.249999999999781e-06, 3.237000000003154e-06, 3.222000000000641e-06, 3.249999999999781e-06, 3.3189999999981568e-06, 3.1800000000019313e-06, 3.236000000000211e-06, 3.2500000000032503e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.2230000000001147e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.2779999999989207e-06, 3.2639999999993508e-06, 3.249999999999781e-06, 3.2639999999993508e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.2639999999993508e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.222000000000641e-06, 3.27800000000239e-06]</msg>
<status status="PASS" starttime="20201115 22:01:47.472" endtime="20201115 22:01:47.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.468" endtime="20201115 22:01:47.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.477" endtime="20201115 22:01:47.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:47.480" endtime="20201115 22:01:47.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.479" endtime="20201115 22:01:47.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.475" endtime="20201115 22:01:47.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.114" endtime="20201115 22:01:47.501"></status>
</kw>
<msg timestamp="20201115 22:01:47.501" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.510" endtime="20201115 22:01:47.522"></status>
</kw>
<msg timestamp="20201115 22:01:47.523" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.508" endtime="20201115 22:01:47.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.525" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.524" endtime="20201115 22:01:47.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.526" endtime="20201115 22:01:47.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.506" endtime="20201115 22:01:47.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.504" endtime="20201115 22:01:47.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.535" endtime="20201115 22:01:47.821"></status>
</kw>
<msg timestamp="20201115 22:01:47.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021688014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.534" endtime="20201115 22:01:47.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021688014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.825" endtime="20201115 22:01:47.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.834" endtime="20201115 22:01:47.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.531" endtime="20201115 22:01:47.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.529" endtime="20201115 22:01:47.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:47.840" level="INFO">${RESULT} = [{'time': 0.021688014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.021736764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:47.837" endtime="20201115 22:01:47.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:47.853" level="INFO">${OVERHEAD} = {'time': [0.021688014, 0.021736764, 0.02178225, 0.021829278, 0.021873486, 0.021923736, 0.021971444, 0.022019681, 0.022063083, 0.022107444, 0.022156083, 0.022200417, 0.02224275, 0.022292722, 0.02233666...</msg>
<status status="PASS" starttime="20201115 22:01:47.841" endtime="20201115 22:01:47.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.858" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:47.857" endtime="20201115 22:01:47.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.860" level="INFO">VALUE: [3.846999999997797e-06, 3.374999999999906e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.262999999999877e-06, 3.2369999999996846e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.2639999999993508e-06, 3.2230000000001147e-06, 3.2639999999993508e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.2369999999996846e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.179999999998462e-06, 3.2639999999993508e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.2639999999993508e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.2500000000032503e-06, 3.236000000000211e-06, 3.2639999999993508e-06, 3.236000000000211e-06, 3.319000000001626e-06, 3.208000000001071e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.249999999999781e-06, 3.222000000000641e-06, 3.2639999999993508e-06, 3.276999999999447e-06, 3.29200000000196e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.2639999999993508e-06, 3.2910000000024864e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.26400000000282e-06, 3.27800000000239e-06, 3.2639999999993508e-06, 3.222000000000641e-06]</msg>
<status status="PASS" starttime="20201115 22:01:47.859" endtime="20201115 22:01:47.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.854" endtime="20201115 22:01:47.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.864" endtime="20201115 22:01:47.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:47.867" endtime="20201115 22:01:47.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.866" endtime="20201115 22:01:47.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.862" endtime="20201115 22:01:47.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.502" endtime="20201115 22:01:47.888"></status>
</kw>
<msg timestamp="20201115 22:01:47.888" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.897" endtime="20201115 22:01:47.909"></status>
</kw>
<msg timestamp="20201115 22:01:47.910" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.895" endtime="20201115 22:01:47.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.912" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.911" endtime="20201115 22:01:47.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.913" endtime="20201115 22:01:47.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.893" endtime="20201115 22:01:47.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.891" endtime="20201115 22:01:47.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.922" endtime="20201115 22:01:48.208"></status>
</kw>
<msg timestamp="20201115 22:01:48.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021830931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02183475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:47.921" endtime="20201115 22:01:48.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021830931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02183475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:48.212" endtime="20201115 22:01:48.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.220" endtime="20201115 22:01:48.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.918" endtime="20201115 22:01:48.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.916" endtime="20201115 22:01:48.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:48.227" level="INFO">${RESULT} = [{'time': 0.02183475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.021879333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:48.223" endtime="20201115 22:01:48.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:48.240" level="INFO">${OVERHEAD} = {'time': [0.02183475, 0.021879333, 0.021926708, 0.021972125, 0.022015167, 0.022058528, 0.022103556, 0.022150042, 0.022200431, 0.022244111, 0.022294347, 0.022341514, 0.022388542, 0.022435167, 0.0224823...</msg>
<status status="PASS" starttime="20201115 22:01:48.228" endtime="20201115 22:01:48.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.244" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:48.243" endtime="20201115 22:01:48.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.247" level="INFO">VALUE: [3.818999999998657e-06, 3.347000000000766e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.2779999999989207e-06, 3.181000000001405e-06, 3.249999999999781e-06, 3.2230000000001147e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.179999999998462e-06, 3.26400000000282e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.2639999999993508e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.2919999999984906e-06, 3.222000000000641e-06, 3.304999999998587e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.290999999999017e-06, 3.249999999999781e-06, 3.2369999999996846e-06, 3.2230000000001147e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.195000000000975e-06, 3.249999999999781e-06, 3.2219999999971716e-06, 3.3059999999980605e-06, 3.222000000000641e-06, 3.249999999999781e-06, 3.2500000000032503e-06, 3.30600000000153e-06, 3.236000000000211e-06, 3.2639999999993508e-06, 3.249999999999781e-06]</msg>
<status status="PASS" starttime="20201115 22:01:48.245" endtime="20201115 22:01:48.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.241" endtime="20201115 22:01:48.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.254" endtime="20201115 22:01:48.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.257" endtime="20201115 22:01:48.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.256" endtime="20201115 22:01:48.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.252" endtime="20201115 22:01:48.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.889" endtime="20201115 22:01:48.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.338" endtime="20201115 22:01:48.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.337" endtime="20201115 22:01:48.278"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.281" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.289" endtime="20201115 22:01:48.301"></status>
</kw>
<msg timestamp="20201115 22:01:48.302" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.288" endtime="20201115 22:01:48.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.304" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.303" endtime="20201115 22:01:48.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.305" endtime="20201115 22:01:48.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.285" endtime="20201115 22:01:48.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.283" endtime="20201115 22:01:48.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.314" endtime="20201115 22:01:48.601"></status>
</kw>
<msg timestamp="20201115 22:01:48.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024114, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024117486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:48.313" endtime="20201115 22:01:48.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024114, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024117486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:48.605" endtime="20201115 22:01:48.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.613" endtime="20201115 22:01:48.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.310" endtime="20201115 22:01:48.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.308" endtime="20201115 22:01:48.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:48.620" level="INFO">${RESULT} = [{'time': 0.024117486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.024163361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:48.616" endtime="20201115 22:01:48.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:48.633" level="INFO">${OVERHEAD} = {'time': [0.024117486, 0.024163361, 0.024213, 0.024265056, 0.024316764, 0.024365528, 0.024416333, 0.024465903, 0.024516417, 0.024569597, 0.024616889, 0.024666569, 0.024712792, 0.024760083, 0.024809264...</msg>
<status status="PASS" starttime="20201115 22:01:48.621" endtime="20201115 22:01:48.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.637" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:48.636" endtime="20201115 22:01:48.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.640" level="INFO">VALUE: [3.486000000000461e-06, 3.097000000000516e-06, 3.1809999999979355e-06, 3.0979999999999897e-06, 3.083000000000946e-06, 3.0840000000004197e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.139000000002695e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.0840000000004197e-06, 3.1109999999966165e-06, 3.097000000000516e-06, 3.0969999999970466e-06, 3.097000000000516e-06, 3.0979999999999897e-06, 3.153000000002265e-06, 3.0979999999999897e-06, 3.097000000000516e-06, 3.0829999999974766e-06, 3.1119999999995596e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.097000000000516e-06, 3.083000000000946e-06, 3.0689999999979067e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.1529999999987957e-06, 3.0979999999999897e-06, 3.124999999999656e-06, 3.0979999999999897e-06, 3.054999999998337e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.083000000000946e-06, 3.0840000000004197e-06]</msg>
<status status="PASS" starttime="20201115 22:01:48.638" endtime="20201115 22:01:48.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.634" endtime="20201115 22:01:48.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.643" endtime="20201115 22:01:48.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.647" endtime="20201115 22:01:48.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.645" endtime="20201115 22:01:48.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.642" endtime="20201115 22:01:48.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.281" endtime="20201115 22:01:48.667"></status>
</kw>
<msg timestamp="20201115 22:01:48.668" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.676" endtime="20201115 22:01:48.688"></status>
</kw>
<msg timestamp="20201115 22:01:48.689" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.675" endtime="20201115 22:01:48.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.691" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.690" endtime="20201115 22:01:48.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.692" endtime="20201115 22:01:48.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.672" endtime="20201115 22:01:48.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.670" endtime="20201115 22:01:48.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.701" endtime="20201115 22:01:48.988"></status>
</kw>
<msg timestamp="20201115 22:01:48.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.700" endtime="20201115 22:01:48.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.993" endtime="20201115 22:01:49.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.001" endtime="20201115 22:01:49.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.697" endtime="20201115 22:01:49.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.695" endtime="20201115 22:01:49.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:49.008" level="INFO">${RESULT} = [{'time': 0.021790847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.021839875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:49.004" endtime="20201115 22:01:49.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:49.021" level="INFO">${OVERHEAD} = {'time': [0.021790847, 0.021839875, 0.021893264, 0.021942514, 0.021991583, 0.022043139, 0.02208975, 0.022140667, 0.022188764, 0.022234722, 0.022283347, 0.022335611, 0.022386111, 0.022434736, 0.0224831...</msg>
<status status="PASS" starttime="20201115 22:01:49.008" endtime="20201115 22:01:49.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.025" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:49.024" endtime="20201115 22:01:49.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.028" level="INFO">VALUE: [3.540999999999267e-06, 3.083000000000946e-06, 3.1389999999992257e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.0969999999970466e-06, 3.0979999999999897e-06, 3.097000000000516e-06, 3.0969999999970466e-06, 3.111000000000086e-06, 3.1109999999966165e-06, 3.097000000000516e-06, 3.083000000000946e-06, 3.1389999999992257e-06, 3.1809999999979355e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.0969999999970466e-06, 3.151999999999322e-06, 3.083000000000946e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.0829999999974766e-06, 3.097000000000516e-06, 3.07000000000085e-06, 3.0969999999970466e-06, 3.0979999999999897e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.1119999999995596e-06, 3.0829999999974766e-06, 3.0979999999999897e-06, 3.1119999999995596e-06, 3.0840000000004197e-06, 3.0829999999974766e-06, 3.097000000000516e-06, 3.1119999999995596e-06, 3.1669999999983656e-06, 3.097000000000516e-06, 3.083000000000946e-06, 3.1529999999987957e-06, 3.097000000000516e-06, 3.097000000000516e-06]</msg>
<status status="PASS" starttime="20201115 22:01:49.026" endtime="20201115 22:01:49.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.022" endtime="20201115 22:01:49.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.031" endtime="20201115 22:01:49.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:49.034" endtime="20201115 22:01:49.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.033" endtime="20201115 22:01:49.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.029" endtime="20201115 22:01:49.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.668" endtime="20201115 22:01:49.055"></status>
</kw>
<msg timestamp="20201115 22:01:49.055" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.064" endtime="20201115 22:01:49.076"></status>
</kw>
<msg timestamp="20201115 22:01:49.076" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.062" endtime="20201115 22:01:49.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.079" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.077" endtime="20201115 22:01:49.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.080" endtime="20201115 22:01:49.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.060" endtime="20201115 22:01:49.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.058" endtime="20201115 22:01:49.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.089" endtime="20201115 22:01:49.376"></status>
</kw>
<msg timestamp="20201115 22:01:49.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02183025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:49.087" endtime="20201115 22:01:49.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02183025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:49.380" endtime="20201115 22:01:49.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.388" endtime="20201115 22:01:49.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.084" endtime="20201115 22:01:49.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.083" endtime="20201115 22:01:49.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:49.395" level="INFO">${RESULT} = [{'time': 0.021833722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.021882153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:49.391" endtime="20201115 22:01:49.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:49.408" level="INFO">${OVERHEAD} = {'time': [0.021833722, 0.021882153, 0.021931847, 0.021984167, 0.022033014, 0.022085931, 0.022135222, 0.022184653, 0.022231292, 0.022280167, 0.022330667, 0.022377694, 0.022426986, 0.022476583, 0.022523...</msg>
<status status="PASS" starttime="20201115 22:01:49.396" endtime="20201115 22:01:49.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.413" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:49.412" endtime="20201115 22:01:49.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.415" level="INFO">VALUE: [3.472000000000891e-06, 3.097000000000516e-06, 3.083000000000946e-06, 3.1669999999983656e-06, 3.097000000000516e-06, 3.1119999999995596e-06, 3.054999999998337e-06, 3.0839999999969503e-06, 3.0979999999999897e-06, 3.0840000000004197e-06, 3.0699999999973804e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.054999999998337e-06, 3.0979999999999897e-06, 3.111000000000086e-06, 3.0969999999970466e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.0840000000004197e-06, 3.1529999999987957e-06, 3.167000000001835e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.1389999999992257e-06, 3.0689999999979067e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.0829999999974766e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.0979999999999897e-06, 3.0839999999969503e-06, 3.083000000000946e-06, 3.139000000002695e-06, 3.0969999999970466e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.0699999999973804e-06, 3.111000000000086e-06, 3.179999999998462e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.1669999999983656e-06, 3.111000000000086e-06]</msg>
<status status="PASS" starttime="20201115 22:01:49.414" endtime="20201115 22:01:49.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.409" endtime="20201115 22:01:49.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.418" endtime="20201115 22:01:49.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:49.422" endtime="20201115 22:01:49.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.420" endtime="20201115 22:01:49.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.417" endtime="20201115 22:01:49.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.056" endtime="20201115 22:01:49.442"></status>
</kw>
<msg timestamp="20201115 22:01:49.443" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.451" endtime="20201115 22:01:49.463"></status>
</kw>
<msg timestamp="20201115 22:01:49.463" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.450" endtime="20201115 22:01:49.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.466" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.464" endtime="20201115 22:01:49.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.467" endtime="20201115 22:01:49.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.447" endtime="20201115 22:01:49.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.445" endtime="20201115 22:01:49.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.476" endtime="20201115 22:01:49.762"></status>
</kw>
<msg timestamp="20201115 22:01:49.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021782931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021786431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.474" endtime="20201115 22:01:49.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021782931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021786431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.766" endtime="20201115 22:01:49.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.774" endtime="20201115 22:01:49.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.472" endtime="20201115 22:01:49.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.470" endtime="20201115 22:01:49.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:49.781" level="INFO">${RESULT} = [{'time': 0.021786431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.021839958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:49.778" endtime="20201115 22:01:49.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:49.794" level="INFO">${OVERHEAD} = {'time': [0.021786431, 0.021839958, 0.021891, 0.021944611, 0.021994333, 0.022043472, 0.022096944, 0.022146792, 0.022193958, 0.022239333, 0.0222885, 0.022337944, 0.022384556, 0.022435208, 0.022487347, ...</msg>
<status status="PASS" starttime="20201115 22:01:49.782" endtime="20201115 22:01:49.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.798" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:49.797" endtime="20201115 22:01:49.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.801" level="INFO">VALUE: [3.500000000000031e-06, 3.097000000000516e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.0969999999970466e-06, 3.0979999999999897e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.0979999999999897e-06, 3.0979999999999897e-06, 3.0829999999974766e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.0969999999970466e-06, 3.0279999999986706e-06, 3.1109999999966165e-06, 3.083000000000946e-06, 3.0829999999974766e-06, 3.07000000000085e-06, 3.0979999999999897e-06, 3.0840000000004197e-06, 3.153000000002265e-06, 3.097000000000516e-06, 3.0979999999999897e-06, 3.1669999999983656e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.0689999999979067e-06, 3.07000000000085e-06, 3.0840000000004197e-06, 3.0840000000004197e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.0829999999974766e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.111000000000086e-06, 3.097000000000516e-06]</msg>
<status status="PASS" starttime="20201115 22:01:49.800" endtime="20201115 22:01:49.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.795" endtime="20201115 22:01:49.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.804" endtime="20201115 22:01:49.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:49.807" endtime="20201115 22:01:49.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.806" endtime="20201115 22:01:49.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.802" endtime="20201115 22:01:49.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.443" endtime="20201115 22:01:49.828"></status>
</kw>
<msg timestamp="20201115 22:01:49.828" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.837" endtime="20201115 22:01:49.849"></status>
</kw>
<msg timestamp="20201115 22:01:49.849" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.835" endtime="20201115 22:01:49.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.852" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.850" endtime="20201115 22:01:49.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.853" endtime="20201115 22:01:49.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.833" endtime="20201115 22:01:49.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.831" endtime="20201115 22:01:49.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.862" endtime="20201115 22:01:50.146"></status>
</kw>
<msg timestamp="20201115 22:01:50.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021881056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.860" endtime="20201115 22:01:50.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021881056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.151" endtime="20201115 22:01:50.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.159" endtime="20201115 22:01:50.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.858" endtime="20201115 22:01:50.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.856" endtime="20201115 22:01:50.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.166" level="INFO">${RESULT} = [{'time': 0.021881056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4730000000003647e-06, 'source_diff': 3.4730000000003647e-06}, {'time': 0.02193175, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:50.162" endtime="20201115 22:01:50.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:50.179" level="INFO">${OVERHEAD} = {'time': [0.021881056, 0.02193175, 0.021984403, 0.022035444, 0.022084764, 0.022132028, 0.022185028, 0.022238306, 0.022285181, 0.022330611, 0.022377222, 0.022430139, 0.022477694, 0.022529681, 0.0225784...</msg>
<status status="PASS" starttime="20201115 22:01:50.167" endtime="20201115 22:01:50.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.183" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:50.182" endtime="20201115 22:01:50.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.186" level="INFO">VALUE: [3.4730000000003647e-06, 3.083000000000946e-06, 3.0840000000004197e-06, 3.097000000000516e-06, 3.07000000000085e-06, 3.097000000000516e-06, 3.1529999999987957e-06, 3.1119999999995596e-06, 3.05600000000128e-06, 3.111000000000086e-06, 3.054999999998337e-06, 3.02800000000214e-06, 3.097000000000516e-06, 3.0979999999999897e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.083000000000946e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.0829999999974766e-06, 3.111000000000086e-06, 3.0419999999982406e-06, 3.0969999999970466e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.097000000000516e-06, 3.0979999999999897e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.097000000000516e-06, 3.112000000003029e-06, 3.1669999999983656e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.1529999999987957e-06, 3.111000000000086e-06, 3.0969999999970466e-06, 3.124999999999656e-06, 3.0979999999999897e-06, 3.111000000000086e-06, 3.040999999998767e-06, 3.0979999999999897e-06]</msg>
<status status="PASS" starttime="20201115 22:01:50.184" endtime="20201115 22:01:50.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.180" endtime="20201115 22:01:50.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.189" endtime="20201115 22:01:50.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.192" endtime="20201115 22:01:50.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.191" endtime="20201115 22:01:50.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.187" endtime="20201115 22:01:50.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.829" endtime="20201115 22:01:50.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.280" endtime="20201115 22:01:50.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.279" endtime="20201115 22:01:50.213"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.215" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.224" endtime="20201115 22:01:50.237"></status>
</kw>
<msg timestamp="20201115 22:01:50.238" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.223" endtime="20201115 22:01:50.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.240" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.239" endtime="20201115 22:01:50.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.241" endtime="20201115 22:01:50.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.220" endtime="20201115 22:01:50.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.218" endtime="20201115 22:01:50.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.250" endtime="20201115 22:01:50.538"></status>
</kw>
<msg timestamp="20201115 22:01:50.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024420014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024423403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.249" endtime="20201115 22:01:50.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024420014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024423403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.542" endtime="20201115 22:01:50.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.550" endtime="20201115 22:01:50.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.246" endtime="20201115 22:01:50.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.244" endtime="20201115 22:01:50.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.557" level="INFO">${RESULT} = [{'time': 0.024423403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.024472333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:50.553" endtime="20201115 22:01:50.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:50.570" level="INFO">${OVERHEAD} = {'time': [0.024423403, 0.024472333, 0.024521736, 0.024573292, 0.024622569, 0.024675333, 0.024724069, 0.024779972, 0.024834042, 0.024890458, 0.02494375, 0.024995042, 0.025050236, 0.025100861, 0.0251514...</msg>
<status status="PASS" starttime="20201115 22:01:50.558" endtime="20201115 22:01:50.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.574" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:50.573" endtime="20201115 22:01:50.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.577" level="INFO">VALUE: [3.3889999999994758e-06, 3.179999999998462e-06, 3.236000000000211e-06, 3.2230000000001147e-06, 3.222000000000641e-06, 3.208000000001071e-06, 3.208000000001071e-06, 3.2639999999993508e-06, 3.2230000000001147e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.1809999999979355e-06, 3.236000000000211e-06, 3.1939999999980317e-06, 3.208000000001071e-06, 3.1809999999979355e-06, 3.2219999999971716e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.27800000000239e-06, 3.1669999999983656e-06, 3.2369999999996846e-06, 3.222000000000641e-06, 3.2639999999993508e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.2079999999976017e-06, 3.26400000000282e-06, 3.29200000000196e-06, 3.236000000000211e-06, 3.2090000000005448e-06, 3.208000000001071e-06, 3.195000000000975e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.2230000000001147e-06, 3.1809999999979355e-06, 3.236000000000211e-06, 3.262999999999877e-06, 3.236000000000211e-06, 3.2779999999989207e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.2779999999989207e-06, 3.2079999999976017e-06, 3.249999999999781e-06, 3.236000000000211e-06]</msg>
<status status="PASS" starttime="20201115 22:01:50.575" endtime="20201115 22:01:50.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.571" endtime="20201115 22:01:50.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.580" endtime="20201115 22:01:50.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.583" endtime="20201115 22:01:50.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.582" endtime="20201115 22:01:50.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.578" endtime="20201115 22:01:50.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.216" endtime="20201115 22:01:50.604"></status>
</kw>
<msg timestamp="20201115 22:01:50.604" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.613" endtime="20201115 22:01:50.625"></status>
</kw>
<msg timestamp="20201115 22:01:50.625" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.611" endtime="20201115 22:01:50.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.628" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.626" endtime="20201115 22:01:50.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.629" endtime="20201115 22:01:50.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.609" endtime="20201115 22:01:50.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.606" endtime="20201115 22:01:50.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.638" endtime="20201115 22:01:50.925"></status>
</kw>
<msg timestamp="20201115 22:01:50.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021671167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021674569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.636" endtime="20201115 22:01:50.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021671167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021674569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.929" endtime="20201115 22:01:50.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.937" endtime="20201115 22:01:50.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.634" endtime="20201115 22:01:50.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.632" endtime="20201115 22:01:50.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.943" level="INFO">${RESULT} = [{'time': 0.021674569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.401999999999572e-06, 'source_diff': 3.401999999999572e-06}, {'time': 0.021729389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:50.940" endtime="20201115 22:01:50.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:50.956" level="INFO">${OVERHEAD} = {'time': [0.021674569, 0.021729389, 0.021778389, 0.021826736, 0.02188125, 0.021935236, 0.021989889, 0.022044264, 0.022092736, 0.022141069, 0.022197597, 0.022249556, 0.022303028, 0.022356514, 0.0224076...</msg>
<status status="PASS" starttime="20201115 22:01:50.944" endtime="20201115 22:01:50.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.961" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:50.960" endtime="20201115 22:01:50.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.963" level="INFO">VALUE: [3.401999999999572e-06, 3.208000000001071e-06, 3.2219999999971716e-06, 3.1939999999980317e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.2079999999976017e-06, 3.222000000000641e-06, 3.167000000001835e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.2230000000001147e-06, 3.222000000000641e-06, 3.2639999999993508e-06, 3.2779999999989207e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.2079999999976017e-06, 3.222000000000641e-06, 3.249999999999781e-06, 3.222000000000641e-06, 3.249999999999781e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.26400000000282e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.195000000000975e-06, 3.2779999999989207e-06, 3.236000000000211e-06, 3.2090000000005448e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.27800000000239e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.222000000000641e-06, 3.249999999999781e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.167000000001835e-06, 3.236000000000211e-06, 3.1949999999975054e-06, 3.2079999999976017e-06, 3.222000000000641e-06, 3.222000000000641e-06]</msg>
<status status="PASS" starttime="20201115 22:01:50.962" endtime="20201115 22:01:50.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.957" endtime="20201115 22:01:50.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.966" endtime="20201115 22:01:50.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.970" endtime="20201115 22:01:50.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.968" endtime="20201115 22:01:50.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.965" endtime="20201115 22:01:50.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.604" endtime="20201115 22:01:50.990"></status>
</kw>
<msg timestamp="20201115 22:01:50.991" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.000" endtime="20201115 22:01:51.012"></status>
</kw>
<msg timestamp="20201115 22:01:51.013" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.998" endtime="20201115 22:01:51.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.015" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.014" endtime="20201115 22:01:51.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.016" endtime="20201115 22:01:51.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.995" endtime="20201115 22:01:51.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.993" endtime="20201115 22:01:51.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.025" endtime="20201115 22:01:51.311"></status>
</kw>
<msg timestamp="20201115 22:01:51.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022758, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022761444, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:51.024" endtime="20201115 22:01:51.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022758, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022761444, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:51.316" endtime="20201115 22:01:51.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.324" endtime="20201115 22:01:51.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.021" endtime="20201115 22:01:51.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.019" endtime="20201115 22:01:51.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:51.330" level="INFO">${RESULT} = [{'time': 0.022761444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4439999999982818e-06, 'source_diff': 3.4439999999982818e-06}, {'time': 0.022817972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:51.327" endtime="20201115 22:01:51.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:51.343" level="INFO">${OVERHEAD} = {'time': [0.022761444, 0.022817972, 0.02287425, 0.022926083, 0.022974944, 0.023024486, 0.023078861, 0.023134458, 0.023188833, 0.023237444, 0.023290083, 0.023339778, 0.023390944, 0.023444708, 0.0234968...</msg>
<status status="PASS" starttime="20201115 22:01:51.331" endtime="20201115 22:01:51.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.348" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:51.347" endtime="20201115 22:01:51.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.351" level="INFO">VALUE: [3.4439999999982818e-06, 3.2219999999971716e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.2079999999976017e-06, 3.222000000000641e-06, 3.179999999998462e-06, 3.1669999999983656e-06, 3.236000000000211e-06, 3.3050000000020563e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.2230000000001147e-06, 3.236000000000211e-06, 3.27800000000239e-06, 3.222000000000641e-06, 3.249999999999781e-06, 3.208000000001071e-06, 3.2230000000001147e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.2090000000005448e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.237000000003154e-06, 3.222000000000641e-06, 3.249999999999781e-06, 3.208000000001071e-06, 3.2639999999993508e-06, 3.249999999999781e-06, 3.208000000001071e-06, 3.249999999999781e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.2230000000001147e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.276999999999447e-06, 3.208000000001071e-06, 3.2090000000005448e-06, 3.194000000001501e-06, 3.2770000000029165e-06]</msg>
<status status="PASS" starttime="20201115 22:01:51.349" endtime="20201115 22:01:51.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.344" endtime="20201115 22:01:51.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.354" endtime="20201115 22:01:51.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.357" endtime="20201115 22:01:51.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.356" endtime="20201115 22:01:51.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.352" endtime="20201115 22:01:51.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.991" endtime="20201115 22:01:51.378"></status>
</kw>
<msg timestamp="20201115 22:01:51.379" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.388" endtime="20201115 22:01:51.401"></status>
</kw>
<msg timestamp="20201115 22:01:51.401" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.386" endtime="20201115 22:01:51.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.404" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.402" endtime="20201115 22:01:51.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.405" endtime="20201115 22:01:51.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.383" endtime="20201115 22:01:51.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.381" endtime="20201115 22:01:51.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.414" endtime="20201115 22:01:51.700"></status>
</kw>
<msg timestamp="20201115 22:01:51.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022902167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022905597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.412" endtime="20201115 22:01:51.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022902167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022905597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.704" endtime="20201115 22:01:51.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.712" endtime="20201115 22:01:51.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.410" endtime="20201115 22:01:51.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.408" endtime="20201115 22:01:51.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:51.719" level="INFO">${RESULT} = [{'time': 0.022905597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.429999999998712e-06, 'source_diff': 3.429999999998712e-06}, {'time': 0.022954097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:51.715" endtime="20201115 22:01:51.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:51.732" level="INFO">${OVERHEAD} = {'time': [0.022905597, 0.022954097, 0.023002431, 0.023056153, 0.023108125, 0.023161931, 0.023211222, 0.023266528, 0.02331875, 0.023373944, 0.023428597, 0.023480972, 0.023534417, 0.023583486, 0.0236396...</msg>
<status status="PASS" starttime="20201115 22:01:51.720" endtime="20201115 22:01:51.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.736" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:51.735" endtime="20201115 22:01:51.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.739" level="INFO">VALUE: [3.429999999998712e-06, 3.222000000000641e-06, 3.2369999999996846e-06, 3.236000000000211e-06, 3.2639999999993508e-06, 3.2090000000005448e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.2230000000001147e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.2230000000001147e-06, 3.222000000000641e-06, 3.2230000000001147e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.2219999999971716e-06, 3.236000000000211e-06, 3.2230000000001147e-06, 3.236000000000211e-06, 3.208000000001071e-06, 3.2779999999989207e-06, 3.222000000000641e-06, 3.1939999999980317e-06, 3.222000000000641e-06, 3.2090000000005448e-06, 3.290999999999017e-06, 3.249999999999781e-06, 3.195000000000975e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.2219999999971716e-06, 3.222000000000641e-06, 3.222000000000641e-06, 3.30600000000153e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.2779999999989207e-06, 3.2230000000001147e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.2639999999993508e-06, 3.1660000000023614e-06]</msg>
<status status="PASS" starttime="20201115 22:01:51.737" endtime="20201115 22:01:51.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.733" endtime="20201115 22:01:51.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.742" endtime="20201115 22:01:51.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.745" endtime="20201115 22:01:51.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.744" endtime="20201115 22:01:51.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.740" endtime="20201115 22:01:51.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.379" endtime="20201115 22:01:51.766"></status>
</kw>
<msg timestamp="20201115 22:01:51.766" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.775" endtime="20201115 22:01:51.787"></status>
</kw>
<msg timestamp="20201115 22:01:51.788" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.773" endtime="20201115 22:01:51.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.790" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.789" endtime="20201115 22:01:51.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.791" endtime="20201115 22:01:51.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.771" endtime="20201115 22:01:51.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.769" endtime="20201115 22:01:51.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.800" endtime="20201115 22:01:52.088"></status>
</kw>
<msg timestamp="20201115 22:01:52.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.799" endtime="20201115 22:01:52.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.092" endtime="20201115 22:01:52.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.100" endtime="20201115 22:01:52.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.796" endtime="20201115 22:01:52.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.794" endtime="20201115 22:01:52.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.107" level="INFO">${RESULT} = [{'time': 0.022054514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.417000000002085e-06, 'source_diff': 3.417000000002085e-06}, {'time': 0.022105833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:52.103" endtime="20201115 22:01:52.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.120" level="INFO">${OVERHEAD} = {'time': [0.022054514, 0.022105833, 0.022162083, 0.02221675, 0.022273264, 0.022329417, 0.022380417, 0.022428764, 0.022484097, 0.022539417, 0.022593236, 0.022649917, 0.022703792, 0.022755847, 0.0228058...</msg>
<status status="PASS" starttime="20201115 22:01:52.108" endtime="20201115 22:01:52.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.124" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:52.123" endtime="20201115 22:01:52.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.126" level="INFO">VALUE: [3.417000000002085e-06, 3.2219999999971716e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.208000000001071e-06, 3.249999999999781e-06, 3.2230000000001147e-06, 3.222000000000641e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.2079999999976017e-06, 3.249999999999781e-06, 3.2779999999989207e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.2089999999970753e-06, 3.222000000000641e-06, 3.2230000000001147e-06, 3.2639999999993508e-06, 3.2230000000001147e-06, 3.236000000000211e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.2090000000005448e-06, 3.2230000000001147e-06, 3.2359999999967415e-06, 3.2639999999993508e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.2230000000001147e-06, 3.195000000000975e-06, 3.181000000001405e-06, 3.2219999999971716e-06, 3.2090000000005448e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.249999999999781e-06, 3.179999999998462e-06, 3.208000000001071e-06, 3.249999999999781e-06, 3.208000000001071e-06, 3.236000000000211e-06, 3.222000000000641e-06, 3.236000000000211e-06, 3.2639999999993508e-06, 3.2369999999996846e-06, 3.1939999999980317e-06, 3.2639999999993508e-06, 3.249999999999781e-06, 3.222000000000641e-06]</msg>
<status status="PASS" starttime="20201115 22:01:52.125" endtime="20201115 22:01:52.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.120" endtime="20201115 22:01:52.128"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.130" endtime="20201115 22:01:52.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.133" endtime="20201115 22:01:52.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.132" endtime="20201115 22:01:52.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.128" endtime="20201115 22:01:52.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.767" endtime="20201115 22:01:52.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.214" endtime="20201115 22:01:52.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.213" endtime="20201115 22:01:52.154"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.157" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.165" endtime="20201115 22:01:52.178"></status>
</kw>
<msg timestamp="20201115 22:01:52.179" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.164" endtime="20201115 22:01:52.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.181" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.180" endtime="20201115 22:01:52.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.182" endtime="20201115 22:01:52.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.161" endtime="20201115 22:01:52.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.159" endtime="20201115 22:01:52.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.191" endtime="20201115 22:01:52.478"></status>
</kw>
<msg timestamp="20201115 22:01:52.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024108208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024111917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.189" endtime="20201115 22:01:52.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024108208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024111917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.482" endtime="20201115 22:01:52.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.490" endtime="20201115 22:01:52.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.187" endtime="20201115 22:01:52.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.185" endtime="20201115 22:01:52.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.496" level="INFO">${RESULT} = [{'time': 0.024111917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.709000000001045e-06, 'source_diff': 3.709000000001045e-06}, {'time': 0.024170667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:52.493" endtime="20201115 22:01:52.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.509" level="INFO">${OVERHEAD} = {'time': [0.024111917, 0.024170667, 0.024229792, 0.024285972, 0.024339333, 0.024395486, 0.024453014, 0.024512944, 0.02456925, 0.024627569, 0.024684153, 0.024741792, 0.024800944, 0.024856306, 0.0249082...</msg>
<status status="PASS" starttime="20201115 22:01:52.497" endtime="20201115 22:01:52.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.514" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:01:52.513" endtime="20201115 22:01:52.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.517" level="INFO">VALUE: [3.709000000001045e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.5279999999991707e-06, 3.526999999999697e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.500000000000031e-06, 3.472000000000891e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.5129999999966577e-06, 3.52800000000264e-06, 3.583000000001446e-06, 3.5279999999991707e-06, 3.5279999999991707e-06, 3.500000000000031e-06, 3.526999999999697e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.5419999999987406e-06, 3.500000000000031e-06, 3.5419999999987406e-06, 3.5139999999996008e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.5419999999987406e-06, 3.4590000000007948e-06, 3.500000000000031e-06, 3.5279999999991707e-06, 3.554999999998837e-06, 3.5140000000030702e-06, 3.513000000000127e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.5279999999991707e-06, 3.500000000000031e-06, 3.5559999999983105e-06, 3.526999999999697e-06, 3.500000000000031e-06, 3.5279999999991707e-06, 3.5139999999996008e-06]</msg>
<status status="PASS" starttime="20201115 22:01:52.515" endtime="20201115 22:01:52.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.510" endtime="20201115 22:01:52.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.520" endtime="20201115 22:01:52.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.523" endtime="20201115 22:01:52.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.522" endtime="20201115 22:01:52.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.518" endtime="20201115 22:01:52.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.157" endtime="20201115 22:01:52.544"></status>
</kw>
<msg timestamp="20201115 22:01:52.544" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.553" endtime="20201115 22:01:52.566"></status>
</kw>
<msg timestamp="20201115 22:01:52.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.551" endtime="20201115 22:01:52.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.569" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.568" endtime="20201115 22:01:52.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.570" endtime="20201115 22:01:52.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.549" endtime="20201115 22:01:52.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.547" endtime="20201115 22:01:52.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.579" endtime="20201115 22:01:52.866"></status>
</kw>
<msg timestamp="20201115 22:01:52.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.578" endtime="20201115 22:01:52.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.870" endtime="20201115 22:01:52.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.879" endtime="20201115 22:01:52.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.575" endtime="20201115 22:01:52.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.573" endtime="20201115 22:01:52.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.885" level="INFO">${RESULT} = [{'time': 0.021810014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7079999999981017e-06, 'source_diff': 3.7079999999981017e-06}, {'time': 0.021862222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:52.882" endtime="20201115 22:01:52.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.898" level="INFO">${OVERHEAD} = {'time': [0.021810014, 0.021862222, 0.021922208, 0.021979194, 0.022031764, 0.022086292, 0.022145292, 0.022198764, 0.022251458, 0.022311042, 0.022370903, 0.022427486, 0.022484056, 0.022536347, 0.022588...</msg>
<status status="PASS" starttime="20201115 22:01:52.886" endtime="20201115 22:01:52.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.903" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:01:52.902" endtime="20201115 22:01:52.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.906" level="INFO">VALUE: [3.7079999999981017e-06, 3.583000000001446e-06, 3.5139999999996008e-06, 3.526999999999697e-06, 3.5419999999987406e-06, 3.500000000000031e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.526999999999697e-06, 3.5840000000009198e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.5140000000030702e-06, 3.52800000000264e-06, 3.54200000000221e-06, 3.526999999999697e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.5279999999991707e-06, 3.472000000000891e-06, 3.526999999999697e-06, 3.5559999999983105e-06, 3.5140000000030702e-06, 3.5139999999996008e-06, 3.472000000000891e-06, 3.4719999999974216e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.540999999999267e-06, 3.4579999999978517e-06, 3.526999999999697e-06, 3.5279999999991707e-06, 3.52800000000264e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.513000000000127e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.5419999999987406e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.526999999999697e-06, 3.54200000000221e-06, 3.5550000000023063e-06]</msg>
<status status="PASS" starttime="20201115 22:01:52.904" endtime="20201115 22:01:52.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.900" endtime="20201115 22:01:52.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.909" endtime="20201115 22:01:52.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.912" endtime="20201115 22:01:52.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.911" endtime="20201115 22:01:52.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.907" endtime="20201115 22:01:52.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.545" endtime="20201115 22:01:52.933"></status>
</kw>
<msg timestamp="20201115 22:01:52.933" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.942" endtime="20201115 22:01:52.955"></status>
</kw>
<msg timestamp="20201115 22:01:52.955" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.940" endtime="20201115 22:01:52.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.958" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.956" endtime="20201115 22:01:52.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.959" endtime="20201115 22:01:52.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.938" endtime="20201115 22:01:52.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.936" endtime="20201115 22:01:52.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.968" endtime="20201115 22:01:53.253"></status>
</kw>
<msg timestamp="20201115 22:01:53.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.966" endtime="20201115 22:01:53.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.258" endtime="20201115 22:01:53.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.266" endtime="20201115 22:01:53.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.964" endtime="20201115 22:01:53.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.962" endtime="20201115 22:01:53.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:53.272" level="INFO">${RESULT} = [{'time': 0.021893708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6940000000020012e-06, 'source_diff': 3.6940000000020012e-06}, {'time': 0.021946278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:53.269" endtime="20201115 22:01:53.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:53.290" level="INFO">${OVERHEAD} = {'time': [0.021893708, 0.021946278, 0.022002444, 0.022060361, 0.022120417, 0.022177125, 0.022233444, 0.022286903, 0.022342667, 0.022396042, 0.022450042, 0.022504222, 0.022557014, 0.022615472, 0.022667...</msg>
<status status="PASS" starttime="20201115 22:01:53.278" endtime="20201115 22:01:53.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.294" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:01:53.293" endtime="20201115 22:01:53.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.297" level="INFO">VALUE: [3.6940000000020012e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.5410000000027364e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.52800000000264e-06, 3.500000000000031e-06, 3.472000000000891e-06, 3.500000000000031e-06, 3.472000000000891e-06, 3.5419999999987406e-06, 3.472000000000891e-06, 3.554999999998837e-06, 3.500000000000031e-06, 3.52800000000264e-06, 3.5279999999991707e-06, 3.526999999999697e-06, 3.486000000000461e-06, 3.5139999999996008e-06, 3.5690000000018762e-06, 3.526999999999697e-06, 3.526999999999697e-06, 3.472000000000891e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.5279999999991707e-06, 3.583000000001446e-06, 3.4719999999974216e-06, 3.5279999999991707e-06, 3.4859999999969915e-06, 3.5139999999996008e-06, 3.55600000000178e-06, 3.5279999999991707e-06, 3.52800000000264e-06, 3.52800000000264e-06, 3.5279999999991707e-06, 3.5140000000030702e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.4590000000007948e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.52800000000264e-06, 3.526999999999697e-06, 3.5139999999996008e-06]</msg>
<status status="PASS" starttime="20201115 22:01:53.295" endtime="20201115 22:01:53.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.291" endtime="20201115 22:01:53.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.300" endtime="20201115 22:01:53.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.303" endtime="20201115 22:01:53.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.302" endtime="20201115 22:01:53.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.298" endtime="20201115 22:01:53.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.934" endtime="20201115 22:01:53.324"></status>
</kw>
<msg timestamp="20201115 22:01:53.324" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.333" endtime="20201115 22:01:53.346"></status>
</kw>
<msg timestamp="20201115 22:01:53.347" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.331" endtime="20201115 22:01:53.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.349" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.348" endtime="20201115 22:01:53.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.350" endtime="20201115 22:01:53.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.329" endtime="20201115 22:01:53.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.327" endtime="20201115 22:01:53.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.359" endtime="20201115 22:01:53.647"></status>
</kw>
<msg timestamp="20201115 22:01:53.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022230014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022233694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.358" endtime="20201115 22:01:53.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022230014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022233694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.651" endtime="20201115 22:01:53.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.659" endtime="20201115 22:01:53.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.355" endtime="20201115 22:01:53.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.353" endtime="20201115 22:01:53.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:53.666" level="INFO">${RESULT} = [{'time': 0.022233694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.679999999998962e-06, 'source_diff': 3.679999999998962e-06}, {'time': 0.022287986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:53.663" endtime="20201115 22:01:53.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:53.679" level="INFO">${OVERHEAD} = {'time': [0.022233694, 0.022287986, 0.022342958, 0.022397931, 0.022452625, 0.022505611, 0.02256175, 0.022617778, 0.022673819, 0.022729319, 0.022786306, 0.022843708, 0.022895681, 0.022948764, 0.0230053...</msg>
<status status="PASS" starttime="20201115 22:01:53.667" endtime="20201115 22:01:53.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.683" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:01:53.682" endtime="20201115 22:01:53.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.686" level="INFO">VALUE: [3.679999999998962e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.5279999999991707e-06, 3.554999999998837e-06, 3.5139999999996008e-06, 3.52800000000264e-06, 3.526999999999697e-06, 3.513000000000127e-06, 3.5279999999991707e-06, 3.540999999999267e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.5419999999987406e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.5419999999987406e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.5279999999991707e-06, 3.526999999999697e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.5279999999991707e-06, 3.54200000000221e-06, 3.5279999999991707e-06, 3.5279999999991707e-06, 3.5980000000004897e-06, 3.500000000000031e-06, 3.5279999999991707e-06, 3.4590000000007948e-06, 3.472000000000891e-06, 3.5279999999991707e-06, 3.554999999998837e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.52800000000264e-06, 3.54200000000221e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.5419999999987406e-06, 3.500000000000031e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.5279999999991707e-06]</msg>
<status status="PASS" starttime="20201115 22:01:53.684" endtime="20201115 22:01:53.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.680" endtime="20201115 22:01:53.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.689" endtime="20201115 22:01:53.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.692" endtime="20201115 22:01:53.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.691" endtime="20201115 22:01:53.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.687" endtime="20201115 22:01:53.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.325" endtime="20201115 22:01:53.713"></status>
</kw>
<msg timestamp="20201115 22:01:53.713" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.722" endtime="20201115 22:01:53.734"></status>
</kw>
<msg timestamp="20201115 22:01:53.734" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.720" endtime="20201115 22:01:53.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.737" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.735" endtime="20201115 22:01:53.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.738" endtime="20201115 22:01:53.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.718" endtime="20201115 22:01:53.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.716" endtime="20201115 22:01:53.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.747" endtime="20201115 22:01:54.032"></status>
</kw>
<msg timestamp="20201115 22:01:54.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021820847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.745" endtime="20201115 22:01:54.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021820847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.036" endtime="20201115 22:01:54.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.044" endtime="20201115 22:01:54.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.743" endtime="20201115 22:01:54.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.741" endtime="20201115 22:01:54.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.051" level="INFO">${RESULT} = [{'time': 0.021820847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.021873806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:54.048" endtime="20201115 22:01:54.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.064" level="INFO">${OVERHEAD} = {'time': [0.021820847, 0.021873806, 0.021930819, 0.021986583, 0.022039667, 0.022098625, 0.022156819, 0.022210306, 0.022262833, 0.022319542, 0.022378681, 0.022435792, 0.022493861, 0.022551764, 0.022610...</msg>
<status status="PASS" starttime="20201115 22:01:54.052" endtime="20201115 22:01:54.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.069" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:01:54.068" endtime="20201115 22:01:54.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.071" level="INFO">VALUE: [3.722000000001141e-06, 3.5139999999996008e-06, 3.5550000000023063e-06, 3.540999999999267e-06, 3.5419999999987406e-06, 3.500000000000031e-06, 3.513000000000127e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.52800000000264e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.500000000000031e-06, 3.5140000000030702e-06, 3.500000000000031e-06, 3.526999999999697e-06, 3.513000000000127e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.52800000000264e-06, 3.486000000000461e-06, 3.526999999999697e-06, 3.4859999999969915e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.5139999999996008e-06, 3.52800000000264e-06, 3.52800000000264e-06, 3.500000000000031e-06, 3.5139999999996008e-06, 3.486000000000461e-06, 3.5279999999991707e-06, 3.4579999999978517e-06, 3.5140000000030702e-06, 3.526999999999697e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.5139999999996008e-06, 3.526999999999697e-06, 3.526999999999697e-06]</msg>
<status status="PASS" starttime="20201115 22:01:54.070" endtime="20201115 22:01:54.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.065" endtime="20201115 22:01:54.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.074" endtime="20201115 22:01:54.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.077" endtime="20201115 22:01:54.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.076" endtime="20201115 22:01:54.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.072" endtime="20201115 22:01:54.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.714" endtime="20201115 22:01:54.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.156" endtime="20201115 22:01:54.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.155" endtime="20201115 22:01:54.098"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.101" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.109" endtime="20201115 22:01:54.122"></status>
</kw>
<msg timestamp="20201115 22:01:54.123" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.108" endtime="20201115 22:01:54.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.125" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.124" endtime="20201115 22:01:54.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.126" endtime="20201115 22:01:54.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.105" endtime="20201115 22:01:54.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.103" endtime="20201115 22:01:54.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.136" endtime="20201115 22:01:54.422"></status>
</kw>
<msg timestamp="20201115 22:01:54.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024147444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024151403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.134" endtime="20201115 22:01:54.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024147444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024151403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.427" endtime="20201115 22:01:54.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.435" endtime="20201115 22:01:54.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.132" endtime="20201115 22:01:54.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.130" endtime="20201115 22:01:54.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.442" level="INFO">${RESULT} = [{'time': 0.024151403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.958999999997825e-06, 'source_diff': 3.958999999997825e-06}, {'time': 0.024210125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:54.438" endtime="20201115 22:01:54.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.455" level="INFO">${OVERHEAD} = {'time': [0.024151403, 0.024210125, 0.024273264, 0.024336028, 0.024396, 0.024451681, 0.024510972, 0.024572153, 0.024633597, 0.024695986, 0.024752472, 0.024814319, 0.024876028, 0.024939639, 0.024999333...</msg>
<status status="PASS" starttime="20201115 22:01:54.443" endtime="20201115 22:01:54.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.459" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:01:54.458" endtime="20201115 22:01:54.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.462" level="INFO">VALUE: [3.958999999997825e-06, 3.8609999999973665e-06, 3.8059999999985605e-06, 3.763999999999851e-06, 3.79200000000246e-06, 3.8059999999985605e-06, 3.804999999999087e-06, 3.8059999999985605e-06, 3.804999999999087e-06, 3.7919999999989906e-06, 3.8050000000025563e-06, 3.7910000000029864e-06, 3.77800000000289e-06, 3.7919999999989906e-06, 3.763999999999851e-06, 3.790999999999517e-06, 3.7499999999968114e-06, 3.861000000000836e-06, 3.8199999999981304e-06, 3.8050000000025563e-06, 3.832999999998227e-06, 3.833000000001696e-06, 3.804999999999087e-06, 3.776999999999947e-06, 3.8200000000016e-06, 3.818999999998657e-06, 3.875000000000406e-06, 3.80600000000203e-06, 3.790999999999517e-06, 3.8050000000025563e-06, 3.804999999999087e-06, 3.8050000000025563e-06, 3.790999999999517e-06, 3.818999999998657e-06, 3.790999999999517e-06, 3.79200000000246e-06, 3.790999999999517e-06, 3.7910000000029864e-06, 3.8200000000016e-06, 3.8059999999985605e-06, 3.763999999999851e-06, 3.7919999999989906e-06, 3.8059999999985605e-06, 3.80600000000203e-06, 3.8059999999985605e-06, 3.8059999999985605e-06, 3.8059999999985605e-06, 3.7919999999989906e-06, 3.763999999999851e-06, 3.804999999999087e-06]</msg>
<status status="PASS" starttime="20201115 22:01:54.460" endtime="20201115 22:01:54.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.456" endtime="20201115 22:01:54.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.465" endtime="20201115 22:01:54.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.468" endtime="20201115 22:01:54.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.467" endtime="20201115 22:01:54.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.463" endtime="20201115 22:01:54.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.101" endtime="20201115 22:01:54.489"></status>
</kw>
<msg timestamp="20201115 22:01:54.489" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.498" endtime="20201115 22:01:54.510"></status>
</kw>
<msg timestamp="20201115 22:01:54.511" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.496" endtime="20201115 22:01:54.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.514" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.512" endtime="20201115 22:01:54.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.515" endtime="20201115 22:01:54.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.494" endtime="20201115 22:01:54.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.492" endtime="20201115 22:01:54.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.524" endtime="20201115 22:01:54.810"></status>
</kw>
<msg timestamp="20201115 22:01:54.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021747833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.522" endtime="20201115 22:01:54.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021747833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.814" endtime="20201115 22:01:54.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.822" endtime="20201115 22:01:54.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.520" endtime="20201115 22:01:54.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.518" endtime="20201115 22:01:54.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.829" level="INFO">${RESULT} = [{'time': 0.021747833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.021809681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:54.826" endtime="20201115 22:01:54.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.842" level="INFO">${OVERHEAD} = {'time': [0.021747833, 0.021809681, 0.021870931, 0.021929875, 0.021992125, 0.022048903, 0.022111847, 0.022171097, 0.022233208, 0.022290514, 0.022353417, 0.022410583, 0.022472708, 0.022531319, 0.022592...</msg>
<status status="PASS" starttime="20201115 22:01:54.830" endtime="20201115 22:01:54.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.847" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:01:54.846" endtime="20201115 22:01:54.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.849" level="INFO">VALUE: [4.014000000000101e-06, 3.79200000000246e-06, 3.875000000000406e-06, 3.750000000000281e-06, 3.79200000000246e-06, 3.8200000000016e-06, 3.847000000001266e-06, 3.790999999999517e-06, 3.776999999999947e-06, 3.8200000000016e-06, 3.7919999999989906e-06, 3.8050000000025563e-06, 3.819000000002126e-06, 3.790999999999517e-06, 3.80600000000203e-06, 3.790999999999517e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 3.833000000001696e-06, 3.8059999999985605e-06, 3.804999999999087e-06, 3.8050000000025563e-06, 3.8059999999985605e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.7919999999989906e-06, 3.819000000002126e-06, 3.7779999999994207e-06, 3.7779999999994207e-06, 3.804999999999087e-06, 3.8609999999973665e-06, 3.8059999999985605e-06, 3.8050000000025563e-06, 3.7779999999994207e-06, 3.8200000000016e-06, 3.8059999999985605e-06, 3.77800000000289e-06, 3.7910000000029864e-06, 3.8050000000025563e-06, 3.790999999999517e-06, 3.8059999999985605e-06, 3.8050000000025563e-06, 3.875000000000406e-06, 3.846999999997797e-06, 3.8059999999985605e-06, 3.7779999999994207e-06, 3.8059999999985605e-06, 3.875000000000406e-06, 3.7919999999989906e-06, 3.8200000000016e-06]</msg>
<status status="PASS" starttime="20201115 22:01:54.848" endtime="20201115 22:01:54.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.843" endtime="20201115 22:01:54.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.852" endtime="20201115 22:01:54.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.856" endtime="20201115 22:01:54.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.854" endtime="20201115 22:01:54.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.850" endtime="20201115 22:01:54.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.490" endtime="20201115 22:01:54.876"></status>
</kw>
<msg timestamp="20201115 22:01:54.876" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.886" endtime="20201115 22:01:54.899"></status>
</kw>
<msg timestamp="20201115 22:01:54.899" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.884" endtime="20201115 22:01:54.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.902" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.900" endtime="20201115 22:01:54.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.903" endtime="20201115 22:01:54.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.881" endtime="20201115 22:01:54.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.879" endtime="20201115 22:01:54.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.912" endtime="20201115 22:01:55.199"></status>
</kw>
<msg timestamp="20201115 22:01:55.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022336042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022340028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.910" endtime="20201115 22:01:55.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022336042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022340028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.203" endtime="20201115 22:01:55.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.211" endtime="20201115 22:01:55.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.908" endtime="20201115 22:01:55.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.906" endtime="20201115 22:01:55.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.218" level="INFO">${RESULT} = [{'time': 0.022340028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.022397083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:55.215" endtime="20201115 22:01:55.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:55.231" level="INFO">${OVERHEAD} = {'time': [0.022340028, 0.022397083, 0.022456083, 0.022516069, 0.022572417, 0.022628208, 0.022688583, 0.022748833, 0.022812139, 0.02286875, 0.022929528, 0.022990458, 0.023053375, 0.023117236, 0.0231771...</msg>
<status status="PASS" starttime="20201115 22:01:55.219" endtime="20201115 22:01:55.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.235" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:01:55.234" endtime="20201115 22:01:55.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.238" level="INFO">VALUE: [3.986000000000961e-06, 3.8050000000025563e-06, 3.776999999999947e-06, 3.804999999999087e-06, 3.8200000000016e-06, 3.790999999999517e-06, 3.818999999998657e-06, 3.818999999998657e-06, 3.7359999999972415e-06, 3.8059999999985605e-06, 3.80600000000203e-06, 3.818999999998657e-06, 3.7779999999994207e-06, 3.804999999999087e-06, 3.847000000001266e-06, 3.8339999999977e-06, 3.80600000000203e-06, 3.7919999999989906e-06, 3.804999999999087e-06, 3.7919999999989906e-06, 3.804999999999087e-06, 3.763999999999851e-06, 3.790999999999517e-06, 3.832999999998227e-06, 3.8059999999985605e-06, 3.804999999999087e-06, 3.7779999999994207e-06, 3.833000000001696e-06, 3.804999999999087e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.7910000000029864e-06, 3.790999999999517e-06, 3.7779999999994207e-06, 3.8059999999985605e-06, 3.7230000000006147e-06, 3.790999999999517e-06, 3.79200000000246e-06, 3.84800000000074e-06, 3.804999999999087e-06, 3.804999999999087e-06, 3.804999999999087e-06, 3.7919999999989906e-06, 3.790999999999517e-06, 3.875000000000406e-06, 3.8059999999985605e-06, 3.790999999999517e-06, 3.8050000000025563e-06, 3.80600000000203e-06, 3.722000000001141e-06]</msg>
<status status="PASS" starttime="20201115 22:01:55.236" endtime="20201115 22:01:55.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.232" endtime="20201115 22:01:55.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.241" endtime="20201115 22:01:55.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.244" endtime="20201115 22:01:55.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.243" endtime="20201115 22:01:55.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.239" endtime="20201115 22:01:55.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.877" endtime="20201115 22:01:55.265"></status>
</kw>
<msg timestamp="20201115 22:01:55.265" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.274" endtime="20201115 22:01:55.287"></status>
</kw>
<msg timestamp="20201115 22:01:55.287" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.273" endtime="20201115 22:01:55.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.290" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.288" endtime="20201115 22:01:55.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.291" endtime="20201115 22:01:55.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.270" endtime="20201115 22:01:55.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.268" endtime="20201115 22:01:55.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.300" endtime="20201115 22:01:55.586"></status>
</kw>
<msg timestamp="20201115 22:01:55.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022389583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.298" endtime="20201115 22:01:55.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022389583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.590" endtime="20201115 22:01:55.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.598" endtime="20201115 22:01:55.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.296" endtime="20201115 22:01:55.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.294" endtime="20201115 22:01:55.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.604" level="INFO">${RESULT} = [{'time': 0.022393569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.022449403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:55.601" endtime="20201115 22:01:55.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:55.618" level="INFO">${OVERHEAD} = {'time': [0.022393569, 0.022449403, 0.022506958, 0.02256975, 0.022632806, 0.022692361, 0.022751792, 0.022807764, 0.022866639, 0.022923681, 0.022980528, 0.023041861, 0.023104125, 0.023166431, 0.0232222...</msg>
<status status="PASS" starttime="20201115 22:01:55.605" endtime="20201115 22:01:55.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.622" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:01:55.621" endtime="20201115 22:01:55.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.625" level="INFO">VALUE: [3.9859999999974915e-06, 3.763999999999851e-06, 3.790999999999517e-06, 3.7779999999994207e-06, 3.8059999999985605e-06, 3.79200000000246e-06, 3.7779999999994207e-06, 3.79200000000246e-06, 3.7779999999994207e-06, 3.7370000000001846e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 3.818999999998657e-06, 3.86200000000031e-06, 3.7919999999989906e-06, 3.8200000000016e-06, 3.790999999999517e-06, 3.7779999999994207e-06, 3.80600000000203e-06, 3.8199999999981304e-06, 3.8059999999985605e-06, 3.736000000000711e-06, 3.7079999999981017e-06, 3.7359999999972415e-06, 3.776999999999947e-06, 3.80600000000203e-06, 3.8050000000025563e-06, 3.8059999999985605e-06, 3.7919999999989906e-06, 3.8059999999985605e-06, 3.80600000000203e-06, 3.8059999999985605e-06, 3.7919999999989906e-06, 3.776999999999947e-06, 3.790999999999517e-06, 3.804999999999087e-06, 3.750000000000281e-06, 3.8050000000025563e-06, 3.7779999999994207e-06, 3.7779999999994207e-06, 3.804999999999087e-06, 3.80600000000203e-06, 3.7919999999989906e-06, 3.7919999999989906e-06, 3.846999999997797e-06, 3.804999999999087e-06, 3.804999999999087e-06, 3.7219999999976716e-06, 3.8059999999985605e-06, 3.8059999999985605e-06]</msg>
<status status="PASS" starttime="20201115 22:01:55.623" endtime="20201115 22:01:55.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.618" endtime="20201115 22:01:55.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.628" endtime="20201115 22:01:55.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.631" endtime="20201115 22:01:55.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.630" endtime="20201115 22:01:55.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.626" endtime="20201115 22:01:55.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.266" endtime="20201115 22:01:55.652"></status>
</kw>
<msg timestamp="20201115 22:01:55.652" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.661" endtime="20201115 22:01:55.675"></status>
</kw>
<msg timestamp="20201115 22:01:55.675" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.660" endtime="20201115 22:01:55.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.678" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.676" endtime="20201115 22:01:55.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.679" endtime="20201115 22:01:55.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.657" endtime="20201115 22:01:55.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.655" endtime="20201115 22:01:55.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.688" endtime="20201115 22:01:55.973"></status>
</kw>
<msg timestamp="20201115 22:01:55.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021861861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.686" endtime="20201115 22:01:55.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021861861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.977" endtime="20201115 22:01:55.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.985" endtime="20201115 22:01:55.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.683" endtime="20201115 22:01:55.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.682" endtime="20201115 22:01:55.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.992" level="INFO">${RESULT} = [{'time': 0.021865806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.945000000001725e-06, 'source_diff': 3.945000000001725e-06}, {'time': 0.021927819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:55.988" endtime="20201115 22:01:55.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.005" level="INFO">${OVERHEAD} = {'time': [0.021865806, 0.021927819, 0.021985403, 0.022045347, 0.022108, 0.022165958, 0.022227667, 0.022286833, 0.022350556, 0.022413222, 0.022474931, 0.022532333, 0.022594333, 0.022656444, 0.022718694...</msg>
<status status="PASS" starttime="20201115 22:01:55.993" endtime="20201115 22:01:56.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.009" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:01:56.008" endtime="20201115 22:01:56.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.012" level="INFO">VALUE: [3.945000000001725e-06, 3.8050000000025563e-06, 3.8200000000016e-06, 3.790999999999517e-06, 3.7919999999989906e-06, 3.790999999999517e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.804999999999087e-06, 3.8059999999985605e-06, 3.7910000000029864e-06, 3.8050000000025563e-06, 3.8050000000025563e-06, 3.8050000000025563e-06, 3.80600000000203e-06, 3.80600000000203e-06, 3.875000000000406e-06, 3.8050000000025563e-06, 3.763999999999851e-06, 3.7919999999989906e-06, 3.8609999999973665e-06, 3.790999999999517e-06, 3.819000000002126e-06, 3.7919999999989906e-06, 3.79200000000246e-06, 3.79200000000246e-06, 3.736000000000711e-06, 3.7779999999994207e-06, 3.776999999999947e-06, 3.8059999999985605e-06, 3.776999999999947e-06, 3.790999999999517e-06, 3.818999999998657e-06, 3.708000000001571e-06, 3.818999999998657e-06, 3.8050000000025563e-06, 3.790999999999517e-06, 3.83400000000117e-06, 3.79200000000246e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.79200000000246e-06, 3.7919999999989906e-06, 3.8339999999977e-06, 3.8050000000025563e-06, 3.7779999999994207e-06, 3.8059999999985605e-06, 3.77800000000289e-06, 3.83400000000117e-06]</msg>
<status status="PASS" starttime="20201115 22:01:56.011" endtime="20201115 22:01:56.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.006" endtime="20201115 22:01:56.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.015" endtime="20201115 22:01:56.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.019" endtime="20201115 22:01:56.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.017" endtime="20201115 22:01:56.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.014" endtime="20201115 22:01:56.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.653" endtime="20201115 22:01:56.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.100" endtime="20201115 22:01:56.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.099" endtime="20201115 22:01:56.040"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.042" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.051" endtime="20201115 22:01:56.063"></status>
</kw>
<msg timestamp="20201115 22:01:56.064" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.049" endtime="20201115 22:01:56.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.066" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.065" endtime="20201115 22:01:56.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.067" endtime="20201115 22:01:56.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.046" endtime="20201115 22:01:56.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.044" endtime="20201115 22:01:56.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.076" endtime="20201115 22:01:56.363"></status>
</kw>
<msg timestamp="20201115 22:01:56.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024088806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024093083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.075" endtime="20201115 22:01:56.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024088806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024093083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.367" endtime="20201115 22:01:56.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.375" endtime="20201115 22:01:56.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.072" endtime="20201115 22:01:56.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.070" endtime="20201115 22:01:56.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.381" level="INFO">${RESULT} = [{'time': 0.024093083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277000000000447e-06, 'source_diff': 4.277000000000447e-06}, {'time': 0.024156417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:56.378" endtime="20201115 22:01:56.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.394" level="INFO">${OVERHEAD} = {'time': [0.024093083, 0.024156417, 0.024221278, 0.024281764, 0.024341639, 0.024405194, 0.024472486, 0.024539264, 0.024603347, 0.02466325, 0.024724917, 0.024786431, 0.024852542, 0.024914056, 0.0249745...</msg>
<status status="PASS" starttime="20201115 22:01:56.382" endtime="20201115 22:01:56.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.399" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:01:56.398" endtime="20201115 22:01:56.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.402" level="INFO">VALUE: [4.277000000000447e-06, 4.111000000001086e-06, 4.096999999998047e-06, 4.111000000001086e-06, 4.083000000001946e-06, 4.083000000001946e-06, 4.097000000001516e-06, 4.083000000001946e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.09799999999752e-06, 4.08400000000142e-06, 4.1109999999976166e-06, 4.08400000000142e-06, 4.137999999997283e-06, 4.125000000000656e-06, 4.09799999999752e-06, 4.083000000001946e-06, 4.083000000001946e-06, 4.09800000000099e-06, 4.096999999998047e-06, 4.097000000001516e-06, 4.083000000001946e-06, 4.08399999999795e-06, 4.11200000000056e-06, 4.125000000000656e-06, 4.09799999999752e-06, 4.152999999999796e-06, 4.0699999999983805e-06, 4.08399999999795e-06, 4.1249999999971865e-06, 4.138000000000752e-06, 4.111000000001086e-06, 4.068999999998907e-06, 4.0699999999983805e-06, 4.08400000000142e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.096999999998047e-06, 4.082999999998477e-06, 4.0559999999988106e-06, 4.096999999998047e-06, 4.097000000001516e-06, 4.139000000000226e-06, 4.096999999998047e-06, 4.111000000001086e-06, 4.09800000000099e-06, 4.083000000001946e-06, 4.068999999998907e-06, 4.08400000000142e-06]</msg>
<status status="PASS" starttime="20201115 22:01:56.400" endtime="20201115 22:01:56.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.395" endtime="20201115 22:01:56.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.405" endtime="20201115 22:01:56.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.408" endtime="20201115 22:01:56.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.407" endtime="20201115 22:01:56.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.403" endtime="20201115 22:01:56.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.042" endtime="20201115 22:01:56.429"></status>
</kw>
<msg timestamp="20201115 22:01:56.429" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.438" endtime="20201115 22:01:56.452"></status>
</kw>
<msg timestamp="20201115 22:01:56.452" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.436" endtime="20201115 22:01:56.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.455" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.453" endtime="20201115 22:01:56.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.456" endtime="20201115 22:01:56.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.434" endtime="20201115 22:01:56.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.432" endtime="20201115 22:01:56.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.466" endtime="20201115 22:01:56.752"></status>
</kw>
<msg timestamp="20201115 22:01:56.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021871778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.464" endtime="20201115 22:01:56.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021871778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.756" endtime="20201115 22:01:56.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.764" endtime="20201115 22:01:56.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.461" endtime="20201115 22:01:56.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.460" endtime="20201115 22:01:56.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.771" level="INFO">${RESULT} = [{'time': 0.021876069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.021937222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:56.768" endtime="20201115 22:01:56.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.784" level="INFO">${OVERHEAD} = {'time': [0.021876069, 0.021937222, 0.021998486, 0.022058917, 0.022125014, 0.022191431, 0.022256403, 0.02232075, 0.022384056, 0.022451611, 0.022517861, 0.022584083, 0.022646819, 0.022712375, 0.0227740...</msg>
<status status="PASS" starttime="20201115 22:01:56.772" endtime="20201115 22:01:56.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.789" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:01:56.788" endtime="20201115 22:01:56.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.791" level="INFO">VALUE: [4.291000000000017e-06, 4.096999999998047e-06, 4.111000000001086e-06, 4.08400000000142e-06, 4.096999999998047e-06, 4.09800000000099e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.11200000000056e-06, 4.068999999998907e-06, 4.082999999998477e-06, 4.111000000001086e-06, 4.1109999999976166e-06, 4.097000000001516e-06, 4.09800000000099e-06, 4.09799999999752e-06, 4.041999999999241e-06, 4.027000000000197e-06, 4.111000000001086e-06, 4.082999999998477e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.096999999998047e-06, 4.07000000000185e-06, 4.1109999999976166e-06, 4.027000000000197e-06, 4.082999999998477e-06, 4.097000000001516e-06, 4.08399999999795e-06, 4.1109999999976166e-06, 4.125000000000656e-06, 4.1109999999976166e-06, 4.09799999999752e-06, 4.152999999999796e-06, 4.137999999997283e-06, 4.139000000000226e-06, 4.09800000000099e-06, 4.096999999998047e-06, 4.152999999999796e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.096999999998047e-06, 4.097000000001516e-06, 4.027999999999671e-06, 4.111000000001086e-06, 4.082999999998477e-06, 4.082999999998477e-06, 4.152999999999796e-06, 4.139000000000226e-06, 4.152999999999796e-06]</msg>
<status status="PASS" starttime="20201115 22:01:56.790" endtime="20201115 22:01:56.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.785" endtime="20201115 22:01:56.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.794" endtime="20201115 22:01:56.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.798" endtime="20201115 22:01:56.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.796" endtime="20201115 22:01:56.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.793" endtime="20201115 22:01:56.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.430" endtime="20201115 22:01:56.818"></status>
</kw>
<msg timestamp="20201115 22:01:56.818" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.827" endtime="20201115 22:01:56.841"></status>
</kw>
<msg timestamp="20201115 22:01:56.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.826" endtime="20201115 22:01:56.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.843" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.842" endtime="20201115 22:01:56.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.844" endtime="20201115 22:01:56.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.823" endtime="20201115 22:01:56.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.821" endtime="20201115 22:01:56.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.853" endtime="20201115 22:01:57.139"></status>
</kw>
<msg timestamp="20201115 22:01:57.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022326528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022330806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.852" endtime="20201115 22:01:57.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022326528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022330806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.143" endtime="20201115 22:01:57.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.151" endtime="20201115 22:01:57.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.849" endtime="20201115 22:01:57.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.848" endtime="20201115 22:01:57.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.158" level="INFO">${RESULT} = [{'time': 0.022330806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.022393986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:57.154" endtime="20201115 22:01:57.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:57.171" level="INFO">${OVERHEAD} = {'time': [0.022330806, 0.022393986, 0.022458875, 0.022525778, 0.022587972, 0.022655583, 0.022720583, 0.022787222, 0.022848069, 0.022916181, 0.022977042, 0.023043153, 0.023105889, 0.023173458, 0.023233...</msg>
<status status="PASS" starttime="20201115 22:01:57.159" endtime="20201115 22:01:57.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.176" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:01:57.175" endtime="20201115 22:01:57.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.178" level="INFO">VALUE: [4.277999999999921e-06, 4.097000000001516e-06, 4.082999999998477e-06, 4.096999999998047e-06, 4.097000000001516e-06, 4.125000000000656e-06, 4.054999999999337e-06, 4.096999999998047e-06, 4.096999999998047e-06, 4.08400000000142e-06, 4.09800000000099e-06, 4.0559999999988106e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.09800000000099e-06, 4.1249999999971865e-06, 4.096999999998047e-06, 4.0699999999983805e-06, 4.096999999998047e-06, 4.0699999999983805e-06, 4.096999999998047e-06, 4.082999999998477e-06, 4.096999999998047e-06, 4.069000000002376e-06, 4.096999999998047e-06, 4.09799999999752e-06, 4.139000000000226e-06, 4.09800000000099e-06, 4.0699999999983805e-06, 4.09800000000099e-06, 4.1249999999971865e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.096999999998047e-06, 4.09800000000099e-06, 4.1109999999976166e-06, 4.097000000001516e-06, 4.082999999998477e-06, 4.068999999998907e-06, 4.137999999997283e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.096999999998047e-06, 4.139000000000226e-06, 4.09800000000099e-06, 4.125000000000656e-06, 4.152999999999796e-06, 4.069000000002376e-06, 4.167000000002835e-06]</msg>
<status status="PASS" starttime="20201115 22:01:57.177" endtime="20201115 22:01:57.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.172" endtime="20201115 22:01:57.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.181" endtime="20201115 22:01:57.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.185" endtime="20201115 22:01:57.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.183" endtime="20201115 22:01:57.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.180" endtime="20201115 22:01:57.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.819" endtime="20201115 22:01:57.205"></status>
</kw>
<msg timestamp="20201115 22:01:57.205" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.214" endtime="20201115 22:01:57.228"></status>
</kw>
<msg timestamp="20201115 22:01:57.228" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.213" endtime="20201115 22:01:57.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.231" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.229" endtime="20201115 22:01:57.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.232" endtime="20201115 22:01:57.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.210" endtime="20201115 22:01:57.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.208" endtime="20201115 22:01:57.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.241" endtime="20201115 22:01:57.528"></status>
</kw>
<msg timestamp="20201115 22:01:57.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021840125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.239" endtime="20201115 22:01:57.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021840125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.532" endtime="20201115 22:01:57.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.541" endtime="20201115 22:01:57.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.237" endtime="20201115 22:01:57.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.235" endtime="20201115 22:01:57.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.547" level="INFO">${RESULT} = [{'time': 0.021840125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.021903861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:57.544" endtime="20201115 22:01:57.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:57.560" level="INFO">${OVERHEAD} = {'time': [0.021840125, 0.021903861, 0.021964819, 0.022028236, 0.022093389, 0.022156306, 0.022224375, 0.022291806, 0.022356417, 0.022418889, 0.022480722, 0.022544111, 0.022607792, 0.022673208, 0.022734...</msg>
<status status="PASS" starttime="20201115 22:01:57.548" endtime="20201115 22:01:57.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.565" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:01:57.564" endtime="20201115 22:01:57.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.567" level="INFO">VALUE: [4.277999999999921e-06, 4.125000000000656e-06, 4.027000000000197e-06, 4.096999999998047e-06, 4.097000000001516e-06, 4.125000000000656e-06, 4.097000000001516e-06, 4.041999999999241e-06, 4.0699999999983805e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.082999999998477e-06, 4.09800000000099e-06, 4.097000000001516e-06, 4.082999999998477e-06, 4.111000000001086e-06, 4.0699999999983805e-06, 4.082999999998477e-06, 4.152999999999796e-06, 4.097000000001516e-06, 4.139000000000226e-06, 4.096999999998047e-06, 4.111000000001086e-06, 4.152999999999796e-06, 4.0699999999983805e-06, 4.068999999998907e-06, 4.111000000001086e-06, 4.152999999999796e-06, 4.0699999999983805e-06, 4.083000000001946e-06, 4.082999999998477e-06, 4.111000000001086e-06, 4.082999999998477e-06, 4.139000000000226e-06, 4.027999999999671e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.083000000001946e-06, 4.097000000001516e-06, 4.068999999998907e-06, 4.082999999998477e-06, 4.111000000001086e-06, 4.152000000000322e-06, 4.08400000000142e-06, 4.040999999999767e-06, 4.068999999998907e-06, 4.09800000000099e-06, 4.083000000001946e-06, 4.111000000001086e-06, 4.152999999999796e-06]</msg>
<status status="PASS" starttime="20201115 22:01:57.566" endtime="20201115 22:01:57.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.561" endtime="20201115 22:01:57.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.570" endtime="20201115 22:01:57.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.574" endtime="20201115 22:01:57.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.572" endtime="20201115 22:01:57.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.569" endtime="20201115 22:01:57.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.206" endtime="20201115 22:01:57.594"></status>
</kw>
<msg timestamp="20201115 22:01:57.595" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.603" endtime="20201115 22:01:57.617"></status>
</kw>
<msg timestamp="20201115 22:01:57.618" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.602" endtime="20201115 22:01:57.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.620" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.619" endtime="20201115 22:01:57.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.621" endtime="20201115 22:01:57.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.599" endtime="20201115 22:01:57.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.597" endtime="20201115 22:01:57.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.630" endtime="20201115 22:01:57.916"></status>
</kw>
<msg timestamp="20201115 22:01:57.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022265528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022269819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.628" endtime="20201115 22:01:57.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022265528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022269819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.921" endtime="20201115 22:01:57.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.929" endtime="20201115 22:01:57.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.626" endtime="20201115 22:01:57.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.624" endtime="20201115 22:01:57.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.935" level="INFO">${RESULT} = [{'time': 0.022269819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.022334611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:57.932" endtime="20201115 22:01:57.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:57.948" level="INFO">${OVERHEAD} = {'time': [0.022269819, 0.022334611, 0.022396542, 0.022458208, 0.022524431, 0.02258825, 0.022655556, 0.022716542, 0.022777569, 0.022840125, 0.022902069, 0.0229625, 0.023030472, 0.023097514, 0.023159181...</msg>
<status status="PASS" starttime="20201115 22:01:57.936" endtime="20201115 22:01:57.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.953" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:01:57.952" endtime="20201115 22:01:57.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.955" level="INFO">VALUE: [4.291000000000017e-06, 4.097000000001516e-06, 4.041999999999241e-06, 4.040999999999767e-06, 4.08400000000142e-06, 4.083000000001946e-06, 4.08400000000142e-06, 4.08399999999795e-06, 4.125000000000656e-06, 4.068999999998907e-06, 4.111000000001086e-06, 4.0559999999988106e-06, 4.027999999999671e-06, 4.0559999999988106e-06, 4.08400000000142e-06, 4.07000000000185e-06, 4.08399999999795e-06, 4.096999999998047e-06, 4.097000000001516e-06, 4.11200000000056e-06, 4.096999999998047e-06, 4.125000000000656e-06, 4.09800000000099e-06, 4.083000000001946e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.096999999998047e-06, 4.07000000000185e-06, 4.097000000001516e-06, 4.08399999999795e-06, 4.097000000001516e-06, 4.096999999998047e-06, 4.096999999998047e-06, 4.097000000001516e-06, 4.096999999998047e-06, 4.096999999998047e-06, 4.09800000000099e-06, 4.068999999998907e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.09800000000099e-06, 4.0699999999983805e-06, 4.1809999999989356e-06, 4.139000000000226e-06, 4.111000000001086e-06, 4.069000000002376e-06, 4.097000000001516e-06, 4.09800000000099e-06, 4.027999999999671e-06, 4.097000000001516e-06]</msg>
<status status="PASS" starttime="20201115 22:01:57.954" endtime="20201115 22:01:57.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.949" endtime="20201115 22:01:57.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.959" endtime="20201115 22:01:57.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.962" endtime="20201115 22:01:57.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.960" endtime="20201115 22:01:57.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.957" endtime="20201115 22:01:57.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.595" endtime="20201115 22:01:57.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.041" endtime="20201115 22:01:57.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.040" endtime="20201115 22:01:57.983"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.985" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.994" endtime="20201115 22:01:58.008"></status>
</kw>
<msg timestamp="20201115 22:01:58.008" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.992" endtime="20201115 22:01:58.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.011" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.009" endtime="20201115 22:01:58.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.012" endtime="20201115 22:01:58.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.990" endtime="20201115 22:01:58.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.988" endtime="20201115 22:01:58.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.021" endtime="20201115 22:01:58.310"></status>
</kw>
<msg timestamp="20201115 22:01:58.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024169458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024174, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:58.020" endtime="20201115 22:01:58.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024169458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024174, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:58.314" endtime="20201115 22:01:58.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.322" endtime="20201115 22:01:58.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.017" endtime="20201115 22:01:58.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.015" endtime="20201115 22:01:58.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.329" level="INFO">${RESULT} = [{'time': 0.024174, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.024245444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:01:58.325" endtime="20201115 22:01:58.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.341" level="INFO">${OVERHEAD} = {'time': [0.024174, 0.024245444, 0.024313542, 0.024378236, 0.024448569, 0.024520389, 0.024586847, 0.024651847, 0.024723958, 0.024796292, 0.024862736, 0.024934792, 0.024998819, 0.025066556, 0.025133819...</msg>
<status status="PASS" starttime="20201115 22:01:58.329" endtime="20201115 22:01:58.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.346" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:01:58.345" endtime="20201115 22:01:58.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.348" level="INFO">VALUE: [4.541999999999741e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.3749999999974365e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.375000000000906e-06, 4.346999999998297e-06, 4.445000000002225e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.319000000002626e-06, 4.375000000000906e-06, 4.4449999999987555e-06, 4.375000000000906e-06, 4.360999999997867e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.27800000000339e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.304999999999587e-06, 4.332999999998727e-06, 4.3749999999974365e-06, 4.3749999999974365e-06, 4.3749999999974365e-06, 4.375000000000906e-06, 4.319000000002626e-06, 4.389000000000476e-06, 4.360999999997867e-06, 4.360999999997867e-06, 4.375000000000906e-06, 4.277000000000447e-06, 4.346999999998297e-06, 4.361000000001336e-06, 4.402000000000572e-06, 4.3749999999974365e-06, 4.388999999997006e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201115 22:01:58.347" endtime="20201115 22:01:58.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.342" endtime="20201115 22:01:58.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.351" endtime="20201115 22:01:58.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.355" endtime="20201115 22:01:58.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.353" endtime="20201115 22:01:58.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.350" endtime="20201115 22:01:58.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.986" endtime="20201115 22:01:58.375"></status>
</kw>
<msg timestamp="20201115 22:01:58.376" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.384" endtime="20201115 22:01:58.398"></status>
</kw>
<msg timestamp="20201115 22:01:58.398" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.383" endtime="20201115 22:01:58.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.404" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.399" endtime="20201115 22:01:58.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.406" endtime="20201115 22:01:58.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.380" endtime="20201115 22:01:58.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.378" endtime="20201115 22:01:58.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.415" endtime="20201115 22:01:58.700"></status>
</kw>
<msg timestamp="20201115 22:01:58.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.413" endtime="20201115 22:01:58.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.704" endtime="20201115 22:01:58.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.712" endtime="20201115 22:01:58.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.410" endtime="20201115 22:01:58.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.409" endtime="20201115 22:01:58.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.719" level="INFO">${RESULT} = [{'time': 0.021721653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.58400000000192e-06, 'source_diff': 4.58400000000192e-06}, {'time': 0.021792944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:58.716" endtime="20201115 22:01:58.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.732" level="INFO">${OVERHEAD} = {'time': [0.021721653, 0.021792944, 0.021859389, 0.021923708, 0.021992042, 0.022063181, 0.022128444, 0.022199194, 0.022271597, 0.022339736, 0.022409278, 0.022476681, 0.022546083, 0.022616444, 0.022683...</msg>
<status status="PASS" starttime="20201115 22:01:58.720" endtime="20201115 22:01:58.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.736" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:01:58.735" endtime="20201115 22:01:58.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.739" level="INFO">VALUE: [4.58400000000192e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.34800000000124e-06, 4.388000000001002e-06, 4.318999999999157e-06, 4.416000000000142e-06, 4.360999999997867e-06, 4.361000000001336e-06, 4.3749999999974365e-06, 4.361000000001336e-06, 4.346999999998297e-06, 4.416000000000142e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.3749999999974365e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.36200000000081e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.346999999998297e-06, 4.360999999997867e-06, 4.388999999997006e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.36200000000081e-06, 4.333000000002196e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.388999999997006e-06, 4.375000000000906e-06, 4.401999999997103e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.304999999999587e-06, 4.3749999999974365e-06, 4.347000000001766e-06, 4.3749999999974365e-06, 4.346999999998297e-06, 4.361000000001336e-06]</msg>
<status status="PASS" starttime="20201115 22:01:58.737" endtime="20201115 22:01:58.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.733" endtime="20201115 22:01:58.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.742" endtime="20201115 22:01:58.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.745" endtime="20201115 22:01:58.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.744" endtime="20201115 22:01:58.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.740" endtime="20201115 22:01:58.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.376" endtime="20201115 22:01:58.766"></status>
</kw>
<msg timestamp="20201115 22:01:58.766" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.775" endtime="20201115 22:01:58.790"></status>
</kw>
<msg timestamp="20201115 22:01:58.790" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.773" endtime="20201115 22:01:58.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.793" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.791" endtime="20201115 22:01:58.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.794" endtime="20201115 22:01:58.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.771" endtime="20201115 22:01:58.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.769" endtime="20201115 22:01:58.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.802" endtime="20201115 22:01:59.089"></status>
</kw>
<msg timestamp="20201115 22:01:59.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.801" endtime="20201115 22:01:59.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.093" endtime="20201115 22:01:59.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.101" endtime="20201115 22:01:59.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.798" endtime="20201115 22:01:59.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.797" endtime="20201115 22:01:59.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.108" level="INFO">${RESULT} = [{'time': 0.022554111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.022619125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:59.105" endtime="20201115 22:01:59.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.121" level="INFO">${OVERHEAD} = {'time': [0.022554111, 0.022619125, 0.022685306, 0.022751222, 0.022820222, 0.022887903, 0.022956944, 0.023029125, 0.023094125, 0.023165403, 0.023231181, 0.023298167, 0.023364806, 0.023430139, 0.023494...</msg>
<status status="PASS" starttime="20201115 22:01:59.109" endtime="20201115 22:01:59.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.126" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:01:59.125" endtime="20201115 22:01:59.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.128" level="INFO">VALUE: [4.54200000000321e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.36200000000081e-06, 4.361000000001336e-06, 4.416999999999616e-06, 4.360999999997867e-06, 4.3749999999974365e-06, 4.360999999997867e-06, 4.388999999997006e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.3200000000021e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.347000000001766e-06, 4.3749999999974365e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.388999999997006e-06, 4.360999999997867e-06, 4.3749999999974365e-06, 4.361000000001336e-06, 4.431000000002655e-06, 4.430999999999186e-06, 4.360999999997867e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.360999999997867e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.347000000001766e-06, 4.333000000002196e-06, 4.375000000000906e-06]</msg>
<status status="PASS" starttime="20201115 22:01:59.127" endtime="20201115 22:01:59.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.122" endtime="20201115 22:01:59.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.131" endtime="20201115 22:01:59.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.134" endtime="20201115 22:01:59.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.133" endtime="20201115 22:01:59.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.129" endtime="20201115 22:01:59.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.767" endtime="20201115 22:01:59.155"></status>
</kw>
<msg timestamp="20201115 22:01:59.155" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.164" endtime="20201115 22:01:59.178"></status>
</kw>
<msg timestamp="20201115 22:01:59.178" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.163" endtime="20201115 22:01:59.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.181" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.179" endtime="20201115 22:01:59.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.182" endtime="20201115 22:01:59.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.160" endtime="20201115 22:01:59.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.158" endtime="20201115 22:01:59.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.190" endtime="20201115 22:01:59.478"></status>
</kw>
<msg timestamp="20201115 22:01:59.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022329917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.189" endtime="20201115 22:01:59.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022329917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.482" endtime="20201115 22:01:59.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.490" endtime="20201115 22:01:59.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.186" endtime="20201115 22:01:59.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.185" endtime="20201115 22:01:59.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.497" level="INFO">${RESULT} = [{'time': 0.022329917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.57000000000235e-06, 'source_diff': 4.57000000000235e-06}, {'time': 0.022396264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:59.494" endtime="20201115 22:01:59.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.511" level="INFO">${OVERHEAD} = {'time': [0.022329917, 0.022396264, 0.022464347, 0.022529444, 0.022598444, 0.022666375, 0.022736861, 0.022805208, 0.022872597, 0.022942278, 0.023010611, 0.023082583, 0.02314675, 0.023218458, 0.0232842...</msg>
<status status="PASS" starttime="20201115 22:01:59.498" endtime="20201115 22:01:59.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.515" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:01:59.514" endtime="20201115 22:01:59.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.518" level="INFO">VALUE: [4.57000000000235e-06, 4.3749999999974365e-06, 4.3749999999974365e-06, 4.360999999997867e-06, 4.346999999998297e-06, 4.360999999997867e-06, 4.375000000000906e-06, 4.304999999999587e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.360999999997867e-06, 4.346999999998297e-06, 4.36200000000081e-06, 4.360999999997867e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.36200000000081e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.346999999998297e-06, 4.3749999999974365e-06, 4.375000000000906e-06, 4.346999999998297e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.33400000000167e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.346999999998297e-06, 4.347000000001766e-06, 4.361000000001336e-06, 4.36199999999734e-06, 4.346999999998297e-06, 4.375000000000906e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.3749999999974365e-06, 4.304999999999587e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.346999999998297e-06]</msg>
<status status="PASS" starttime="20201115 22:01:59.517" endtime="20201115 22:01:59.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.512" endtime="20201115 22:01:59.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.521" endtime="20201115 22:01:59.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.525" endtime="20201115 22:01:59.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.523" endtime="20201115 22:01:59.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.519" endtime="20201115 22:01:59.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.156" endtime="20201115 22:01:59.546"></status>
</kw>
<msg timestamp="20201115 22:01:59.546" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.555" endtime="20201115 22:01:59.568"></status>
</kw>
<msg timestamp="20201115 22:01:59.569" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.553" endtime="20201115 22:01:59.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.571" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.570" endtime="20201115 22:01:59.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.572" endtime="20201115 22:01:59.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.551" endtime="20201115 22:01:59.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.548" endtime="20201115 22:01:59.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.581" endtime="20201115 22:01:59.869"></status>
</kw>
<msg timestamp="20201115 22:01:59.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021776097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021780653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.580" endtime="20201115 22:01:59.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021776097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021780653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.873" endtime="20201115 22:01:59.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.881" endtime="20201115 22:01:59.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.577" endtime="20201115 22:01:59.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.575" endtime="20201115 22:01:59.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.888" level="INFO">${RESULT} = [{'time': 0.021780653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.021846236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:59.884" endtime="20201115 22:01:59.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.901" level="INFO">${OVERHEAD} = {'time': [0.021780653, 0.021846236, 0.021918556, 0.021983556, 0.022051056, 0.022121958, 0.022187625, 0.022256889, 0.022324181, 0.022396514, 0.022461889, 0.022534389, 0.022604472, 0.022674958, 0.022747...</msg>
<status status="PASS" starttime="20201115 22:01:59.888" endtime="20201115 22:01:59.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.905" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:01:59.904" endtime="20201115 22:01:59.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.907" level="INFO">VALUE: [4.555999999999311e-06, 4.403000000000046e-06, 4.36199999999734e-06, 4.403000000000046e-06, 4.34799999999777e-06, 4.347000000001766e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.388999999997006e-06, 4.360999999997867e-06, 4.3749999999974365e-06, 4.3749999999974365e-06, 4.332999999998727e-06, 4.3749999999974365e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.3339999999982e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.401999999997103e-06, 4.3749999999974365e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.375000000000906e-06, 4.346999999998297e-06, 4.375000000000906e-06, 4.304999999999587e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.318999999999157e-06, 4.361000000001336e-06, 4.3749999999974365e-06, 4.361000000001336e-06, 4.388999999997006e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.3749999999974365e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201115 22:01:59.906" endtime="20201115 22:01:59.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.901" endtime="20201115 22:01:59.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.911" endtime="20201115 22:01:59.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.914" endtime="20201115 22:01:59.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.913" endtime="20201115 22:01:59.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.909" endtime="20201115 22:01:59.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.546" endtime="20201115 22:01:59.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.984" endtime="20201115 22:01:59.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.983" endtime="20201115 22:01:59.935"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.938" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.946" endtime="20201115 22:01:59.960"></status>
</kw>
<msg timestamp="20201115 22:01:59.961" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.945" endtime="20201115 22:01:59.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.963" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.962" endtime="20201115 22:01:59.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.964" endtime="20201115 22:01:59.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.942" endtime="20201115 22:01:59.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.940" endtime="20201115 22:01:59.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.973" endtime="20201115 22:02:00.259"></status>
</kw>
<msg timestamp="20201115 22:02:00.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024131583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024136444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.972" endtime="20201115 22:02:00.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024131583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024136444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.263" endtime="20201115 22:02:00.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.272" endtime="20201115 22:02:00.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.969" endtime="20201115 22:02:00.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.967" endtime="20201115 22:02:00.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.278" level="INFO">${RESULT} = [{'time': 0.024136444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.024207875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:00.275" endtime="20201115 22:02:00.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.291" level="INFO">${OVERHEAD} = {'time': [0.024136444, 0.024207875, 0.02428075, 0.024353236, 0.024425861, 0.024495653, 0.024571514, 0.024643708, 0.024714306, 0.024788528, 0.024861681, 0.024932181, 0.025001681, 0.025077792, 0.0251545...</msg>
<status status="PASS" starttime="20201115 22:02:00.279" endtime="20201115 22:02:00.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.296" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:00.295" endtime="20201115 22:02:00.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.299" level="INFO">VALUE: [4.860999999998367e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.625000000001156e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.695000000002475e-06, 4.653000000000296e-06, 4.611000000001586e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.693999999999532e-06, 4.693999999999532e-06, 4.625000000001156e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.693999999999532e-06, 4.666000000000392e-06, 4.680999999999436e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.721999999998672e-06, 4.653000000000296e-06, 4.625000000001156e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.723000000001615e-06, 4.679999999999962e-06, 4.6949999999990055e-06, 4.651999999997353e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.679999999999962e-06, 4.610999999998117e-06, 4.680999999999436e-06, 4.666000000000392e-06, 4.667000000003335e-06, 4.693999999999532e-06, 4.652000000000822e-06, 4.6389999999972564e-06, 4.679999999999962e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201115 22:02:00.297" endtime="20201115 22:02:00.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.292" endtime="20201115 22:02:00.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.302" endtime="20201115 22:02:00.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.305" endtime="20201115 22:02:00.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.304" endtime="20201115 22:02:00.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.300" endtime="20201115 22:02:00.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.938" endtime="20201115 22:02:00.326"></status>
</kw>
<msg timestamp="20201115 22:02:00.326" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.335" endtime="20201115 22:02:00.348"></status>
</kw>
<msg timestamp="20201115 22:02:00.349" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.333" endtime="20201115 22:02:00.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.351" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.350" endtime="20201115 22:02:00.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.352" endtime="20201115 22:02:00.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.331" endtime="20201115 22:02:00.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.329" endtime="20201115 22:02:00.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.361" endtime="20201115 22:02:00.647"></status>
</kw>
<msg timestamp="20201115 22:02:00.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021844736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.360" endtime="20201115 22:02:00.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021844736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.652" endtime="20201115 22:02:00.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.660" endtime="20201115 22:02:00.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.357" endtime="20201115 22:02:00.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.355" endtime="20201115 22:02:00.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.666" level="INFO">${RESULT} = [{'time': 0.021844736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.021917903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:00.663" endtime="20201115 22:02:00.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.679" level="INFO">${OVERHEAD} = {'time': [0.021844736, 0.021917903, 0.021986625, 0.022057639, 0.022128375, 0.022204083, 0.022273472, 0.022350403, 0.022420444, 0.022494542, 0.022570389, 0.022640736, 0.022709986, 0.022782889, 0.022856...</msg>
<status status="PASS" starttime="20201115 22:02:00.667" endtime="20201115 22:02:00.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.684" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:00.683" endtime="20201115 22:02:00.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.687" level="INFO">VALUE: [4.818999999999657e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.707999999999102e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.707999999999102e-06, 4.639000000000726e-06, 4.667000000003335e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.667000000003335e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.652000000000822e-06, 4.639000000000726e-06, 4.750000000001281e-06, 4.666999999999866e-06, 4.625000000001156e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.707999999999102e-06]</msg>
<status status="PASS" starttime="20201115 22:02:00.685" endtime="20201115 22:02:00.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.681" endtime="20201115 22:02:00.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.690" endtime="20201115 22:02:00.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.693" endtime="20201115 22:02:00.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.692" endtime="20201115 22:02:00.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.688" endtime="20201115 22:02:00.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.326" endtime="20201115 22:02:00.714"></status>
</kw>
<msg timestamp="20201115 22:02:00.714" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.723" endtime="20201115 22:02:00.737"></status>
</kw>
<msg timestamp="20201115 22:02:00.737" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.721" endtime="20201115 22:02:00.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.740" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.738" endtime="20201115 22:02:00.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.741" endtime="20201115 22:02:00.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.719" endtime="20201115 22:02:00.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.717" endtime="20201115 22:02:00.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.750" endtime="20201115 22:02:01.036"></status>
</kw>
<msg timestamp="20201115 22:02:01.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021851972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.748" endtime="20201115 22:02:01.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021851972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.041" endtime="20201115 22:02:01.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.049" endtime="20201115 22:02:01.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.746" endtime="20201115 22:02:01.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.744" endtime="20201115 22:02:01.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.055" level="INFO">${RESULT} = [{'time': 0.021851972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.021927667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:01.052" endtime="20201115 22:02:01.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:01.069" level="INFO">${OVERHEAD} = {'time': [0.021851972, 0.021927667, 0.02200325, 0.022076403, 0.022147542, 0.022223111, 0.022298014, 0.022367944, 0.022440444, 0.022511306, 0.022586194, 0.022662042, 0.022737472, 0.022807139, 0.0228806...</msg>
<status status="PASS" starttime="20201115 22:02:01.057" endtime="20201115 22:02:01.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.073" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:01.072" endtime="20201115 22:02:01.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.076" level="INFO">VALUE: [4.889000000000976e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.679999999999962e-06, 4.652999999996826e-06, 4.652000000000822e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.680999999999436e-06, 4.666000000000392e-06, 4.721999999998672e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.625000000001156e-06, 4.653000000000296e-06, 4.61200000000106e-06, 4.653000000000296e-06, 4.665999999996923e-06, 4.653000000000296e-06, 4.59800000000149e-06, 4.610999999998117e-06, 4.653000000000296e-06, 4.693999999999532e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.680000000003431e-06, 4.652999999996826e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.709000000002045e-06, 4.653000000000296e-06, 4.693999999999532e-06, 4.679999999999962e-06, 4.695000000002475e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.611000000001586e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.679999999999962e-06]</msg>
<status status="PASS" starttime="20201115 22:02:01.074" endtime="20201115 22:02:01.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.070" endtime="20201115 22:02:01.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.079" endtime="20201115 22:02:01.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:01.082" endtime="20201115 22:02:01.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.081" endtime="20201115 22:02:01.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.077" endtime="20201115 22:02:01.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.715" endtime="20201115 22:02:01.103"></status>
</kw>
<msg timestamp="20201115 22:02:01.103" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.112" endtime="20201115 22:02:01.126"></status>
</kw>
<msg timestamp="20201115 22:02:01.126" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.110" endtime="20201115 22:02:01.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.129" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.127" endtime="20201115 22:02:01.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.130" endtime="20201115 22:02:01.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.108" endtime="20201115 22:02:01.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.106" endtime="20201115 22:02:01.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.139" endtime="20201115 22:02:01.426"></status>
</kw>
<msg timestamp="20201115 22:02:01.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021916597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.137" endtime="20201115 22:02:01.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021916597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.430" endtime="20201115 22:02:01.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.438" endtime="20201115 22:02:01.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.135" endtime="20201115 22:02:01.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.133" endtime="20201115 22:02:01.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.445" level="INFO">${RESULT} = [{'time': 0.021921458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.021995722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:01.442" endtime="20201115 22:02:01.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:01.458" level="INFO">${OVERHEAD} = {'time': [0.021921458, 0.021995722, 0.022064861, 0.022137583, 0.022211944, 0.022284958, 0.022358653, 0.022431403, 0.022501861, 0.022575431, 0.022644819, 0.022715569, 0.022792486, 0.022865375, 0.022937...</msg>
<status status="PASS" starttime="20201115 22:02:01.446" endtime="20201115 22:02:01.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.463" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:01.462" endtime="20201115 22:02:01.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.465" level="INFO">VALUE: [4.861000000001836e-06, 4.693999999999532e-06, 4.694000000003001e-06, 4.666000000000392e-06, 4.652000000000822e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.625000000001156e-06, 4.653000000000296e-06, 4.652000000000822e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.666999999999866e-06, 4.693999999999532e-06, 4.651999999997353e-06, 4.653000000000296e-06, 4.665999999996923e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.722999999998145e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.721999999998672e-06, 4.652000000000822e-06, 4.625000000001156e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.6949999999990055e-06, 4.693999999999532e-06, 4.666999999999866e-06]</msg>
<status status="PASS" starttime="20201115 22:02:01.464" endtime="20201115 22:02:01.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.459" endtime="20201115 22:02:01.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.468" endtime="20201115 22:02:01.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:01.472" endtime="20201115 22:02:01.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.470" endtime="20201115 22:02:01.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.466" endtime="20201115 22:02:01.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.104" endtime="20201115 22:02:01.492"></status>
</kw>
<msg timestamp="20201115 22:02:01.492" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.501" endtime="20201115 22:02:01.515"></status>
</kw>
<msg timestamp="20201115 22:02:01.515" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.500" endtime="20201115 22:02:01.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.518" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.516" endtime="20201115 22:02:01.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.519" endtime="20201115 22:02:01.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.497" endtime="20201115 22:02:01.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.495" endtime="20201115 22:02:01.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.528" endtime="20201115 22:02:01.815"></status>
</kw>
<msg timestamp="20201115 22:02:01.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022196472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.526" endtime="20201115 22:02:01.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022196472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.820" endtime="20201115 22:02:01.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.828" endtime="20201115 22:02:01.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.524" endtime="20201115 22:02:01.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.522" endtime="20201115 22:02:01.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.834" level="INFO">${RESULT} = [{'time': 0.022196472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.022273, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:02:01.831" endtime="20201115 22:02:01.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:01.847" level="INFO">${OVERHEAD} = {'time': [0.022196472, 0.022273, 0.022346431, 0.022416236, 0.022488847, 0.02256125, 0.022632875, 0.022702861, 0.022777986, 0.0228475, 0.022917972, 0.022994681, 0.023068986, 0.023144958, 0.023218111, 0...</msg>
<status status="PASS" starttime="20201115 22:02:01.835" endtime="20201115 22:02:01.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.854" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:01.852" endtime="20201115 22:02:01.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.857" level="INFO">VALUE: [4.832999999999227e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.722000000002141e-06, 4.666999999999866e-06, 4.722000000002141e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.611000000001586e-06, 4.737000000001185e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.665999999996923e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.722000000002141e-06, 4.625000000001156e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.680999999999436e-06, 4.639000000000726e-06, 4.679999999999962e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.625000000001156e-06, 4.666000000000392e-06, 4.625000000001156e-06, 4.665999999996923e-06, 4.666999999999866e-06, 4.652000000000822e-06, 4.597000000002016e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.679999999999962e-06]</msg>
<status status="PASS" starttime="20201115 22:02:01.856" endtime="20201115 22:02:01.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.849" endtime="20201115 22:02:01.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.861" endtime="20201115 22:02:01.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:01.866" endtime="20201115 22:02:01.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.864" endtime="20201115 22:02:01.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.859" endtime="20201115 22:02:01.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.493" endtime="20201115 22:02:01.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.936" endtime="20201115 22:02:01.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.936" endtime="20201115 22:02:01.889"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.892" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.903" endtime="20201115 22:02:01.918"></status>
</kw>
<msg timestamp="20201115 22:02:01.919" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.901" endtime="20201115 22:02:01.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.921" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.920" endtime="20201115 22:02:01.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.922" endtime="20201115 22:02:01.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.898" endtime="20201115 22:02:01.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.895" endtime="20201115 22:02:01.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.931" endtime="20201115 22:02:02.218"></status>
</kw>
<msg timestamp="20201115 22:02:02.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030110375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030115486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.930" endtime="20201115 22:02:02.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030110375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030115486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.222" endtime="20201115 22:02:02.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.231" endtime="20201115 22:02:02.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.927" endtime="20201115 22:02:02.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.925" endtime="20201115 22:02:02.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.237" level="INFO">${RESULT} = [{'time': 0.030115486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.03019725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:02.234" endtime="20201115 22:02:02.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.250" level="INFO">${OVERHEAD} = {'time': [0.030115486, 0.03019725, 0.030275972, 0.030354944, 0.030435847, 0.030512458, 0.030593917, 0.030670153, 0.030750667, 0.030828889, 0.030907139, 0.030981889, 0.031058681, 0.031133514, 0.0312152...</msg>
<status status="PASS" starttime="20201115 22:02:02.238" endtime="20201115 22:02:02.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.255" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:02.254" endtime="20201115 22:02:02.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.257" level="INFO">VALUE: [5.110999999998617e-06, 4.930999999999686e-06, 5.028000000000671e-06, 4.957999999999352e-06, 4.930000000000212e-06, 4.889000000000976e-06, 4.945000000002725e-06, 4.971999999998922e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.9449999999992555e-06, 4.971999999998922e-06, 5.000000000001531e-06, 4.930999999999686e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.9450000000061944e-06, 4.9589999999988255e-06, 4.9450000000061944e-06, 4.957999999999352e-06, 4.917000000000116e-06, 4.9589999999988255e-06, 4.943999999999782e-06, 4.9589999999988255e-06, 4.943999999999782e-06, 4.888999999994037e-06, 4.917000000000116e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.9589999999988255e-06, 4.9450000000061944e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.957999999999352e-06, 4.9589999999988255e-06, 4.917000000000116e-06, 4.902000000001072e-06, 4.9589999999988255e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.917000000000116e-06, 4.9589999999988255e-06, 4.958000000006291e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.957999999999352e-06]</msg>
<status status="PASS" starttime="20201115 22:02:02.256" endtime="20201115 22:02:02.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.251" endtime="20201115 22:02:02.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.260" endtime="20201115 22:02:02.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.264" endtime="20201115 22:02:02.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.262" endtime="20201115 22:02:02.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.259" endtime="20201115 22:02:02.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.893" endtime="20201115 22:02:02.284"></status>
</kw>
<msg timestamp="20201115 22:02:02.284" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.293" endtime="20201115 22:02:02.308"></status>
</kw>
<msg timestamp="20201115 22:02:02.308" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.292" endtime="20201115 22:02:02.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.311" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.309" endtime="20201115 22:02:02.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.312" endtime="20201115 22:02:02.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.289" endtime="20201115 22:02:02.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.287" endtime="20201115 22:02:02.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.321" endtime="20201115 22:02:02.609"></status>
</kw>
<msg timestamp="20201115 22:02:02.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022168778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022173847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.320" endtime="20201115 22:02:02.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022168778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022173847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.613" endtime="20201115 22:02:02.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.621" endtime="20201115 22:02:02.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.317" endtime="20201115 22:02:02.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.315" endtime="20201115 22:02:02.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.628" level="INFO">${RESULT} = [{'time': 0.022173847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.022255875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:02.624" endtime="20201115 22:02:02.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.641" level="INFO">${OVERHEAD} = {'time': [0.022173847, 0.022255875, 0.022333431, 0.02241475, 0.02248925, 0.022569, 0.022646236, 0.022722319, 0.022803375, 0.022885528, 0.022963472, 0.023042778, 0.023118319, 0.023200472, 0.023276958, ...</msg>
<status status="PASS" starttime="20201115 22:02:02.629" endtime="20201115 22:02:02.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.645" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:02.644" endtime="20201115 22:02:02.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.648" level="INFO">VALUE: [5.068999999999907e-06, 4.930999999999686e-06, 4.903000000000546e-06, 4.943999999999782e-06, 4.943999999999782e-06, 5.0139999999976315e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.971999999998922e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.9299999999967425e-06, 4.971999999998922e-06, 4.957999999999352e-06, 4.959000000002295e-06, 4.9589999999988255e-06, 4.903000000000546e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.903000000000546e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.9589999999988255e-06, 4.945000000002725e-06, 4.931000000003155e-06, 4.917000000000116e-06, 4.943999999999782e-06, 4.9589999999988255e-06, 4.945000000002725e-06, 4.971999999998922e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.959000000002295e-06, 4.889000000000976e-06, 4.930999999999686e-06, 4.957999999999352e-06, 4.917000000000116e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.944000000003251e-06, 4.915999999997173e-06, 4.930999999999686e-06, 4.959000000002295e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.930000000000212e-06, 4.957999999999352e-06]</msg>
<status status="PASS" starttime="20201115 22:02:02.646" endtime="20201115 22:02:02.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.642" endtime="20201115 22:02:02.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.651" endtime="20201115 22:02:02.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.654" endtime="20201115 22:02:02.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.653" endtime="20201115 22:02:02.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.649" endtime="20201115 22:02:02.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.285" endtime="20201115 22:02:02.675"></status>
</kw>
<msg timestamp="20201115 22:02:02.675" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.684" endtime="20201115 22:02:02.699"></status>
</kw>
<msg timestamp="20201115 22:02:02.699" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.682" endtime="20201115 22:02:02.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.702" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.700" endtime="20201115 22:02:02.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.703" endtime="20201115 22:02:02.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.680" endtime="20201115 22:02:02.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.678" endtime="20201115 22:02:02.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.712" endtime="20201115 22:02:02.999"></status>
</kw>
<msg timestamp="20201115 22:02:03.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022659347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226645, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:02.710" endtime="20201115 22:02:03.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022659347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226645, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:03.003" endtime="20201115 22:02:03.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.011" endtime="20201115 22:02:03.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.708" endtime="20201115 22:02:03.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.706" endtime="20201115 22:02:03.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:03.018" level="INFO">${RESULT} = [{'time': 0.0226645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.022739403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:03.015" endtime="20201115 22:02:03.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.031" level="INFO">${OVERHEAD} = {'time': [0.0226645, 0.022739403, 0.022818847, 0.022897903, 0.022978667, 0.023058389, 0.023134736, 0.023213917, 0.023287625, 0.023363819, 0.023442736, 0.023518556, 0.023597583, 0.023678514, 0.02375325...</msg>
<status status="PASS" starttime="20201115 22:02:03.019" endtime="20201115 22:02:03.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.036" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:03.035" endtime="20201115 22:02:03.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.038" level="INFO">VALUE: [5.153000000000796e-06, 4.9589999999988255e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.945000000002725e-06, 4.930999999999686e-06, 4.930000000000212e-06, 4.930999999999686e-06, 4.985999999998492e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.9589999999988255e-06, 4.943999999999782e-06, 4.958000000002821e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.959000000002295e-06, 4.9449999999992555e-06, 4.9589999999988255e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.945000000002725e-06, 4.9449999999992555e-06, 4.9999999999980616e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.903000000000546e-06, 4.9589999999988255e-06, 4.917000000000116e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.957999999999352e-06, 4.943999999999782e-06, 5.014000000001101e-06, 4.930999999999686e-06, 4.958000000002821e-06, 4.875000000001406e-06, 4.917000000000116e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.930999999999686e-06, 5.000000000001531e-06, 4.9449999999992555e-06, 4.930000000000212e-06]</msg>
<status status="PASS" starttime="20201115 22:02:03.037" endtime="20201115 22:02:03.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.032" endtime="20201115 22:02:03.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.041" endtime="20201115 22:02:03.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.044" endtime="20201115 22:02:03.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.043" endtime="20201115 22:02:03.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.040" endtime="20201115 22:02:03.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.676" endtime="20201115 22:02:03.065"></status>
</kw>
<msg timestamp="20201115 22:02:03.066" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.074" endtime="20201115 22:02:03.090"></status>
</kw>
<msg timestamp="20201115 22:02:03.091" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.073" endtime="20201115 22:02:03.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.093" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.092" endtime="20201115 22:02:03.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.094" endtime="20201115 22:02:03.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.070" endtime="20201115 22:02:03.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.068" endtime="20201115 22:02:03.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.103" endtime="20201115 22:02:03.390"></status>
</kw>
<msg timestamp="20201115 22:02:03.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022649111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.102" endtime="20201115 22:02:03.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022649111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.394" endtime="20201115 22:02:03.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.402" endtime="20201115 22:02:03.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.099" endtime="20201115 22:02:03.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.097" endtime="20201115 22:02:03.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:03.408" level="INFO">${RESULT} = [{'time': 0.022654222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.022733431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:03.405" endtime="20201115 22:02:03.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.421" level="INFO">${OVERHEAD} = {'time': [0.022654222, 0.022733431, 0.022815417, 0.022896736, 0.022970861, 0.023048917, 0.023130528, 0.023207667, 0.023282681, 0.023361875, 0.023442764, 0.023523694, 0.023598681, 0.023676903, 0.023751...</msg>
<status status="PASS" starttime="20201115 22:02:03.409" endtime="20201115 22:02:03.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.426" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:03.425" endtime="20201115 22:02:03.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.428" level="INFO">VALUE: [5.111000000002086e-06, 4.9449999999992555e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.9449999999992555e-06, 4.972000000002391e-06, 4.945000000002725e-06, 4.958000000002821e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.930000000000212e-06, 4.889000000000976e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.945000000002725e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.986000000001961e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.945000000002725e-06, 4.930999999999686e-06, 4.971999999998922e-06, 4.930999999999686e-06, 4.957999999999352e-06, 4.930000000000212e-06, 5.0139999999976315e-06, 4.943999999999782e-06, 4.9449999999992555e-06, 4.943999999999782e-06, 4.945000000002725e-06, 4.931000000003155e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.973000000001865e-06, 4.943999999999782e-06, 4.8889999999975065e-06, 4.971999999998922e-06]</msg>
<status status="PASS" starttime="20201115 22:02:03.427" endtime="20201115 22:02:03.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.422" endtime="20201115 22:02:03.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.432" endtime="20201115 22:02:03.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.442" endtime="20201115 22:02:03.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.440" endtime="20201115 22:02:03.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.430" endtime="20201115 22:02:03.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.066" endtime="20201115 22:02:03.462"></status>
</kw>
<msg timestamp="20201115 22:02:03.463" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.472" endtime="20201115 22:02:03.485"></status>
</kw>
<msg timestamp="20201115 22:02:03.486" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.470" endtime="20201115 22:02:03.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.488" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.487" endtime="20201115 22:02:03.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.489" endtime="20201115 22:02:03.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.467" endtime="20201115 22:02:03.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.465" endtime="20201115 22:02:03.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.498" endtime="20201115 22:02:03.786"></status>
</kw>
<msg timestamp="20201115 22:02:03.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.497" endtime="20201115 22:02:03.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.790" endtime="20201115 22:02:03.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.798" endtime="20201115 22:02:03.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.494" endtime="20201115 22:02:03.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.493" endtime="20201115 22:02:03.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:03.805" level="INFO">${RESULT} = [{'time': 0.021940653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.022020542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:03.801" endtime="20201115 22:02:03.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.818" level="INFO">${OVERHEAD} = {'time': [0.021940653, 0.022020542, 0.022097431, 0.022173167, 0.022247986, 0.022329722, 0.022406486, 0.022484708, 0.022565278, 0.02264325, 0.022723194, 0.022797931, 0.022875375, 0.022949042, 0.0230239...</msg>
<status status="PASS" starttime="20201115 22:02:03.806" endtime="20201115 22:02:03.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.822" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:03.821" endtime="20201115 22:02:03.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.825" level="INFO">VALUE: [5.139000000001226e-06, 4.959000000002295e-06, 4.959000000002295e-06, 4.973000000001865e-06, 4.917000000000116e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.930000000000212e-06, 5.000000000001531e-06, 5.000000000001531e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.957999999999352e-06, 4.930999999999686e-06, 4.945000000002725e-06, 4.9449999999992555e-06, 4.917000000000116e-06, 4.9999999999980616e-06, 4.972000000002391e-06, 4.986000000001961e-06, 4.957999999999352e-06, 4.875000000001406e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.917000000000116e-06, 4.9449999999992555e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.9449999999992555e-06, 4.945000000002725e-06, 4.915999999997173e-06, 4.945000000002725e-06, 4.943999999999782e-06, 4.973000000001865e-06, 4.958000000002821e-06, 4.945000000002725e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.930999999999686e-06, 4.9449999999992555e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.943999999999782e-06]</msg>
<status status="PASS" starttime="20201115 22:02:03.823" endtime="20201115 22:02:03.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.819" endtime="20201115 22:02:03.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.829" endtime="20201115 22:02:03.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.832" endtime="20201115 22:02:03.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.831" endtime="20201115 22:02:03.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.827" endtime="20201115 22:02:03.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.463" endtime="20201115 22:02:03.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.890" endtime="20201115 22:02:03.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.889" endtime="20201115 22:02:03.853"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.855" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.864" endtime="20201115 22:02:03.878"></status>
</kw>
<msg timestamp="20201115 22:02:03.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.862" endtime="20201115 22:02:03.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.881" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.880" endtime="20201115 22:02:03.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.882" endtime="20201115 22:02:03.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.860" endtime="20201115 22:02:03.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.858" endtime="20201115 22:02:03.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.891" endtime="20201115 22:02:04.177"></status>
</kw>
<msg timestamp="20201115 22:02:04.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024232486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024237903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.890" endtime="20201115 22:02:04.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024232486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024237903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.181" endtime="20201115 22:02:04.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.189" endtime="20201115 22:02:04.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.887" endtime="20201115 22:02:04.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.885" endtime="20201115 22:02:04.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.196" level="INFO">${RESULT} = [{'time': 0.024237903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.024321847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:04.193" endtime="20201115 22:02:04.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.209" level="INFO">${OVERHEAD} = {'time': [0.024237903, 0.024321847, 0.024406667, 0.024491778, 0.024571236, 0.024653403, 0.024736764, 0.024817556, 0.024900806, 0.024984208, 0.025070458, 0.025151139, 0.025236778, 0.025323181, 0.025402...</msg>
<status status="PASS" starttime="20201115 22:02:04.197" endtime="20201115 22:02:04.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.213" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:04.212" endtime="20201115 22:02:04.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.216" level="INFO">VALUE: [5.417000000000616e-06, 5.194000000000032e-06, 5.235999999998742e-06, 5.180999999999936e-06, 5.235999999998742e-06, 5.250000000001781e-06, 5.236000000002211e-06, 5.237000000001685e-06, 5.264000000001351e-06, 5.305000000000587e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.236000000002211e-06, 5.306000000000061e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.277999999997451e-06, 5.250000000001781e-06, 5.221999999999172e-06, 5.236000000002211e-06, 5.235999999998742e-06, 5.306000000000061e-06, 5.236000000002211e-06, 5.250000000001781e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.250000000001781e-06, 5.2499999999983116e-06, 5.278000000000921e-06, 5.264000000001351e-06, 5.250000000001781e-06, 5.2499999999983116e-06, 5.207999999999602e-06, 5.237000000001685e-06, 5.250000000001781e-06, 5.250000000001781e-06, 5.222000000002641e-06, 5.264000000001351e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.236000000002211e-06, 5.250000000001781e-06, 5.236999999998215e-06, 5.250000000001781e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.250000000001781e-06, 5.2499999999983116e-06, 5.250000000001781e-06]</msg>
<status status="PASS" starttime="20201115 22:02:04.214" endtime="20201115 22:02:04.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.210" endtime="20201115 22:02:04.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.219" endtime="20201115 22:02:04.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.223" endtime="20201115 22:02:04.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.221" endtime="20201115 22:02:04.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.218" endtime="20201115 22:02:04.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.856" endtime="20201115 22:02:04.244"></status>
</kw>
<msg timestamp="20201115 22:02:04.244" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.253" endtime="20201115 22:02:04.267"></status>
</kw>
<msg timestamp="20201115 22:02:04.268" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.251" endtime="20201115 22:02:04.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.270" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.269" endtime="20201115 22:02:04.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.271" endtime="20201115 22:02:04.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.249" endtime="20201115 22:02:04.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.246" endtime="20201115 22:02:04.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.280" endtime="20201115 22:02:04.568"></status>
</kw>
<msg timestamp="20201115 22:02:04.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.279" endtime="20201115 22:02:04.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.572" endtime="20201115 22:02:04.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.581" endtime="20201115 22:02:04.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.276" endtime="20201115 22:02:04.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.274" endtime="20201115 22:02:04.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.588" level="INFO">${RESULT} = [{'time': 0.022335778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.022423194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:04.584" endtime="20201115 22:02:04.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.601" level="INFO">${OVERHEAD} = {'time': [0.022335778, 0.022423194, 0.022504528, 0.022585486, 0.022671139, 0.022756097, 0.022836903, 0.022924292, 0.023011528, 0.023091139, 0.023171931, 0.023258528, 0.023341333, 0.023422542, 0.023506...</msg>
<status status="PASS" starttime="20201115 22:02:04.589" endtime="20201115 22:02:04.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.606" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:04.605" endtime="20201115 22:02:04.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.609" level="INFO">VALUE: [5.431000000000186e-06, 5.152000000001322e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.1949999999995056e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.221999999999172e-06, 5.235999999998742e-06, 5.236999999998215e-06, 5.180999999999936e-06, 5.207999999999602e-06, 5.223000000002115e-06, 5.207999999999602e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.223000000002115e-06, 5.194000000000032e-06, 5.2499999999983116e-06, 5.221999999999172e-06, 5.236000000002211e-06, 5.2499999999983116e-06, 5.236000000002211e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.236000000002211e-06, 5.194000000000032e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.236000000002211e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.305000000000587e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.2639999999978815e-06, 5.236000000002211e-06, 5.2499999999983116e-06, 5.222999999998645e-06, 5.237000000001685e-06, 5.2499999999983116e-06, 5.262999999998408e-06, 5.264000000001351e-06, 5.2499999999983116e-06, 5.235999999998742e-06]</msg>
<status status="PASS" starttime="20201115 22:02:04.607" endtime="20201115 22:02:04.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.602" endtime="20201115 22:02:04.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.612" endtime="20201115 22:02:04.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.615" endtime="20201115 22:02:04.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.614" endtime="20201115 22:02:04.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.610" endtime="20201115 22:02:04.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.244" endtime="20201115 22:02:04.636"></status>
</kw>
<msg timestamp="20201115 22:02:04.636" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.645" endtime="20201115 22:02:04.659"></status>
</kw>
<msg timestamp="20201115 22:02:04.660" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.643" endtime="20201115 22:02:04.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.662" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.661" endtime="20201115 22:02:04.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.663" endtime="20201115 22:02:04.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.641" endtime="20201115 22:02:04.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.639" endtime="20201115 22:02:04.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.672" endtime="20201115 22:02:04.959"></status>
</kw>
<msg timestamp="20201115 22:02:04.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022041306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02204675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:04.670" endtime="20201115 22:02:04.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022041306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02204675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:04.963" endtime="20201115 22:02:04.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.971" endtime="20201115 22:02:04.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.668" endtime="20201115 22:02:04.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.666" endtime="20201115 22:02:04.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.978" level="INFO">${RESULT} = [{'time': 0.02204675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.022132306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:04.974" endtime="20201115 22:02:04.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.991" level="INFO">${OVERHEAD} = {'time': [0.02204675, 0.022132306, 0.022211889, 0.022295653, 0.0223785, 0.022462514, 0.022547222, 0.022626278, 0.022706, 0.022792597, 0.022874736, 0.022955014, 0.023040389, 0.023127806, 0.023211139, 0...</msg>
<status status="PASS" starttime="20201115 22:02:04.979" endtime="20201115 22:02:04.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.996" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:04.995" endtime="20201115 22:02:04.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.998" level="INFO">VALUE: [5.444000000000282e-06, 5.237000000001685e-06, 5.221999999999172e-06, 5.152999999997326e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.2639999999978815e-06, 5.2499999999983116e-06, 5.221999999999172e-06, 5.250000000001781e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.250000000001781e-06, 5.264000000001351e-06, 5.221999999999172e-06, 5.207999999999602e-06, 5.250000000001781e-06, 5.2499999999983116e-06, 5.180999999999936e-06, 5.222000000002641e-06, 5.264000000001351e-06, 5.250000000001781e-06, 5.221999999999172e-06, 5.250000000001781e-06, 5.207999999999602e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.1949999999995056e-06, 5.223000000002115e-06, 5.221999999999172e-06, 5.235999999998742e-06, 5.250000000001781e-06, 5.276999999997978e-06, 5.250000000001781e-06, 5.222000000002641e-06, 5.237000000001685e-06, 5.209000000002545e-06, 5.264000000001351e-06, 5.250000000001781e-06, 5.250000000001781e-06, 5.236000000002211e-06, 5.250000000001781e-06, 5.2089999999990755e-06, 5.2639999999978815e-06, 5.235999999998742e-06, 5.236000000002211e-06]</msg>
<status status="PASS" starttime="20201115 22:02:04.997" endtime="20201115 22:02:04.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.992" endtime="20201115 22:02:04.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.001" endtime="20201115 22:02:05.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.005" endtime="20201115 22:02:05.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.003" endtime="20201115 22:02:05.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.000" endtime="20201115 22:02:05.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.636" endtime="20201115 22:02:05.025"></status>
</kw>
<msg timestamp="20201115 22:02:05.025" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.034" endtime="20201115 22:02:05.049"></status>
</kw>
<msg timestamp="20201115 22:02:05.049" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.033" endtime="20201115 22:02:05.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.052" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.050" endtime="20201115 22:02:05.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.053" endtime="20201115 22:02:05.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.030" endtime="20201115 22:02:05.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.028" endtime="20201115 22:02:05.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.062" endtime="20201115 22:02:05.348"></status>
</kw>
<msg timestamp="20201115 22:02:05.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021887903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.060" endtime="20201115 22:02:05.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021887903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.352" endtime="20201115 22:02:05.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.361" endtime="20201115 22:02:05.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.058" endtime="20201115 22:02:05.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.056" endtime="20201115 22:02:05.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:05.367" level="INFO">${RESULT} = [{'time': 0.021893319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.021975097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:05.364" endtime="20201115 22:02:05.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:05.381" level="INFO">${OVERHEAD} = {'time': [0.021893319, 0.021975097, 0.022060875, 0.022145181, 0.022231347, 0.022314722, 0.022393639, 0.022473111, 0.022556361, 0.022636069, 0.022722653, 0.022801847, 0.022884417, 0.022971653, 0.023054...</msg>
<status status="PASS" starttime="20201115 22:02:05.368" endtime="20201115 22:02:05.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.385" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:05.384" endtime="20201115 22:02:05.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.387" level="INFO">VALUE: [5.416000000001142e-06, 5.194000000000032e-06, 5.250000000001781e-06, 5.2499999999983116e-06, 5.165999999997423e-06, 5.2499999999983116e-06, 5.180999999999936e-06, 5.250000000001781e-06, 5.250000000001781e-06, 5.236000000002211e-06, 5.2499999999983116e-06, 5.180000000000462e-06, 5.264000000001351e-06, 5.236000000002211e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.263000000001877e-06, 5.2089999999990755e-06, 5.250000000001781e-06, 5.167000000000366e-06, 5.264000000001351e-06, 5.277000000001447e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.222000000002641e-06, 5.237000000001685e-06, 5.2639999999978815e-06, 5.250000000001781e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.250000000001781e-06, 5.264000000001351e-06, 5.221999999999172e-06, 5.250000000001781e-06, 5.250000000001781e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.221999999999172e-06, 5.250000000001781e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.153000000000796e-06, 5.235999999998742e-06, 5.278000000000921e-06, 5.221999999999172e-06, 5.2499999999983116e-06, 5.180000000000462e-06]</msg>
<status status="PASS" starttime="20201115 22:02:05.386" endtime="20201115 22:02:05.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.381" endtime="20201115 22:02:05.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.391" endtime="20201115 22:02:05.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.394" endtime="20201115 22:02:05.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.392" endtime="20201115 22:02:05.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.389" endtime="20201115 22:02:05.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.026" endtime="20201115 22:02:05.415"></status>
</kw>
<msg timestamp="20201115 22:02:05.415" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.424" endtime="20201115 22:02:05.438"></status>
</kw>
<msg timestamp="20201115 22:02:05.439" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.422" endtime="20201115 22:02:05.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.441" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.440" endtime="20201115 22:02:05.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.442" endtime="20201115 22:02:05.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.420" endtime="20201115 22:02:05.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.417" endtime="20201115 22:02:05.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.451" endtime="20201115 22:02:05.740"></status>
</kw>
<msg timestamp="20201115 22:02:05.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02206675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:05.450" endtime="20201115 22:02:05.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02206675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:05.744" endtime="20201115 22:02:05.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.752" endtime="20201115 22:02:05.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.447" endtime="20201115 22:02:05.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.445" endtime="20201115 22:02:05.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:05.759" level="INFO">${RESULT} = [{'time': 0.022072167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.022153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:02:05.756" endtime="20201115 22:02:05.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:05.772" level="INFO">${OVERHEAD} = {'time': [0.022072167, 0.022153, 0.022239903, 0.022320806, 0.022406889, 0.022487264, 0.022573583, 0.022659222, 0.022738153, 0.022818028, 0.022903542, 0.022982472, 0.023063139, 0.023145431, 0.023229069...</msg>
<status status="PASS" starttime="20201115 22:02:05.760" endtime="20201115 22:02:05.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.776" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:05.775" endtime="20201115 22:02:05.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.779" level="INFO">VALUE: [5.417000000000616e-06, 5.235999999998742e-06, 5.277999999997451e-06, 5.2499999999983116e-06, 5.278000000000921e-06, 5.2499999999983116e-06, 5.250000000001781e-06, 5.235999999998742e-06, 5.221999999999172e-06, 5.250000000001781e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.237000000001685e-06, 5.250000000001781e-06, 5.236000000002211e-06, 5.305000000000587e-06, 5.250000000001781e-06, 5.250000000001781e-06, 5.250000000001781e-06, 5.250000000001781e-06, 5.2499999999983116e-06, 5.236000000002211e-06, 5.2639999999978815e-06, 5.236000000002211e-06, 5.264000000001351e-06, 5.237000000001685e-06, 5.207999999999602e-06, 5.236000000002211e-06, 5.222000000002641e-06, 5.222999999998645e-06, 5.236000000002211e-06, 5.236000000002211e-06, 5.290999999997548e-06, 5.153000000000796e-06, 5.236000000002211e-06, 5.235999999998742e-06, 5.2639999999978815e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.235999999998742e-06, 5.264000000001351e-06, 5.2089999999990755e-06, 5.235999999998742e-06, 5.235999999998742e-06, 5.2499999999983116e-06, 5.306000000000061e-06, 5.250000000001781e-06, 5.236000000002211e-06, 5.236000000002211e-06]</msg>
<status status="PASS" starttime="20201115 22:02:05.778" endtime="20201115 22:02:05.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.773" endtime="20201115 22:02:05.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.782" endtime="20201115 22:02:05.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.785" endtime="20201115 22:02:05.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.784" endtime="20201115 22:02:05.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.780" endtime="20201115 22:02:05.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.415" endtime="20201115 22:02:05.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.854" endtime="20201115 22:02:05.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.853" endtime="20201115 22:02:05.807"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.809" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.818" endtime="20201115 22:02:05.832"></status>
</kw>
<msg timestamp="20201115 22:02:05.833" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.816" endtime="20201115 22:02:05.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.835" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.834" endtime="20201115 22:02:05.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.836" endtime="20201115 22:02:05.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.814" endtime="20201115 22:02:05.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.812" endtime="20201115 22:02:05.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.846" endtime="20201115 22:02:06.133"></status>
</kw>
<msg timestamp="20201115 22:02:06.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024543458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024549167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.844" endtime="20201115 22:02:06.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024543458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024549167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.138" endtime="20201115 22:02:06.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.146" endtime="20201115 22:02:06.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.842" endtime="20201115 22:02:06.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.840" endtime="20201115 22:02:06.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.153" level="INFO">${RESULT} = [{'time': 0.024549167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.02463475, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:06.149" endtime="20201115 22:02:06.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.166" level="INFO">${OVERHEAD} = {'time': [0.024549167, 0.02463475, 0.024722847, 0.024811611, 0.024903875, 0.024989028, 0.025077097, 0.025164917, 0.025257861, 0.02534425, 0.025435361, 0.025526944, 0.025615181, 0.025707028, 0.02579997...</msg>
<status status="PASS" starttime="20201115 22:02:06.154" endtime="20201115 22:02:06.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.170" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:06.169" endtime="20201115 22:02:06.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.173" level="INFO">VALUE: [5.7089999999995755e-06, 5.528000000001171e-06, 5.527999999997701e-06, 5.500000000002031e-06, 5.527999999997701e-06, 5.499999999998562e-06, 5.528000000001171e-06, 5.499999999998562e-06, 5.542000000000741e-06, 5.569000000000407e-06, 5.499999999998562e-06, 5.512999999998658e-06, 5.514000000001601e-06, 5.528000000001171e-06, 5.528000000001171e-06, 5.471999999999422e-06, 5.527000000001697e-06, 5.444000000000282e-06, 5.514000000001601e-06, 5.457999999999852e-06, 5.5139999999981315e-06, 5.610999999999117e-06, 5.457999999999852e-06, 5.486000000002461e-06, 5.512999999998658e-06, 5.5139999999981315e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.5139999999981315e-06, 5.512999999998658e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.5139999999981315e-06, 5.499999999998562e-06, 5.5139999999981315e-06, 5.527000000001697e-06, 5.499999999998562e-06, 5.527000000001697e-06, 5.540999999997798e-06, 5.485999999998992e-06, 5.527999999997701e-06, 5.514000000001601e-06, 5.540999999997798e-06, 5.500000000002031e-06, 5.528000000001171e-06, 5.486000000002461e-06, 5.499999999998562e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.514000000001601e-06]</msg>
<status status="PASS" starttime="20201115 22:02:06.171" endtime="20201115 22:02:06.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.167" endtime="20201115 22:02:06.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.176" endtime="20201115 22:02:06.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.179" endtime="20201115 22:02:06.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.178" endtime="20201115 22:02:06.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.174" endtime="20201115 22:02:06.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.810" endtime="20201115 22:02:06.200"></status>
</kw>
<msg timestamp="20201115 22:02:06.200" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.209" endtime="20201115 22:02:06.223"></status>
</kw>
<msg timestamp="20201115 22:02:06.224" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.207" endtime="20201115 22:02:06.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.226" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.225" endtime="20201115 22:02:06.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.227" endtime="20201115 22:02:06.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.204" endtime="20201115 22:02:06.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.202" endtime="20201115 22:02:06.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.236" endtime="20201115 22:02:06.522"></status>
</kw>
<msg timestamp="20201115 22:02:06.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021870347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.235" endtime="20201115 22:02:06.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021870347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.526" endtime="20201115 22:02:06.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.534" endtime="20201115 22:02:06.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.232" endtime="20201115 22:02:06.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.231" endtime="20201115 22:02:06.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.541" level="INFO">${RESULT} = [{'time': 0.021876069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.722000000003141e-06, 'source_diff': 5.722000000003141e-06}, {'time': 0.021961917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:06.537" endtime="20201115 22:02:06.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.554" level="INFO">${OVERHEAD} = {'time': [0.021876069, 0.021961917, 0.022052556, 0.022144125, 0.022234222, 0.022324931, 0.022417403, 0.022505208, 0.022595861, 0.022682056, 0.022769083, 0.022853597, 0.022945125, 0.023037292, 0.023124...</msg>
<status status="PASS" starttime="20201115 22:02:06.542" endtime="20201115 22:02:06.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.558" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:06.557" endtime="20201115 22:02:06.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.561" level="INFO">VALUE: [5.722000000003141e-06, 5.528000000001171e-06, 5.514000000001601e-06, 5.514000000001601e-06, 5.514000000001601e-06, 5.5839999999994505e-06, 5.5139999999981315e-06, 5.526999999998228e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.540999999997798e-06, 5.555000000000837e-06, 5.514000000001601e-06, 5.569999999999881e-06, 5.514000000001601e-06, 5.514000000001601e-06, 5.5139999999981315e-06, 5.569999999999881e-06, 5.555999999996841e-06, 5.526999999998228e-06, 5.514000000001601e-06, 5.528000000001171e-06, 5.5139999999981315e-06, 5.542000000000741e-06, 5.540999999997798e-06, 5.528000000001171e-06, 5.542000000000741e-06, 5.528000000001171e-06, 5.61200000000206e-06, 5.514000000001601e-06, 5.514000000001601e-06, 5.5139999999981315e-06, 5.542000000000741e-06, 5.514000000001601e-06, 5.514000000001601e-06, 5.528000000001171e-06, 5.527999999997701e-06, 5.514000000001601e-06, 5.499999999998562e-06, 5.528000000001171e-06, 5.5139999999981315e-06, 5.514000000001601e-06, 5.471999999999422e-06, 5.542000000000741e-06, 5.541000000001267e-06, 5.485999999998992e-06, 5.514000000001601e-06, 5.596999999999547e-06, 5.541000000001267e-06, 5.528000000001171e-06]</msg>
<status status="PASS" starttime="20201115 22:02:06.559" endtime="20201115 22:02:06.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.555" endtime="20201115 22:02:06.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.564" endtime="20201115 22:02:06.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.567" endtime="20201115 22:02:06.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.566" endtime="20201115 22:02:06.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.562" endtime="20201115 22:02:06.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.200" endtime="20201115 22:02:06.588"></status>
</kw>
<msg timestamp="20201115 22:02:06.588" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.597" endtime="20201115 22:02:06.612"></status>
</kw>
<msg timestamp="20201115 22:02:06.613" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.595" endtime="20201115 22:02:06.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.615" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.614" endtime="20201115 22:02:06.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.616" endtime="20201115 22:02:06.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.593" endtime="20201115 22:02:06.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.591" endtime="20201115 22:02:06.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.626" endtime="20201115 22:02:06.912"></status>
</kw>
<msg timestamp="20201115 22:02:06.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022965931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022971667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.624" endtime="20201115 22:02:06.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022965931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022971667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.916" endtime="20201115 22:02:06.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.924" endtime="20201115 22:02:06.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.622" endtime="20201115 22:02:06.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.620" endtime="20201115 22:02:06.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.931" level="INFO">${RESULT} = [{'time': 0.022971667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.736000000002711e-06, 'source_diff': 5.736000000002711e-06}, {'time': 0.023056819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:06.927" endtime="20201115 22:02:06.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.944" level="INFO">${OVERHEAD} = {'time': [0.022971667, 0.023056819, 0.023143153, 0.023235986, 0.023321069, 0.023409708, 0.023499694, 0.023590458, 0.023678042, 0.023768528, 0.023858917, 0.023951569, 0.024038069, 0.024122931, 0.024213...</msg>
<status status="PASS" starttime="20201115 22:02:06.932" endtime="20201115 22:02:06.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.948" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:06.947" endtime="20201115 22:02:06.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.951" level="INFO">VALUE: [5.736000000002711e-06, 5.526999999998228e-06, 5.485999999998992e-06, 5.542000000000741e-06, 5.512999999998658e-06, 5.527000000001697e-06, 5.500000000002031e-06, 5.527000000001697e-06, 5.485999999998992e-06, 5.500000000002031e-06, 5.528000000001171e-06, 5.526999999998228e-06, 5.540999999997798e-06, 5.514000000001601e-06, 5.499999999998562e-06, 5.527999999997701e-06, 5.499999999998562e-06, 5.527999999997701e-06, 5.486000000002461e-06, 5.582999999999977e-06, 5.528000000001171e-06, 5.528000000001171e-06, 5.527999999997701e-06, 5.569999999999881e-06, 5.5139999999981315e-06, 5.5139999999981315e-06, 5.528000000001171e-06, 5.5839999999994505e-06, 5.514000000001601e-06, 5.527999999997701e-06, 5.541000000001267e-06, 5.528000000001171e-06, 5.528000000001171e-06, 5.487000000001935e-06, 5.514000000001601e-06, 5.5139999999981315e-06, 5.556000000000311e-06, 5.514000000001601e-06, 5.499999999998562e-06, 5.528000000001171e-06, 5.542000000000741e-06, 5.542000000000741e-06, 5.528000000001171e-06, 5.57000000000335e-06, 5.569000000000407e-06, 5.528000000001171e-06, 5.5139999999981315e-06, 5.528000000001171e-06, 5.500000000002031e-06, 5.569999999999881e-06]</msg>
<status status="PASS" starttime="20201115 22:02:06.949" endtime="20201115 22:02:06.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.945" endtime="20201115 22:02:06.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.954" endtime="20201115 22:02:06.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.957" endtime="20201115 22:02:06.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.956" endtime="20201115 22:02:06.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.952" endtime="20201115 22:02:06.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.589" endtime="20201115 22:02:06.978"></status>
</kw>
<msg timestamp="20201115 22:02:06.978" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.987" endtime="20201115 22:02:07.002"></status>
</kw>
<msg timestamp="20201115 22:02:07.002" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.986" endtime="20201115 22:02:07.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.004" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.003" endtime="20201115 22:02:07.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.006" endtime="20201115 22:02:07.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.983" endtime="20201115 22:02:07.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.981" endtime="20201115 22:02:07.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.014" endtime="20201115 22:02:07.301"></status>
</kw>
<msg timestamp="20201115 22:02:07.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.013" endtime="20201115 22:02:07.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.305" endtime="20201115 22:02:07.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.313" endtime="20201115 22:02:07.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.010" endtime="20201115 22:02:07.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.009" endtime="20201115 22:02:07.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:07.320" level="INFO">${RESULT} = [{'time': 0.022379139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.022465236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:07.316" endtime="20201115 22:02:07.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:07.333" level="INFO">${OVERHEAD} = {'time': [0.022379139, 0.022465236, 0.022555486, 0.022647083, 0.022735306, 0.022821653, 0.022906528, 0.022992847, 0.023082694, 0.023171472, 0.023257542, 0.023350389, 0.02343775, 0.023529319, 0.0236166...</msg>
<status status="PASS" starttime="20201115 22:02:07.321" endtime="20201115 22:02:07.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.337" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:07.336" endtime="20201115 22:02:07.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.340" level="INFO">VALUE: [5.721999999999672e-06, 5.5139999999981315e-06, 5.5139999999981315e-06, 5.540999999997798e-06, 5.499999999998562e-06, 5.514000000001601e-06, 5.541999999997271e-06, 5.514000000001601e-06, 5.500000000002031e-06, 5.540999999997798e-06, 5.499999999998562e-06, 5.569999999999881e-06, 5.471999999999422e-06, 5.512999999998658e-06, 5.5139999999981315e-06, 5.569000000000407e-06, 5.527999999997701e-06, 5.542000000000741e-06, 5.528000000001171e-06, 5.500000000002031e-06, 5.486000000002461e-06, 5.542000000000741e-06, 5.527999999997701e-06, 5.514000000001601e-06, 5.528000000001171e-06, 5.528000000001171e-06, 5.526999999998228e-06, 5.5839999999994505e-06, 5.569999999999881e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.527999999997701e-06, 5.541999999997271e-06, 5.512999999998658e-06, 5.540999999997798e-06, 5.528000000001171e-06, 5.5139999999981315e-06, 5.514000000001601e-06, 5.527000000001697e-06, 5.5139999999981315e-06, 5.485999999998992e-06, 5.500000000002031e-06, 5.58400000000292e-06, 5.499999999998562e-06, 5.514000000001601e-06, 5.514000000001601e-06, 5.500000000002031e-06, 5.486000000002461e-06, 5.471999999999422e-06]</msg>
<status status="PASS" starttime="20201115 22:02:07.338" endtime="20201115 22:02:07.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.334" endtime="20201115 22:02:07.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.343" endtime="20201115 22:02:07.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:07.347" endtime="20201115 22:02:07.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.345" endtime="20201115 22:02:07.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.341" endtime="20201115 22:02:07.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.979" endtime="20201115 22:02:07.367"></status>
</kw>
<msg timestamp="20201115 22:02:07.368" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.376" endtime="20201115 22:02:07.391"></status>
</kw>
<msg timestamp="20201115 22:02:07.392" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.375" endtime="20201115 22:02:07.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.394" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.393" endtime="20201115 22:02:07.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.395" endtime="20201115 22:02:07.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.372" endtime="20201115 22:02:07.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.370" endtime="20201115 22:02:07.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.404" endtime="20201115 22:02:07.692"></status>
</kw>
<msg timestamp="20201115 22:02:07.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.402" endtime="20201115 22:02:07.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.696" endtime="20201115 22:02:07.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.704" endtime="20201115 22:02:07.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.400" endtime="20201115 22:02:07.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.398" endtime="20201115 22:02:07.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:07.711" level="INFO">${RESULT} = [{'time': 0.021944806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.022034, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:02:07.708" endtime="20201115 22:02:07.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:07.724" level="INFO">${OVERHEAD} = {'time': [0.021944806, 0.022034, 0.022119264, 0.022207111, 0.022297764, 0.022384875, 0.022474306, 0.022566569, 0.022653583, 0.022739, 0.022825486, 0.022911361, 0.022998458, 0.023086153, 0.023174778, 0...</msg>
<status status="PASS" starttime="20201115 22:02:07.712" endtime="20201115 22:02:07.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.728" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:07.727" endtime="20201115 22:02:07.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.731" level="INFO">VALUE: [5.695000000000006e-06, 5.514000000001601e-06, 5.499999999998562e-06, 5.528000000001171e-06, 5.542000000000741e-06, 5.5139999999981315e-06, 5.499999999998562e-06, 5.444000000000282e-06, 5.514000000001601e-06, 5.5139999999981315e-06, 5.471999999999422e-06, 5.582999999999977e-06, 5.540999999997798e-06, 5.542000000000741e-06, 5.4589999999993255e-06, 5.542000000000741e-06, 5.527999999997701e-06, 5.5139999999981315e-06, 5.5139999999981315e-06, 5.514000000001601e-06, 5.542000000000741e-06, 5.514000000001601e-06, 5.526999999998228e-06, 5.500000000002031e-06, 5.527999999997701e-06, 5.556000000000311e-06, 5.5139999999981315e-06, 5.528000000001171e-06, 5.5139999999981315e-06, 5.514000000001601e-06, 5.542000000000741e-06, 5.5139999999981315e-06, 5.528000000001171e-06, 5.528000000001171e-06, 5.542000000000741e-06, 5.528000000001171e-06, 5.5139999999981315e-06, 5.542000000000741e-06, 5.514000000001601e-06, 5.542000000000741e-06, 5.5139999999981315e-06, 5.527999999997701e-06, 5.5139999999981315e-06, 5.569000000000407e-06, 5.5139999999981315e-06, 5.472999999998895e-06, 5.499999999998562e-06, 5.444999999999756e-06, 5.556000000000311e-06, 5.514000000001601e-06]</msg>
<status status="PASS" starttime="20201115 22:02:07.729" endtime="20201115 22:02:07.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.725" endtime="20201115 22:02:07.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.734" endtime="20201115 22:02:07.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:07.738" endtime="20201115 22:02:07.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.736" endtime="20201115 22:02:07.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.733" endtime="20201115 22:02:07.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.368" endtime="20201115 22:02:07.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.808" endtime="20201115 22:02:07.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.807" endtime="20201115 22:02:07.759"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.761" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.770" endtime="20201115 22:02:07.785"></status>
</kw>
<msg timestamp="20201115 22:02:07.785" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.768" endtime="20201115 22:02:07.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.788" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.786" endtime="20201115 22:02:07.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.789" endtime="20201115 22:02:07.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.765" endtime="20201115 22:02:07.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.763" endtime="20201115 22:02:07.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.798" endtime="20201115 22:02:08.084"></status>
</kw>
<msg timestamp="20201115 22:02:08.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024328125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024334125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.796" endtime="20201115 22:02:08.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024328125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024334125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.088" endtime="20201115 22:02:08.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.096" endtime="20201115 22:02:08.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.794" endtime="20201115 22:02:08.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.792" endtime="20201115 22:02:08.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:08.103" level="INFO">${RESULT} = [{'time': 0.024334125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.000000000002531e-06, 'source_diff': 6.000000000002531e-06}, {'time': 0.024426194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:08.100" endtime="20201115 22:02:08.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:08.116" level="INFO">${OVERHEAD} = {'time': [0.024334125, 0.024426194, 0.024524556, 0.024618083, 0.024710125, 0.024806208, 0.024904819, 0.024997958, 0.025091736, 0.025185389, 0.025279847, 0.025372028, 0.025467569, 0.025562306, 0.025655...</msg>
<status status="PASS" starttime="20201115 22:02:08.104" endtime="20201115 22:02:08.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.121" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:08.120" endtime="20201115 22:02:08.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.123" level="INFO">VALUE: [6.000000000002531e-06, 5.8189999999971875e-06, 5.820000000000131e-06, 5.804999999997618e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.791000000001517e-06, 5.833000000000227e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.805000000001087e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.792000000000991e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.805999999997091e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.819000000000657e-06, 5.805000000001087e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.804999999997618e-06, 5.820000000000131e-06, 5.8339999999997005e-06, 5.805000000001087e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.750000000002281e-06, 5.8339999999997005e-06, 5.8339999999997005e-06, 5.8339999999997005e-06, 5.806000000000561e-06, 5.8329999999967574e-06, 5.846999999999797e-06, 5.8339999999997005e-06, 5.8339999999997005e-06, 5.820000000000131e-06, 5.820000000000131e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.806000000000561e-06, 5.7779999999979514e-06, 5.804999999997618e-06]</msg>
<status status="PASS" starttime="20201115 22:02:08.122" endtime="20201115 22:02:08.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.117" endtime="20201115 22:02:08.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.127" endtime="20201115 22:02:08.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:08.130" endtime="20201115 22:02:08.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.128" endtime="20201115 22:02:08.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.125" endtime="20201115 22:02:08.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.761" endtime="20201115 22:02:08.151"></status>
</kw>
<msg timestamp="20201115 22:02:08.151" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.160" endtime="20201115 22:02:08.174"></status>
</kw>
<msg timestamp="20201115 22:02:08.175" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.158" endtime="20201115 22:02:08.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.177" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.176" endtime="20201115 22:02:08.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.178" endtime="20201115 22:02:08.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.155" endtime="20201115 22:02:08.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.153" endtime="20201115 22:02:08.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.187" endtime="20201115 22:02:08.474"></status>
</kw>
<msg timestamp="20201115 22:02:08.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021953917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021959917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.186" endtime="20201115 22:02:08.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021953917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021959917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.478" endtime="20201115 22:02:08.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.486" endtime="20201115 22:02:08.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.183" endtime="20201115 22:02:08.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.181" endtime="20201115 22:02:08.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:08.493" level="INFO">${RESULT} = [{'time': 0.021959917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.022058333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:08.490" endtime="20201115 22:02:08.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:08.506" level="INFO">${OVERHEAD} = {'time': [0.021959917, 0.022058333, 0.0221525, 0.022248153, 0.022344625, 0.022440014, 0.022537042, 0.022628819, 0.022724361, 0.022821111, 0.022911542, 0.023003986, 0.023096569, 0.023191708, 0.02328912...</msg>
<status status="PASS" starttime="20201115 22:02:08.494" endtime="20201115 22:02:08.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.518" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:08.517" endtime="20201115 22:02:08.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.520" level="INFO">VALUE: [5.999999999999062e-06, 5.874999999998937e-06, 5.833000000000227e-06, 5.806000000000561e-06, 5.792000000000991e-06, 5.806000000000561e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.804999999997618e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.819000000000657e-06, 5.8189999999971875e-06, 5.806000000000561e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.819999999996661e-06, 5.791999999997521e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.805999999997091e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.8329999999967574e-06, 5.805000000001087e-06, 5.806000000000561e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.792000000000991e-06, 5.8189999999971875e-06, 5.819000000000657e-06, 5.805000000001087e-06, 5.805000000001087e-06, 5.819000000000657e-06, 5.805000000001087e-06, 5.860999999999367e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.805999999997091e-06, 5.833000000000227e-06, 5.846999999999797e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.805000000001087e-06, 5.833000000000227e-06]</msg>
<status status="PASS" starttime="20201115 22:02:08.519" endtime="20201115 22:02:08.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.514" endtime="20201115 22:02:08.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.523" endtime="20201115 22:02:08.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:08.527" endtime="20201115 22:02:08.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.525" endtime="20201115 22:02:08.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.522" endtime="20201115 22:02:08.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.151" endtime="20201115 22:02:08.548"></status>
</kw>
<msg timestamp="20201115 22:02:08.548" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.557" endtime="20201115 22:02:08.571"></status>
</kw>
<msg timestamp="20201115 22:02:08.572" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.555" endtime="20201115 22:02:08.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.574" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.573" endtime="20201115 22:02:08.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.575" endtime="20201115 22:02:08.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.553" endtime="20201115 22:02:08.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.551" endtime="20201115 22:02:08.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.584" endtime="20201115 22:02:08.871"></status>
</kw>
<msg timestamp="20201115 22:02:08.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022629333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.583" endtime="20201115 22:02:08.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022629333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.875" endtime="20201115 22:02:08.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.883" endtime="20201115 22:02:08.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.580" endtime="20201115 22:02:08.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.579" endtime="20201115 22:02:08.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:08.890" level="INFO">${RESULT} = [{'time': 0.022629333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.986000000002961e-06, 'source_diff': 5.986000000002961e-06}, {'time': 0.022727194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:08.887" endtime="20201115 22:02:08.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:08.904" level="INFO">${OVERHEAD} = {'time': [0.022629333, 0.022727194, 0.022818028, 0.022910194, 0.023001847, 0.023096833, 0.023190917, 0.023283611, 0.023374042, 0.023467833, 0.023559083, 0.023650792, 0.023744556, 0.023841375, 0.023938...</msg>
<status status="PASS" starttime="20201115 22:02:08.891" endtime="20201115 22:02:08.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.908" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:08.907" endtime="20201115 22:02:08.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.911" level="INFO">VALUE: [5.986000000002961e-06, 5.846999999999797e-06, 5.778000000001421e-06, 5.790999999998048e-06, 5.833000000000227e-06, 5.805000000001087e-06, 5.8339999999997005e-06, 5.791999999997521e-06, 5.792000000000991e-06, 5.819000000000657e-06, 5.777000000001947e-06, 5.874999999998937e-06, 5.86199999999884e-06, 5.806000000000561e-06, 5.820000000000131e-06, 5.805000000001087e-06, 5.806000000000561e-06, 5.8189999999971875e-06, 5.792000000000991e-06, 5.820000000000131e-06, 5.776999999998478e-06, 5.805000000001087e-06, 5.8339999999997005e-06, 5.805000000001087e-06, 5.805000000001087e-06, 5.792000000000991e-06, 5.804999999997618e-06, 5.805000000001087e-06, 5.819000000000657e-06, 5.8889999999985065e-06, 5.833000000000227e-06, 5.764000000001851e-06, 5.805000000001087e-06, 5.805000000001087e-06, 5.8339999999997005e-06, 5.806000000000561e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.846999999999797e-06, 5.806000000000561e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.805000000001087e-06, 5.8339999999997005e-06, 5.804999999997618e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.819000000000657e-06, 5.8189999999971875e-06, 5.833000000000227e-06]</msg>
<status status="PASS" starttime="20201115 22:02:08.909" endtime="20201115 22:02:08.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.904" endtime="20201115 22:02:08.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.914" endtime="20201115 22:02:08.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:08.917" endtime="20201115 22:02:08.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.915" endtime="20201115 22:02:08.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.912" endtime="20201115 22:02:08.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.548" endtime="20201115 22:02:08.938"></status>
</kw>
<msg timestamp="20201115 22:02:08.938" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.947" endtime="20201115 22:02:08.962"></status>
</kw>
<msg timestamp="20201115 22:02:08.963" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.945" endtime="20201115 22:02:08.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.965" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.964" endtime="20201115 22:02:08.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.966" endtime="20201115 22:02:08.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.943" endtime="20201115 22:02:08.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.941" endtime="20201115 22:02:08.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.975" endtime="20201115 22:02:09.262"></status>
</kw>
<msg timestamp="20201115 22:02:09.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021993556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.974" endtime="20201115 22:02:09.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021993556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.266" endtime="20201115 22:02:09.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.275" endtime="20201115 22:02:09.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.971" endtime="20201115 22:02:09.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.970" endtime="20201115 22:02:09.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:09.282" level="INFO">${RESULT} = [{'time': 0.021993556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.022089778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:09.278" endtime="20201115 22:02:09.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:09.295" level="INFO">${OVERHEAD} = {'time': [0.021993556, 0.022089778, 0.02218425, 0.022277236, 0.022372514, 0.02247075, 0.022564139, 0.022657542, 0.022756028, 0.022848472, 0.022940792, 0.023038889, 0.023136569, 0.023230625, 0.02332187...</msg>
<status status="PASS" starttime="20201115 22:02:09.283" endtime="20201115 22:02:09.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.299" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:09.298" endtime="20201115 22:02:09.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.302" level="INFO">VALUE: [6.014000000002101e-06, 5.820000000000131e-06, 5.791999999997521e-06, 5.791999999997521e-06, 5.806000000000561e-06, 5.806000000000561e-06, 5.764000000001851e-06, 5.7779999999979514e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.820000000000131e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.819000000000657e-06, 5.8189999999971875e-06, 5.820000000000131e-06, 5.806000000000561e-06, 5.874999999998937e-06, 5.8889999999985065e-06, 5.846999999999797e-06, 5.806000000000561e-06, 5.820000000000131e-06, 5.8339999999997005e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.806000000000561e-06, 5.806000000000561e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.749999999998812e-06, 5.819000000000657e-06, 5.805000000001087e-06, 5.805000000001087e-06, 5.804999999997618e-06, 5.805000000001087e-06, 5.792000000000991e-06, 5.8339999999997005e-06, 5.820000000000131e-06, 5.820000000000131e-06, 5.819999999996661e-06, 5.805000000001087e-06, 5.806000000000561e-06, 5.750000000002281e-06, 5.805000000001087e-06, 5.819000000000657e-06, 5.8329999999967574e-06, 5.792000000000991e-06, 5.790999999998048e-06]</msg>
<status status="PASS" starttime="20201115 22:02:09.300" endtime="20201115 22:02:09.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.295" endtime="20201115 22:02:09.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.305" endtime="20201115 22:02:09.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:09.308" endtime="20201115 22:02:09.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.306" endtime="20201115 22:02:09.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.303" endtime="20201115 22:02:09.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.938" endtime="20201115 22:02:09.329"></status>
</kw>
<msg timestamp="20201115 22:02:09.329" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.338" endtime="20201115 22:02:09.352"></status>
</kw>
<msg timestamp="20201115 22:02:09.353" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.336" endtime="20201115 22:02:09.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.355" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.354" endtime="20201115 22:02:09.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.356" endtime="20201115 22:02:09.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.333" endtime="20201115 22:02:09.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.331" endtime="20201115 22:02:09.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.365" endtime="20201115 22:02:09.650"></status>
</kw>
<msg timestamp="20201115 22:02:09.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.364" endtime="20201115 22:02:09.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.655" endtime="20201115 22:02:09.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.664" endtime="20201115 22:02:09.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.361" endtime="20201115 22:02:09.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.359" endtime="20201115 22:02:09.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:09.671" level="INFO">${RESULT} = [{'time': 0.021904125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.021998736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:09.668" endtime="20201115 22:02:09.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:09.684" level="INFO">${OVERHEAD} = {'time': [0.021904125, 0.021998736, 0.022094958, 0.022187125, 0.022281847, 0.022372417, 0.022465014, 0.022559472, 0.022651528, 0.022747861, 0.022838944, 0.022930917, 0.023022375, 0.023121014, 0.023216...</msg>
<status status="PASS" starttime="20201115 22:02:09.672" endtime="20201115 22:02:09.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.689" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:09.687" endtime="20201115 22:02:09.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.691" level="INFO">VALUE: [5.999999999999062e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.805999999997091e-06, 5.791000000001517e-06, 5.805999999997091e-06, 5.805999999997091e-06, 5.833000000000227e-06, 5.8339999999997005e-06, 5.819000000000657e-06, 5.791000000001517e-06, 5.8339999999997005e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.833000000000227e-06, 5.833000000000227e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.805000000001087e-06, 5.792000000000991e-06, 5.819000000000657e-06, 5.805000000001087e-06, 5.819000000000657e-06, 5.874999999998937e-06, 5.792000000000991e-06, 5.819000000000657e-06, 5.806000000000561e-06, 5.846999999999797e-06, 5.833000000000227e-06, 5.819000000000657e-06, 5.805000000001087e-06, 5.820000000000131e-06, 5.8339999999997005e-06, 5.860999999999367e-06, 5.805000000001087e-06, 5.820000000000131e-06, 5.791000000001517e-06, 5.819000000000657e-06, 5.833000000000227e-06, 5.820000000000131e-06, 5.805000000001087e-06, 5.805999999997091e-06, 5.820000000000131e-06, 5.833000000000227e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.846999999999797e-06, 5.820000000000131e-06, 5.8889999999985065e-06, 5.874999999998937e-06]</msg>
<status status="PASS" starttime="20201115 22:02:09.690" endtime="20201115 22:02:09.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.685" endtime="20201115 22:02:09.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.694" endtime="20201115 22:02:09.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:09.697" endtime="20201115 22:02:09.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.696" endtime="20201115 22:02:09.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.692" endtime="20201115 22:02:09.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.329" endtime="20201115 22:02:09.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.760" endtime="20201115 22:02:09.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.759" endtime="20201115 22:02:09.719"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.721" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.729" endtime="20201115 22:02:09.744"></status>
</kw>
<msg timestamp="20201115 22:02:09.744" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.728" endtime="20201115 22:02:09.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.747" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.745" endtime="20201115 22:02:09.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.748" endtime="20201115 22:02:09.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.725" endtime="20201115 22:02:09.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.723" endtime="20201115 22:02:09.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.757" endtime="20201115 22:02:10.043"></status>
</kw>
<msg timestamp="20201115 22:02:10.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024303889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024310181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.756" endtime="20201115 22:02:10.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024303889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024310181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.047" endtime="20201115 22:02:10.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.055" endtime="20201115 22:02:10.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.753" endtime="20201115 22:02:10.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.751" endtime="20201115 22:02:10.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:10.062" level="INFO">${RESULT} = [{'time': 0.024310181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.024409542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:10.058" endtime="20201115 22:02:10.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:10.075" level="INFO">${OVERHEAD} = {'time': [0.024310181, 0.024409542, 0.024513181, 0.024616028, 0.024713097, 0.024809736, 0.024907208, 0.025010361, 0.025108458, 0.025211431, 0.025308625, 0.025411042, 0.0255135, 0.025616986, 0.02571955...</msg>
<status status="PASS" starttime="20201115 22:02:10.063" endtime="20201115 22:02:10.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.079" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:10.078" endtime="20201115 22:02:10.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.082" level="INFO">VALUE: [6.292000000001491e-06, 6.0839999999999506e-06, 6.069999999996911e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.124999999999187e-06, 6.083000000000477e-06, 6.0279999999982015e-06, 6.083000000000477e-06, 6.069999999996911e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.0979999999995205e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.09800000000299e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.181000000000936e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.153000000001796e-06, 6.110999999999617e-06, 6.070000000000381e-06, 6.110999999999617e-06, 6.069000000000907e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.042000000001241e-06, 6.110999999999617e-06, 6.11199999999909e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.11199999999909e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.179999999997993e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.0839999999999506e-06]</msg>
<status status="PASS" starttime="20201115 22:02:10.080" endtime="20201115 22:02:10.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.076" endtime="20201115 22:02:10.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.085" endtime="20201115 22:02:10.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:10.088" endtime="20201115 22:02:10.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.087" endtime="20201115 22:02:10.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.083" endtime="20201115 22:02:10.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.721" endtime="20201115 22:02:10.109"></status>
</kw>
<msg timestamp="20201115 22:02:10.109" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.118" endtime="20201115 22:02:10.133"></status>
</kw>
<msg timestamp="20201115 22:02:10.134" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.116" endtime="20201115 22:02:10.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.137" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.135" endtime="20201115 22:02:10.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.138" endtime="20201115 22:02:10.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.114" endtime="20201115 22:02:10.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.112" endtime="20201115 22:02:10.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.147" endtime="20201115 22:02:10.433"></status>
</kw>
<msg timestamp="20201115 22:02:10.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.145" endtime="20201115 22:02:10.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.437" endtime="20201115 22:02:10.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.446" endtime="20201115 22:02:10.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.143" endtime="20201115 22:02:10.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.141" endtime="20201115 22:02:10.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:10.452" level="INFO">${RESULT} = [{'time': 0.021963375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.02206675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:10.449" endtime="20201115 22:02:10.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:10.465" level="INFO">${OVERHEAD} = {'time': [0.021963375, 0.02206675, 0.022167986, 0.022270819, 0.022371903, 0.022473389, 0.022574889, 0.022677458, 0.022775986, 0.022873403, 0.022972431, 0.023070556, 0.023171778, 0.023274097, 0.0233725...</msg>
<status status="PASS" starttime="20201115 22:02:10.453" endtime="20201115 22:02:10.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.470" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:10.469" endtime="20201115 22:02:10.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.472" level="INFO">VALUE: [6.319000000001157e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.181000000000936e-06, 6.11200000000256e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.110999999999617e-06, 6.110999999999617e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.110999999999617e-06, 6.0979999999995205e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.069999999996911e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.111000000003086e-06, 6.1389999999987566e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.167000000001366e-06, 6.110999999999617e-06, 6.042000000001241e-06, 6.1529999999983265e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.153000000001796e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.165999999998423e-06, 6.110999999999617e-06]</msg>
<status status="PASS" starttime="20201115 22:02:10.471" endtime="20201115 22:02:10.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.466" endtime="20201115 22:02:10.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.475" endtime="20201115 22:02:10.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:10.479" endtime="20201115 22:02:10.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.477" endtime="20201115 22:02:10.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.474" endtime="20201115 22:02:10.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.110" endtime="20201115 22:02:10.499"></status>
</kw>
<msg timestamp="20201115 22:02:10.500" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.509" endtime="20201115 22:02:10.524"></status>
</kw>
<msg timestamp="20201115 22:02:10.525" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.507" endtime="20201115 22:02:10.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.527" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.526" endtime="20201115 22:02:10.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.528" endtime="20201115 22:02:10.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.504" endtime="20201115 22:02:10.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.502" endtime="20201115 22:02:10.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.537" endtime="20201115 22:02:10.825"></status>
</kw>
<msg timestamp="20201115 22:02:10.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022483681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.536" endtime="20201115 22:02:10.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022483681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.829" endtime="20201115 22:02:10.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.837" endtime="20201115 22:02:10.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.533" endtime="20201115 22:02:10.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.531" endtime="20201115 22:02:10.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:10.844" level="INFO">${RESULT} = [{'time': 0.022489958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.277000000002447e-06, 'source_diff': 6.277000000002447e-06}, {'time': 0.022589222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:10.841" endtime="20201115 22:02:10.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:10.857" level="INFO">${OVERHEAD} = {'time': [0.022489958, 0.022589222, 0.022688181, 0.022786167, 0.022887931, 0.022992111, 0.023091986, 0.023192819, 0.023296597, 0.023397014, 0.023495014, 0.023597319, 0.023698569, 0.023798972, 0.023901...</msg>
<status status="PASS" starttime="20201115 22:02:10.845" endtime="20201115 22:02:10.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.862" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:10.861" endtime="20201115 22:02:10.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.865" level="INFO">VALUE: [6.277000000002447e-06, 6.083000000000477e-06, 6.125000000002656e-06, 6.0279999999982015e-06, 6.0979999999995205e-06, 6.097000000000047e-06, 6.0829999999970075e-06, 6.026999999998728e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.040999999998298e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.11199999999909e-06, 6.0829999999970075e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.110999999999617e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.11199999999909e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.124999999999187e-06, 6.0979999999995205e-06, 6.042000000001241e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.055000000001337e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.09800000000299e-06, 6.041999999997771e-06, 6.1529999999983265e-06, 6.083000000000477e-06, 6.110999999999617e-06]</msg>
<status status="PASS" starttime="20201115 22:02:10.863" endtime="20201115 22:02:10.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.858" endtime="20201115 22:02:10.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.870" endtime="20201115 22:02:10.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:10.873" endtime="20201115 22:02:10.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.872" endtime="20201115 22:02:10.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.868" endtime="20201115 22:02:10.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.500" endtime="20201115 22:02:10.894"></status>
</kw>
<msg timestamp="20201115 22:02:10.894" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.903" endtime="20201115 22:02:10.918"></status>
</kw>
<msg timestamp="20201115 22:02:10.919" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.902" endtime="20201115 22:02:10.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.921" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.920" endtime="20201115 22:02:10.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.922" endtime="20201115 22:02:10.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.899" endtime="20201115 22:02:10.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.897" endtime="20201115 22:02:10.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.931" endtime="20201115 22:02:11.218"></status>
</kw>
<msg timestamp="20201115 22:02:11.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022453097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.930" endtime="20201115 22:02:11.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022453097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.222" endtime="20201115 22:02:11.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.230" endtime="20201115 22:02:11.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.927" endtime="20201115 22:02:11.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.925" endtime="20201115 22:02:11.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:11.237" level="INFO">${RESULT} = [{'time': 0.022453097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.022557972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:11.233" endtime="20201115 22:02:11.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:11.250" level="INFO">${OVERHEAD} = {'time': [0.022453097, 0.022557972, 0.02265575, 0.022758292, 0.022856611, 0.022953208, 0.023057778, 0.023159264, 0.023263194, 0.023359639, 0.023463375, 0.023565125, 0.023665167, 0.0237625, 0.023859569...</msg>
<status status="PASS" starttime="20201115 22:02:11.238" endtime="20201115 22:02:11.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.254" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:11.253" endtime="20201115 22:02:11.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.257" level="INFO">VALUE: [6.278000000001921e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.070000000000381e-06, 6.1529999999983265e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.110999999999617e-06, 6.153000000001796e-06, 6.111000000003086e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.111000000003086e-06, 6.139000000002226e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.0979999999995205e-06, 6.028000000001671e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.096999999996577e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.055999999997341e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.139000000002226e-06, 6.0979999999995205e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.09800000000299e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.097000000000047e-06]</msg>
<status status="PASS" starttime="20201115 22:02:11.255" endtime="20201115 22:02:11.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.251" endtime="20201115 22:02:11.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.260" endtime="20201115 22:02:11.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:11.264" endtime="20201115 22:02:11.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.262" endtime="20201115 22:02:11.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.258" endtime="20201115 22:02:11.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.895" endtime="20201115 22:02:11.284"></status>
</kw>
<msg timestamp="20201115 22:02:11.284" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.293" endtime="20201115 22:02:11.308"></status>
</kw>
<msg timestamp="20201115 22:02:11.309" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.292" endtime="20201115 22:02:11.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.311" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.310" endtime="20201115 22:02:11.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.312" endtime="20201115 22:02:11.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.289" endtime="20201115 22:02:11.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.287" endtime="20201115 22:02:11.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.321" endtime="20201115 22:02:11.606"></status>
</kw>
<msg timestamp="20201115 22:02:11.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022002125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.320" endtime="20201115 22:02:11.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022002125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.610" endtime="20201115 22:02:11.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.618" endtime="20201115 22:02:11.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.317" endtime="20201115 22:02:11.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.315" endtime="20201115 22:02:11.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:11.625" level="INFO">${RESULT} = [{'time': 0.022002125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.022100972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:11.621" endtime="20201115 22:02:11.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:11.638" level="INFO">${OVERHEAD} = {'time': [0.022002125, 0.022100972, 0.022201667, 0.022300208, 0.022400097, 0.022497167, 0.022600806, 0.022697583, 0.022800681, 0.022902056, 0.023002333, 0.023104097, 0.023201833, 0.023301042, 0.023403...</msg>
<status status="PASS" starttime="20201115 22:02:11.626" endtime="20201115 22:02:11.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.642" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:11.641" endtime="20201115 22:02:11.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.645" level="INFO">VALUE: [6.278000000001921e-06, 6.097000000000047e-06, 6.09800000000299e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.0979999999995205e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.0979999999995205e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.0979999999995205e-06, 6.11199999999909e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.028000000001671e-06, 6.0979999999995205e-06, 6.0829999999970075e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.110999999999617e-06, 6.028000000001671e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.083000000000477e-06, 6.09800000000299e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.11200000000256e-06, 6.166999999997896e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.083000000000477e-06]</msg>
<status status="PASS" starttime="20201115 22:02:11.643" endtime="20201115 22:02:11.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.639" endtime="20201115 22:02:11.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.648" endtime="20201115 22:02:11.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:11.652" endtime="20201115 22:02:11.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.650" endtime="20201115 22:02:11.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.647" endtime="20201115 22:02:11.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.285" endtime="20201115 22:02:11.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.720" endtime="20201115 22:02:11.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.719" endtime="20201115 22:02:11.673"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.675" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.684" endtime="20201115 22:02:11.699"></status>
</kw>
<msg timestamp="20201115 22:02:11.700" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.682" endtime="20201115 22:02:11.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.702" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.701" endtime="20201115 22:02:11.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.703" endtime="20201115 22:02:11.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.680" endtime="20201115 22:02:11.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.678" endtime="20201115 22:02:11.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.712" endtime="20201115 22:02:11.999"></status>
</kw>
<msg timestamp="20201115 22:02:12.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024532264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024538861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.711" endtime="20201115 22:02:12.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024532264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024538861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.003" endtime="20201115 22:02:12.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.011" endtime="20201115 22:02:12.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.708" endtime="20201115 22:02:12.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.706" endtime="20201115 22:02:12.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:12.018" level="INFO">${RESULT} = [{'time': 0.024538861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.5969999999970774e-06, 'source_diff': 6.5969999999970774e-06}, {'time': 0.024643958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:12.014" endtime="20201115 22:02:12.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:12.031" level="INFO">${OVERHEAD} = {'time': [0.024538861, 0.024643958, 0.024751611, 0.024861806, 0.024971986, 0.025078264, 0.025182694, 0.025288708, 0.025398917, 0.025509639, 0.025614528, 0.025719, 0.025826639, 0.025932667, 0.026041639...</msg>
<status status="PASS" starttime="20201115 22:02:12.019" endtime="20201115 22:02:12.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.035" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:12.034" endtime="20201115 22:02:12.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.038" level="INFO">VALUE: [6.5969999999970774e-06, 6.388999999999007e-06, 6.4029999999985765e-06, 6.417000000001616e-06, 6.403000000002046e-06, 6.374999999999437e-06, 6.401999999999103e-06, 6.374999999999437e-06, 6.417000000001616e-06, 6.403000000002046e-06, 6.459000000000326e-06, 6.360999999999867e-06, 6.360999999999867e-06, 6.388999999999007e-06, 6.360999999999867e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.389000000002476e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.389000000002476e-06, 6.443999999997813e-06, 6.444000000001282e-06, 6.389000000002476e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.416999999998146e-06, 6.388999999999007e-06, 6.403000000002046e-06, 6.401999999999103e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.389000000002476e-06, 6.4029999999985765e-06, 6.360999999999867e-06, 6.3479999999997705e-06, 6.430999999997716e-06, 6.387999999999533e-06, 6.388999999999007e-06, 6.375000000002906e-06, 6.388999999999007e-06, 6.416000000002142e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.402000000002572e-06]</msg>
<status status="PASS" starttime="20201115 22:02:12.036" endtime="20201115 22:02:12.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.032" endtime="20201115 22:02:12.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.041" endtime="20201115 22:02:12.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:12.045" endtime="20201115 22:02:12.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.043" endtime="20201115 22:02:12.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.040" endtime="20201115 22:02:12.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.676" endtime="20201115 22:02:12.065"></status>
</kw>
<msg timestamp="20201115 22:02:12.066" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.074" endtime="20201115 22:02:12.090"></status>
</kw>
<msg timestamp="20201115 22:02:12.091" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.073" endtime="20201115 22:02:12.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.093" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.092" endtime="20201115 22:02:12.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.094" endtime="20201115 22:02:12.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.070" endtime="20201115 22:02:12.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.068" endtime="20201115 22:02:12.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.103" endtime="20201115 22:02:12.389"></status>
</kw>
<msg timestamp="20201115 22:02:12.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022021639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.102" endtime="20201115 22:02:12.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022021639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.393" endtime="20201115 22:02:12.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.402" endtime="20201115 22:02:12.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.099" endtime="20201115 22:02:12.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.097" endtime="20201115 22:02:12.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:12.408" level="INFO">${RESULT} = [{'time': 0.022021639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.624999999999687e-06, 'source_diff': 6.624999999999687e-06}, {'time': 0.022128597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:12.405" endtime="20201115 22:02:12.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:12.421" level="INFO">${OVERHEAD} = {'time': [0.022021639, 0.022128597, 0.022233542, 0.0223385, 0.022442389, 0.022551083, 0.022660597, 0.0227685, 0.022878944, 0.022989667, 0.023099333, 0.023207222, 0.023316472, 0.023422375, 0.023533361,...</msg>
<status status="PASS" starttime="20201115 22:02:12.409" endtime="20201115 22:02:12.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.426" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:12.425" endtime="20201115 22:02:12.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.429" level="INFO">VALUE: [6.624999999999687e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.403000000002046e-06, 6.4029999999985765e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.333000000000727e-06, 6.387999999999533e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.360999999999867e-06, 6.389000000002476e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.415999999998673e-06, 6.387999999999533e-06, 6.458000000000852e-06, 6.388999999999007e-06, 6.401999999999103e-06, 6.429999999998243e-06, 6.374999999999437e-06, 6.375000000002906e-06, 6.4029999999985765e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.4029999999985765e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.375000000002906e-06, 6.4029999999985765e-06, 6.401999999999103e-06, 6.403000000002046e-06, 6.4029999999985765e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.375000000002906e-06, 6.4029999999985765e-06, 6.403000000002046e-06, 6.445000000000756e-06, 6.374999999999437e-06, 6.4029999999985765e-06, 6.360999999999867e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.389000000002476e-06]</msg>
<status status="PASS" starttime="20201115 22:02:12.427" endtime="20201115 22:02:12.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.423" endtime="20201115 22:02:12.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.432" endtime="20201115 22:02:12.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:12.435" endtime="20201115 22:02:12.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.434" endtime="20201115 22:02:12.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.430" endtime="20201115 22:02:12.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.066" endtime="20201115 22:02:12.456"></status>
</kw>
<msg timestamp="20201115 22:02:12.456" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.465" endtime="20201115 22:02:12.481"></status>
</kw>
<msg timestamp="20201115 22:02:12.481" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.463" endtime="20201115 22:02:12.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.484" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.482" endtime="20201115 22:02:12.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.485" endtime="20201115 22:02:12.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.461" endtime="20201115 22:02:12.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.459" endtime="20201115 22:02:12.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.493" endtime="20201115 22:02:12.781"></status>
</kw>
<msg timestamp="20201115 22:02:12.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021965306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.492" endtime="20201115 22:02:12.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021965306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.785" endtime="20201115 22:02:12.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.793" endtime="20201115 22:02:12.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.489" endtime="20201115 22:02:12.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.488" endtime="20201115 22:02:12.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:12.800" level="INFO">${RESULT} = [{'time': 0.021971889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}, {'time': 0.0220805, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:12.796" endtime="20201115 22:02:12.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:12.813" level="INFO">${OVERHEAD} = {'time': [0.021971889, 0.0220805, 0.022184903, 0.022295486, 0.022402847, 0.022512889, 0.022622139, 0.022733417, 0.022842014, 0.022951264, 0.023058875, 0.023169222, 0.023276708, 0.023384069, 0.02349104...</msg>
<status status="PASS" starttime="20201115 22:02:12.801" endtime="20201115 22:02:12.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.818" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:12.817" endtime="20201115 22:02:12.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.820" level="INFO">VALUE: [6.583000000000977e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.347000000000297e-06, 6.360999999999867e-06, 6.360999999999867e-06, 6.360999999999867e-06, 6.4029999999985765e-06, 6.417000000001616e-06, 6.360999999999867e-06, 6.388999999999007e-06, 6.415999999998673e-06, 6.388999999999007e-06, 6.387999999999533e-06, 6.4029999999985765e-06, 6.389000000002476e-06, 6.431000000001186e-06, 6.374999999999437e-06, 6.443999999997813e-06, 6.417000000001616e-06, 6.333000000000727e-06, 6.388999999999007e-06, 6.431000000001186e-06, 6.374999999999437e-06, 6.417000000001616e-06, 6.431000000001186e-06, 6.4029999999985765e-06, 6.4029999999985765e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.403000000002046e-06, 6.360999999999867e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.3479999999997705e-06, 6.388999999999007e-06, 6.4029999999985765e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.374999999999437e-06, 6.375000000002906e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.403000000002046e-06]</msg>
<status status="PASS" starttime="20201115 22:02:12.819" endtime="20201115 22:02:12.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.814" endtime="20201115 22:02:12.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.823" endtime="20201115 22:02:12.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:12.827" endtime="20201115 22:02:12.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.825" endtime="20201115 22:02:12.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.822" endtime="20201115 22:02:12.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.456" endtime="20201115 22:02:12.847"></status>
</kw>
<msg timestamp="20201115 22:02:12.848" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.856" endtime="20201115 22:02:12.872"></status>
</kw>
<msg timestamp="20201115 22:02:12.872" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.855" endtime="20201115 22:02:12.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.875" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.874" endtime="20201115 22:02:12.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.876" endtime="20201115 22:02:12.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.852" endtime="20201115 22:02:12.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.850" endtime="20201115 22:02:12.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.885" endtime="20201115 22:02:13.171"></status>
</kw>
<msg timestamp="20201115 22:02:13.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.883" endtime="20201115 22:02:13.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.175" endtime="20201115 22:02:13.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.184" endtime="20201115 22:02:13.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.881" endtime="20201115 22:02:13.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.879" endtime="20201115 22:02:13.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:13.191" level="INFO">${RESULT} = [{'time': 0.022375181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.584000000000451e-06, 'source_diff': 6.584000000000451e-06}, {'time': 0.022480556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:13.187" endtime="20201115 22:02:13.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:13.204" level="INFO">${OVERHEAD} = {'time': [0.022375181, 0.022480556, 0.022586181, 0.022693819, 0.022804403, 0.022908153, 0.023012167, 0.023118597, 0.023226889, 0.023331333, 0.023438278, 0.023543097, 0.023648319, 0.023753, 0.023858472...</msg>
<status status="PASS" starttime="20201115 22:02:13.192" endtime="20201115 22:02:13.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.208" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:13.207" endtime="20201115 22:02:13.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.211" level="INFO">VALUE: [6.584000000000451e-06, 6.36199999999934e-06, 6.388999999999007e-06, 6.401999999999103e-06, 6.374999999999437e-06, 6.403000000002046e-06, 6.4029999999985765e-06, 6.403000000002046e-06, 6.374999999999437e-06, 6.415999999998673e-06, 6.4029999999985765e-06, 6.374999999999437e-06, 6.387999999999533e-06, 6.4029999999985765e-06, 6.374999999999437e-06, 6.387999999999533e-06, 6.360999999999867e-06, 6.36199999999934e-06, 6.374999999999437e-06, 6.389000000002476e-06, 6.445000000000756e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.389000000002476e-06, 6.4029999999985765e-06, 6.375000000002906e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.401999999999103e-06, 6.388999999999007e-06, 6.360999999999867e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.360999999999867e-06, 6.36199999999934e-06, 6.360999999999867e-06, 6.388999999999007e-06, 6.360999999999867e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.360999999999867e-06, 6.430999999997716e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.4029999999985765e-06, 6.401999999999103e-06, 6.374999999999437e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.360999999999867e-06]</msg>
<status status="PASS" starttime="20201115 22:02:13.209" endtime="20201115 22:02:13.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.205" endtime="20201115 22:02:13.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.214" endtime="20201115 22:02:13.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:13.217" endtime="20201115 22:02:13.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.216" endtime="20201115 22:02:13.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.212" endtime="20201115 22:02:13.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.848" endtime="20201115 22:02:13.238"></status>
</kw>
<msg timestamp="20201115 22:02:13.238" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.247" endtime="20201115 22:02:13.262"></status>
</kw>
<msg timestamp="20201115 22:02:13.263" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.245" endtime="20201115 22:02:13.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.265" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.264" endtime="20201115 22:02:13.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.266" endtime="20201115 22:02:13.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.243" endtime="20201115 22:02:13.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.241" endtime="20201115 22:02:13.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.275" endtime="20201115 22:02:13.561"></status>
</kw>
<msg timestamp="20201115 22:02:13.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.274" endtime="20201115 22:02:13.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.571" endtime="20201115 22:02:13.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.580" endtime="20201115 22:02:13.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.271" endtime="20201115 22:02:13.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.270" endtime="20201115 22:02:13.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:13.586" level="INFO">${RESULT} = [{'time': 0.022022514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.624999999999687e-06, 'source_diff': 6.624999999999687e-06}, {'time': 0.022131347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:13.583" endtime="20201115 22:02:13.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:13.600" level="INFO">${OVERHEAD} = {'time': [0.022022514, 0.022131347, 0.022235639, 0.022340181, 0.022444056, 0.022553847, 0.022658806, 0.022766694, 0.02286975, 0.022974597, 0.023081403, 0.023185958, 0.023294653, 0.023403361, 0.0235120...</msg>
<status status="PASS" starttime="20201115 22:02:13.587" endtime="20201115 22:02:13.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.604" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:13.603" endtime="20201115 22:02:13.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.607" level="INFO">VALUE: [6.624999999999687e-06, 6.388999999999007e-06, 6.389000000002476e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.4029999999985765e-06, 6.4029999999985765e-06, 6.360999999999867e-06, 6.360999999999867e-06, 6.415999999998673e-06, 6.374999999999437e-06, 6.401999999999103e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.360999999999867e-06, 6.334000000000201e-06, 6.388999999999007e-06, 6.360999999999867e-06, 6.360999999999867e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.389000000002476e-06, 6.374999999999437e-06, 6.4029999999985765e-06, 6.388999999999007e-06, 6.375000000002906e-06, 6.387999999999533e-06, 6.417000000001616e-06, 6.416000000002142e-06, 6.401999999999103e-06, 6.388000000003002e-06, 6.430000000001712e-06, 6.388999999999007e-06, 6.417000000001616e-06, 6.389000000002476e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.417000000001616e-06, 6.389000000002476e-06, 6.387999999999533e-06, 6.389000000002476e-06, 6.4029999999985765e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.388999999999007e-06, 6.443999999997813e-06, 6.401999999999103e-06]</msg>
<status status="PASS" starttime="20201115 22:02:13.605" endtime="20201115 22:02:13.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.601" endtime="20201115 22:02:13.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.610" endtime="20201115 22:02:13.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:13.613" endtime="20201115 22:02:13.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.612" endtime="20201115 22:02:13.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.608" endtime="20201115 22:02:13.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.239" endtime="20201115 22:02:13.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.674" endtime="20201115 22:02:13.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.673" endtime="20201115 22:02:13.634"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.636" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.645" endtime="20201115 22:02:13.661"></status>
</kw>
<msg timestamp="20201115 22:02:13.661" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.644" endtime="20201115 22:02:13.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.663" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.662" endtime="20201115 22:02:13.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.664" endtime="20201115 22:02:13.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.641" endtime="20201115 22:02:13.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.639" endtime="20201115 22:02:13.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.674" endtime="20201115 22:02:13.960"></status>
</kw>
<msg timestamp="20201115 22:02:13.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024579222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024586097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.672" endtime="20201115 22:02:13.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024579222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024586097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.964" endtime="20201115 22:02:13.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.972" endtime="20201115 22:02:13.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.670" endtime="20201115 22:02:13.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.668" endtime="20201115 22:02:13.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:13.979" level="INFO">${RESULT} = [{'time': 0.024586097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.874999999999937e-06, 'source_diff': 6.874999999999937e-06}, {'time': 0.024699736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:13.976" endtime="20201115 22:02:13.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:13.992" level="INFO">${OVERHEAD} = {'time': [0.024586097, 0.024699736, 0.024810556, 0.024926097, 0.025035833, 0.025146944, 0.025259, 0.025375042, 0.025490056, 0.02560275, 0.025719639, 0.025832597, 0.025944236, 0.026062042, 0.026178236,...</msg>
<status status="PASS" starttime="20201115 22:02:13.980" endtime="20201115 22:02:13.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.996" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:13.995" endtime="20201115 22:02:13.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.999" level="INFO">VALUE: [6.874999999999937e-06, 6.6529999999988265e-06, 6.638999999999257e-06, 6.666000000002392e-06, 6.638999999999257e-06, 6.680000000001962e-06, 6.694000000001532e-06, 6.6529999999988265e-06, 6.681000000001436e-06, 6.6529999999988265e-06, 6.680999999997966e-06, 6.6529999999988265e-06, 6.6529999999988265e-06, 6.6529999999988265e-06, 6.6529999999988265e-06, 6.653000000002296e-06, 6.6529999999988265e-06, 6.666000000002392e-06, 6.6669999999983964e-06, 6.611000000000117e-06, 6.679999999998493e-06, 6.667000000001866e-06, 6.5980000000000205e-06, 6.693999999998063e-06, 6.625000000003156e-06, 6.708000000001102e-06, 6.638999999999257e-06, 6.667000000001866e-06, 6.667000000001866e-06, 6.624999999999687e-06, 6.665999999998923e-06, 6.7230000000001455e-06, 6.680999999997966e-06, 6.722000000000672e-06, 6.694000000001532e-06, 6.681000000001436e-06, 6.638999999999257e-06, 6.679999999998493e-06, 6.681000000001436e-06, 6.6669999999983964e-06, 6.667000000001866e-06, 6.666000000002392e-06, 6.638999999999257e-06, 6.638999999999257e-06, 6.6669999999983964e-06, 6.680000000001962e-06, 6.667000000001866e-06, 6.6529999999988265e-06, 6.6669999999983964e-06, 6.680999999997966e-06]</msg>
<status status="PASS" starttime="20201115 22:02:13.998" endtime="20201115 22:02:13.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.993" endtime="20201115 22:02:14.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.002" endtime="20201115 22:02:14.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:14.005" endtime="20201115 22:02:14.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.004" endtime="20201115 22:02:14.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.000" endtime="20201115 22:02:14.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.637" endtime="20201115 22:02:14.026"></status>
</kw>
<msg timestamp="20201115 22:02:14.026" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.035" endtime="20201115 22:02:14.051"></status>
</kw>
<msg timestamp="20201115 22:02:14.052" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.033" endtime="20201115 22:02:14.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.054" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.053" endtime="20201115 22:02:14.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.056" endtime="20201115 22:02:14.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.031" endtime="20201115 22:02:14.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.029" endtime="20201115 22:02:14.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.065" endtime="20201115 22:02:14.351"></status>
</kw>
<msg timestamp="20201115 22:02:14.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022311875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.063" endtime="20201115 22:02:14.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022311875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.355" endtime="20201115 22:02:14.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.363" endtime="20201115 22:02:14.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.061" endtime="20201115 22:02:14.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.059" endtime="20201115 22:02:14.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:14.369" level="INFO">${RESULT} = [{'time': 0.022311875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.022428028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:14.366" endtime="20201115 22:02:14.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:14.383" level="INFO">${OVERHEAD} = {'time': [0.022311875, 0.022428028, 0.022541278, 0.022651, 0.022763694, 0.022874264, 0.022989917, 0.023107611, 0.023222444, 0.023336514, 0.023450458, 0.023565931, 0.023683083, 0.023800889, 0.023911042...</msg>
<status status="PASS" starttime="20201115 22:02:14.370" endtime="20201115 22:02:14.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.387" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:14.386" endtime="20201115 22:02:14.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.389" level="INFO">VALUE: [6.8469999999973274e-06, 6.722000000000672e-06, 6.639000000002726e-06, 6.667000000001866e-06, 6.624999999999687e-06, 6.680999999997966e-06, 6.6669999999983964e-06, 6.694000000001532e-06, 6.665999999998923e-06, 6.680999999997966e-06, 6.708000000001102e-06, 6.6669999999983964e-06, 6.680000000001962e-06, 6.5969999999970774e-06, 6.667000000001866e-06, 6.665999999998923e-06, 6.681000000001436e-06, 6.665999999998923e-06, 6.694000000001532e-06, 6.680999999997966e-06, 6.680999999997966e-06, 6.750000000003281e-06, 6.6529999999988265e-06, 6.5829999999975075e-06, 6.666000000002392e-06, 6.638999999999257e-06, 6.6529999999988265e-06, 6.667000000001866e-06, 6.680999999997966e-06, 6.763999999999382e-06, 6.6669999999983964e-06, 6.653000000002296e-06, 6.665999999998923e-06, 6.653000000002296e-06, 6.6669999999983964e-06, 6.693999999998063e-06, 6.667000000001866e-06, 6.680999999997966e-06, 6.653000000002296e-06, 6.665999999998923e-06, 6.653000000002296e-06, 6.6669999999983964e-06, 6.624999999999687e-06, 6.665999999998923e-06, 6.680000000001962e-06, 6.6529999999988265e-06, 6.652000000002822e-06, 6.681000000001436e-06, 6.722000000000672e-06, 6.6529999999988265e-06]</msg>
<status status="PASS" starttime="20201115 22:02:14.388" endtime="20201115 22:02:14.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.383" endtime="20201115 22:02:14.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.393" endtime="20201115 22:02:14.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:14.396" endtime="20201115 22:02:14.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.394" endtime="20201115 22:02:14.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.391" endtime="20201115 22:02:14.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.027" endtime="20201115 22:02:14.416"></status>
</kw>
<msg timestamp="20201115 22:02:14.417" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.426" endtime="20201115 22:02:14.441"></status>
</kw>
<msg timestamp="20201115 22:02:14.441" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.424" endtime="20201115 22:02:14.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.444" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.442" endtime="20201115 22:02:14.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.445" endtime="20201115 22:02:14.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.421" endtime="20201115 22:02:14.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.419" endtime="20201115 22:02:14.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.454" endtime="20201115 22:02:14.739"></status>
</kw>
<msg timestamp="20201115 22:02:14.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022546278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.452" endtime="20201115 22:02:14.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022546278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.743" endtime="20201115 22:02:14.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.751" endtime="20201115 22:02:14.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.450" endtime="20201115 22:02:14.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.448" endtime="20201115 22:02:14.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:14.758" level="INFO">${RESULT} = [{'time': 0.022546278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.022660486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:14.755" endtime="20201115 22:02:14.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:14.771" level="INFO">${OVERHEAD} = {'time': [0.022546278, 0.022660486, 0.02277325, 0.022887403, 0.023004667, 0.023122458, 0.02323975, 0.023351778, 0.023461389, 0.023572375, 0.023684667, 0.023797375, 0.023910514, 0.024020125, 0.02413525...</msg>
<status status="PASS" starttime="20201115 22:02:14.759" endtime="20201115 22:02:14.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.776" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:14.775" endtime="20201115 22:02:14.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.778" level="INFO">VALUE: [6.861000000000367e-06, 6.638999999999257e-06, 6.693999999998063e-06, 6.695000000001006e-06, 6.6669999999983964e-06, 6.651999999999353e-06, 6.681000000001436e-06, 6.681000000001436e-06, 6.6669999999983964e-06, 6.680999999997966e-06, 6.6669999999983964e-06, 6.6529999999988265e-06, 6.695000000001006e-06, 6.6669999999983964e-06, 6.681000000001436e-06, 6.653000000002296e-06, 6.6529999999988265e-06, 6.680000000001962e-06, 6.681000000001436e-06, 6.6669999999983964e-06, 6.6529999999988265e-06, 6.651999999999353e-06, 6.6669999999983964e-06, 6.681000000001436e-06, 6.6669999999983964e-06, 6.667000000001866e-06, 6.653000000002296e-06, 6.665999999998923e-06, 6.667000000001866e-06, 6.651999999999353e-06, 6.625000000003156e-06, 6.6529999999988265e-06, 6.680999999997966e-06, 6.667000000001866e-06, 6.736000000000242e-06, 6.680000000001962e-06, 6.666000000002392e-06, 6.681000000001436e-06, 6.667000000001866e-06, 6.679999999998493e-06, 6.653000000002296e-06, 6.708000000001102e-06, 6.666000000002392e-06, 6.6529999999988265e-06, 6.665999999998923e-06, 6.5969999999970774e-06, 6.694000000001532e-06, 6.6529999999988265e-06, 6.680000000001962e-06, 6.680000000001962e-06]</msg>
<status status="PASS" starttime="20201115 22:02:14.777" endtime="20201115 22:02:14.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.772" endtime="20201115 22:02:14.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.781" endtime="20201115 22:02:14.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:14.784" endtime="20201115 22:02:14.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.783" endtime="20201115 22:02:14.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.780" endtime="20201115 22:02:14.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.417" endtime="20201115 22:02:14.805"></status>
</kw>
<msg timestamp="20201115 22:02:14.806" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.815" endtime="20201115 22:02:14.831"></status>
</kw>
<msg timestamp="20201115 22:02:14.831" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.813" endtime="20201115 22:02:14.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.834" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.832" endtime="20201115 22:02:14.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.835" endtime="20201115 22:02:14.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.811" endtime="20201115 22:02:14.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.808" endtime="20201115 22:02:14.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.843" endtime="20201115 22:02:15.131"></status>
</kw>
<msg timestamp="20201115 22:02:15.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022923417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022930278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.842" endtime="20201115 22:02:15.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022923417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022930278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.135" endtime="20201115 22:02:15.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.143" endtime="20201115 22:02:15.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.839" endtime="20201115 22:02:15.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.838" endtime="20201115 22:02:15.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:15.149" level="INFO">${RESULT} = [{'time': 0.022930278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.860999999996897e-06, 'source_diff': 6.860999999996897e-06}, {'time': 0.023047597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:15.146" endtime="20201115 22:02:15.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:15.162" level="INFO">${OVERHEAD} = {'time': [0.022930278, 0.023047597, 0.023165278, 0.023278917, 0.023393111, 0.023509583, 0.023620736, 0.023738222, 0.023849403, 0.023965389, 0.024077694, 0.024193778, 0.024306736, 0.024420931, 0.024535...</msg>
<status status="PASS" starttime="20201115 22:02:15.150" endtime="20201115 22:02:15.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.167" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:15.166" endtime="20201115 22:02:15.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.169" level="INFO">VALUE: [6.860999999996897e-06, 6.665999999998923e-06, 6.681000000001436e-06, 6.680999999997966e-06, 6.667000000001866e-06, 6.665999999998923e-06, 6.694000000001532e-06, 6.638999999999257e-06, 6.750000000003281e-06, 6.667000000001866e-06, 6.665999999998923e-06, 6.6669999999983964e-06, 6.6669999999983964e-06, 6.6669999999983964e-06, 6.695000000001006e-06, 6.6529999999988265e-06, 6.680000000001962e-06, 6.611000000000117e-06, 6.6529999999988265e-06, 6.681000000001436e-06, 6.637999999999783e-06, 6.624999999999687e-06, 6.667000000001866e-06, 6.680000000001962e-06, 6.667000000001866e-06, 6.680999999997966e-06, 6.667000000001866e-06, 6.611000000000117e-06, 6.667000000001866e-06, 6.652000000002822e-06, 6.6669999999983964e-06, 6.6669999999983964e-06, 6.680000000001962e-06, 6.638999999999257e-06, 6.708000000001102e-06, 6.666000000002392e-06, 6.680999999997966e-06, 6.665999999998923e-06, 6.666000000002392e-06, 6.680999999997966e-06, 6.680000000001962e-06, 6.736000000000242e-06, 6.680999999997966e-06, 6.6529999999988265e-06, 6.665999999998923e-06, 6.680999999997966e-06, 6.736000000000242e-06, 6.6529999999988265e-06, 6.681000000001436e-06, 6.638999999999257e-06]</msg>
<status status="PASS" starttime="20201115 22:02:15.168" endtime="20201115 22:02:15.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.163" endtime="20201115 22:02:15.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.172" endtime="20201115 22:02:15.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:15.176" endtime="20201115 22:02:15.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.175" endtime="20201115 22:02:15.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.171" endtime="20201115 22:02:15.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.806" endtime="20201115 22:02:15.197"></status>
</kw>
<msg timestamp="20201115 22:02:15.197" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.206" endtime="20201115 22:02:15.222"></status>
</kw>
<msg timestamp="20201115 22:02:15.223" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.204" endtime="20201115 22:02:15.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.225" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.224" endtime="20201115 22:02:15.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.226" endtime="20201115 22:02:15.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.202" endtime="20201115 22:02:15.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.200" endtime="20201115 22:02:15.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.235" endtime="20201115 22:02:15.522"></status>
</kw>
<msg timestamp="20201115 22:02:15.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022262181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022269069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.234" endtime="20201115 22:02:15.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022262181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022269069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.526" endtime="20201115 22:02:15.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.534" endtime="20201115 22:02:15.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.231" endtime="20201115 22:02:15.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.229" endtime="20201115 22:02:15.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:15.541" level="INFO">${RESULT} = [{'time': 0.022269069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888000000000033e-06, 'source_diff': 6.888000000000033e-06}, {'time': 0.022385931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:15.538" endtime="20201115 22:02:15.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:15.554" level="INFO">${OVERHEAD} = {'time': [0.022269069, 0.022385931, 0.022501042, 0.022612292, 0.02272525, 0.022839444, 0.022953653, 0.023068903, 0.023186042, 0.02330225, 0.023412264, 0.023526583, 0.023639569, 0.023756694, 0.02387209...</msg>
<status status="PASS" starttime="20201115 22:02:15.542" endtime="20201115 22:02:15.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.559" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:15.558" endtime="20201115 22:02:15.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.561" level="INFO">VALUE: [6.888000000000033e-06, 6.653000000002296e-06, 6.6529999999988265e-06, 6.680999999997966e-06, 6.6669999999983964e-06, 6.665999999998923e-06, 6.681000000001436e-06, 6.681000000001436e-06, 6.667000000001866e-06, 6.681000000001436e-06, 6.6669999999983964e-06, 6.665999999998923e-06, 6.679999999998493e-06, 6.665999999998923e-06, 6.679999999998493e-06, 6.681000000001436e-06, 6.6529999999988265e-06, 6.6529999999988265e-06, 6.695000000001006e-06, 6.6669999999983964e-06, 6.736000000000242e-06, 6.680999999997966e-06, 6.681000000001436e-06, 6.666000000002392e-06, 6.624999999999687e-06, 6.681000000001436e-06, 6.6529999999988265e-06, 6.653000000002296e-06, 6.6529999999988265e-06, 6.667000000001866e-06, 6.680999999997966e-06, 6.667000000001866e-06, 6.665999999998923e-06, 6.694000000001532e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.6669999999983964e-06, 6.694000000001532e-06, 6.681000000001436e-06, 6.736000000000242e-06, 6.694000000001532e-06, 6.694000000001532e-06, 6.653000000002296e-06, 6.6669999999983964e-06, 6.665999999998923e-06, 6.680000000001962e-06, 6.680999999997966e-06, 6.665999999998923e-06, 6.708000000001102e-06, 6.6669999999983964e-06]</msg>
<status status="PASS" starttime="20201115 22:02:15.560" endtime="20201115 22:02:15.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.555" endtime="20201115 22:02:15.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.565" endtime="20201115 22:02:15.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:15.568" endtime="20201115 22:02:15.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.566" endtime="20201115 22:02:15.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.563" endtime="20201115 22:02:15.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.198" endtime="20201115 22:02:15.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.635" endtime="20201115 22:02:15.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.634" endtime="20201115 22:02:15.589"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.591" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.600" endtime="20201115 22:02:15.616"></status>
</kw>
<msg timestamp="20201115 22:02:15.616" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.598" endtime="20201115 22:02:15.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.619" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.617" endtime="20201115 22:02:15.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.620" endtime="20201115 22:02:15.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.596" endtime="20201115 22:02:15.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.594" endtime="20201115 22:02:15.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.629" endtime="20201115 22:02:15.914"></status>
</kw>
<msg timestamp="20201115 22:02:15.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024689375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024696542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.627" endtime="20201115 22:02:15.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024689375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024696542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.918" endtime="20201115 22:02:15.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.926" endtime="20201115 22:02:15.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.625" endtime="20201115 22:02:15.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.623" endtime="20201115 22:02:15.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:15.933" level="INFO">${RESULT} = [{'time': 0.024696542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.1669999999988965e-06, 'source_diff': 7.1669999999988965e-06}, {'time': 0.02481825, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:15.930" endtime="20201115 22:02:15.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:15.946" level="INFO">${OVERHEAD} = {'time': [0.024696542, 0.02481825, 0.024937528, 0.025055486, 0.025177333, 0.025294819, 0.025414708, 0.025533458, 0.025649931, 0.025773903, 0.025898028, 0.0260215, 0.026143222, 0.026266236, 0.026383917...</msg>
<status status="PASS" starttime="20201115 22:02:15.934" endtime="20201115 22:02:15.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.951" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:15.950" endtime="20201115 22:02:15.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.953" level="INFO">VALUE: [7.1669999999988965e-06, 6.958000000001352e-06, 6.959000000000826e-06, 6.9719999999974525e-06, 6.958000000001352e-06, 7.040999999999298e-06, 6.972000000000922e-06, 6.9579999999978825e-06, 6.931000000001686e-06, 6.959000000000826e-06, 6.874999999999937e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.943999999998313e-06, 6.945000000001256e-06, 6.944000000001782e-06, 6.944999999997786e-06, 6.9730000000003955e-06, 6.986000000000492e-06, 7.000000000000062e-06, 6.972000000000922e-06, 6.9730000000003955e-06, 6.9719999999974525e-06, 6.986000000000492e-06, 6.972000000000922e-06, 6.9579999999978825e-06, 6.9730000000003955e-06, 6.958999999997356e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.9719999999974525e-06, 6.959000000000826e-06, 6.9579999999978825e-06, 6.945000000001256e-06, 6.986000000000492e-06, 6.959000000000826e-06, 6.972000000000922e-06, 6.9730000000003955e-06, 6.9730000000003955e-06, 6.874999999999937e-06, 6.986000000000492e-06, 6.958999999997356e-06, 6.985999999997022e-06, 6.945000000001256e-06, 6.9579999999978825e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.958000000001352e-06, 7.013999999999632e-06, 6.972000000000922e-06]</msg>
<status status="PASS" starttime="20201115 22:02:15.952" endtime="20201115 22:02:15.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.947" endtime="20201115 22:02:15.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.957" endtime="20201115 22:02:15.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:15.960" endtime="20201115 22:02:15.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.959" endtime="20201115 22:02:15.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.955" endtime="20201115 22:02:15.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.592" endtime="20201115 22:02:15.981"></status>
</kw>
<msg timestamp="20201115 22:02:15.981" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.990" endtime="20201115 22:02:16.005"></status>
</kw>
<msg timestamp="20201115 22:02:16.006" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.988" endtime="20201115 22:02:16.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.008" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.007" endtime="20201115 22:02:16.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.009" endtime="20201115 22:02:16.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.985" endtime="20201115 22:02:16.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.983" endtime="20201115 22:02:16.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.018" endtime="20201115 22:02:16.305"></status>
</kw>
<msg timestamp="20201115 22:02:16.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.017" endtime="20201115 22:02:16.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.309" endtime="20201115 22:02:16.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.317" endtime="20201115 22:02:16.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.014" endtime="20201115 22:02:16.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.013" endtime="20201115 22:02:16.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:16.324" level="INFO">${RESULT} = [{'time': 0.021909542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.1669999999988965e-06, 'source_diff': 7.1669999999988965e-06}, {'time': 0.022028028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:16.320" endtime="20201115 22:02:16.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:16.337" level="INFO">${OVERHEAD} = {'time': [0.021909542, 0.022028028, 0.022147181, 0.022269986, 0.022394375, 0.022518486, 0.022638708, 0.022758667, 0.022879847, 0.022998181, 0.023119778, 0.023241736, 0.023362611, 0.023479764, 0.023597...</msg>
<status status="PASS" starttime="20201115 22:02:16.325" endtime="20201115 22:02:16.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.342" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:16.341" endtime="20201115 22:02:16.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.344" level="INFO">VALUE: [7.1669999999988965e-06, 6.972000000000922e-06, 6.944999999997786e-06, 6.985999999997022e-06, 6.986000000000492e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.959000000000826e-06, 6.985999999997022e-06, 6.959000000000826e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.888999999999507e-06, 6.972000000000922e-06, 6.958999999997356e-06, 6.9579999999978825e-06, 6.972000000000922e-06, 6.985999999997022e-06, 6.943999999998313e-06, 6.9719999999974525e-06, 6.901999999999603e-06, 6.959000000000826e-06, 6.986000000000492e-06, 6.9579999999978825e-06, 6.9719999999974525e-06, 6.986000000000492e-06, 6.903000000002546e-06, 6.9719999999974525e-06, 6.986000000000492e-06, 6.958000000001352e-06, 6.986000000000492e-06, 6.9730000000003955e-06, 6.9169999999986465e-06, 6.9719999999974525e-06, 6.985999999997022e-06, 6.959000000000826e-06, 6.944000000001782e-06, 6.9579999999978825e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.944000000001782e-06, 6.958000000001352e-06, 7.000000000000062e-06, 6.943999999998313e-06, 6.9719999999974525e-06, 6.972000000000922e-06, 6.972000000000922e-06, 7.000000000000062e-06, 6.958999999997356e-06, 6.986000000000492e-06]</msg>
<status status="PASS" starttime="20201115 22:02:16.343" endtime="20201115 22:02:16.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.338" endtime="20201115 22:02:16.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.347" endtime="20201115 22:02:16.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:16.351" endtime="20201115 22:02:16.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.349" endtime="20201115 22:02:16.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.346" endtime="20201115 22:02:16.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.981" endtime="20201115 22:02:16.371"></status>
</kw>
<msg timestamp="20201115 22:02:16.371" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.380" endtime="20201115 22:02:16.396"></status>
</kw>
<msg timestamp="20201115 22:02:16.397" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.379" endtime="20201115 22:02:16.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.399" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.398" endtime="20201115 22:02:16.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.400" endtime="20201115 22:02:16.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.376" endtime="20201115 22:02:16.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.374" endtime="20201115 22:02:16.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.409" endtime="20201115 22:02:16.696"></status>
</kw>
<msg timestamp="20201115 22:02:16.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022150389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022157528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.408" endtime="20201115 22:02:16.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022150389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022157528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.700" endtime="20201115 22:02:16.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.708" endtime="20201115 22:02:16.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.405" endtime="20201115 22:02:16.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.403" endtime="20201115 22:02:16.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:16.714" level="INFO">${RESULT} = [{'time': 0.022157528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.022274806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:16.711" endtime="20201115 22:02:16.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:16.728" level="INFO">${OVERHEAD} = {'time': [0.022157528, 0.022274806, 0.022393833, 0.022514611, 0.022637125, 0.022760458, 0.022881333, 0.023005056, 0.023122056, 0.023239208, 0.023356694, 0.02348075, 0.023604181, 0.023727653, 0.0238445...</msg>
<status status="PASS" starttime="20201115 22:02:16.716" endtime="20201115 22:02:16.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.733" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:16.732" endtime="20201115 22:02:16.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.735" level="INFO">VALUE: [7.138999999999757e-06, 6.945000000001256e-06, 6.9719999999974525e-06, 6.972000000000922e-06, 6.958000000001352e-06, 6.986000000000492e-06, 6.958000000001352e-06, 6.959000000000826e-06, 6.972999999996926e-06, 6.958000000001352e-06, 7.040999999999298e-06, 6.972000000000922e-06, 6.944999999997786e-06, 6.972000000000922e-06, 6.986000000000492e-06, 6.9579999999978825e-06, 6.972000000000922e-06, 6.959000000000826e-06, 6.958000000001352e-06, 6.986000000000492e-06, 6.944000000001782e-06, 6.9730000000003955e-06, 6.9579999999978825e-06, 6.958999999997356e-06, 6.972000000000922e-06, 6.958000000001352e-06, 7.000000000000062e-06, 6.972000000000922e-06, 6.945000000001256e-06, 6.986000000000492e-06, 6.958999999997356e-06, 6.986000000000492e-06, 6.958000000001352e-06, 6.9579999999978825e-06, 6.986000000000492e-06, 6.958000000001352e-06, 6.9579999999978825e-06, 6.9579999999978825e-06, 6.958999999997356e-06, 6.9579999999978825e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.9719999999974525e-06, 6.958999999997356e-06, 6.901999999999603e-06, 6.958999999997356e-06, 6.959000000000826e-06, 6.944999999997786e-06, 6.986000000000492e-06, 6.944999999997786e-06]</msg>
<status status="PASS" starttime="20201115 22:02:16.734" endtime="20201115 22:02:16.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.729" endtime="20201115 22:02:16.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.738" endtime="20201115 22:02:16.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:16.741" endtime="20201115 22:02:16.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.740" endtime="20201115 22:02:16.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.736" endtime="20201115 22:02:16.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.372" endtime="20201115 22:02:16.762"></status>
</kw>
<msg timestamp="20201115 22:02:16.762" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.772" endtime="20201115 22:02:16.789"></status>
</kw>
<msg timestamp="20201115 22:02:16.789" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.770" endtime="20201115 22:02:16.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.791" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.790" endtime="20201115 22:02:16.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.792" endtime="20201115 22:02:16.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.767" endtime="20201115 22:02:16.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.765" endtime="20201115 22:02:16.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.801" endtime="20201115 22:02:17.089"></status>
</kw>
<msg timestamp="20201115 22:02:17.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023211403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023218569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.800" endtime="20201115 22:02:17.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023211403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023218569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.093" endtime="20201115 22:02:17.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.101" endtime="20201115 22:02:17.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.797" endtime="20201115 22:02:17.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.796" endtime="20201115 22:02:17.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:17.108" level="INFO">${RESULT} = [{'time': 0.023218569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.166000000002892e-06, 'source_diff': 7.166000000002892e-06}, {'time': 0.023338278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:17.104" endtime="20201115 22:02:17.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:17.121" level="INFO">${OVERHEAD} = {'time': [0.023218569, 0.023338278, 0.023460792, 0.023577667, 0.023701917, 0.023819056, 0.023941486, 0.024058458, 0.024177611, 0.024296222, 0.024416583, 0.024537764, 0.024654764, 0.024775625, 0.024899...</msg>
<status status="PASS" starttime="20201115 22:02:17.109" endtime="20201115 22:02:17.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.125" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:17.124" endtime="20201115 22:02:17.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.128" level="INFO">VALUE: [7.166000000002892e-06, 6.972000000000922e-06, 6.959000000000826e-06, 6.959000000000826e-06, 6.959000000000826e-06, 6.959000000000826e-06, 7.000000000000062e-06, 6.958000000001352e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.9579999999978825e-06, 6.958000000001352e-06, 6.944999999997786e-06, 7.0419999999987715e-06, 6.945000000001256e-06, 7.0279999999992016e-06, 6.972000000000922e-06, 6.930999999998216e-06, 6.986000000000492e-06, 6.972000000000922e-06, 6.9719999999974525e-06, 6.9579999999978825e-06, 6.972999999996926e-06, 6.9579999999978825e-06, 7.000000000000062e-06, 6.958000000001352e-06, 6.9579999999978825e-06, 6.959000000000826e-06, 6.985999999997022e-06, 6.972000000000922e-06, 6.958999999997356e-06, 6.9579999999978825e-06, 6.999999999996592e-06, 6.972999999996926e-06, 6.9730000000003955e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.986000000000492e-06, 6.9719999999974525e-06, 6.972000000000922e-06, 6.9730000000003955e-06, 6.915999999999173e-06, 6.9579999999978825e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.9579999999978825e-06, 6.972000000000922e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.943999999998313e-06]</msg>
<status status="PASS" starttime="20201115 22:02:17.126" endtime="20201115 22:02:17.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.122" endtime="20201115 22:02:17.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.131" endtime="20201115 22:02:17.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:17.134" endtime="20201115 22:02:17.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.133" endtime="20201115 22:02:17.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.129" endtime="20201115 22:02:17.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.763" endtime="20201115 22:02:17.155"></status>
</kw>
<msg timestamp="20201115 22:02:17.155" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.164" endtime="20201115 22:02:17.179"></status>
</kw>
<msg timestamp="20201115 22:02:17.180" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.162" endtime="20201115 22:02:17.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.182" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.181" endtime="20201115 22:02:17.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.183" endtime="20201115 22:02:17.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.160" endtime="20201115 22:02:17.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.157" endtime="20201115 22:02:17.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.192" endtime="20201115 22:02:17.478"></status>
</kw>
<msg timestamp="20201115 22:02:17.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.191" endtime="20201115 22:02:17.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.483" endtime="20201115 22:02:17.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.491" endtime="20201115 22:02:17.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.188" endtime="20201115 22:02:17.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.186" endtime="20201115 22:02:17.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:17.497" level="INFO">${RESULT} = [{'time': 0.021920486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.179999999998993e-06, 'source_diff': 7.179999999998993e-06}, {'time': 0.022041125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:17.494" endtime="20201115 22:02:17.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:17.510" level="INFO">${OVERHEAD} = {'time': [0.021920486, 0.022041125, 0.022158653, 0.022277681, 0.022402083, 0.022519236, 0.022638778, 0.022756472, 0.022877764, 0.022998, 0.023120778, 0.023244792, 0.023366486, 0.023491417, 0.023608833...</msg>
<status status="PASS" starttime="20201115 22:02:17.498" endtime="20201115 22:02:17.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.515" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:17.514" endtime="20201115 22:02:17.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.518" level="INFO">VALUE: [7.179999999998993e-06, 6.972000000000922e-06, 6.945000000001256e-06, 6.959000000000826e-06, 6.958000000001352e-06, 6.972000000000922e-06, 6.9719999999974525e-06, 6.958000000001352e-06, 6.9579999999978825e-06, 6.972000000000922e-06, 6.959000000000826e-06, 6.9730000000003955e-06, 6.9719999999974525e-06, 6.959000000000826e-06, 6.9579999999978825e-06, 6.9730000000003955e-06, 6.9869999999999655e-06, 6.972000000000922e-06, 6.959000000000826e-06, 6.9719999999974525e-06, 6.9719999999974525e-06, 6.958000000001352e-06, 7.013999999999632e-06, 6.9730000000003955e-06, 6.958000000001352e-06, 6.9719999999974525e-06, 6.9869999999999655e-06, 6.986000000000492e-06, 6.9579999999978825e-06, 6.9579999999978825e-06, 6.958000000001352e-06, 7.000000000000062e-06, 6.959000000000826e-06, 7.000000000000062e-06, 6.958000000001352e-06, 6.9730000000003955e-06, 6.945000000001256e-06, 6.945000000001256e-06, 6.9719999999974525e-06, 6.972000000000922e-06, 6.945000000001256e-06, 6.959000000000826e-06, 6.9579999999978825e-06, 6.972000000000922e-06, 6.945000000001256e-06, 6.9169999999986465e-06, 7.056000000001811e-06, 6.9719999999974525e-06, 6.958000000001352e-06, 6.959000000000826e-06]</msg>
<status status="PASS" starttime="20201115 22:02:17.516" endtime="20201115 22:02:17.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.511" endtime="20201115 22:02:17.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.521" endtime="20201115 22:02:17.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:17.524" endtime="20201115 22:02:17.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.522" endtime="20201115 22:02:17.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.519" endtime="20201115 22:02:17.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.155" endtime="20201115 22:02:17.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.590" endtime="20201115 22:02:17.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.589" endtime="20201115 22:02:17.545"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.547" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.556" endtime="20201115 22:02:17.573"></status>
</kw>
<msg timestamp="20201115 22:02:17.573" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.554" endtime="20201115 22:02:17.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.576" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.574" endtime="20201115 22:02:17.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.577" endtime="20201115 22:02:17.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.552" endtime="20201115 22:02:17.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.550" endtime="20201115 22:02:17.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.586" endtime="20201115 22:02:17.873"></status>
</kw>
<msg timestamp="20201115 22:02:17.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024618542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024625972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.585" endtime="20201115 22:02:17.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024618542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024625972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.877" endtime="20201115 22:02:17.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.885" endtime="20201115 22:02:17.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.582" endtime="20201115 22:02:17.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.580" endtime="20201115 22:02:17.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:17.891" level="INFO">${RESULT} = [{'time': 0.024625972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.024753347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:17.888" endtime="20201115 22:02:17.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:17.904" level="INFO">${OVERHEAD} = {'time': [0.024625972, 0.024753347, 0.024877375, 0.025003042, 0.025129167, 0.025257333, 0.025384778, 0.025516014, 0.025644819, 0.025775639, 0.025905389, 0.026031792, 0.026155764, 0.026287403, 0.026415...</msg>
<status status="PASS" starttime="20201115 22:02:17.892" endtime="20201115 22:02:17.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.909" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:17.908" endtime="20201115 22:02:17.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.911" level="INFO">VALUE: [7.429999999999243e-06, 7.2219999999977025e-06, 7.2919999999990215e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.195000000001506e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.222000000001172e-06, 7.236000000000742e-06, 7.195000000001506e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.249999999996842e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.2230000000006456e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.306000000002061e-06, 7.276999999999978e-06, 7.222000000001172e-06, 7.235999999997272e-06, 7.222000000001172e-06, 7.250000000000312e-06, 7.208999999997606e-06, 7.249999999996842e-06, 7.2079999999981326e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.263999999999882e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.235999999997272e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.2219999999977025e-06, 7.250000000000312e-06, 7.195000000001506e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.263999999999882e-06, 7.290999999999548e-06, 7.263999999999882e-06, 7.236000000000742e-06, 7.250000000000312e-06]</msg>
<status status="PASS" starttime="20201115 22:02:17.910" endtime="20201115 22:02:17.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.905" endtime="20201115 22:02:17.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.914" endtime="20201115 22:02:17.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:17.918" endtime="20201115 22:02:17.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.916" endtime="20201115 22:02:17.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.913" endtime="20201115 22:02:17.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.548" endtime="20201115 22:02:17.938"></status>
</kw>
<msg timestamp="20201115 22:02:17.939" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.947" endtime="20201115 22:02:17.964"></status>
</kw>
<msg timestamp="20201115 22:02:17.965" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.946" endtime="20201115 22:02:17.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.967" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.966" endtime="20201115 22:02:17.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.969" endtime="20201115 22:02:17.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.943" endtime="20201115 22:02:17.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.941" endtime="20201115 22:02:17.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.977" endtime="20201115 22:02:18.264"></status>
</kw>
<msg timestamp="20201115 22:02:18.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021996806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.976" endtime="20201115 22:02:18.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021996806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.268" endtime="20201115 22:02:18.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.276" endtime="20201115 22:02:18.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.973" endtime="20201115 22:02:18.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.972" endtime="20201115 22:02:18.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:18.282" level="INFO">${RESULT} = [{'time': 0.022004222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.415999999999673e-06, 'source_diff': 7.415999999999673e-06}, {'time': 0.022133083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:18.279" endtime="20201115 22:02:18.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:18.295" level="INFO">${OVERHEAD} = {'time': [0.022004222, 0.022133083, 0.022263111, 0.022391236, 0.022522208, 0.022651944, 0.022782125, 0.022905806, 0.023033167, 0.023159417, 0.023285153, 0.02341625, 0.023543056, 0.023673472, 0.0238013...</msg>
<status status="PASS" starttime="20201115 22:02:18.283" endtime="20201115 22:02:18.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.300" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:18.299" endtime="20201115 22:02:18.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.302" level="INFO">VALUE: [7.415999999999673e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.235999999997272e-06, 7.249999999996842e-06, 7.179999999998993e-06, 7.263999999999882e-06, 7.2230000000006456e-06, 7.2230000000006456e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.2370000000002155e-06, 7.222000000001172e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.263000000000408e-06, 7.2370000000002155e-06, 7.250000000000312e-06, 7.292000000002491e-06, 7.2230000000006456e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.235999999997272e-06, 7.319999999998161e-06, 7.236000000000742e-06, 7.194000000002032e-06, 7.181000000001936e-06, 7.235999999997272e-06, 7.222000000001172e-06, 7.263999999999882e-06, 7.304999999999118e-06, 7.235999999997272e-06, 7.235999999997272e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.249999999996842e-06, 7.250000000000312e-06, 7.181000000001936e-06, 7.2219999999977025e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.318999999998688e-06]</msg>
<status status="PASS" starttime="20201115 22:02:18.301" endtime="20201115 22:02:18.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.296" endtime="20201115 22:02:18.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.305" endtime="20201115 22:02:18.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:18.309" endtime="20201115 22:02:18.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.307" endtime="20201115 22:02:18.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.304" endtime="20201115 22:02:18.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.939" endtime="20201115 22:02:18.329"></status>
</kw>
<msg timestamp="20201115 22:02:18.330" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.339" endtime="20201115 22:02:18.355"></status>
</kw>
<msg timestamp="20201115 22:02:18.356" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.337" endtime="20201115 22:02:18.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.358" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.357" endtime="20201115 22:02:18.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.359" endtime="20201115 22:02:18.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.334" endtime="20201115 22:02:18.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.332" endtime="20201115 22:02:18.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.368" endtime="20201115 22:02:18.656"></status>
</kw>
<msg timestamp="20201115 22:02:18.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022467681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.367" endtime="20201115 22:02:18.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022467681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.660" endtime="20201115 22:02:18.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.668" endtime="20201115 22:02:18.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.364" endtime="20201115 22:02:18.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.363" endtime="20201115 22:02:18.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:18.675" level="INFO">${RESULT} = [{'time': 0.022475125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.443999999998813e-06, 'source_diff': 7.443999999998813e-06}, {'time': 0.022606236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:18.672" endtime="20201115 22:02:18.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:18.688" level="INFO">${OVERHEAD} = {'time': [0.022475125, 0.022606236, 0.022733722, 0.022860403, 0.022985278, 0.023109931, 0.023240097, 0.02336475, 0.023493556, 0.023622306, 0.023747014, 0.023877708, 0.024002375, 0.024133472, 0.0242626...</msg>
<status status="PASS" starttime="20201115 22:02:18.676" endtime="20201115 22:02:18.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.692" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:18.691" endtime="20201115 22:02:18.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.695" level="INFO">VALUE: [7.443999999998813e-06, 7.235999999997272e-06, 7.263999999999882e-06, 7.278000000002921e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.222999999997176e-06, 7.305999999998591e-06, 7.222000000001172e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.222000000001172e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.2230000000006456e-06, 7.250000000000312e-06, 7.249999999996842e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.208999999997606e-06, 7.263999999999882e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.222000000001172e-06, 7.306000000002061e-06, 7.179999999998993e-06, 7.250000000000312e-06, 7.292000000002491e-06, 7.236000000000742e-06, 7.222000000001172e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.222999999997176e-06, 7.249999999996842e-06, 7.2779999999994516e-06, 7.2219999999977025e-06, 7.236000000000742e-06, 7.236000000000742e-06]</msg>
<status status="PASS" starttime="20201115 22:02:18.693" endtime="20201115 22:02:18.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.689" endtime="20201115 22:02:18.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.698" endtime="20201115 22:02:18.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:18.701" endtime="20201115 22:02:18.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.700" endtime="20201115 22:02:18.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.696" endtime="20201115 22:02:18.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.330" endtime="20201115 22:02:18.722"></status>
</kw>
<msg timestamp="20201115 22:02:18.729" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.738" endtime="20201115 22:02:18.755"></status>
</kw>
<msg timestamp="20201115 22:02:18.755" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.736" endtime="20201115 22:02:18.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.757" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.756" endtime="20201115 22:02:18.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.759" endtime="20201115 22:02:18.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.734" endtime="20201115 22:02:18.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.732" endtime="20201115 22:02:18.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.768" endtime="20201115 22:02:19.053"></status>
</kw>
<msg timestamp="20201115 22:02:19.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029315639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029323069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.766" endtime="20201115 22:02:19.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029315639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029323069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.057" endtime="20201115 22:02:19.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.065" endtime="20201115 22:02:19.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.763" endtime="20201115 22:02:19.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.762" endtime="20201115 22:02:19.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:19.072" level="INFO">${RESULT} = [{'time': 0.029323069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.029450292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:19.069" endtime="20201115 22:02:19.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:19.085" level="INFO">${OVERHEAD} = {'time': [0.029323069, 0.029450292, 0.029582319, 0.029709917, 0.029839, 0.029970653, 0.0300945, 0.030219014, 0.030349694, 0.030480181, 0.030606375, 0.030737347, 0.030866681, 0.030991333, 0.031116653, ...</msg>
<status status="PASS" starttime="20201115 22:02:19.073" endtime="20201115 22:02:19.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.090" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:19.089" endtime="20201115 22:02:19.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.092" level="INFO">VALUE: [7.429999999999243e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.235999999997272e-06, 7.236000000000742e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.193999999998563e-06, 7.305999999998591e-06, 7.181000000001936e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.208999999997606e-06, 7.222000000001172e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.222000000001172e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.2779999999994516e-06, 7.181000000001936e-06, 7.236000000000742e-06, 7.235999999993803e-06, 7.207999999994663e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.222000000001172e-06, 7.222000000001172e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.222000000001172e-06, 7.250000000000312e-06, 7.30600000000553e-06, 7.250000000000312e-06, 7.208000000001602e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.29200000000596e-06, 7.250000000000312e-06, 7.290999999999548e-06, 7.236000000000742e-06, 7.263999999999882e-06, 7.236000000000742e-06, 7.2779999999994516e-06, 7.250000000000312e-06]</msg>
<status status="PASS" starttime="20201115 22:02:19.091" endtime="20201115 22:02:19.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.086" endtime="20201115 22:02:19.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.095" endtime="20201115 22:02:19.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:19.099" endtime="20201115 22:02:19.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.097" endtime="20201115 22:02:19.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.093" endtime="20201115 22:02:19.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.730" endtime="20201115 22:02:19.120"></status>
</kw>
<msg timestamp="20201115 22:02:19.120" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.129" endtime="20201115 22:02:19.146"></status>
</kw>
<msg timestamp="20201115 22:02:19.146" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.127" endtime="20201115 22:02:19.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.149" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.147" endtime="20201115 22:02:19.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.150" endtime="20201115 22:02:19.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.124" endtime="20201115 22:02:19.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.122" endtime="20201115 22:02:19.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.158" endtime="20201115 22:02:19.446"></status>
</kw>
<msg timestamp="20201115 22:02:19.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022202389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.157" endtime="20201115 22:02:19.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022202389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.450" endtime="20201115 22:02:19.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.458" endtime="20201115 22:02:19.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.154" endtime="20201115 22:02:19.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.153" endtime="20201115 22:02:19.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:19.465" level="INFO">${RESULT} = [{'time': 0.022209833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.443999999998813e-06, 'source_diff': 7.443999999998813e-06}, {'time': 0.02233975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:19.461" endtime="20201115 22:02:19.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:19.478" level="INFO">${OVERHEAD} = {'time': [0.022209833, 0.02233975, 0.022468958, 0.022592694, 0.022720403, 0.022845333, 0.022970653, 0.023099736, 0.023229486, 0.023354278, 0.023478125, 0.023604236, 0.023732903, 0.023857722, 0.0239823...</msg>
<status status="PASS" starttime="20201115 22:02:19.466" endtime="20201115 22:02:19.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.482" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:19.481" endtime="20201115 22:02:19.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.485" level="INFO">VALUE: [7.443999999998813e-06, 7.193999999998563e-06, 7.222000000001172e-06, 7.263000000000408e-06, 7.222000000001172e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.222000000001172e-06, 7.222000000001172e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.2219999999977025e-06, 7.236000000000742e-06, 7.249999999996842e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.306000000002061e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.292000000002491e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.222000000001172e-06, 7.236000000000742e-06, 7.193999999998563e-06, 7.236999999996746e-06, 7.2919999999990215e-06, 7.222000000001172e-06, 7.250000000000312e-06, 7.235999999997272e-06, 7.235999999997272e-06, 7.249999999996842e-06, 7.249999999996842e-06, 7.2230000000006456e-06, 7.235999999997272e-06, 7.2919999999990215e-06, 7.2370000000002155e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.235999999997272e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.208000000001602e-06]</msg>
<status status="PASS" starttime="20201115 22:02:19.483" endtime="20201115 22:02:19.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.479" endtime="20201115 22:02:19.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.488" endtime="20201115 22:02:19.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:19.492" endtime="20201115 22:02:19.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.490" endtime="20201115 22:02:19.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.487" endtime="20201115 22:02:19.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.120" endtime="20201115 22:02:19.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.546" endtime="20201115 22:02:19.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.545" endtime="20201115 22:02:19.513"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.515" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.524" endtime="20201115 22:02:19.541"></status>
</kw>
<msg timestamp="20201115 22:02:19.541" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.522" endtime="20201115 22:02:19.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.543" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.542" endtime="20201115 22:02:19.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.545" endtime="20201115 22:02:19.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.520" endtime="20201115 22:02:19.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.517" endtime="20201115 22:02:19.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.554" endtime="20201115 22:02:19.842"></status>
</kw>
<msg timestamp="20201115 22:02:19.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024660514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02466825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:19.552" endtime="20201115 22:02:19.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024660514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02466825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:19.846" endtime="20201115 22:02:19.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.854" endtime="20201115 22:02:19.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.550" endtime="20201115 22:02:19.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.548" endtime="20201115 22:02:19.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:19.861" level="INFO">${RESULT} = [{'time': 0.02466825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.735999999997772e-06, 'source_diff': 7.735999999997772e-06}, {'time': 0.024799681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:19.857" endtime="20201115 22:02:19.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:19.874" level="INFO">${OVERHEAD} = {'time': [0.02466825, 0.024799681, 0.024937264, 0.025076181, 0.025212819, 0.025345972, 0.025481125, 0.025612556, 0.025745403, 0.025881236, 0.026015847, 0.026152083, 0.026291403, 0.026426972, 0.0265660...</msg>
<status status="PASS" starttime="20201115 22:02:19.861" endtime="20201115 22:02:19.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.878" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:19.877" endtime="20201115 22:02:19.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.881" level="INFO">VALUE: [7.735999999997772e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.527000000000228e-06, 7.540999999999798e-06, 7.527999999999702e-06, 7.556000000002311e-06, 7.486000000000992e-06, 7.5419999999992715e-06, 7.541000000003267e-06, 7.540999999999798e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.527999999999702e-06, 7.513000000000658e-06, 7.500000000000562e-06, 7.584000000001451e-06, 7.514000000000132e-06, 7.540999999999798e-06, 7.540999999999798e-06, 7.540999999999798e-06, 7.555000000002837e-06, 7.457999999998383e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.527000000000228e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.542000000002741e-06, 7.583000000001977e-06, 7.540999999999798e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 7.514000000000132e-06, 7.527000000000228e-06, 7.554999999999368e-06, 7.556000000002311e-06, 7.527000000000228e-06, 7.5419999999992715e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.583999999997981e-06, 7.527999999999702e-06, 7.554999999999368e-06, 7.527999999999702e-06]</msg>
<status status="PASS" starttime="20201115 22:02:19.879" endtime="20201115 22:02:19.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.874" endtime="20201115 22:02:19.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.884" endtime="20201115 22:02:19.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:19.888" endtime="20201115 22:02:19.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.886" endtime="20201115 22:02:19.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.883" endtime="20201115 22:02:19.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.515" endtime="20201115 22:02:19.908"></status>
</kw>
<msg timestamp="20201115 22:02:19.909" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.917" endtime="20201115 22:02:19.934"></status>
</kw>
<msg timestamp="20201115 22:02:19.935" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.916" endtime="20201115 22:02:19.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.937" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.936" endtime="20201115 22:02:19.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.938" endtime="20201115 22:02:19.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.913" endtime="20201115 22:02:19.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.911" endtime="20201115 22:02:19.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.947" endtime="20201115 22:02:20.234"></status>
</kw>
<msg timestamp="20201115 22:02:20.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.946" endtime="20201115 22:02:20.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.238" endtime="20201115 22:02:20.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.246" endtime="20201115 22:02:20.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.943" endtime="20201115 22:02:20.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.941" endtime="20201115 22:02:20.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:20.252" level="INFO">${RESULT} = [{'time': 0.022105347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.022243236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:20.249" endtime="20201115 22:02:20.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:20.309" level="INFO">${OVERHEAD} = {'time': [0.022105347, 0.022243236, 0.022378125, 0.022512083, 0.022645639, 0.022777167, 0.022913306, 0.023047639, 0.023179444, 0.023315736, 0.023449875, 0.023584514, 0.023719792, 0.023854153, 0.023986...</msg>
<status status="PASS" starttime="20201115 22:02:20.253" endtime="20201115 22:02:20.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.313" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:20.312" endtime="20201115 22:02:20.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.316" level="INFO">VALUE: [7.722000000001672e-06, 7.486000000000992e-06, 7.527999999999702e-06, 7.527000000000228e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.584000000001451e-06, 7.556000000002311e-06, 7.554999999999368e-06, 7.611000000001117e-06, 7.514000000000132e-06, 7.556000000002311e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.584000000001451e-06, 7.528000000003171e-06, 7.597000000001547e-06, 7.597999999997551e-06, 7.583000000001977e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.554999999999368e-06, 7.527999999999702e-06, 7.582999999998508e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.554999999999368e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.540999999999798e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.582999999998508e-06, 7.514000000000132e-06, 7.513999999996662e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.555999999998841e-06]</msg>
<status status="PASS" starttime="20201115 22:02:20.315" endtime="20201115 22:02:20.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.310" endtime="20201115 22:02:20.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.319" endtime="20201115 22:02:20.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:20.322" endtime="20201115 22:02:20.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.321" endtime="20201115 22:02:20.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.318" endtime="20201115 22:02:20.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.909" endtime="20201115 22:02:20.343"></status>
</kw>
<msg timestamp="20201115 22:02:20.343" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.353" endtime="20201115 22:02:20.370"></status>
</kw>
<msg timestamp="20201115 22:02:20.370" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.351" endtime="20201115 22:02:20.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.371" endtime="20201115 22:02:20.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.374" endtime="20201115 22:02:20.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.348" endtime="20201115 22:02:20.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.346" endtime="20201115 22:02:20.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.383" endtime="20201115 22:02:20.668"></status>
</kw>
<msg timestamp="20201115 22:02:20.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.381" endtime="20201115 22:02:20.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.672" endtime="20201115 22:02:20.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.680" endtime="20201115 22:02:20.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.379" endtime="20201115 22:02:20.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.377" endtime="20201115 22:02:20.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:20.686" level="INFO">${RESULT} = [{'time': 0.022598403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.022737208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:20.683" endtime="20201115 22:02:20.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:20.700" level="INFO">${OVERHEAD} = {'time': [0.022598403, 0.022737208, 0.022874056, 0.023006806, 0.023138486, 0.023277806, 0.023415542, 0.023551139, 0.023686014, 0.023822903, 0.023958875, 0.024098458, 0.024236833, 0.024373486, 0.024513...</msg>
<status status="PASS" starttime="20201115 22:02:20.688" endtime="20201115 22:02:20.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.704" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:20.703" endtime="20201115 22:02:20.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.707" level="INFO">VALUE: [7.736000000001242e-06, 7.582999999998508e-06, 7.4870000000004655e-06, 7.542000000002741e-06, 7.514000000000132e-06, 7.528000000003171e-06, 7.5419999999992715e-06, 7.569999999998411e-06, 7.569999999998411e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.540999999999798e-06, 7.527000000000228e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 7.554999999999368e-06, 7.514000000000132e-06, 7.5419999999992715e-06, 7.639000000000257e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.445000000001756e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.499999999997092e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.500000000000562e-06, 7.583999999997981e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.486000000000992e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.611000000001117e-06, 7.527999999999702e-06, 7.582999999998508e-06]</msg>
<status status="PASS" starttime="20201115 22:02:20.706" endtime="20201115 22:02:20.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.701" endtime="20201115 22:02:20.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.710" endtime="20201115 22:02:20.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:20.713" endtime="20201115 22:02:20.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.712" endtime="20201115 22:02:20.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.708" endtime="20201115 22:02:20.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.344" endtime="20201115 22:02:20.734"></status>
</kw>
<msg timestamp="20201115 22:02:20.734" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.744" endtime="20201115 22:02:20.761"></status>
</kw>
<msg timestamp="20201115 22:02:20.761" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.742" endtime="20201115 22:02:20.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.764" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.762" endtime="20201115 22:02:20.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.765" endtime="20201115 22:02:20.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.739" endtime="20201115 22:02:20.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.737" endtime="20201115 22:02:20.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.774" endtime="20201115 22:02:21.060"></status>
</kw>
<msg timestamp="20201115 22:02:21.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023084292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.772" endtime="20201115 22:02:21.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023084292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.064" endtime="20201115 22:02:21.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.073" endtime="20201115 22:02:21.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.770" endtime="20201115 22:02:21.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.768" endtime="20201115 22:02:21.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:21.080" level="INFO">${RESULT} = [{'time': 0.023092014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.023230014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:21.076" endtime="20201115 22:02:21.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:21.093" level="INFO">${OVERHEAD} = {'time': [0.023092014, 0.023230014, 0.023365847, 0.023498181, 0.023636694, 0.023771458, 0.023907014, 0.024044722, 0.024183917, 0.02432325, 0.024456542, 0.024594417, 0.024730542, 0.024862444, 0.0249963...</msg>
<status status="PASS" starttime="20201115 22:02:21.081" endtime="20201115 22:02:21.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.097" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:21.096" endtime="20201115 22:02:21.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.100" level="INFO">VALUE: [7.722000000001672e-06, 7.514000000000132e-06, 7.540999999999798e-06, 7.527999999999702e-06, 7.513000000000658e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.514000000000132e-06, 7.5419999999992715e-06, 7.542000000002741e-06, 7.542000000002741e-06, 7.570000000001881e-06, 7.584000000001451e-06, 7.513000000000658e-06, 7.500000000000562e-06, 7.554999999999368e-06, 7.540999999999798e-06, 7.584000000001451e-06, 7.514000000000132e-06, 7.4719999999979525e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.486000000000992e-06, 7.528000000003171e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.556000000002311e-06, 7.486000000000992e-06, 7.527000000000228e-06, 7.527000000000228e-06, 7.514000000000132e-06, 7.582999999998508e-06, 7.527000000000228e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.527000000000228e-06, 7.5419999999992715e-06, 7.540999999999798e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.584000000001451e-06, 7.513000000000658e-06]</msg>
<status status="PASS" starttime="20201115 22:02:21.098" endtime="20201115 22:02:21.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.094" endtime="20201115 22:02:21.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.103" endtime="20201115 22:02:21.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:21.106" endtime="20201115 22:02:21.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.105" endtime="20201115 22:02:21.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.101" endtime="20201115 22:02:21.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.735" endtime="20201115 22:02:21.127"></status>
</kw>
<msg timestamp="20201115 22:02:21.127" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.136" endtime="20201115 22:02:21.153"></status>
</kw>
<msg timestamp="20201115 22:02:21.154" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.134" endtime="20201115 22:02:21.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.156" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.155" endtime="20201115 22:02:21.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.157" endtime="20201115 22:02:21.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.132" endtime="20201115 22:02:21.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.130" endtime="20201115 22:02:21.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.166" endtime="20201115 22:02:21.450"></status>
</kw>
<msg timestamp="20201115 22:02:21.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022763347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.165" endtime="20201115 22:02:21.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022763347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.455" endtime="20201115 22:02:21.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.463" endtime="20201115 22:02:21.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.162" endtime="20201115 22:02:21.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.160" endtime="20201115 22:02:21.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:21.470" level="INFO">${RESULT} = [{'time': 0.022763347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.022903056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:21.466" endtime="20201115 22:02:21.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:21.483" level="INFO">${OVERHEAD} = {'time': [0.022763347, 0.022903056, 0.02303875, 0.023172042, 0.023304833, 0.023436861, 0.023576056, 0.023708389, 0.023845597, 0.023982097, 0.024117653, 0.024248917, 0.024382458, 0.024515208, 0.0246466...</msg>
<status status="PASS" starttime="20201115 22:02:21.471" endtime="20201115 22:02:21.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.488" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:21.486" endtime="20201115 22:02:21.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.490" level="INFO">VALUE: [7.777999999999952e-06, 7.514000000000132e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.583000000001977e-06, 7.5419999999992715e-06, 7.556000000002311e-06, 7.5419999999992715e-06, 7.568999999998938e-06, 7.569000000002407e-06, 7.486000000000992e-06, 7.527999999999702e-06, 7.527000000000228e-06, 7.540999999999798e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.555000000002837e-06, 7.597000000001547e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.556000000002311e-06, 7.555999999998841e-06, 7.541000000003267e-06, 7.5419999999992715e-06, 7.556000000002311e-06, 7.527999999999702e-06, 7.554999999999368e-06, 7.555999999998841e-06, 7.569000000002407e-06, 7.528000000003171e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.542000000002741e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.583000000001977e-06, 7.542000000002741e-06, 7.555999999998841e-06, 7.513000000000658e-06, 7.540999999999798e-06, 7.5969999999980775e-06, 7.584000000001451e-06, 7.540999999999798e-06, 7.540999999999798e-06]</msg>
<status status="PASS" starttime="20201115 22:02:21.489" endtime="20201115 22:02:21.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.484" endtime="20201115 22:02:21.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.493" endtime="20201115 22:02:21.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:21.496" endtime="20201115 22:02:21.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.495" endtime="20201115 22:02:21.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.491" endtime="20201115 22:02:21.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.128" endtime="20201115 22:02:21.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.514" endtime="20201115 22:02:21.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.513" endtime="20201115 22:02:21.517"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.520" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.528" endtime="20201115 22:02:21.546"></status>
</kw>
<msg timestamp="20201115 22:02:21.547" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.527" endtime="20201115 22:02:21.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.549" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.548" endtime="20201115 22:02:21.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.550" endtime="20201115 22:02:21.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.524" endtime="20201115 22:02:21.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.522" endtime="20201115 22:02:21.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.560" endtime="20201115 22:02:21.844"></status>
</kw>
<msg timestamp="20201115 22:02:21.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025120819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025128833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.558" endtime="20201115 22:02:21.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025120819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025128833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.848" endtime="20201115 22:02:21.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.857" endtime="20201115 22:02:21.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.556" endtime="20201115 22:02:21.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.554" endtime="20201115 22:02:21.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:21.864" level="INFO">${RESULT} = [{'time': 0.025128833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.025273194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:21.861" endtime="20201115 22:02:21.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:21.878" level="INFO">${OVERHEAD} = {'time': [0.025128833, 0.025273194, 0.025419542, 0.025560653, 0.025707944, 0.025854167, 0.025997042, 0.026140556, 0.026280736, 0.026422389, 0.026564042, 0.026709861, 0.026855278, 0.026999236, 0.027140...</msg>
<status status="PASS" starttime="20201115 22:02:21.865" endtime="20201115 22:02:21.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.883" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:21.882" endtime="20201115 22:02:21.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.885" level="INFO">VALUE: [8.014000000000632e-06, 7.804999999999618e-06, 7.805999999999091e-06, 7.819999999998661e-06, 7.804999999999618e-06, 7.805999999999091e-06, 7.8340000000017e-06, 7.819999999998661e-06, 7.777999999999952e-06, 7.833000000002227e-06, 7.805999999999091e-06, 7.819000000002657e-06, 7.791999999999522e-06, 7.846999999998328e-06, 7.804999999999618e-06, 7.833000000002227e-06, 7.819999999998661e-06, 7.82000000000213e-06, 7.847000000001797e-06, 7.818999999999188e-06, 7.791999999999522e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.805000000003087e-06, 7.833000000002227e-06, 7.819999999998661e-06, 7.82000000000213e-06, 7.791999999999522e-06, 7.833000000002227e-06, 7.833000000002227e-06, 7.861000000001367e-06, 7.792000000002991e-06, 7.819999999998661e-06, 7.806000000002561e-06, 7.861000000001367e-06, 7.804999999999618e-06, 7.805999999999091e-06, 7.777000000000478e-06, 7.832999999998758e-06, 7.846999999998328e-06, 7.860999999997897e-06, 7.806000000002561e-06, 7.805999999999091e-06, 7.846999999998328e-06, 7.791999999999522e-06, 7.805999999999091e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.750000000000812e-06, 7.819999999998661e-06]</msg>
<status status="PASS" starttime="20201115 22:02:21.884" endtime="20201115 22:02:21.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.879" endtime="20201115 22:02:21.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.888" endtime="20201115 22:02:21.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:21.891" endtime="20201115 22:02:21.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.890" endtime="20201115 22:02:21.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.886" endtime="20201115 22:02:21.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.520" endtime="20201115 22:02:21.912"></status>
</kw>
<msg timestamp="20201115 22:02:21.912" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.921" endtime="20201115 22:02:21.938"></status>
</kw>
<msg timestamp="20201115 22:02:21.939" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.920" endtime="20201115 22:02:21.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.941" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.940" endtime="20201115 22:02:21.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.943" endtime="20201115 22:02:21.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.917" endtime="20201115 22:02:21.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.915" endtime="20201115 22:02:21.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.952" endtime="20201115 22:02:22.238"></status>
</kw>
<msg timestamp="20201115 22:02:22.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022052472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.951" endtime="20201115 22:02:22.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022052472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.242" endtime="20201115 22:02:22.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.250" endtime="20201115 22:02:22.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.948" endtime="20201115 22:02:22.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.947" endtime="20201115 22:02:22.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:22.257" level="INFO">${RESULT} = [{'time': 0.022052472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.022196167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:22.254" endtime="20201115 22:02:22.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:22.270" level="INFO">${OVERHEAD} = {'time': [0.022052472, 0.022196167, 0.022342667, 0.022482306, 0.022628389, 0.022767903, 0.022909958, 0.023049458, 0.023190583, 0.023330222, 0.023469764, 0.023609236, 0.023753861, 0.023895903, 0.024035...</msg>
<status status="PASS" starttime="20201115 22:02:22.258" endtime="20201115 22:02:22.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.275" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:22.274" endtime="20201115 22:02:22.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.277" level="INFO">VALUE: [7.986000000001492e-06, 7.819999999998661e-06, 7.8340000000017e-06, 7.82000000000213e-06, 7.805999999999091e-06, 7.833999999998231e-06, 7.804999999999618e-06, 7.832999999998758e-06, 7.804999999999618e-06, 7.833000000002227e-06, 7.861000000001367e-06, 7.804999999999618e-06, 7.833000000002227e-06, 7.833999999998231e-06, 7.819999999998661e-06, 7.750000000000812e-06, 7.805999999999091e-06, 7.82000000000213e-06, 7.818999999999188e-06, 7.833999999998231e-06, 7.819999999998661e-06, 7.805999999999091e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.819000000002657e-06, 7.805999999999091e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.847000000001797e-06, 7.805999999999091e-06, 7.860999999997897e-06, 7.818999999999188e-06, 7.764000000000382e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.818999999999188e-06, 7.777999999999952e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.832999999998758e-06, 7.804999999999618e-06, 7.749999999997342e-06, 7.791999999999522e-06, 7.818999999999188e-06, 7.791999999999522e-06, 7.84800000000127e-06, 7.805999999999091e-06, 7.805999999999091e-06, 7.777000000000478e-06]</msg>
<status status="PASS" starttime="20201115 22:02:22.276" endtime="20201115 22:02:22.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.271" endtime="20201115 22:02:22.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.280" endtime="20201115 22:02:22.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:22.283" endtime="20201115 22:02:22.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.282" endtime="20201115 22:02:22.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.279" endtime="20201115 22:02:22.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.913" endtime="20201115 22:02:22.304"></status>
</kw>
<msg timestamp="20201115 22:02:22.304" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.313" endtime="20201115 22:02:22.331"></status>
</kw>
<msg timestamp="20201115 22:02:22.331" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.311" endtime="20201115 22:02:22.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.334" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.332" endtime="20201115 22:02:22.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.335" endtime="20201115 22:02:22.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.309" endtime="20201115 22:02:22.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.307" endtime="20201115 22:02:22.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.344" endtime="20201115 22:02:22.630"></status>
</kw>
<msg timestamp="20201115 22:02:22.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02243775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:22.343" endtime="20201115 22:02:22.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02243775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:22.634" endtime="20201115 22:02:22.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.642" endtime="20201115 22:02:22.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.340" endtime="20201115 22:02:22.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.339" endtime="20201115 22:02:22.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:22.649" level="INFO">${RESULT} = [{'time': 0.022445764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.022588, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:02:22.646" endtime="20201115 22:02:22.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:22.662" level="INFO">${OVERHEAD} = {'time': [0.022445764, 0.022588, 0.022732458, 0.022875764, 0.023023292, 0.023168486, 0.023315861, 0.023461319, 0.023603319, 0.023750875, 0.023895222, 0.024041583, 0.024189153, 0.024328236, 0.024475806...</msg>
<status status="PASS" starttime="20201115 22:02:22.650" endtime="20201115 22:02:22.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.667" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:22.666" endtime="20201115 22:02:22.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.669" level="INFO">VALUE: [8.014000000000632e-06, 7.777999999999952e-06, 7.818999999999188e-06, 7.861000000001367e-06, 7.805999999999091e-06, 7.860999999997897e-06, 7.818999999999188e-06, 7.847000000001797e-06, 7.819000000002657e-06, 7.806000000002561e-06, 7.804999999999618e-06, 7.804999999999618e-06, 7.82000000000213e-06, 7.804999999999618e-06, 7.819999999998661e-06, 7.84800000000127e-06, 7.791999999999522e-06, 7.832999999998758e-06, 7.805999999999091e-06, 7.805000000003087e-06, 7.82000000000213e-06, 7.805000000003087e-06, 7.832999999998758e-06, 7.805999999999091e-06, 7.804999999999618e-06, 7.818999999999188e-06, 7.819000000002657e-06, 7.833999999998231e-06, 7.818999999999188e-06, 7.818999999999188e-06, 7.833000000002227e-06, 7.735999999997772e-06, 7.861000000001367e-06, 7.833999999998231e-06, 7.82000000000213e-06, 7.86200000000084e-06, 7.833000000002227e-06, 7.806000000002561e-06, 7.82000000000213e-06, 7.832999999998758e-06, 7.847999999997801e-06, 7.819999999998661e-06, 7.82000000000213e-06, 7.805999999999091e-06, 7.805999999999091e-06, 7.805999999999091e-06, 7.819999999998661e-06, 7.82000000000213e-06, 7.791999999999522e-06, 7.806000000002561e-06]</msg>
<status status="PASS" starttime="20201115 22:02:22.668" endtime="20201115 22:02:22.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.663" endtime="20201115 22:02:22.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.672" endtime="20201115 22:02:22.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:22.676" endtime="20201115 22:02:22.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.674" endtime="20201115 22:02:22.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.671" endtime="20201115 22:02:22.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.305" endtime="20201115 22:02:22.696"></status>
</kw>
<msg timestamp="20201115 22:02:22.696" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.706" endtime="20201115 22:02:22.722"></status>
</kw>
<msg timestamp="20201115 22:02:22.723" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.704" endtime="20201115 22:02:22.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.725" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.724" endtime="20201115 22:02:22.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.726" endtime="20201115 22:02:22.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.702" endtime="20201115 22:02:22.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.699" endtime="20201115 22:02:22.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.736" endtime="20201115 22:02:23.021"></status>
</kw>
<msg timestamp="20201115 22:02:23.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022383028, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:22.735" endtime="20201115 22:02:23.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022383028, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:23.025" endtime="20201115 22:02:23.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.033" endtime="20201115 22:02:23.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.732" endtime="20201115 22:02:23.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.730" endtime="20201115 22:02:23.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:23.040" level="INFO">${RESULT} = [{'time': 0.022383028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.022523889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:23.037" endtime="20201115 22:02:23.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:23.053" level="INFO">${OVERHEAD} = {'time': [0.022383028, 0.022523889, 0.022668097, 0.022808931, 0.022948306, 0.023090486, 0.023231875, 0.023374736, 0.02351425, 0.023653764, 0.0237985, 0.023938917, 0.024082042, 0.024225847, 0.024369931...</msg>
<status status="PASS" starttime="20201115 22:02:23.041" endtime="20201115 22:02:23.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.058" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:23.057" endtime="20201115 22:02:23.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.060" level="INFO">VALUE: [8.028000000000202e-06, 7.819999999998661e-06, 7.819000000002657e-06, 7.750000000000812e-06, 7.82000000000213e-06, 7.804999999999618e-06, 7.805999999999091e-06, 7.804999999999618e-06, 7.777999999999952e-06, 7.833000000002227e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.792000000002991e-06, 7.749999999997342e-06, 7.8340000000017e-06, 7.818999999999188e-06, 7.819000000002657e-06, 7.818999999999188e-06, 7.833000000002227e-06, 7.847000000001797e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.833999999998231e-06, 7.8340000000017e-06, 7.804999999999618e-06, 7.82000000000213e-06, 7.82000000000213e-06, 7.819000000002657e-06, 7.804999999999618e-06, 7.805000000003087e-06, 7.82000000000213e-06, 7.818999999999188e-06, 7.833000000002227e-06, 7.847999999997801e-06, 7.818999999999188e-06, 7.791000000000048e-06, 7.818999999999188e-06, 7.804999999999618e-06, 7.805999999999091e-06, 7.805999999999091e-06, 7.791000000000048e-06, 7.846999999998328e-06, 7.819999999998661e-06, 7.833999999998231e-06, 7.749999999997342e-06, 7.791999999999522e-06, 7.819000000002657e-06, 7.82000000000213e-06, 7.804999999999618e-06, 7.819999999998661e-06]</msg>
<status status="PASS" starttime="20201115 22:02:23.059" endtime="20201115 22:02:23.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.054" endtime="20201115 22:02:23.061"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.063" endtime="20201115 22:02:23.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:23.067" endtime="20201115 22:02:23.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.065" endtime="20201115 22:02:23.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.062" endtime="20201115 22:02:23.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.697" endtime="20201115 22:02:23.088"></status>
</kw>
<msg timestamp="20201115 22:02:23.088" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.097" endtime="20201115 22:02:23.114"></status>
</kw>
<msg timestamp="20201115 22:02:23.115" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.095" endtime="20201115 22:02:23.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.117" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.116" endtime="20201115 22:02:23.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.118" endtime="20201115 22:02:23.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.093" endtime="20201115 22:02:23.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.091" endtime="20201115 22:02:23.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.128" endtime="20201115 22:02:23.413"></status>
</kw>
<msg timestamp="20201115 22:02:23.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02232575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02233375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:23.127" endtime="20201115 22:02:23.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02232575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02233375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:23.417" endtime="20201115 22:02:23.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.426" endtime="20201115 22:02:23.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.124" endtime="20201115 22:02:23.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.122" endtime="20201115 22:02:23.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:23.432" level="INFO">${RESULT} = [{'time': 0.02233375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.022474764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:23.429" endtime="20201115 22:02:23.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:23.446" level="INFO">${OVERHEAD} = {'time': [0.02233375, 0.022474764, 0.022615208, 0.022760875, 0.022901736, 0.023040944, 0.023186514, 0.023331528, 0.023473833, 0.023618569, 0.0237625, 0.023903486, 0.02404675, 0.024187722, 0.024329097,...</msg>
<status status="PASS" starttime="20201115 22:02:23.433" endtime="20201115 22:02:23.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.451" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:23.450" endtime="20201115 22:02:23.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.453" level="INFO">VALUE: [8.000000000001062e-06, 7.806000000002561e-06, 7.819000000002657e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.847000000001797e-06, 7.818999999999188e-06, 7.762999999997439e-06, 7.818999999999188e-06, 7.805000000003087e-06, 7.832999999998758e-06, 7.804999999999618e-06, 7.818999999999188e-06, 7.749999999997342e-06, 7.819999999998661e-06, 7.819999999998661e-06, 7.819999999998661e-06, 7.735999999997772e-06, 7.806000000002561e-06, 7.818999999999188e-06, 7.819000000002657e-06, 7.847000000001797e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.804999999999618e-06, 7.763999999996912e-06, 7.791999999999522e-06, 7.847000000001797e-06, 7.805999999999091e-06, 7.804999999999618e-06, 7.8340000000017e-06, 7.819999999998661e-06, 7.833999999998231e-06, 7.819000000002657e-06, 7.805999999999091e-06, 7.847000000001797e-06, 7.833000000002227e-06, 7.819999999998661e-06, 7.764000000000382e-06, 7.806000000002561e-06, 7.819000000002657e-06, 7.818999999999188e-06, 7.82000000000213e-06, 7.806000000002561e-06, 7.806000000002561e-06, 7.750000000000812e-06, 7.82000000000213e-06, 7.805000000003087e-06]</msg>
<status status="PASS" starttime="20201115 22:02:23.452" endtime="20201115 22:02:23.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.447" endtime="20201115 22:02:23.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.457" endtime="20201115 22:02:23.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:23.460" endtime="20201115 22:02:23.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.459" endtime="20201115 22:02:23.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.455" endtime="20201115 22:02:23.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.088" endtime="20201115 22:02:23.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.519" endtime="20201115 22:02:23.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.518" endtime="20201115 22:02:23.481"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.483" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.492" endtime="20201115 22:02:23.509"></status>
</kw>
<msg timestamp="20201115 22:02:23.509" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.491" endtime="20201115 22:02:23.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.512" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.510" endtime="20201115 22:02:23.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.513" endtime="20201115 22:02:23.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.488" endtime="20201115 22:02:23.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.486" endtime="20201115 22:02:23.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.522" endtime="20201115 22:02:23.807"></status>
</kw>
<msg timestamp="20201115 22:02:23.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024266042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024274333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.520" endtime="20201115 22:02:23.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024266042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024274333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.811" endtime="20201115 22:02:23.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.819" endtime="20201115 22:02:23.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.518" endtime="20201115 22:02:23.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.516" endtime="20201115 22:02:23.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:23.826" level="INFO">${RESULT} = [{'time': 0.024274333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.290999999997078e-06, 'source_diff': 8.290999999997078e-06}, {'time': 0.024424278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:23.823" endtime="20201115 22:02:23.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:23.839" level="INFO">${OVERHEAD} = {'time': [0.024274333, 0.024424278, 0.024578903, 0.024730556, 0.024878097, 0.025027681, 0.025179625, 0.025330028, 0.025479222, 0.025627236, 0.025777944, 0.025927472, 0.026076833, 0.026229847, 0.026382...</msg>
<status status="PASS" starttime="20201115 22:02:23.827" endtime="20201115 22:02:23.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.844" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:23.843" endtime="20201115 22:02:23.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.847" level="INFO">VALUE: [8.290999999997078e-06, 8.111000000001617e-06, 8.083999999998481e-06, 8.09800000000152e-06, 8.152999999996857e-06, 8.097999999998051e-06, 8.111000000001617e-06, 8.180999999999466e-06, 8.139000000000757e-06, 8.111000000001617e-06, 8.097000000002047e-06, 8.054999999999868e-06, 8.111000000001617e-06, 8.097000000002047e-06, 8.111000000001617e-06, 8.08400000000195e-06, 8.125000000001187e-06, 8.138000000001283e-06, 8.111000000001617e-06, 8.111000000001617e-06, 8.09800000000152e-06, 8.124999999997717e-06, 8.096999999998578e-06, 8.09800000000152e-06, 8.153000000000327e-06, 8.125000000001187e-06, 8.110999999998147e-06, 8.111000000001617e-06, 8.110999999998147e-06, 8.125000000001187e-06, 8.111000000001617e-06, 8.097000000002047e-06, 8.054999999999868e-06, 8.124999999997717e-06, 8.097000000002047e-06, 8.124999999997717e-06, 8.111000000001617e-06, 8.125000000001187e-06, 8.138999999997287e-06, 8.096999999998578e-06, 8.110999999998147e-06, 8.153000000000327e-06, 8.041999999999772e-06, 8.166000000000423e-06, 8.124999999997717e-06, 8.125000000001187e-06, 8.139000000000757e-06, 8.138999999997287e-06, 8.096999999998578e-06, 8.138999999997287e-06]</msg>
<status status="PASS" starttime="20201115 22:02:23.845" endtime="20201115 22:02:23.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.840" endtime="20201115 22:02:23.848"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.850" endtime="20201115 22:02:23.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:23.854" endtime="20201115 22:02:23.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.852" endtime="20201115 22:02:23.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.848" endtime="20201115 22:02:23.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.484" endtime="20201115 22:02:23.874"></status>
</kw>
<msg timestamp="20201115 22:02:23.875" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.884" endtime="20201115 22:02:23.902"></status>
</kw>
<msg timestamp="20201115 22:02:23.903" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.882" endtime="20201115 22:02:23.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.905" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.904" endtime="20201115 22:02:23.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.906" endtime="20201115 22:02:23.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.880" endtime="20201115 22:02:23.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.877" endtime="20201115 22:02:23.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.916" endtime="20201115 22:02:24.202"></status>
</kw>
<msg timestamp="20201115 22:02:24.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023171986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023180278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.915" endtime="20201115 22:02:24.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023171986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023180278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.207" endtime="20201115 22:02:24.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.215" endtime="20201115 22:02:24.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.912" endtime="20201115 22:02:24.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.910" endtime="20201115 22:02:24.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:24.221" level="INFO">${RESULT} = [{'time': 0.023180278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.023333028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:24.218" endtime="20201115 22:02:24.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:24.235" level="INFO">${OVERHEAD} = {'time': [0.023180278, 0.023333028, 0.023481208, 0.023634611, 0.023782042, 0.023931764, 0.024087486, 0.024239264, 0.024386611, 0.024540694, 0.0246925, 0.024848028, 0.025002653, 0.025155792, 0.02530530...</msg>
<status status="PASS" starttime="20201115 22:02:24.222" endtime="20201115 22:02:24.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.240" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:24.239" endtime="20201115 22:02:24.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.242" level="INFO">VALUE: [8.292000000000022e-06, 8.069999999998911e-06, 8.111000000001617e-06, 8.096999999998578e-06, 8.180999999999466e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.08400000000195e-06, 8.055999999999341e-06, 8.110999999998147e-06, 8.083999999998481e-06, 8.138000000001283e-06, 8.111000000001617e-06, 8.110999999998147e-06, 8.193999999999563e-06, 8.096999999998578e-06, 8.153000000000327e-06, 8.110999999998147e-06, 8.125000000001187e-06, 8.124999999997717e-06, 8.111000000001617e-06, 8.11200000000109e-06, 8.069999999998911e-06, 8.111000000001617e-06, 8.124999999997717e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.125000000001187e-06, 8.083000000002477e-06, 8.083999999998481e-06, 8.111000000001617e-06, 8.097000000002047e-06, 8.125000000001187e-06, 8.110999999998147e-06, 8.083000000002477e-06, 8.124999999997717e-06, 8.111000000001617e-06, 8.125000000001187e-06, 8.09800000000152e-06, 8.09800000000152e-06, 8.139000000000757e-06, 8.07000000000238e-06, 8.139000000000757e-06, 8.125000000001187e-06, 8.139000000000757e-06, 8.110999999998147e-06]</msg>
<status status="PASS" starttime="20201115 22:02:24.241" endtime="20201115 22:02:24.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.236" endtime="20201115 22:02:24.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.245" endtime="20201115 22:02:24.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:24.248" endtime="20201115 22:02:24.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.247" endtime="20201115 22:02:24.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.243" endtime="20201115 22:02:24.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.875" endtime="20201115 22:02:24.269"></status>
</kw>
<msg timestamp="20201115 22:02:24.269" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.278" endtime="20201115 22:02:24.295"></status>
</kw>
<msg timestamp="20201115 22:02:24.296" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.276" endtime="20201115 22:02:24.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.298" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.297" endtime="20201115 22:02:24.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.299" endtime="20201115 22:02:24.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.274" endtime="20201115 22:02:24.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.272" endtime="20201115 22:02:24.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.309" endtime="20201115 22:02:24.595"></status>
</kw>
<msg timestamp="20201115 22:02:24.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022059403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.308" endtime="20201115 22:02:24.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022059403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.599" endtime="20201115 22:02:24.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.607" endtime="20201115 22:02:24.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.305" endtime="20201115 22:02:24.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.303" endtime="20201115 22:02:24.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:24.614" level="INFO">${RESULT} = [{'time': 0.022059403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.306000000003061e-06, 'source_diff': 8.306000000003061e-06}, {'time': 0.022212944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:24.610" endtime="20201115 22:02:24.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:24.628" level="INFO">${OVERHEAD} = {'time': [0.022059403, 0.022212944, 0.022365958, 0.022519528, 0.022667944, 0.022818806, 0.022973708, 0.023125097, 0.023276236, 0.023425375, 0.023574417, 0.023723806, 0.023878222, 0.024033306, 0.024188...</msg>
<status status="PASS" starttime="20201115 22:02:24.615" endtime="20201115 22:02:24.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.632" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:24.631" endtime="20201115 22:02:24.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.634" level="INFO">VALUE: [8.306000000003061e-06, 8.096999999998578e-06, 8.110999999998147e-06, 8.139000000000757e-06, 8.110999999998147e-06, 8.09800000000152e-06, 8.110999999998147e-06, 8.125000000001187e-06, 8.124999999997717e-06, 8.166999999999897e-06, 8.08400000000195e-06, 8.09800000000152e-06, 8.179999999999993e-06, 8.09800000000152e-06, 8.096999999998578e-06, 8.096999999998578e-06, 8.153000000000327e-06, 8.082999999999008e-06, 8.125000000001187e-06, 8.179999999999993e-06, 8.124999999997717e-06, 8.111000000001617e-06, 8.124999999997717e-06, 8.068999999999438e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.138999999997287e-06, 8.111000000001617e-06, 8.110999999998147e-06, 8.055999999999341e-06, 8.083000000002477e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.083999999998481e-06, 8.096999999998578e-06, 8.096999999998578e-06, 8.125000000001187e-06, 8.110999999998147e-06, 8.097999999998051e-06, 8.153000000000327e-06, 8.110999999998147e-06, 8.11200000000109e-06, 8.096999999998578e-06, 8.124999999997717e-06, 8.193999999999563e-06, 8.111000000001617e-06, 8.110999999998147e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.166000000000423e-06]</msg>
<status status="PASS" starttime="20201115 22:02:24.633" endtime="20201115 22:02:24.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.629" endtime="20201115 22:02:24.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.638" endtime="20201115 22:02:24.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:24.641" endtime="20201115 22:02:24.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.640" endtime="20201115 22:02:24.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.636" endtime="20201115 22:02:24.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.270" endtime="20201115 22:02:24.662"></status>
</kw>
<msg timestamp="20201115 22:02:24.662" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.671" endtime="20201115 22:02:24.688"></status>
</kw>
<msg timestamp="20201115 22:02:24.689" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.669" endtime="20201115 22:02:24.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.691" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.690" endtime="20201115 22:02:24.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.692" endtime="20201115 22:02:24.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.667" endtime="20201115 22:02:24.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.664" endtime="20201115 22:02:24.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.702" endtime="20201115 22:02:24.987"></status>
</kw>
<msg timestamp="20201115 22:02:24.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022064292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.701" endtime="20201115 22:02:24.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022064292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.991" endtime="20201115 22:02:24.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.000" endtime="20201115 22:02:25.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.698" endtime="20201115 22:02:25.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.696" endtime="20201115 22:02:25.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:25.006" level="INFO">${RESULT} = [{'time': 0.022064292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.022212472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:25.003" endtime="20201115 22:02:25.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:25.021" level="INFO">${OVERHEAD} = {'time': [0.022064292, 0.022212472, 0.022364792, 0.022515389, 0.022665167, 0.022818875, 0.022970375, 0.023123125, 0.023275847, 0.023425111, 0.023573, 0.023725486, 0.023874722, 0.024025069, 0.024180208...</msg>
<status status="PASS" starttime="20201115 22:02:25.007" endtime="20201115 22:02:25.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.025" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:25.024" endtime="20201115 22:02:25.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.028" level="INFO">VALUE: [8.305999999999591e-06, 8.111000000001617e-06, 8.041999999999772e-06, 8.111000000001617e-06, 8.111000000001617e-06, 8.138999999997287e-06, 8.111000000001617e-06, 8.125000000001187e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.111000000001617e-06, 8.139000000000757e-06, 8.054999999999868e-06, 8.138000000001283e-06, 8.125000000001187e-06, 8.111000000001617e-06, 8.125000000001187e-06, 8.111000000001617e-06, 8.096999999998578e-06, 8.096999999998578e-06, 8.111000000001617e-06, 8.125000000001187e-06, 8.166999999999897e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.111000000001617e-06, 8.124999999997717e-06, 8.111999999997621e-06, 8.124999999997717e-06, 8.097000000002047e-06, 8.097000000002047e-06, 8.097000000002047e-06, 8.096999999998578e-06, 8.055999999999341e-06, 8.111000000001617e-06, 8.111000000001617e-06, 8.096999999998578e-06, 8.124999999997717e-06, 8.138999999997287e-06, 8.138999999997287e-06, 8.125000000001187e-06, 8.110999999998147e-06, 8.111000000001617e-06, 8.069999999998911e-06, 8.152000000000853e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.097000000002047e-06, 8.124999999997717e-06, 8.139000000000757e-06]</msg>
<status status="PASS" starttime="20201115 22:02:25.026" endtime="20201115 22:02:25.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.021" endtime="20201115 22:02:25.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.031" endtime="20201115 22:02:25.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:25.034" endtime="20201115 22:02:25.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.033" endtime="20201115 22:02:25.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.029" endtime="20201115 22:02:25.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.662" endtime="20201115 22:02:25.055"></status>
</kw>
<msg timestamp="20201115 22:02:25.055" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.064" endtime="20201115 22:02:25.081"></status>
</kw>
<msg timestamp="20201115 22:02:25.082" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.062" endtime="20201115 22:02:25.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.084" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.083" endtime="20201115 22:02:25.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.085" endtime="20201115 22:02:25.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.060" endtime="20201115 22:02:25.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.057" endtime="20201115 22:02:25.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.095" endtime="20201115 22:02:25.381"></status>
</kw>
<msg timestamp="20201115 22:02:25.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021949111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021957417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.093" endtime="20201115 22:02:25.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021949111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021957417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.385" endtime="20201115 22:02:25.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.394" endtime="20201115 22:02:25.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.091" endtime="20201115 22:02:25.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.089" endtime="20201115 22:02:25.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:25.400" level="INFO">${RESULT} = [{'time': 0.021957417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.0221095, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:25.397" endtime="20201115 22:02:25.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:25.413" level="INFO">${OVERHEAD} = {'time': [0.021957417, 0.0221095, 0.022263931, 0.022413097, 0.022565569, 0.022719431, 0.022874125, 0.023022028, 0.023170056, 0.023320653, 0.023475528, 0.023629958, 0.023779528, 0.023929556, 0.02407880...</msg>
<status status="PASS" starttime="20201115 22:02:25.401" endtime="20201115 22:02:25.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.418" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:25.417" endtime="20201115 22:02:25.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.420" level="INFO">VALUE: [8.305999999999591e-06, 8.125000000001187e-06, 8.180999999999466e-06, 8.096999999998578e-06, 8.125000000001187e-06, 8.166999999999897e-06, 8.110999999998147e-06, 8.111000000001617e-06, 8.09800000000152e-06, 8.125000000001187e-06, 8.110999999998147e-06, 8.179999999999993e-06, 8.125000000001187e-06, 8.11200000000109e-06, 8.11200000000109e-06, 8.111999999997621e-06, 8.125000000001187e-06, 8.110999999998147e-06, 8.125000000001187e-06, 8.111000000001617e-06, 8.09800000000152e-06, 8.097000000002047e-06, 8.09800000000152e-06, 8.139000000000757e-06, 8.110999999998147e-06, 8.125000000001187e-06, 8.110999999998147e-06, 8.11200000000109e-06, 8.153000000000327e-06, 8.110999999998147e-06, 8.097000000002047e-06, 8.069999999998911e-06, 8.125000000001187e-06, 8.110999999998147e-06, 8.09800000000152e-06, 8.138000000001283e-06, 8.110999999998147e-06, 8.082999999999008e-06, 8.096999999998578e-06, 8.083000000002477e-06, 8.082999999999008e-06, 8.111000000001617e-06, 8.041999999999772e-06, 8.083999999998481e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.110999999998147e-06, 8.125000000001187e-06, 8.111000000001617e-06, 8.111000000001617e-06]</msg>
<status status="PASS" starttime="20201115 22:02:25.419" endtime="20201115 22:02:25.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.414" endtime="20201115 22:02:25.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.424" endtime="20201115 22:02:25.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:25.427" endtime="20201115 22:02:25.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.426" endtime="20201115 22:02:25.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.422" endtime="20201115 22:02:25.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.055" endtime="20201115 22:02:25.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.482" endtime="20201115 22:02:25.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.482" endtime="20201115 22:02:25.448"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.450" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.459" endtime="20201115 22:02:25.477"></status>
</kw>
<msg timestamp="20201115 22:02:25.478" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.457" endtime="20201115 22:02:25.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.480" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.479" endtime="20201115 22:02:25.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.481" endtime="20201115 22:02:25.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.455" endtime="20201115 22:02:25.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.453" endtime="20201115 22:02:25.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.491" endtime="20201115 22:02:25.776"></status>
</kw>
<msg timestamp="20201115 22:02:25.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024792917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024801458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.489" endtime="20201115 22:02:25.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024792917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024801458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.780" endtime="20201115 22:02:25.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.788" endtime="20201115 22:02:25.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.487" endtime="20201115 22:02:25.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.485" endtime="20201115 22:02:25.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:25.795" level="INFO">${RESULT} = [{'time': 0.024801458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.540999999997329e-06, 'source_diff': 8.540999999997329e-06}, {'time': 0.024958319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:25.791" endtime="20201115 22:02:25.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:25.808" level="INFO">${OVERHEAD} = {'time': [0.024801458, 0.024958319, 0.025117972, 0.025280833, 0.025437403, 0.025596236, 0.025753611, 0.025916611, 0.026073986, 0.026232014, 0.026395417, 0.026552125, 0.026710417, 0.026869931, 0.027028...</msg>
<status status="PASS" starttime="20201115 22:02:25.796" endtime="20201115 22:02:25.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.812" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:25.811" endtime="20201115 22:02:25.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.815" level="INFO">VALUE: [8.540999999997329e-06, 8.332999999999258e-06, 8.388999999997537e-06, 8.388999999997537e-06, 8.347000000002297e-06, 8.389000000001007e-06, 8.360999999998397e-06, 8.332999999999258e-06, 8.375000000001437e-06, 8.375000000001437e-06, 8.389000000001007e-06, 8.417000000000147e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.403000000000577e-06, 8.458000000002852e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.443999999999813e-06, 8.347999999998301e-06, 8.402999999997107e-06, 8.389000000001007e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.347000000002297e-06, 8.430000000000243e-06, 8.333999999998731e-06, 8.444999999999286e-06, 8.401999999997634e-06, 8.389000000001007e-06, 8.417000000000147e-06, 8.346999999998828e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.402999999997107e-06, 8.416000000000673e-06, 8.458000000002852e-06, 8.388000000001533e-06, 8.375000000001437e-06, 8.388999999997537e-06, 8.402999999997107e-06, 8.389000000004476e-06, 8.402999999997107e-06, 8.402999999997107e-06, 8.388999999997537e-06, 8.403000000004046e-06, 8.375000000004906e-06, 8.402000000004572e-06, 8.403000000004046e-06]</msg>
<status status="PASS" starttime="20201115 22:02:25.814" endtime="20201115 22:02:25.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.809" endtime="20201115 22:02:25.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.818" endtime="20201115 22:02:25.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:25.821" endtime="20201115 22:02:25.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.820" endtime="20201115 22:02:25.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.816" endtime="20201115 22:02:25.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.451" endtime="20201115 22:02:25.842"></status>
</kw>
<msg timestamp="20201115 22:02:25.842" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.851" endtime="20201115 22:02:25.869"></status>
</kw>
<msg timestamp="20201115 22:02:25.870" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.849" endtime="20201115 22:02:25.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.873" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.871" endtime="20201115 22:02:25.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.874" endtime="20201115 22:02:25.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.847" endtime="20201115 22:02:25.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.845" endtime="20201115 22:02:25.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.883" endtime="20201115 22:02:26.169"></status>
</kw>
<msg timestamp="20201115 22:02:26.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.882" endtime="20201115 22:02:26.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.173" endtime="20201115 22:02:26.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.181" endtime="20201115 22:02:26.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.880" endtime="20201115 22:02:26.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.878" endtime="20201115 22:02:26.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:26.188" level="INFO">${RESULT} = [{'time': 0.022071583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.022232222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:26.185" endtime="20201115 22:02:26.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:26.201" level="INFO">${OVERHEAD} = {'time': [0.022071583, 0.022232222, 0.022394944, 0.022551639, 0.022711431, 0.022871889, 0.023028583, 0.023187153, 0.023343042, 0.023501222, 0.023661667, 0.023818083, 0.023979069, 0.024138458, 0.024298...</msg>
<status status="PASS" starttime="20201115 22:02:26.189" endtime="20201115 22:02:26.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.206" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:26.205" endtime="20201115 22:02:26.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.208" level="INFO">VALUE: [8.568999999999938e-06, 8.403000000000577e-06, 8.388000000001533e-06, 8.388999999997537e-06, 8.403000000000577e-06, 8.360999999998397e-06, 8.388999999997537e-06, 8.346999999998828e-06, 8.389000000001007e-06, 8.415999999997203e-06, 8.389000000001007e-06, 8.375000000001437e-06, 8.374999999997967e-06, 8.333000000002727e-06, 8.389000000001007e-06, 8.361000000001867e-06, 8.443999999999813e-06, 8.360999999998397e-06, 8.318999999999688e-06, 8.389000000001007e-06, 8.417000000000147e-06, 8.403000000000577e-06, 8.375000000001437e-06, 8.389000000001007e-06, 8.444999999999286e-06, 8.389000000001007e-06, 8.388999999997537e-06, 8.401999999997634e-06, 8.389000000001007e-06, 8.361000000001867e-06, 8.333999999998731e-06, 8.417000000000147e-06, 8.443999999999813e-06, 8.346999999998828e-06, 8.389000000001007e-06, 8.388999999997537e-06, 8.374999999997967e-06, 8.402999999997107e-06, 8.375000000001437e-06, 8.389000000001007e-06, 8.375000000001437e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.415999999997203e-06, 8.402999999997107e-06, 8.388999999997537e-06, 8.374999999997967e-06, 8.403000000000577e-06, 8.445000000002756e-06, 8.332999999999258e-06]</msg>
<status status="PASS" starttime="20201115 22:02:26.207" endtime="20201115 22:02:26.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.202" endtime="20201115 22:02:26.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.211" endtime="20201115 22:02:26.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:26.215" endtime="20201115 22:02:26.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.213" endtime="20201115 22:02:26.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.210" endtime="20201115 22:02:26.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.843" endtime="20201115 22:02:26.235"></status>
</kw>
<msg timestamp="20201115 22:02:26.235" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.245" endtime="20201115 22:02:26.263"></status>
</kw>
<msg timestamp="20201115 22:02:26.264" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.243" endtime="20201115 22:02:26.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.266" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.265" endtime="20201115 22:02:26.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.267" endtime="20201115 22:02:26.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.240" endtime="20201115 22:02:26.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.238" endtime="20201115 22:02:26.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.277" endtime="20201115 22:02:26.561"></status>
</kw>
<msg timestamp="20201115 22:02:26.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022988792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022997361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.275" endtime="20201115 22:02:26.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022988792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022997361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.566" endtime="20201115 22:02:26.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.574" endtime="20201115 22:02:26.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.273" endtime="20201115 22:02:26.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.271" endtime="20201115 22:02:26.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:26.580" level="INFO">${RESULT} = [{'time': 0.022997361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.023161611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:26.577" endtime="20201115 22:02:26.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:26.594" level="INFO">${OVERHEAD} = {'time': [0.022997361, 0.023161611, 0.023325694, 0.023489639, 0.023646861, 0.023804764, 0.023964944, 0.024128083, 0.024289083, 0.024451875, 0.024609306, 0.024767486, 0.024930778, 0.025090542, 0.025247...</msg>
<status status="PASS" starttime="20201115 22:02:26.581" endtime="20201115 22:02:26.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.599" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:26.598" endtime="20201115 22:02:26.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.601" level="INFO">VALUE: [8.568999999999938e-06, 8.402999999997107e-06, 8.388000000001533e-06, 8.374999999997967e-06, 8.389000000001007e-06, 8.374999999997967e-06, 8.387999999998064e-06, 8.333000000002727e-06, 8.389000000001007e-06, 8.458000000002852e-06, 8.389000000001007e-06, 8.374999999997967e-06, 8.417000000000147e-06, 8.389000000001007e-06, 8.388999999997537e-06, 8.444000000003282e-06, 8.389000000001007e-06, 8.346999999998828e-06, 8.443999999999813e-06, 8.346999999998828e-06, 8.430999999999716e-06, 8.389000000001007e-06, 8.374999999997967e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.375000000001437e-06, 8.375000000001437e-06, 8.388000000001533e-06, 8.430999999999716e-06, 8.389000000001007e-06, 8.403000000000577e-06, 8.389000000001007e-06, 8.333999999998731e-06, 8.387999999998064e-06, 8.389000000001007e-06, 8.387999999998064e-06, 8.403000000000577e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.403000000000577e-06, 8.346999999998828e-06, 8.361000000001867e-06, 8.389000000001007e-06, 8.403000000000577e-06, 8.389000000001007e-06, 8.388999999997537e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.375000000001437e-06, 8.360999999998397e-06]</msg>
<status status="PASS" starttime="20201115 22:02:26.600" endtime="20201115 22:02:26.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.595" endtime="20201115 22:02:26.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.604" endtime="20201115 22:02:26.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:26.608" endtime="20201115 22:02:26.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.606" endtime="20201115 22:02:26.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.603" endtime="20201115 22:02:26.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.236" endtime="20201115 22:02:26.629"></status>
</kw>
<msg timestamp="20201115 22:02:26.629" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.638" endtime="20201115 22:02:26.657"></status>
</kw>
<msg timestamp="20201115 22:02:26.657" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.636" endtime="20201115 22:02:26.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.659" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.658" endtime="20201115 22:02:26.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.661" endtime="20201115 22:02:26.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.634" endtime="20201115 22:02:26.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.632" endtime="20201115 22:02:26.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.670" endtime="20201115 22:02:26.956"></status>
</kw>
<msg timestamp="20201115 22:02:26.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022372681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.669" endtime="20201115 22:02:26.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022372681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.960" endtime="20201115 22:02:26.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.968" endtime="20201115 22:02:26.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.666" endtime="20201115 22:02:26.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.665" endtime="20201115 22:02:26.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:26.975" level="INFO">${RESULT} = [{'time': 0.022372681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.022533028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:26.972" endtime="20201115 22:02:26.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:26.988" level="INFO">${OVERHEAD} = {'time': [0.022372681, 0.022533028, 0.022692, 0.022853125, 0.023014417, 0.023171194, 0.023333681, 0.023491708, 0.023653236, 0.023813153, 0.023976014, 0.024136889, 0.0242925, 0.024449861, 0.02461075, 0...</msg>
<status status="PASS" starttime="20201115 22:02:26.976" endtime="20201115 22:02:26.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.993" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:26.992" endtime="20201115 22:02:26.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.995" level="INFO">VALUE: [8.555999999999842e-06, 8.389000000001007e-06, 8.332999999999258e-06, 8.318999999999688e-06, 8.430999999999716e-06, 8.387999999998064e-06, 8.402999999997107e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.375000000001437e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.417000000000147e-06, 8.375000000001437e-06, 8.374999999997967e-06, 8.388999999997537e-06, 8.402000000001103e-06, 8.318999999999688e-06, 8.416000000000673e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.403000000000577e-06, 8.389000000001007e-06, 8.401999999997634e-06, 8.387999999998064e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.374999999997967e-06, 8.374999999997967e-06, 8.443999999999813e-06, 8.415999999997203e-06, 8.389000000001007e-06, 8.401999999997634e-06, 8.389000000001007e-06, 8.388999999997537e-06, 8.444999999999286e-06, 8.403000000000577e-06, 8.3340000000022e-06, 8.389000000001007e-06, 8.387999999998064e-06, 8.402999999997107e-06, 8.430000000000243e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.403000000000577e-06, 8.361000000001867e-06, 8.389000000001007e-06, 8.403000000000577e-06]</msg>
<status status="PASS" starttime="20201115 22:02:26.994" endtime="20201115 22:02:26.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.989" endtime="20201115 22:02:26.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.998" endtime="20201115 22:02:27.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:27.002" endtime="20201115 22:02:27.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.001" endtime="20201115 22:02:27.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.997" endtime="20201115 22:02:27.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.630" endtime="20201115 22:02:27.023"></status>
</kw>
<msg timestamp="20201115 22:02:27.023" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.032" endtime="20201115 22:02:27.050"></status>
</kw>
<msg timestamp="20201115 22:02:27.051" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.030" endtime="20201115 22:02:27.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.053" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.052" endtime="20201115 22:02:27.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.054" endtime="20201115 22:02:27.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.028" endtime="20201115 22:02:27.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.026" endtime="20201115 22:02:27.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.064" endtime="20201115 22:02:27.349"></status>
</kw>
<msg timestamp="20201115 22:02:27.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022130319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.062" endtime="20201115 22:02:27.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022130319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.353" endtime="20201115 22:02:27.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.361" endtime="20201115 22:02:27.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.060" endtime="20201115 22:02:27.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.058" endtime="20201115 22:02:27.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:27.368" level="INFO">${RESULT} = [{'time': 0.022138903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.58400000000245e-06, 'source_diff': 8.58400000000245e-06}, {'time': 0.022295486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:27.364" endtime="20201115 22:02:27.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:27.381" level="INFO">${OVERHEAD} = {'time': [0.022138903, 0.022295486, 0.022455944, 0.022612778, 0.022774236, 0.022932069, 0.023090375, 0.023246, 0.023407403, 0.023571097, 0.023732208, 0.023892389, 0.024056056, 0.024214236, 0.024374028...</msg>
<status status="PASS" starttime="20201115 22:02:27.369" endtime="20201115 22:02:27.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.385" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:27.384" endtime="20201115 22:02:27.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.388" level="INFO">VALUE: [8.58400000000245e-06, 8.375000000001437e-06, 8.374999999997967e-06, 8.346999999998828e-06, 8.457999999999383e-06, 8.387999999998064e-06, 8.375000000001437e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.403000000000577e-06, 8.361000000001867e-06, 8.375000000001437e-06, 8.389000000001007e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.388999999997537e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.403000000000577e-06, 8.374999999997967e-06, 8.388999999997537e-06, 8.389000000001007e-06, 8.402999999997107e-06, 8.389000000001007e-06, 8.389000000001007e-06, 8.375000000001437e-06, 8.388000000001533e-06, 8.403000000000577e-06, 8.430999999999716e-06, 8.375000000001437e-06, 8.389000000001007e-06, 8.403000000000577e-06, 8.430000000000243e-06, 8.403000000000577e-06, 8.389000000001007e-06, 8.388999999997537e-06, 8.389000000001007e-06, 8.388999999997537e-06, 8.403000000000577e-06, 8.401999999997634e-06, 8.389000000001007e-06, 8.430999999999716e-06, 8.403000000000577e-06, 8.374999999997967e-06, 8.389000000001007e-06, 8.417000000000147e-06, 8.388999999997537e-06, 8.347000000002297e-06, 8.403000000000577e-06]</msg>
<status status="PASS" starttime="20201115 22:02:27.386" endtime="20201115 22:02:27.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.382" endtime="20201115 22:02:27.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.391" endtime="20201115 22:02:27.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:27.395" endtime="20201115 22:02:27.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.393" endtime="20201115 22:02:27.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.390" endtime="20201115 22:02:27.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.024" endtime="20201115 22:02:27.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.449" endtime="20201115 22:02:27.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.448" endtime="20201115 22:02:27.416"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.418" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.427" endtime="20201115 22:02:27.445"></status>
</kw>
<msg timestamp="20201115 22:02:27.446" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.425" endtime="20201115 22:02:27.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.448" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.447" endtime="20201115 22:02:27.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.449" endtime="20201115 22:02:27.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.422" endtime="20201115 22:02:27.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.420" endtime="20201115 22:02:27.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.458" endtime="20201115 22:02:27.744"></status>
</kw>
<msg timestamp="20201115 22:02:27.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024401194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024410042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.456" endtime="20201115 22:02:27.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024401194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024410042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.748" endtime="20201115 22:02:27.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.756" endtime="20201115 22:02:27.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.454" endtime="20201115 22:02:27.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.452" endtime="20201115 22:02:27.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:27.763" level="INFO">${RESULT} = [{'time': 0.024410042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.847999999998801e-06, 'source_diff': 8.847999999998801e-06}, {'time': 0.024581375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:27.759" endtime="20201115 22:02:27.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:27.776" level="INFO">${OVERHEAD} = {'time': [0.024410042, 0.024581375, 0.024747847, 0.024914056, 0.025078375, 0.025244042, 0.025411181, 0.025578861, 0.025750833, 0.025919181, 0.026088486, 0.026254875, 0.026421972, 0.026589722, 0.026760...</msg>
<status status="PASS" starttime="20201115 22:02:27.764" endtime="20201115 22:02:27.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.781" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:27.780" endtime="20201115 22:02:27.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.783" level="INFO">VALUE: [8.847999999998801e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.764000000001382e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.695000000003006e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.722999999998676e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.721999999995733e-06, 8.707999999996163e-06, 8.680999999996497e-06, 8.694999999996067e-06, 8.680999999996497e-06, 8.695000000003006e-06, 8.708000000003102e-06, 8.681000000003436e-06, 8.666999999996927e-06]</msg>
<status status="PASS" starttime="20201115 22:02:27.782" endtime="20201115 22:02:27.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.777" endtime="20201115 22:02:27.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.787" endtime="20201115 22:02:27.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:27.790" endtime="20201115 22:02:27.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.789" endtime="20201115 22:02:27.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.785" endtime="20201115 22:02:27.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.418" endtime="20201115 22:02:27.811"></status>
</kw>
<msg timestamp="20201115 22:02:27.811" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.819" endtime="20201115 22:02:27.838"></status>
</kw>
<msg timestamp="20201115 22:02:27.839" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.818" endtime="20201115 22:02:27.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.840" endtime="20201115 22:02:27.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.842" endtime="20201115 22:02:27.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.815" endtime="20201115 22:02:27.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.813" endtime="20201115 22:02:27.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.852" endtime="20201115 22:02:28.137"></status>
</kw>
<msg timestamp="20201115 22:02:28.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022141889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.850" endtime="20201115 22:02:28.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022141889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.142" endtime="20201115 22:02:28.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.150" endtime="20201115 22:02:28.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.848" endtime="20201115 22:02:28.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.846" endtime="20201115 22:02:28.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:28.156" level="INFO">${RESULT} = [{'time': 0.022141889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.903000000001077e-06, 'source_diff': 8.903000000001077e-06}, {'time': 0.022310264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:28.153" endtime="20201115 22:02:28.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:28.170" level="INFO">${OVERHEAD} = {'time': [0.022141889, 0.022310264, 0.022478333, 0.022643194, 0.022814653, 0.022981514, 0.023151347, 0.023319431, 0.023486042, 0.023654708, 0.023822875, 0.023987611, 0.024159236, 0.024326611, 0.024495...</msg>
<status status="PASS" starttime="20201115 22:02:28.157" endtime="20201115 22:02:28.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.175" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:28.174" endtime="20201115 22:02:28.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.178" level="INFO">VALUE: [8.903000000001077e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.694999999999536e-06, 8.695000000003006e-06, 8.666000000000923e-06, 8.695000000003006e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.736000000002242e-06, 8.708000000003102e-06, 8.762999999998439e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.638999999997787e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.764000000001382e-06, 8.624999999998217e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.611000000002117e-06]</msg>
<status status="PASS" starttime="20201115 22:02:28.176" endtime="20201115 22:02:28.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.172" endtime="20201115 22:02:28.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.181" endtime="20201115 22:02:28.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:28.184" endtime="20201115 22:02:28.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.183" endtime="20201115 22:02:28.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.179" endtime="20201115 22:02:28.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.811" endtime="20201115 22:02:28.205"></status>
</kw>
<msg timestamp="20201115 22:02:28.205" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.214" endtime="20201115 22:02:28.232"></status>
</kw>
<msg timestamp="20201115 22:02:28.232" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.212" endtime="20201115 22:02:28.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.234" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.233" endtime="20201115 22:02:28.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.235" endtime="20201115 22:02:28.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.210" endtime="20201115 22:02:28.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.208" endtime="20201115 22:02:28.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.245" endtime="20201115 22:02:28.530"></status>
</kw>
<msg timestamp="20201115 22:02:28.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.244" endtime="20201115 22:02:28.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.534" endtime="20201115 22:02:28.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.543" endtime="20201115 22:02:28.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.241" endtime="20201115 22:02:28.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.240" endtime="20201115 22:02:28.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:28.549" level="INFO">${RESULT} = [{'time': 0.021939833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.022108097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:28.546" endtime="20201115 22:02:28.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:28.563" level="INFO">${OVERHEAD} = {'time': [0.021939833, 0.022108097, 0.022280722, 0.022446, 0.022617306, 0.022784986, 0.022956708, 0.023125042, 0.023297736, 0.023466194, 0.023638431, 0.023806111, 0.023970444, 0.024135708, 0.024308097...</msg>
<status status="PASS" starttime="20201115 22:02:28.551" endtime="20201115 22:02:28.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.567" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:28.566" endtime="20201115 22:02:28.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.570" level="INFO">VALUE: [8.888999999998037e-06, 8.694000000000063e-06, 8.638999999997787e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.679999999997023e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.665999999997454e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.708000000003102e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201115 22:02:28.568" endtime="20201115 22:02:28.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.564" endtime="20201115 22:02:28.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.573" endtime="20201115 22:02:28.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:28.576" endtime="20201115 22:02:28.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.575" endtime="20201115 22:02:28.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.571" endtime="20201115 22:02:28.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.206" endtime="20201115 22:02:28.597"></status>
</kw>
<msg timestamp="20201115 22:02:28.597" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.606" endtime="20201115 22:02:28.625"></status>
</kw>
<msg timestamp="20201115 22:02:28.625" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.604" endtime="20201115 22:02:28.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.628" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.626" endtime="20201115 22:02:28.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.629" endtime="20201115 22:02:28.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.602" endtime="20201115 22:02:28.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.600" endtime="20201115 22:02:28.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.639" endtime="20201115 22:02:28.923"></status>
</kw>
<msg timestamp="20201115 22:02:28.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.637" endtime="20201115 22:02:28.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.928" endtime="20201115 22:02:28.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.941" endtime="20201115 22:02:28.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.634" endtime="20201115 22:02:28.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.633" endtime="20201115 22:02:28.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:28.948" level="INFO">${RESULT} = [{'time': 0.021999014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.022171278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:28.945" endtime="20201115 22:02:28.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:28.962" level="INFO">${OVERHEAD} = {'time': [0.021999014, 0.022171278, 0.022336153, 0.022503833, 0.022674597, 0.022845264, 0.023011847, 0.023184375, 0.023349889, 0.023521597, 0.023691972, 0.023862681, 0.024031778, 0.024203944, 0.024374...</msg>
<status status="PASS" starttime="20201115 22:02:28.949" endtime="20201115 22:02:28.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.967" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:28.965" endtime="20201115 22:02:28.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.969" level="INFO">VALUE: [8.875000000001937e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.764000000001382e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.651999999997884e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.665999999997454e-06, 8.709000000002576e-06, 8.680999999999967e-06, 8.679999999997023e-06, 8.709000000002576e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.709000000002576e-06]</msg>
<status status="PASS" starttime="20201115 22:02:28.968" endtime="20201115 22:02:28.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.963" endtime="20201115 22:02:28.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.973" endtime="20201115 22:02:28.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:28.976" endtime="20201115 22:02:28.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.975" endtime="20201115 22:02:28.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.971" endtime="20201115 22:02:28.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.598" endtime="20201115 22:02:28.997"></status>
</kw>
<msg timestamp="20201115 22:02:28.997" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.006" endtime="20201115 22:02:29.024"></status>
</kw>
<msg timestamp="20201115 22:02:29.025" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.005" endtime="20201115 22:02:29.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.027" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.026" endtime="20201115 22:02:29.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.028" endtime="20201115 22:02:29.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.002" endtime="20201115 22:02:29.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.000" endtime="20201115 22:02:29.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.038" endtime="20201115 22:02:29.323"></status>
</kw>
<msg timestamp="20201115 22:02:29.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022161903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.037" endtime="20201115 22:02:29.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022161903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.328" endtime="20201115 22:02:29.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.336" endtime="20201115 22:02:29.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.034" endtime="20201115 22:02:29.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.033" endtime="20201115 22:02:29.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:29.343" level="INFO">${RESULT} = [{'time': 0.022161903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.889000000001507e-06, 'source_diff': 8.889000000001507e-06}, {'time': 0.022326875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:29.339" endtime="20201115 22:02:29.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:29.356" level="INFO">${OVERHEAD} = {'time': [0.022161903, 0.022326875, 0.022492472, 0.022659611, 0.022826639, 0.0229955, 0.023166806, 0.023331278, 0.023499611, 0.023669847, 0.023840097, 0.024008069, 0.024174931, 0.024345153, 0.02451311...</msg>
<status status="PASS" starttime="20201115 22:02:29.344" endtime="20201115 22:02:29.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.360" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:29.359" endtime="20201115 22:02:29.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.363" level="INFO">VALUE: [8.889000000001507e-06, 8.763999999997912e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.597000000002547e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.708000000003102e-06, 8.694000000000063e-06, 8.610999999998648e-06, 8.611000000002117e-06, 8.624999999998217e-06, 8.735999999998773e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.708000000003102e-06, 8.708000000003102e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.680000000000493e-06, 8.666999999996927e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201115 22:02:29.361" endtime="20201115 22:02:29.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.357" endtime="20201115 22:02:29.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.366" endtime="20201115 22:02:29.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:29.369" endtime="20201115 22:02:29.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.368" endtime="20201115 22:02:29.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.364" endtime="20201115 22:02:29.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.998" endtime="20201115 22:02:29.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.417" endtime="20201115 22:02:29.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.416" endtime="20201115 22:02:29.390"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.392" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.401" endtime="20201115 22:02:29.420"></status>
</kw>
<msg timestamp="20201115 22:02:29.421" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.400" endtime="20201115 22:02:29.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.423" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.422" endtime="20201115 22:02:29.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.424" endtime="20201115 22:02:29.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.397" endtime="20201115 22:02:29.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.395" endtime="20201115 22:02:29.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.434" endtime="20201115 22:02:29.719"></status>
</kw>
<msg timestamp="20201115 22:02:29.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024520875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024530028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.432" endtime="20201115 22:02:29.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024520875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024530028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.723" endtime="20201115 22:02:29.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.731" endtime="20201115 22:02:29.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.430" endtime="20201115 22:02:29.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.428" endtime="20201115 22:02:29.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:29.737" level="INFO">${RESULT} = [{'time': 0.024530028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.024709653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:29.734" endtime="20201115 22:02:29.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:29.752" level="INFO">${OVERHEAD} = {'time': [0.024530028, 0.024709653, 0.024884306, 0.025062847, 0.025240181, 0.025413903, 0.025590306, 0.025767361, 0.025948208, 0.026123917, 0.02629775, 0.026475625, 0.026651806, 0.026831625, 0.0270053...</msg>
<status status="PASS" starttime="20201115 22:02:29.738" endtime="20201115 22:02:29.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.756" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:29.755" endtime="20201115 22:02:29.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.759" level="INFO">VALUE: [9.152999999997857e-06, 8.945000000003256e-06, 8.972999999998926e-06, 8.971999999999453e-06, 8.944999999999786e-06, 8.972000000002922e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.972999999998926e-06, 8.958000000003352e-06, 8.957999999999883e-06, 9.028000000001202e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.973000000002396e-06, 8.958999999999356e-06, 8.973000000002396e-06, 9.000000000002062e-06, 8.971999999999453e-06, 8.999999999998592e-06, 8.986999999998496e-06, 8.944999999999786e-06, 8.958999999999356e-06, 8.958999999999356e-06, 8.972000000002922e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.944999999999786e-06, 8.944999999999786e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.916000000001173e-06, 8.943999999996843e-06, 8.957999999999883e-06, 8.944999999999786e-06, 8.917000000004116e-06, 9.000000000002062e-06, 8.958000000003352e-06, 8.917000000004116e-06, 8.959000000002826e-06, 8.971999999995983e-06, 8.944000000003782e-06, 8.972000000002922e-06, 8.958000000003352e-06, 8.971999999995983e-06, 8.957999999996413e-06, 8.957999999996413e-06]</msg>
<status status="PASS" starttime="20201115 22:02:29.757" endtime="20201115 22:02:29.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.753" endtime="20201115 22:02:29.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.762" endtime="20201115 22:02:29.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:29.765" endtime="20201115 22:02:29.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.764" endtime="20201115 22:02:29.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.760" endtime="20201115 22:02:29.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.393" endtime="20201115 22:02:29.786"></status>
</kw>
<msg timestamp="20201115 22:02:29.786" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.795" endtime="20201115 22:02:29.814"></status>
</kw>
<msg timestamp="20201115 22:02:29.814" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.793" endtime="20201115 22:02:29.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.817" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.815" endtime="20201115 22:02:29.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.818" endtime="20201115 22:02:29.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.791" endtime="20201115 22:02:29.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.788" endtime="20201115 22:02:29.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.828" endtime="20201115 22:02:30.114"></status>
</kw>
<msg timestamp="20201115 22:02:30.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022102528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022111681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.827" endtime="20201115 22:02:30.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022102528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022111681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:30.118" endtime="20201115 22:02:30.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.126" endtime="20201115 22:02:30.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.824" endtime="20201115 22:02:30.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.822" endtime="20201115 22:02:30.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:30.133" level="INFO">${RESULT} = [{'time': 0.022111681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.153000000001327e-06, 'source_diff': 9.153000000001327e-06}, {'time': 0.022287722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:30.130" endtime="20201115 22:02:30.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:30.146" level="INFO">${OVERHEAD} = {'time': [0.022111681, 0.022287722, 0.022464917, 0.022641722, 0.022818236, 0.022993056, 0.023174111, 0.023352514, 0.023527222, 0.023708417, 0.023883986, 0.024059847, 0.024235972, 0.024413583, 0.024590...</msg>
<status status="PASS" starttime="20201115 22:02:30.134" endtime="20201115 22:02:30.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.151" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:30.150" endtime="20201115 22:02:30.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.153" level="INFO">VALUE: [9.153000000001327e-06, 8.971999999999453e-06, 8.944999999999786e-06, 8.971999999999453e-06, 8.944000000000313e-06, 9.000000000002062e-06, 8.957999999999883e-06, 8.944999999999786e-06, 8.957999999999883e-06, 8.944999999999786e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.930000000000743e-06, 8.930000000000743e-06, 8.971999999999453e-06, 8.944999999999786e-06, 8.944000000000313e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.999999999998592e-06, 8.971999999999453e-06, 9.000000000002062e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.902999999997607e-06, 8.917000000000647e-06, 8.957999999999883e-06, 8.999999999998592e-06, 8.944999999999786e-06, 8.944999999999786e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.972999999998926e-06, 8.957999999999883e-06, 8.958999999999356e-06, 8.971999999999453e-06, 8.972999999998926e-06, 8.959000000002826e-06, 8.971999999999453e-06, 9.013999999998162e-06, 8.957999999999883e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.986000000002492e-06, 9.000000000002062e-06, 8.902999999997607e-06, 8.959000000002826e-06, 9.042000000000772e-06]</msg>
<status status="PASS" starttime="20201115 22:02:30.152" endtime="20201115 22:02:30.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.147" endtime="20201115 22:02:30.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.156" endtime="20201115 22:02:30.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:30.160" endtime="20201115 22:02:30.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.158" endtime="20201115 22:02:30.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.155" endtime="20201115 22:02:30.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.786" endtime="20201115 22:02:30.180"></status>
</kw>
<msg timestamp="20201115 22:02:30.180" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.190" endtime="20201115 22:02:30.209"></status>
</kw>
<msg timestamp="20201115 22:02:30.210" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.188" endtime="20201115 22:02:30.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.212" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.211" endtime="20201115 22:02:30.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.213" endtime="20201115 22:02:30.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.185" endtime="20201115 22:02:30.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.183" endtime="20201115 22:02:30.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.223" endtime="20201115 22:02:30.509"></status>
</kw>
<msg timestamp="20201115 22:02:30.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022634403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022643556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:30.222" endtime="20201115 22:02:30.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022634403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022643556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:30.513" endtime="20201115 22:02:30.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.521" endtime="20201115 22:02:30.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.219" endtime="20201115 22:02:30.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.217" endtime="20201115 22:02:30.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:30.527" level="INFO">${RESULT} = [{'time': 0.022643556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.022818125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:30.524" endtime="20201115 22:02:30.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:30.541" level="INFO">${OVERHEAD} = {'time': [0.022643556, 0.022818125, 0.022999347, 0.023180708, 0.023355097, 0.023528667, 0.023704375, 0.023883194, 0.024063611, 0.024244306, 0.024419236, 0.024598861, 0.024777833, 0.024959292, 0.025134...</msg>
<status status="PASS" starttime="20201115 22:02:30.528" endtime="20201115 22:02:30.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.545" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:30.544" endtime="20201115 22:02:30.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.548" level="INFO">VALUE: [9.152999999997857e-06, 8.972000000002922e-06, 8.916000000001173e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.944999999999786e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.931000000000217e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.999999999998592e-06, 8.973000000002396e-06, 8.958000000003352e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.971999999999453e-06, 9.013999999998162e-06, 8.959000000002826e-06, 8.944999999999786e-06, 8.917000000000647e-06, 8.931000000000217e-06, 8.971999999999453e-06, 8.972000000002922e-06, 8.986000000002492e-06, 8.903000000001077e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.944000000000313e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.958999999999356e-06, 8.972000000002922e-06, 8.972000000002922e-06, 8.985999999999023e-06, 8.972000000002922e-06, 8.944000000000313e-06, 8.958999999999356e-06, 8.972000000002922e-06, 8.944000000000313e-06, 8.959000000002826e-06, 8.957999999999883e-06, 8.944000000000313e-06, 8.971999999999453e-06, 8.930000000000743e-06, 8.971999999999453e-06, 8.972999999998926e-06, 8.930000000000743e-06, 8.930000000004212e-06]</msg>
<status status="PASS" starttime="20201115 22:02:30.546" endtime="20201115 22:02:30.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.542" endtime="20201115 22:02:30.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.551" endtime="20201115 22:02:30.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:30.554" endtime="20201115 22:02:30.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.553" endtime="20201115 22:02:30.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.549" endtime="20201115 22:02:30.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.181" endtime="20201115 22:02:30.575"></status>
</kw>
<msg timestamp="20201115 22:02:30.575" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.584" endtime="20201115 22:02:30.603"></status>
</kw>
<msg timestamp="20201115 22:02:30.604" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.582" endtime="20201115 22:02:30.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.606" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.605" endtime="20201115 22:02:30.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.607" endtime="20201115 22:02:30.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.580" endtime="20201115 22:02:30.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.578" endtime="20201115 22:02:30.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.617" endtime="20201115 22:02:30.902"></status>
</kw>
<msg timestamp="20201115 22:02:30.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:30.616" endtime="20201115 22:02:30.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:30.906" endtime="20201115 22:02:30.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.914" endtime="20201115 22:02:30.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.613" endtime="20201115 22:02:30.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.611" endtime="20201115 22:02:30.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:30.921" level="INFO">${RESULT} = [{'time': 0.022448306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.022622833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:30.917" endtime="20201115 22:02:30.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:30.934" level="INFO">${OVERHEAD} = {'time': [0.022448306, 0.022622833, 0.022802319, 0.022980472, 0.023157444, 0.023331792, 0.023507361, 0.023685111, 0.023864333, 0.024043125, 0.024222347, 0.0244025, 0.024580847, 0.0247545, 0.024929486,...</msg>
<status status="PASS" starttime="20201115 22:02:30.922" endtime="20201115 22:02:30.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.939" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:30.938" endtime="20201115 22:02:30.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.941" level="INFO">VALUE: [9.181000000000467e-06, 8.971999999999453e-06, 8.972000000002922e-06, 8.985999999999023e-06, 9.026999999998259e-06, 8.985999999999023e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.972000000002922e-06, 8.943999999996843e-06, 8.972000000002922e-06, 8.971999999999453e-06, 9.040999999997829e-06, 8.985999999999023e-06, 9.000000000002062e-06, 8.972999999998926e-06, 8.958999999999356e-06, 8.944999999999786e-06, 8.972000000002922e-06, 8.931000000000217e-06, 8.931000000000217e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.972999999998926e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.917000000000647e-06, 8.972000000002922e-06, 8.916000000001173e-06, 9.028000000001202e-06, 8.971999999999453e-06, 8.985999999999023e-06, 8.915999999997704e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.944000000000313e-06, 8.958999999999356e-06, 8.944999999999786e-06, 8.958999999999356e-06, 8.971999999999453e-06, 8.971999999999453e-06, 9.013999999998162e-06, 8.958999999999356e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.874999999998467e-06]</msg>
<status status="PASS" starttime="20201115 22:02:30.940" endtime="20201115 22:02:30.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.935" endtime="20201115 22:02:30.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.944" endtime="20201115 22:02:30.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:30.948" endtime="20201115 22:02:30.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.946" endtime="20201115 22:02:30.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.942" endtime="20201115 22:02:30.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.576" endtime="20201115 22:02:30.969"></status>
</kw>
<msg timestamp="20201115 22:02:30.969" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.978" endtime="20201115 22:02:30.996"></status>
</kw>
<msg timestamp="20201115 22:02:30.997" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.976" endtime="20201115 22:02:30.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.000" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.998" endtime="20201115 22:02:31.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.001" endtime="20201115 22:02:31.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.973" endtime="20201115 22:02:31.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.971" endtime="20201115 22:02:31.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.011" endtime="20201115 22:02:31.297"></status>
</kw>
<msg timestamp="20201115 22:02:31.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022040292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022049431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.010" endtime="20201115 22:02:31.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022040292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022049431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.301" endtime="20201115 22:02:31.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.309" endtime="20201115 22:02:31.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.007" endtime="20201115 22:02:31.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.005" endtime="20201115 22:02:31.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:31.316" level="INFO">${RESULT} = [{'time': 0.022049431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.139000000001757e-06, 'source_diff': 9.139000000001757e-06}, {'time': 0.022231375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:31.312" endtime="20201115 22:02:31.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:31.330" level="INFO">${OVERHEAD} = {'time': [0.022049431, 0.022231375, 0.0224075, 0.022582569, 0.022760028, 0.022933347, 0.023112278, 0.023292028, 0.023473389, 0.023646958, 0.023826792, 0.024006181, 0.024181361, 0.024356819, 0.02453187...</msg>
<status status="PASS" starttime="20201115 22:02:31.317" endtime="20201115 22:02:31.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.334" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:31.333" endtime="20201115 22:02:31.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.337" level="INFO">VALUE: [9.139000000001757e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.986000000002492e-06, 8.916000000001173e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.944000000000313e-06, 9.056000000000342e-06, 8.959000000002826e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.971999999999453e-06, 9.000000000002062e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.903000000001077e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.972999999998926e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.985999999999023e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.971999999999453e-06, 9.000000000002062e-06, 8.973000000002396e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.971999999999453e-06, 9.000000000002062e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.944999999999786e-06, 8.930000000000743e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.958999999999356e-06, 8.957999999999883e-06]</msg>
<status status="PASS" starttime="20201115 22:02:31.335" endtime="20201115 22:02:31.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.331" endtime="20201115 22:02:31.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.340" endtime="20201115 22:02:31.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:31.344" endtime="20201115 22:02:31.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.342" endtime="20201115 22:02:31.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.339" endtime="20201115 22:02:31.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.969" endtime="20201115 22:02:31.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.391" endtime="20201115 22:02:31.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.391" endtime="20201115 22:02:31.365"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.367" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.375" endtime="20201115 22:02:31.395"></status>
</kw>
<msg timestamp="20201115 22:02:31.396" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.374" endtime="20201115 22:02:31.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.398" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.397" endtime="20201115 22:02:31.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.399" endtime="20201115 22:02:31.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.371" endtime="20201115 22:02:31.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.369" endtime="20201115 22:02:31.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.408" endtime="20201115 22:02:31.694"></status>
</kw>
<msg timestamp="20201115 22:02:31.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024604375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024613806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.407" endtime="20201115 22:02:31.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024604375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024613806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.698" endtime="20201115 22:02:31.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.706" endtime="20201115 22:02:31.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.404" endtime="20201115 22:02:31.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.402" endtime="20201115 22:02:31.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:31.713" level="INFO">${RESULT} = [{'time': 0.024613806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.430999999997247e-06, 'source_diff': 9.430999999997247e-06}, {'time': 0.024804486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:31.709" endtime="20201115 22:02:31.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:31.726" level="INFO">${OVERHEAD} = {'time': [0.024613806, 0.024804486, 0.024995, 0.025185347, 0.025375472, 0.025558181, 0.025743458, 0.025926458, 0.026109458, 0.026292042, 0.026479458, 0.026664444, 0.026849972, 0.027034583, 0.027217167...</msg>
<status status="PASS" starttime="20201115 22:02:31.714" endtime="20201115 22:02:31.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.731" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:31.730" endtime="20201115 22:02:31.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.733" level="INFO">VALUE: [9.430999999997247e-06, 9.278000000001452e-06, 9.278000000001452e-06, 9.235999999999273e-06, 9.277999999997982e-06, 9.263999999998412e-06, 9.277000000001978e-06, 9.276999999998509e-06, 9.290999999998079e-06, 9.264000000001882e-06, 9.277000000001978e-06, 9.262999999998939e-06, 9.235999999999273e-06, 9.277000000001978e-06, 9.195000000000036e-06, 9.306000000000592e-06, 9.263999999998412e-06, 9.263999999998412e-06, 9.249999999998842e-06, 9.264000000001882e-06, 9.277000000001978e-06, 9.263999999998412e-06, 9.264000000001882e-06, 9.235999999999273e-06, 9.278000000001452e-06, 9.249999999998842e-06, 9.250000000002312e-06, 9.263999999998412e-06, 9.250000000002312e-06, 9.263000000002408e-06, 9.264000000001882e-06, 9.264000000001882e-06, 9.292000000001022e-06, 9.306000000000592e-06, 9.235999999999273e-06, 9.292000000001022e-06, 9.264000000001882e-06, 9.264000000001882e-06, 9.250000000002312e-06, 9.291000000001548e-06, 9.264000000001882e-06, 9.194999999996567e-06, 9.333999999999731e-06, 9.250000000002312e-06, 9.264000000001882e-06, 9.193999999997093e-06, 9.277999999994513e-06, 9.264000000001882e-06, 9.264000000001882e-06, 9.264000000001882e-06]</msg>
<status status="PASS" starttime="20201115 22:02:31.732" endtime="20201115 22:02:31.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.727" endtime="20201115 22:02:31.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.737" endtime="20201115 22:02:31.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:31.740" endtime="20201115 22:02:31.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.739" endtime="20201115 22:02:31.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.735" endtime="20201115 22:02:31.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.367" endtime="20201115 22:02:31.761"></status>
</kw>
<msg timestamp="20201115 22:02:31.761" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.770" endtime="20201115 22:02:31.789"></status>
</kw>
<msg timestamp="20201115 22:02:31.790" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.768" endtime="20201115 22:02:31.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.792" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.791" endtime="20201115 22:02:31.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.793" endtime="20201115 22:02:31.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.766" endtime="20201115 22:02:31.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.763" endtime="20201115 22:02:31.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.803" endtime="20201115 22:02:32.089"></status>
</kw>
<msg timestamp="20201115 22:02:32.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022050722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022060153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.802" endtime="20201115 22:02:32.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022050722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022060153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.093" endtime="20201115 22:02:32.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.101" endtime="20201115 22:02:32.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.799" endtime="20201115 22:02:32.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.797" endtime="20201115 22:02:32.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:32.108" level="INFO">${RESULT} = [{'time': 0.022060153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.431000000000717e-06, 'source_diff': 9.431000000000717e-06}, {'time': 0.022248681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:32.105" endtime="20201115 22:02:32.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:32.121" level="INFO">${OVERHEAD} = {'time': [0.022060153, 0.022248681, 0.022434472, 0.022622833, 0.022813208, 0.022998361, 0.023188347, 0.023377069, 0.023565028, 0.023755847, 0.023945681, 0.024134389, 0.024324625, 0.024510986, 0.024697...</msg>
<status status="PASS" starttime="20201115 22:02:32.109" endtime="20201115 22:02:32.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.126" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:32.125" endtime="20201115 22:02:32.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.129" level="INFO">VALUE: [9.431000000000717e-06, 9.292000000001022e-06, 9.249999999998842e-06, 9.249999999998842e-06, 9.264000000001882e-06, 9.277999999997982e-06, 9.264000000001882e-06, 9.235999999999273e-06, 9.263999999998412e-06, 9.291000000001548e-06, 9.306000000000592e-06, 9.235999999999273e-06, 9.263999999998412e-06, 9.263999999998412e-06, 9.263999999998412e-06, 9.263999999998412e-06, 9.249999999998842e-06, 9.264000000001882e-06, 9.250000000002312e-06, 9.264000000001882e-06, 9.263999999998412e-06, 9.319000000000688e-06, 9.263999999998412e-06, 9.276999999998509e-06, 9.262999999998939e-06, 9.263999999998412e-06, 9.264000000001882e-06, 9.249999999998842e-06, 9.249999999998842e-06, 9.264000000001882e-06, 9.263999999998412e-06, 9.263000000002408e-06, 9.250000000002312e-06, 9.278000000001452e-06, 9.250000000002312e-06, 9.208999999999606e-06, 9.264000000001882e-06, 9.249999999998842e-06, 9.277999999997982e-06, 9.249999999998842e-06, 9.263999999998412e-06, 9.263999999998412e-06, 9.250000000002312e-06, 9.250000000002312e-06, 9.264000000001882e-06, 9.235999999999273e-06, 9.264000000001882e-06, 9.250000000002312e-06, 9.235999999999273e-06, 9.250000000002312e-06]</msg>
<status status="PASS" starttime="20201115 22:02:32.127" endtime="20201115 22:02:32.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.123" endtime="20201115 22:02:32.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.132" endtime="20201115 22:02:32.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:32.135" endtime="20201115 22:02:32.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.134" endtime="20201115 22:02:32.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.130" endtime="20201115 22:02:32.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.761" endtime="20201115 22:02:32.156"></status>
</kw>
<msg timestamp="20201115 22:02:32.156" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.165" endtime="20201115 22:02:32.184"></status>
</kw>
<msg timestamp="20201115 22:02:32.185" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.163" endtime="20201115 22:02:32.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.187" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.186" endtime="20201115 22:02:32.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.188" endtime="20201115 22:02:32.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.161" endtime="20201115 22:02:32.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.159" endtime="20201115 22:02:32.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.198" endtime="20201115 22:02:32.483"></status>
</kw>
<msg timestamp="20201115 22:02:32.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022095236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.197" endtime="20201115 22:02:32.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022095236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.488" endtime="20201115 22:02:32.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.496" endtime="20201115 22:02:32.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.194" endtime="20201115 22:02:32.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.192" endtime="20201115 22:02:32.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:32.502" level="INFO">${RESULT} = [{'time': 0.022104681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.445000000000286e-06, 'source_diff': 9.445000000000286e-06}, {'time': 0.02229225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:32.499" endtime="20201115 22:02:32.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:32.516" level="INFO">${OVERHEAD} = {'time': [0.022104681, 0.02229225, 0.022479806, 0.02266725, 0.022853444, 0.023043569, 0.023233375, 0.023422819, 0.023613597, 0.023796306, 0.023983333, 0.024169083, 0.024353361, 0.024538194, 0.02472308...</msg>
<status status="PASS" starttime="20201115 22:02:32.504" endtime="20201115 22:02:32.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.521" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:32.520" endtime="20201115 22:02:32.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.523" level="INFO">VALUE: [9.445000000000286e-06, 9.263999999998412e-06, 9.250000000002312e-06, 9.292000000001022e-06, 9.249999999998842e-06, 9.249999999998842e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.263999999998412e-06, 9.208999999999606e-06, 9.249999999998842e-06, 9.305000000001118e-06, 9.292000000001022e-06, 9.180000000000993e-06, 9.263999999998412e-06, 9.292000000001022e-06, 9.291999999997552e-06, 9.264000000001882e-06, 9.263999999998412e-06, 9.278000000001452e-06, 9.278000000001452e-06, 9.236999999998746e-06, 9.278000000001452e-06, 9.263999999998412e-06, 9.277999999997982e-06, 9.249999999998842e-06, 9.235999999999273e-06, 9.291999999997552e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.249999999998842e-06, 9.320000000000161e-06, 9.263999999998412e-06, 9.264000000001882e-06, 9.264000000001882e-06, 9.263999999998412e-06, 9.263999999998412e-06, 9.263999999998412e-06, 9.263999999998412e-06, 9.250000000002312e-06, 9.249999999998842e-06, 9.235999999999273e-06, 9.263999999998412e-06, 9.236000000002742e-06, 9.249999999998842e-06, 9.263000000002408e-06, 9.263999999998412e-06, 9.263999999998412e-06, 9.264000000001882e-06, 9.223000000002646e-06]</msg>
<status status="PASS" starttime="20201115 22:02:32.522" endtime="20201115 22:02:32.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.517" endtime="20201115 22:02:32.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.526" endtime="20201115 22:02:32.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:32.530" endtime="20201115 22:02:32.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.528" endtime="20201115 22:02:32.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.525" endtime="20201115 22:02:32.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.157" endtime="20201115 22:02:32.550"></status>
</kw>
<msg timestamp="20201115 22:02:32.550" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.559" endtime="20201115 22:02:32.579"></status>
</kw>
<msg timestamp="20201115 22:02:32.580" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.558" endtime="20201115 22:02:32.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.582" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.581" endtime="20201115 22:02:32.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.583" endtime="20201115 22:02:32.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.555" endtime="20201115 22:02:32.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.553" endtime="20201115 22:02:32.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.593" endtime="20201115 22:02:32.878"></status>
</kw>
<msg timestamp="20201115 22:02:32.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022424194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.592" endtime="20201115 22:02:32.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022424194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.882" endtime="20201115 22:02:32.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.891" endtime="20201115 22:02:32.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.589" endtime="20201115 22:02:32.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.587" endtime="20201115 22:02:32.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:32.897" level="INFO">${RESULT} = [{'time': 0.022433708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.022617875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:32.894" endtime="20201115 22:02:32.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:32.912" level="INFO">${OVERHEAD} = {'time': [0.022433708, 0.022617875, 0.022802236, 0.022987597, 0.023177708, 0.023366319, 0.02355, 0.023735667, 0.023920431, 0.024108486, 0.024298069, 0.024488708, 0.024671694, 0.024861528, 0.025049208,...</msg>
<status status="PASS" starttime="20201115 22:02:32.898" endtime="20201115 22:02:32.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.916" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:32.915" endtime="20201115 22:02:32.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.919" level="INFO">VALUE: [9.513999999998662e-06, 9.263999999998412e-06, 9.292000000001022e-06, 9.263999999998412e-06, 9.250000000002312e-06, 9.221999999999703e-06, 9.194000000000563e-06, 9.263999999998412e-06, 9.277999999997982e-06, 9.249999999998842e-06, 9.276999999998509e-06, 9.264000000001882e-06, 9.263000000002408e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.249999999998842e-06, 9.208999999999606e-06, 9.278000000001452e-06, 9.291000000001548e-06, 9.262999999998939e-06, 9.263999999998412e-06, 9.277999999997982e-06, 9.305999999997122e-06, 9.263999999998412e-06, 9.263999999998412e-06, 9.278000000001452e-06, 9.263999999998412e-06, 9.194000000000563e-06, 9.263999999998412e-06, 9.249999999998842e-06, 9.264000000001882e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.263999999998412e-06, 9.263999999998412e-06, 9.235999999999273e-06, 9.263999999998412e-06, 9.264000000001882e-06, 9.250000000002312e-06, 9.264000000001882e-06, 9.319000000000688e-06, 9.263999999998412e-06, 9.263999999998412e-06, 9.292000000001022e-06, 9.250000000002312e-06, 9.235999999999273e-06, 9.249999999998842e-06, 9.263000000002408e-06, 9.249999999995373e-06]</msg>
<status status="PASS" starttime="20201115 22:02:32.917" endtime="20201115 22:02:32.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.913" endtime="20201115 22:02:32.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.922" endtime="20201115 22:02:32.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:32.925" endtime="20201115 22:02:32.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.924" endtime="20201115 22:02:32.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.920" endtime="20201115 22:02:32.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.551" endtime="20201115 22:02:32.946"></status>
</kw>
<msg timestamp="20201115 22:02:32.946" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.955" endtime="20201115 22:02:32.974"></status>
</kw>
<msg timestamp="20201115 22:02:32.975" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.953" endtime="20201115 22:02:32.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.977" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.976" endtime="20201115 22:02:32.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.978" endtime="20201115 22:02:32.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.951" endtime="20201115 22:02:32.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.949" endtime="20201115 22:02:32.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.988" endtime="20201115 22:02:33.273"></status>
</kw>
<msg timestamp="20201115 22:02:33.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022216056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022225514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.986" endtime="20201115 22:02:33.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022216056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022225514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.278" endtime="20201115 22:02:33.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.286" endtime="20201115 22:02:33.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.984" endtime="20201115 22:02:33.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.982" endtime="20201115 22:02:33.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:33.293" level="INFO">${RESULT} = [{'time': 0.022225514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.457999999996913e-06, 'source_diff': 9.457999999996913e-06}, {'time': 0.022414278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:33.289" endtime="20201115 22:02:33.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:33.306" level="INFO">${OVERHEAD} = {'time': [0.022225514, 0.022414278, 0.022600514, 0.02278925, 0.022979361, 0.023165431, 0.023356208, 0.023538931, 0.023724986, 0.023913361, 0.024098403, 0.024286986, 0.024469972, 0.024660486, 0.0248492...</msg>
<status status="PASS" starttime="20201115 22:02:33.294" endtime="20201115 22:02:33.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.310" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:33.309" endtime="20201115 22:02:33.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.313" level="INFO">VALUE: [9.457999999996913e-06, 9.249999999998842e-06, 9.263999999998412e-06, 9.249999999998842e-06, 9.264000000001882e-06, 9.249999999998842e-06, 9.263999999998412e-06, 9.249999999998842e-06, 9.235999999999273e-06, 9.278000000001452e-06, 9.306000000000592e-06, 9.235999999999273e-06, 9.263999999998412e-06, 9.249999999998842e-06, 9.249999999998842e-06, 9.264000000001882e-06, 9.278000000001452e-06, 9.263999999998412e-06, 9.249999999998842e-06, 9.249999999998842e-06, 9.250000000002312e-06, 9.263999999998412e-06, 9.333000000000258e-06, 9.291999999997552e-06, 9.249999999998842e-06, 9.250000000002312e-06, 9.278000000001452e-06, 9.263000000002408e-06, 9.264000000001882e-06, 9.249999999998842e-06, 9.264000000001882e-06, 9.263999999998412e-06, 9.222000000003172e-06, 9.264000000001882e-06, 9.181000000000467e-06, 9.276999999998509e-06, 9.208000000000133e-06, 9.263999999998412e-06, 9.249999999998842e-06, 9.276999999998509e-06, 9.249999999998842e-06, 9.263999999998412e-06, 9.320000000000161e-06, 9.236999999998746e-06, 9.305000000001118e-06, 9.277000000001978e-06, 9.222999999999176e-06, 9.346999999999828e-06, 9.263999999998412e-06, 9.250000000002312e-06]</msg>
<status status="PASS" starttime="20201115 22:02:33.312" endtime="20201115 22:02:33.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.307" endtime="20201115 22:02:33.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.316" endtime="20201115 22:02:33.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:33.319" endtime="20201115 22:02:33.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.318" endtime="20201115 22:02:33.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.314" endtime="20201115 22:02:33.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.946" endtime="20201115 22:02:33.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.366" endtime="20201115 22:02:33.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.365" endtime="20201115 22:02:33.340"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.343" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.351" endtime="20201115 22:02:33.371"></status>
</kw>
<msg timestamp="20201115 22:02:33.372" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.350" endtime="20201115 22:02:33.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.374" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.373" endtime="20201115 22:02:33.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.375" endtime="20201115 22:02:33.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.347" endtime="20201115 22:02:33.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.345" endtime="20201115 22:02:33.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.385" endtime="20201115 22:02:33.671"></status>
</kw>
<msg timestamp="20201115 22:02:33.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024291556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.383" endtime="20201115 22:02:33.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024281833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024291556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.675" endtime="20201115 22:02:33.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.683" endtime="20201115 22:02:33.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.381" endtime="20201115 22:02:33.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.379" endtime="20201115 22:02:33.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:33.689" level="INFO">${RESULT} = [{'time': 0.024291556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.722999999999676e-06, 'source_diff': 9.722999999999676e-06}, {'time': 0.024489472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:33.686" endtime="20201115 22:02:33.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:33.703" level="INFO">${OVERHEAD} = {'time': [0.024291556, 0.024489472, 0.024684819, 0.024880042, 0.025073236, 0.025268722, 0.025465194, 0.025663986, 0.025857417, 0.026056667, 0.026252542, 0.026446958, 0.026641764, 0.026834556, 0.027028...</msg>
<status status="PASS" starttime="20201115 22:02:33.690" endtime="20201115 22:02:33.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.707" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:33.706" endtime="20201115 22:02:33.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.710" level="INFO">VALUE: [9.722999999999676e-06, 9.528000000001702e-06, 9.541000000001798e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.541000000001798e-06, 9.583000000000508e-06, 9.555000000001368e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.542000000001272e-06, 9.540999999998329e-06, 9.541999999997802e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.556000000000842e-06, 9.610999999999648e-06, 9.556000000000842e-06, 9.528000000001702e-06, 9.500000000002562e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.554999999997899e-06, 9.527999999998232e-06, 9.541000000001798e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.471999999999953e-06, 9.556000000000842e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.556000000000842e-06, 9.499999999999093e-06, 9.541000000001798e-06, 9.541000000001798e-06, 9.541000000001798e-06, 9.555000000001368e-06, 9.541999999994333e-06, 9.541000000001798e-06, 9.555000000001368e-06, 9.499999999995623e-06, 9.542000000001272e-06, 9.52699999999529e-06, 9.542000000001272e-06, 9.471999999996483e-06, 9.555000000001368e-06, 9.541999999994333e-06, 9.556000000000842e-06, 9.527999999994763e-06, 9.513000000002658e-06]</msg>
<status status="PASS" starttime="20201115 22:02:33.708" endtime="20201115 22:02:33.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.704" endtime="20201115 22:02:33.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.713" endtime="20201115 22:02:33.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:33.716" endtime="20201115 22:02:33.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.715" endtime="20201115 22:02:33.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.711" endtime="20201115 22:02:33.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.343" endtime="20201115 22:02:33.737"></status>
</kw>
<msg timestamp="20201115 22:02:33.737" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.746" endtime="20201115 22:02:33.766"></status>
</kw>
<msg timestamp="20201115 22:02:33.766" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.744" endtime="20201115 22:02:33.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.769" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.767" endtime="20201115 22:02:33.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.770" endtime="20201115 22:02:33.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.742" endtime="20201115 22:02:33.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.739" endtime="20201115 22:02:33.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.780" endtime="20201115 22:02:34.066"></status>
</kw>
<msg timestamp="20201115 22:02:34.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.779" endtime="20201115 22:02:34.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.070" endtime="20201115 22:02:34.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.078" endtime="20201115 22:02:34.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.776" endtime="20201115 22:02:34.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.774" endtime="20201115 22:02:34.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:34.085" level="INFO">${RESULT} = [{'time': 0.022056583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.022251694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:34.081" endtime="20201115 22:02:34.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:34.098" level="INFO">${OVERHEAD} = {'time': [0.022056583, 0.022251694, 0.022451208, 0.022646042, 0.022838569, 0.023032625, 0.023229917, 0.023429042, 0.023624917, 0.0238255, 0.024021375, 0.024220486, 0.024418111, 0.024616014, 0.02481041...</msg>
<status status="PASS" starttime="20201115 22:02:34.086" endtime="20201115 22:02:34.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.102" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:34.101" endtime="20201115 22:02:34.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.105" level="INFO">VALUE: [9.708000000000633e-06, 9.526999999998759e-06, 9.541000000001798e-06, 9.514000000002132e-06, 9.554999999997899e-06, 9.569000000000938e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.541999999997802e-06, 9.541999999997802e-06, 9.514000000002132e-06, 9.540999999998329e-06, 9.541000000001798e-06, 9.556000000000842e-06, 9.540999999998329e-06, 9.554999999997899e-06, 9.541000000001798e-06, 9.556000000000842e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.597000000000078e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.540999999998329e-06, 9.542000000001272e-06, 9.527000000002228e-06, 9.541999999997802e-06, 9.568999999997468e-06, 9.540999999998329e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.554999999997899e-06, 9.528000000001702e-06, 9.540999999998329e-06, 9.570000000000412e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.556000000000842e-06, 9.486999999998996e-06, 9.542000000001272e-06, 9.556000000000842e-06, 9.526999999998759e-06, 9.555000000001368e-06, 9.556000000000842e-06, 9.597999999999551e-06]</msg>
<status status="PASS" starttime="20201115 22:02:34.103" endtime="20201115 22:02:34.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.099" endtime="20201115 22:02:34.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.108" endtime="20201115 22:02:34.109"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:34.111" endtime="20201115 22:02:34.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.110" endtime="20201115 22:02:34.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.106" endtime="20201115 22:02:34.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.737" endtime="20201115 22:02:34.132"></status>
</kw>
<msg timestamp="20201115 22:02:34.132" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.141" endtime="20201115 22:02:34.161"></status>
</kw>
<msg timestamp="20201115 22:02:34.161" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.139" endtime="20201115 22:02:34.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.163" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.162" endtime="20201115 22:02:34.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.165" endtime="20201115 22:02:34.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.137" endtime="20201115 22:02:34.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.135" endtime="20201115 22:02:34.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.174" endtime="20201115 22:02:34.459"></status>
</kw>
<msg timestamp="20201115 22:02:34.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022567028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.173" endtime="20201115 22:02:34.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022567028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.463" endtime="20201115 22:02:34.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.471" endtime="20201115 22:02:34.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.170" endtime="20201115 22:02:34.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.169" endtime="20201115 22:02:34.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:34.477" level="INFO">${RESULT} = [{'time': 0.022567028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.022759458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:34.474" endtime="20201115 22:02:34.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:34.492" level="INFO">${OVERHEAD} = {'time': [0.022567028, 0.022759458, 0.022953194, 0.023147458, 0.023342944, 0.023535736, 0.023733486, 0.023927847, 0.024120292, 0.024316597, 0.024513667, 0.024713736, 0.024912556, 0.025106417, 0.025304...</msg>
<status status="PASS" starttime="20201115 22:02:34.478" endtime="20201115 22:02:34.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.496" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:34.495" endtime="20201115 22:02:34.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.499" level="INFO">VALUE: [9.722000000000203e-06, 9.526999999998759e-06, 9.540999999998329e-06, 9.540999999998329e-06, 9.485999999999523e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.610999999999648e-06, 9.528000000001702e-06, 9.540999999998329e-06, 9.527999999998232e-06, 9.555000000001368e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.597999999999551e-06, 9.527999999998232e-06, 9.541999999997802e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.526999999998759e-06, 9.527999999998232e-06, 9.540999999998329e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.541000000001798e-06, 9.542000000001272e-06, 9.541999999997802e-06, 9.513999999998662e-06, 9.485999999999523e-06, 9.569999999996942e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.514000000002132e-06, 9.526999999998759e-06, 9.556000000000842e-06, 9.541999999997802e-06, 9.555000000001368e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.556000000000842e-06, 9.513999999998662e-06, 9.555000000001368e-06, 9.569000000000938e-06, 9.611999999999121e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.569000000000938e-06, 9.514000000002132e-06, 9.527999999994763e-06]</msg>
<status status="PASS" starttime="20201115 22:02:34.497" endtime="20201115 22:02:34.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.493" endtime="20201115 22:02:34.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.502" endtime="20201115 22:02:34.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:34.505" endtime="20201115 22:02:34.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.504" endtime="20201115 22:02:34.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.500" endtime="20201115 22:02:34.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.133" endtime="20201115 22:02:34.526"></status>
</kw>
<msg timestamp="20201115 22:02:34.526" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.535" endtime="20201115 22:02:34.555"></status>
</kw>
<msg timestamp="20201115 22:02:34.556" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.534" endtime="20201115 22:02:34.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.558" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.557" endtime="20201115 22:02:34.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.559" endtime="20201115 22:02:34.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.531" endtime="20201115 22:02:34.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.529" endtime="20201115 22:02:34.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.569" endtime="20201115 22:02:34.855"></status>
</kw>
<msg timestamp="20201115 22:02:34.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022345222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022354958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.568" endtime="20201115 22:02:34.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022345222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022354958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.859" endtime="20201115 22:02:34.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.867" endtime="20201115 22:02:34.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.565" endtime="20201115 22:02:34.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.563" endtime="20201115 22:02:34.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:34.874" level="INFO">${RESULT} = [{'time': 0.022354958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.735999999999773e-06, 'source_diff': 9.735999999999773e-06}, {'time': 0.02254925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:34.871" endtime="20201115 22:02:34.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:34.887" level="INFO">${OVERHEAD} = {'time': [0.022354958, 0.02254925, 0.022741375, 0.022937264, 0.023131, 0.023324333, 0.023516861, 0.023715694, 0.023912903, 0.024109806, 0.024305764, 0.024498153, 0.024698597, 0.024890708, 0.025086861,...</msg>
<status status="PASS" starttime="20201115 22:02:34.875" endtime="20201115 22:02:34.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.892" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:34.891" endtime="20201115 22:02:34.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.894" level="INFO">VALUE: [9.735999999999773e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.526999999998759e-06, 9.542000000001272e-06, 9.540999999998329e-06, 9.485999999999523e-06, 9.61200000000259e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.554999999997899e-06, 9.541000000001798e-06, 9.527999999998232e-06, 9.471999999999953e-06, 9.542000000001272e-06, 9.556000000000842e-06, 9.541999999997802e-06, 9.526999999998759e-06, 9.541999999997802e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.555000000001368e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.541000000001798e-06, 9.542000000001272e-06, 9.499999999999093e-06, 9.541999999997802e-06, 9.485999999999523e-06, 9.528000000001702e-06, 9.554999999997899e-06, 9.485999999999523e-06, 9.528000000001702e-06, 9.569000000000938e-06, 9.514000000002132e-06, 9.471999999999953e-06, 9.527999999998232e-06, 9.541000000001798e-06, 9.542000000001272e-06, 9.541000000001798e-06, 9.556000000000842e-06, 9.540999999998329e-06, 9.528000000001702e-06, 9.444000000000813e-06, 9.514000000002132e-06, 9.610999999999648e-06, 9.541999999994333e-06, 9.514000000002132e-06]</msg>
<status status="PASS" starttime="20201115 22:02:34.893" endtime="20201115 22:02:34.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.888" endtime="20201115 22:02:34.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.897" endtime="20201115 22:02:34.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:34.901" endtime="20201115 22:02:34.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.900" endtime="20201115 22:02:34.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.896" endtime="20201115 22:02:34.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.527" endtime="20201115 22:02:34.922"></status>
</kw>
<msg timestamp="20201115 22:02:34.922" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.931" endtime="20201115 22:02:34.950"></status>
</kw>
<msg timestamp="20201115 22:02:34.950" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.929" endtime="20201115 22:02:34.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.953" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.951" endtime="20201115 22:02:34.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.954" endtime="20201115 22:02:34.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.926" endtime="20201115 22:02:34.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.924" endtime="20201115 22:02:34.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.964" endtime="20201115 22:02:35.249"></status>
</kw>
<msg timestamp="20201115 22:02:35.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.962" endtime="20201115 22:02:35.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.253" endtime="20201115 22:02:35.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.261" endtime="20201115 22:02:35.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.960" endtime="20201115 22:02:35.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.958" endtime="20201115 22:02:35.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:35.268" level="INFO">${RESULT} = [{'time': 0.022130556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.736999999999246e-06, 'source_diff': 9.736999999999246e-06}, {'time': 0.022324222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:35.264" endtime="20201115 22:02:35.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:35.281" level="INFO">${OVERHEAD} = {'time': [0.022130556, 0.022324222, 0.022523014, 0.022720514, 0.022916792, 0.023116639, 0.023310847, 0.023509139, 0.023706764, 0.023905194, 0.024100139, 0.024298833, 0.024493514, 0.024690486, 0.024886...</msg>
<status status="PASS" starttime="20201115 22:02:35.269" endtime="20201115 22:02:35.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.285" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:35.284" endtime="20201115 22:02:35.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.288" level="INFO">VALUE: [9.736999999999246e-06, 9.569000000000938e-06, 9.542000000001272e-06, 9.556000000000842e-06, 9.513999999998662e-06, 9.610999999999648e-06, 9.527999999998232e-06, 9.541999999997802e-06, 9.542000000001272e-06, 9.527000000002228e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.555000000001368e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.556000000000842e-06, 9.556000000000842e-06, 9.542000000001272e-06, 9.541999999997802e-06, 9.485999999999523e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.526999999998759e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.542000000001272e-06, 9.569000000000938e-06, 9.527999999998232e-06, 9.554999999997899e-06, 9.541999999997802e-06, 9.570000000000412e-06, 9.541999999997802e-06, 9.486999999998996e-06, 9.625000000002687e-06, 9.541999999997802e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.568999999997468e-06, 9.556000000000842e-06, 9.556000000000842e-06, 9.513999999998662e-06, 9.556000000000842e-06, 9.569000000000938e-06, 9.486000000002992e-06, 9.542000000001272e-06, 9.556000000000842e-06]</msg>
<status status="PASS" starttime="20201115 22:02:35.286" endtime="20201115 22:02:35.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.282" endtime="20201115 22:02:35.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.291" endtime="20201115 22:02:35.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:35.295" endtime="20201115 22:02:35.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.293" endtime="20201115 22:02:35.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.290" endtime="20201115 22:02:35.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.922" endtime="20201115 22:02:35.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.342" endtime="20201115 22:02:35.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.341" endtime="20201115 22:02:35.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.336" endtime="20201115 22:02:35.316"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:35.320" endtime="20201115 22:02:35.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.319" endtime="20201115 22:02:35.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.317" endtime="20201115 22:02:35.341"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:46.266" endtime="20201115 22:02:35.341" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:35.349" endtime="20201115 22:02:35.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.347" endtime="20201115 22:02:35.369"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.383" endtime="20201115 22:02:35.396"></status>
</kw>
<msg timestamp="20201115 22:02:35.397" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.381" endtime="20201115 22:02:35.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.399" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.398" endtime="20201115 22:02:35.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.402" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:35.400" endtime="20201115 22:02:35.402"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:35.379" endtime="20201115 22:02:35.403"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:35.376" endtime="20201115 22:02:35.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.374" endtime="20201115 22:02:35.404"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:35.408" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:35.407" endtime="20201115 22:02:35.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.405" endtime="20201115 22:02:35.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.373" endtime="20201115 22:02:35.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.372" endtime="20201115 22:02:35.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.409" endtime="20201115 22:02:35.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.371" endtime="20201115 22:02:35.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.370" endtime="20201115 22:02:35.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.346" endtime="20201115 22:02:35.412"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.415" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.425" endtime="20201115 22:02:35.437"></status>
</kw>
<msg timestamp="20201115 22:02:35.438" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.423" endtime="20201115 22:02:35.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.440" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.439" endtime="20201115 22:02:35.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.441" endtime="20201115 22:02:35.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.420" endtime="20201115 22:02:35.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.418" endtime="20201115 22:02:35.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.451" endtime="20201115 22:02:35.736"></status>
</kw>
<msg timestamp="20201115 22:02:35.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068117639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068118986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.450" endtime="20201115 22:02:35.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068117639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068118986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.740" endtime="20201115 22:02:35.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.748" endtime="20201115 22:02:35.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.446" endtime="20201115 22:02:35.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.444" endtime="20201115 22:02:35.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:35.755" level="INFO">${RESULT} = [{'time': 0.068118986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3470000000126436e-06, 'source_diff': 1.3470000000126436e-06}, {'time': 0.068169417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:35.752" endtime="20201115 22:02:35.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:35.768" level="INFO">${OVERHEAD} = {'time': [0.068118986, 0.068169417, 0.068212597, 0.068261708, 0.068310403, 0.068355667, 0.0684065, 0.068452194, 0.068500806, 0.068551042, 0.06859525, 0.068645014, 0.0686905, 0.068733347, 0.068784292, ...</msg>
<status status="PASS" starttime="20201115 22:02:35.756" endtime="20201115 22:02:35.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.773" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:35.772" endtime="20201115 22:02:35.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.775" level="INFO">VALUE: [1.3470000000126436e-06, 1.2919999999999598e-06, 1.3049999999931172e-06, 1.3330000000061348e-06, 1.3610000000052747e-06, 1.3059999999925909e-06, 1.318999999999626e-06, 1.3049999999931172e-06, 1.3199999999990997e-06, 1.3340000000056085e-06, 1.3059999999925909e-06, 1.3199999999990997e-06, 1.3610000000052747e-06, 1.305000000006995e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.3199999999990997e-06, 1.2910000000004862e-06, 1.3059999999925909e-06, 1.2770000000078552e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.2910000000004862e-06, 1.305000000006995e-06, 1.332999999992257e-06, 1.3060000000064687e-06, 1.3059999999925909e-06, 1.3049999999931172e-06, 1.2910000000004862e-06, 1.3199999999990997e-06, 1.3199999999990997e-06, 1.3199999999990997e-06, 1.318999999999626e-06, 1.2910000000004862e-06, 1.3059999999925909e-06, 1.3199999999990997e-06, 1.2919999999999598e-06, 1.2910000000004862e-06, 1.3049999999931172e-06, 1.2919999999999598e-06, 1.3060000000064687e-06, 1.3200000000129775e-06, 1.3059999999925909e-06, 1.3469999999987659e-06, 1.318999999999626e-06, 1.3060000000064687e-06, 1.2919999999999598e-06, 1.2499999999943112e-06, 1.3049999999931172e-06, 1.3049999999931172e-06]</msg>
<status status="PASS" starttime="20201115 22:02:35.774" endtime="20201115 22:02:35.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.769" endtime="20201115 22:02:35.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.778" endtime="20201115 22:02:35.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:35.782" endtime="20201115 22:02:35.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.780" endtime="20201115 22:02:35.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.776" endtime="20201115 22:02:35.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.416" endtime="20201115 22:02:35.803"></status>
</kw>
<msg timestamp="20201115 22:02:35.803" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.812" endtime="20201115 22:02:35.825"></status>
</kw>
<msg timestamp="20201115 22:02:35.825" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.810" endtime="20201115 22:02:35.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.828" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.826" endtime="20201115 22:02:35.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.829" endtime="20201115 22:02:35.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.808" endtime="20201115 22:02:35.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.805" endtime="20201115 22:02:35.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.840" endtime="20201115 22:02:36.126"></status>
</kw>
<msg timestamp="20201115 22:02:36.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022259972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022261319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.836" endtime="20201115 22:02:36.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022259972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022261319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.130" endtime="20201115 22:02:36.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.139" endtime="20201115 22:02:36.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.834" endtime="20201115 22:02:36.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.832" endtime="20201115 22:02:36.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:36.145" level="INFO">${RESULT} = [{'time': 0.022261319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3470000000022353e-06, 'source_diff': 1.3470000000022353e-06}, {'time': 0.022306444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:36.142" endtime="20201115 22:02:36.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:36.159" level="INFO">${OVERHEAD} = {'time': [0.022261319, 0.022306444, 0.022351097, 0.022395389, 0.022439903, 0.022484042, 0.022532528, 0.022576514, 0.022621972, 0.022665375, 0.022714194, 0.022763694, 0.022813667, 0.022860972, 0.022905...</msg>
<status status="PASS" starttime="20201115 22:02:36.146" endtime="20201115 22:02:36.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.163" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:36.162" endtime="20201115 22:02:36.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.165" level="INFO">VALUE: [1.3470000000022353e-06, 1.3610000000018052e-06, 1.318999999999626e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.3479999999982395e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3060000000029992e-06, 1.3050000000000561e-06, 1.3470000000022353e-06, 1.3199999999990997e-06, 1.3050000000000561e-06, 1.2910000000004862e-06, 1.3050000000000561e-06, 1.2910000000004862e-06, 1.3339999999986696e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3190000000030955e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.3469999999987659e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.3330000000026654e-06, 1.2499999999977807e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3190000000030955e-06, 1.3750000000013751e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.2910000000004862e-06, 1.3199999999990997e-06, 1.2910000000004862e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3059999999995298e-06]</msg>
<status status="PASS" starttime="20201115 22:02:36.164" endtime="20201115 22:02:36.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.159" endtime="20201115 22:02:36.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.169" endtime="20201115 22:02:36.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:36.172" endtime="20201115 22:02:36.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.171" endtime="20201115 22:02:36.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.167" endtime="20201115 22:02:36.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.803" endtime="20201115 22:02:36.193"></status>
</kw>
<msg timestamp="20201115 22:02:36.193" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.202" endtime="20201115 22:02:36.214"></status>
</kw>
<msg timestamp="20201115 22:02:36.215" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.200" endtime="20201115 22:02:36.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.217" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.216" endtime="20201115 22:02:36.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.218" endtime="20201115 22:02:36.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.198" endtime="20201115 22:02:36.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.196" endtime="20201115 22:02:36.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.227" endtime="20201115 22:02:36.514"></status>
</kw>
<msg timestamp="20201115 22:02:36.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022104222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.226" endtime="20201115 22:02:36.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022104222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.518" endtime="20201115 22:02:36.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.526" endtime="20201115 22:02:36.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.223" endtime="20201115 22:02:36.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.222" endtime="20201115 22:02:36.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:36.533" level="INFO">${RESULT} = [{'time': 0.022105569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.022148472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:36.530" endtime="20201115 22:02:36.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:36.546" level="INFO">${OVERHEAD} = {'time': [0.022105569, 0.022148472, 0.022195542, 0.022242875, 0.022287889, 0.022336167, 0.022385639, 0.022429875, 0.022478806, 0.022523472, 0.022567417, 0.022610972, 0.022658417, 0.022706014, 0.022750...</msg>
<status status="PASS" starttime="20201115 22:02:36.534" endtime="20201115 22:02:36.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.551" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:36.550" endtime="20201115 22:02:36.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.553" level="INFO">VALUE: [1.3469999999987659e-06, 1.2910000000004862e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.2920000000034293e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.332999999999196e-06, 1.3199999999990997e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.3200000000025691e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.3060000000029992e-06, 1.318999999999626e-06, 1.334000000002139e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.3059999999995298e-06, 1.27800000000039e-06, 1.3190000000030955e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.3479999999982395e-06, 1.318999999999626e-06, 1.2919999999999598e-06, 1.27800000000039e-06, 1.3339999999986696e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.3609999999983358e-06, 1.2910000000004862e-06, 1.3469999999987659e-06, 1.318999999999626e-06, 1.3059999999995298e-06]</msg>
<status status="PASS" starttime="20201115 22:02:36.552" endtime="20201115 22:02:36.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.547" endtime="20201115 22:02:36.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.557" endtime="20201115 22:02:36.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:36.560" endtime="20201115 22:02:36.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.559" endtime="20201115 22:02:36.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.555" endtime="20201115 22:02:36.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.194" endtime="20201115 22:02:36.581"></status>
</kw>
<msg timestamp="20201115 22:02:36.581" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.590" endtime="20201115 22:02:36.603"></status>
</kw>
<msg timestamp="20201115 22:02:36.603" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.588" endtime="20201115 22:02:36.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.606" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.604" endtime="20201115 22:02:36.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.607" endtime="20201115 22:02:36.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.586" endtime="20201115 22:02:36.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.583" endtime="20201115 22:02:36.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.616" endtime="20201115 22:02:36.903"></status>
</kw>
<msg timestamp="20201115 22:02:36.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.614" endtime="20201115 22:02:36.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.907" endtime="20201115 22:02:36.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.915" endtime="20201115 22:02:36.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.612" endtime="20201115 22:02:36.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.610" endtime="20201115 22:02:36.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:36.922" level="INFO">${RESULT} = [{'time': 0.022320889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.022371056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:36.919" endtime="20201115 22:02:36.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:36.935" level="INFO">${OVERHEAD} = {'time': [0.022320889, 0.022371056, 0.02241825, 0.022465569, 0.022513417, 0.022556181, 0.022602236, 0.022651222, 0.022698694, 0.022744319, 0.02279375, 0.022837181, 0.022887458, 0.022930625, 0.02297527...</msg>
<status status="PASS" starttime="20201115 22:02:36.923" endtime="20201115 22:02:36.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.940" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:36.939" endtime="20201115 22:02:36.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.942" level="INFO">VALUE: [1.3609999999983358e-06, 1.2919999999999598e-06, 1.318999999999626e-06, 1.2910000000004862e-06, 1.26400000000082e-06, 1.3060000000029992e-06, 1.318999999999626e-06, 1.2909999999970168e-06, 1.2909999999970168e-06, 1.3469999999987659e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.3050000000000561e-06, 1.27800000000039e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.332999999999196e-06, 1.2919999999999598e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.3339999999986696e-06, 1.2919999999999598e-06, 1.3199999999990997e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.2910000000004862e-06, 1.3479999999982395e-06, 1.3190000000030955e-06, 1.3199999999990997e-06, 1.2919999999999598e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.3190000000030955e-06, 1.3610000000018052e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.2919999999999598e-06, 1.3199999999990997e-06, 1.3050000000000561e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.2910000000004862e-06, 1.3200000000025691e-06, 1.3059999999995298e-06, 1.332999999999196e-06, 1.3059999999995298e-06, 1.318999999999626e-06]</msg>
<status status="PASS" starttime="20201115 22:02:36.941" endtime="20201115 22:02:36.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.936" endtime="20201115 22:02:36.943"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.946" endtime="20201115 22:02:36.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:36.949" endtime="20201115 22:02:36.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.948" endtime="20201115 22:02:36.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.944" endtime="20201115 22:02:36.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.581" endtime="20201115 22:02:36.970"></status>
</kw>
<msg timestamp="20201115 22:02:36.970" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.979" endtime="20201115 22:02:36.991"></status>
</kw>
<msg timestamp="20201115 22:02:36.991" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.977" endtime="20201115 22:02:36.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.993" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.992" endtime="20201115 22:02:36.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.995" endtime="20201115 22:02:36.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.975" endtime="20201115 22:02:36.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.973" endtime="20201115 22:02:36.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.004" endtime="20201115 22:02:37.290"></status>
</kw>
<msg timestamp="20201115 22:02:37.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.002" endtime="20201115 22:02:37.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.294" endtime="20201115 22:02:37.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.303" endtime="20201115 22:02:37.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.999" endtime="20201115 22:02:37.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.998" endtime="20201115 22:02:37.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:37.309" level="INFO">${RESULT} = [{'time': 0.022031361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.022081931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:37.306" endtime="20201115 22:02:37.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:37.322" level="INFO">${OVERHEAD} = {'time': [0.022031361, 0.022081931, 0.022125625, 0.022170014, 0.022214375, 0.022261306, 0.022304347, 0.022350583, 0.022398069, 0.022440806, 0.022484139, 0.022528764, 0.022572722, 0.022616, 0.022660236...</msg>
<status status="PASS" starttime="20201115 22:02:37.310" endtime="20201115 22:02:37.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.327" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:37.326" endtime="20201115 22:02:37.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.329" level="INFO">VALUE: [1.3469999999987659e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.3059999999995298e-06, 1.3060000000029992e-06, 1.3060000000029992e-06, 1.3050000000000561e-06, 1.2910000000004862e-06, 1.332999999999196e-06, 1.2919999999999598e-06, 1.3199999999990997e-06, 1.3199999999990997e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.2919999999999598e-06, 1.3050000000000561e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.2919999999999598e-06, 1.3059999999995298e-06, 1.26400000000082e-06, 1.332999999999196e-06, 1.318999999999626e-06, 1.318999999999626e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.3050000000000561e-06, 1.27800000000039e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.3479999999982395e-06, 1.2910000000004862e-06, 1.27800000000039e-06, 1.3059999999995298e-06, 1.27800000000039e-06, 1.3059999999995298e-06, 1.2360000000016802e-06, 1.332999999999196e-06, 1.3050000000000561e-06, 1.3199999999990997e-06, 1.3059999999995298e-06, 1.3059999999995298e-06, 1.318999999999626e-06, 1.3050000000000561e-06, 1.318999999999626e-06]</msg>
<status status="PASS" starttime="20201115 22:02:37.328" endtime="20201115 22:02:37.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.323" endtime="20201115 22:02:37.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.333" endtime="20201115 22:02:37.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.336" endtime="20201115 22:02:37.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.335" endtime="20201115 22:02:37.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.331" endtime="20201115 22:02:37.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.971" endtime="20201115 22:02:37.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.414" endtime="20201115 22:02:37.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.413" endtime="20201115 22:02:37.357"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.360" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.368" endtime="20201115 22:02:37.382"></status>
</kw>
<msg timestamp="20201115 22:02:37.382" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.367" endtime="20201115 22:02:37.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.385" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.383" endtime="20201115 22:02:37.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.386" endtime="20201115 22:02:37.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.364" endtime="20201115 22:02:37.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.362" endtime="20201115 22:02:37.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.395" endtime="20201115 22:02:37.683"></status>
</kw>
<msg timestamp="20201115 22:02:37.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024874444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024876167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.393" endtime="20201115 22:02:37.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024874444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024876167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.687" endtime="20201115 22:02:37.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.695" endtime="20201115 22:02:37.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.391" endtime="20201115 22:02:37.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.389" endtime="20201115 22:02:37.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:37.702" level="INFO">${RESULT} = [{'time': 0.024876167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.723000000002084e-06, 'source_diff': 1.723000000002084e-06}, {'time': 0.024929792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:37.699" endtime="20201115 22:02:37.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:37.715" level="INFO">${OVERHEAD} = {'time': [0.024876167, 0.024929792, 0.024980847, 0.025030611, 0.025081028, 0.025128903, 0.025182944, 0.025229486, 0.025279403, 0.025328306, 0.025377389, 0.025427542, 0.025480778, 0.025527444, 0.025573...</msg>
<status status="PASS" starttime="20201115 22:02:37.703" endtime="20201115 22:02:37.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.720" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:37.719" endtime="20201115 22:02:37.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.722" level="INFO">VALUE: [1.723000000002084e-06, 1.52800000000064e-06, 1.4719999999988909e-06, 1.4580000000027904e-06, 1.4999999999980307e-06, 1.4860000000019302e-06, 1.4859999999984608e-06, 1.4999999999980307e-06, 1.5420000000002099e-06, 1.4729999999983645e-06, 1.4719999999988909e-06, 1.4860000000019302e-06, 1.4719999999988909e-06, 1.4300000000001811e-06, 1.443999999999751e-06, 1.457999999999321e-06, 1.457999999999321e-06, 1.5550000000003061e-06, 1.4860000000019302e-06, 1.4859999999984608e-06, 1.5000000000015001e-06, 1.51400000000107e-06, 1.4859999999984608e-06, 1.4859999999984608e-06, 1.4859999999984608e-06, 1.5000000000015001e-06, 1.457999999999321e-06, 1.4859999999984608e-06, 1.4870000000014039e-06, 1.4580000000027904e-06, 1.4999999999980307e-06, 1.5000000000015001e-06, 1.51400000000107e-06, 1.4729999999983645e-06, 1.4860000000019302e-06, 1.51400000000107e-06, 1.4170000000000849e-06, 1.4869999999979344e-06, 1.4160000000006112e-06, 1.443999999999751e-06, 1.5559999999997798e-06, 1.51400000000107e-06, 1.5420000000002099e-06, 1.4860000000019302e-06, 1.4860000000019302e-06, 1.4999999999980307e-06, 1.5410000000007362e-06, 1.4860000000019302e-06, 1.4859999999984608e-06, 1.51400000000107e-06]</msg>
<status status="PASS" starttime="20201115 22:02:37.721" endtime="20201115 22:02:37.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.716" endtime="20201115 22:02:37.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.726" endtime="20201115 22:02:37.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.729" endtime="20201115 22:02:37.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.727" endtime="20201115 22:02:37.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.724" endtime="20201115 22:02:37.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.360" endtime="20201115 22:02:37.750"></status>
</kw>
<msg timestamp="20201115 22:02:37.750" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.759" endtime="20201115 22:02:37.771"></status>
</kw>
<msg timestamp="20201115 22:02:37.771" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.757" endtime="20201115 22:02:37.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.773" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.772" endtime="20201115 22:02:37.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.775" endtime="20201115 22:02:37.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.754" endtime="20201115 22:02:37.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.752" endtime="20201115 22:02:37.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.783" endtime="20201115 22:02:38.070"></status>
</kw>
<msg timestamp="20201115 22:02:38.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022137847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022139583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.782" endtime="20201115 22:02:38.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022137847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022139583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.074" endtime="20201115 22:02:38.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.082" endtime="20201115 22:02:38.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.779" endtime="20201115 22:02:38.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.778" endtime="20201115 22:02:38.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:38.089" level="INFO">${RESULT} = [{'time': 0.022139583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.022187819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:38.086" endtime="20201115 22:02:38.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:38.102" level="INFO">${OVERHEAD} = {'time': [0.022139583, 0.022187819, 0.022235417, 0.022288778, 0.022337986, 0.022390694, 0.022437889, 0.022484556, 0.022533375, 0.022585556, 0.022636667, 0.022684, 0.022729847, 0.022783486, 0.022831903...</msg>
<status status="PASS" starttime="20201115 22:02:38.090" endtime="20201115 22:02:38.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.108" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:38.107" endtime="20201115 22:02:38.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.111" level="INFO">VALUE: [1.7360000000021802e-06, 1.4860000000019302e-06, 1.5000000000015001e-06, 1.4029999999970455e-06, 1.457999999999321e-06, 1.4859999999984608e-06, 1.4719999999988909e-06, 1.4729999999983645e-06, 1.4860000000019302e-06, 1.4870000000014039e-06, 1.4859999999984608e-06, 1.4859999999984608e-06, 1.4860000000019302e-06, 1.4719999999988909e-06, 1.4860000000019302e-06, 1.4859999999984608e-06, 1.4860000000019302e-06, 1.5000000000015001e-06, 1.4860000000019302e-06, 1.51400000000107e-06, 1.473000000001834e-06, 1.4860000000019302e-06, 1.4719999999988909e-06, 1.4999999999980307e-06, 1.4999999999980307e-06, 1.4859999999984608e-06, 1.4729999999983645e-06, 1.4860000000019302e-06, 1.4729999999983645e-06, 1.4999999999980307e-06, 1.5000000000015001e-06, 1.4999999999980307e-06, 1.4860000000019302e-06, 1.5139999999976006e-06, 1.5000000000015001e-06, 1.5139999999976006e-06, 1.4859999999984608e-06, 1.5000000000015001e-06, 1.5000000000015001e-06, 1.51400000000107e-06, 1.5420000000002099e-06, 1.5000000000015001e-06, 1.4589999999987946e-06, 1.4870000000014039e-06, 1.52800000000064e-06, 1.457999999999321e-06, 1.4859999999984608e-06, 1.4870000000014039e-06, 1.5270000000011663e-06, 1.4999999999980307e-06]</msg>
<status status="PASS" starttime="20201115 22:02:38.109" endtime="20201115 22:02:38.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.104" endtime="20201115 22:02:38.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.114" endtime="20201115 22:02:38.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:38.118" endtime="20201115 22:02:38.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.116" endtime="20201115 22:02:38.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.112" endtime="20201115 22:02:38.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.750" endtime="20201115 22:02:38.139"></status>
</kw>
<msg timestamp="20201115 22:02:38.139" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.147" endtime="20201115 22:02:38.160"></status>
</kw>
<msg timestamp="20201115 22:02:38.161" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.146" endtime="20201115 22:02:38.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.163" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.162" endtime="20201115 22:02:38.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.164" endtime="20201115 22:02:38.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.143" endtime="20201115 22:02:38.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.141" endtime="20201115 22:02:38.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.173" endtime="20201115 22:02:38.460"></status>
</kw>
<msg timestamp="20201115 22:02:38.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.171" endtime="20201115 22:02:38.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.464" endtime="20201115 22:02:38.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.472" endtime="20201115 22:02:38.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.169" endtime="20201115 22:02:38.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.167" endtime="20201115 22:02:38.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:38.479" level="INFO">${RESULT} = [{'time': 0.022182042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.022228139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:38.476" endtime="20201115 22:02:38.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:38.493" level="INFO">${OVERHEAD} = {'time': [0.022182042, 0.022228139, 0.022279097, 0.022325222, 0.022374986, 0.022425667, 0.022475958, 0.022525833, 0.022575472, 0.022624667, 0.022675, 0.022723417, 0.022773653, 0.022826875, 0.022880792...</msg>
<status status="PASS" starttime="20201115 22:02:38.480" endtime="20201115 22:02:38.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.497" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:38.496" endtime="20201115 22:02:38.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.500" level="INFO">VALUE: [1.6809999999999048e-06, 1.4860000000019302e-06, 1.4860000000019302e-06, 1.4859999999984608e-06, 1.4999999999980307e-06, 1.4729999999983645e-06, 1.4860000000019302e-06, 1.4859999999984608e-06, 1.5139999999976006e-06, 1.473000000001834e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.4859999999984608e-06, 1.4860000000019302e-06, 1.51400000000107e-06, 1.4999999999980307e-06, 1.5000000000015001e-06, 1.4859999999984608e-06, 1.52800000000064e-06, 1.4859999999984608e-06, 1.4859999999984608e-06, 1.51400000000107e-06, 1.5000000000015001e-06, 1.4720000000023603e-06, 1.4859999999984608e-06, 1.4719999999988909e-06, 1.4859999999984608e-06, 1.4859999999984608e-06, 1.4719999999988909e-06, 1.4860000000019302e-06, 1.4860000000019302e-06, 1.4719999999988909e-06, 1.4719999999988909e-06, 1.4859999999984608e-06, 1.4719999999988909e-06, 1.4859999999984608e-06, 1.4309999999996548e-06, 1.4719999999988909e-06, 1.5000000000015001e-06, 1.51400000000107e-06, 1.4440000000032205e-06, 1.4719999999988909e-06, 1.4859999999984608e-06, 1.4859999999984608e-06, 1.4860000000019302e-06, 1.473000000001834e-06, 1.5000000000015001e-06, 1.4859999999984608e-06, 1.4859999999984608e-06]</msg>
<status status="PASS" starttime="20201115 22:02:38.498" endtime="20201115 22:02:38.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.493" endtime="20201115 22:02:38.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.503" endtime="20201115 22:02:38.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:38.506" endtime="20201115 22:02:38.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.504" endtime="20201115 22:02:38.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.501" endtime="20201115 22:02:38.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.139" endtime="20201115 22:02:38.527"></status>
</kw>
<msg timestamp="20201115 22:02:38.527" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.535" endtime="20201115 22:02:38.549"></status>
</kw>
<msg timestamp="20201115 22:02:38.550" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.534" endtime="20201115 22:02:38.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.552" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.551" endtime="20201115 22:02:38.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.553" endtime="20201115 22:02:38.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.531" endtime="20201115 22:02:38.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.529" endtime="20201115 22:02:38.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.562" endtime="20201115 22:02:38.848"></status>
</kw>
<msg timestamp="20201115 22:02:38.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022426944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.560" endtime="20201115 22:02:38.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022426944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.852" endtime="20201115 22:02:38.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.861" endtime="20201115 22:02:38.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.558" endtime="20201115 22:02:38.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.556" endtime="20201115 22:02:38.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:38.868" level="INFO">${RESULT} = [{'time': 0.022426944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.022475542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:38.864" endtime="20201115 22:02:38.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:38.881" level="INFO">${OVERHEAD} = {'time': [0.022426944, 0.022475542, 0.022525431, 0.022576681, 0.022629903, 0.022679417, 0.022727861, 0.022775944, 0.022828375, 0.022878806, 0.022931583, 0.022983681, 0.02303625, 0.023088431, 0.0231411...</msg>
<status status="PASS" starttime="20201115 22:02:38.869" endtime="20201115 22:02:38.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.886" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:38.885" endtime="20201115 22:02:38.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.888" level="INFO">VALUE: [1.7500000000017502e-06, 1.4860000000019302e-06, 1.4869999999979344e-06, 1.4870000000014039e-06, 1.4859999999984608e-06, 1.51400000000107e-06, 1.5420000000002099e-06, 1.4719999999988909e-06, 1.4720000000023603e-06, 1.5000000000015001e-06, 1.5549999999968367e-06, 1.4589999999987946e-06, 1.4860000000019302e-06, 1.4999999999980307e-06, 1.51400000000107e-06, 1.4860000000019302e-06, 1.5420000000002099e-06, 1.4860000000019302e-06, 1.4859999999984608e-06, 1.5000000000015001e-06, 1.4859999999984608e-06, 1.4860000000019302e-06, 1.5000000000015001e-06, 1.4999999999980307e-06, 1.4859999999984608e-06, 1.4300000000001811e-06, 1.4859999999984608e-06, 1.457999999999321e-06, 1.4860000000019302e-06, 1.4999999999980307e-06, 1.5000000000015001e-06, 1.443999999999751e-06, 1.4999999999980307e-06, 1.4720000000023603e-06, 1.4860000000019302e-06, 1.4870000000014039e-06, 1.4860000000019302e-06, 1.4999999999980307e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.4999999999980307e-06, 1.5139999999976006e-06, 1.4859999999984608e-06, 1.51400000000107e-06, 1.4719999999988909e-06, 1.4860000000019302e-06, 1.4859999999984608e-06, 1.4859999999984608e-06, 1.4719999999988909e-06, 1.4449999999992247e-06]</msg>
<status status="PASS" starttime="20201115 22:02:38.887" endtime="20201115 22:02:38.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.882" endtime="20201115 22:02:38.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.891" endtime="20201115 22:02:38.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:38.894" endtime="20201115 22:02:38.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.893" endtime="20201115 22:02:38.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.890" endtime="20201115 22:02:38.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.527" endtime="20201115 22:02:38.915"></status>
</kw>
<msg timestamp="20201115 22:02:38.915" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.924" endtime="20201115 22:02:38.937"></status>
</kw>
<msg timestamp="20201115 22:02:38.938" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.923" endtime="20201115 22:02:38.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.940" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.939" endtime="20201115 22:02:38.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.941" endtime="20201115 22:02:38.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.920" endtime="20201115 22:02:38.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.918" endtime="20201115 22:02:38.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.950" endtime="20201115 22:02:39.238"></status>
</kw>
<msg timestamp="20201115 22:02:39.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022122069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022123806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.949" endtime="20201115 22:02:39.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022122069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022123806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.247" endtime="20201115 22:02:39.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.255" endtime="20201115 22:02:39.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.946" endtime="20201115 22:02:39.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.944" endtime="20201115 22:02:39.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:39.262" level="INFO">${RESULT} = [{'time': 0.022123806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7369999999981844e-06, 'source_diff': 1.7369999999981844e-06}, {'time': 0.022176597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:39.259" endtime="20201115 22:02:39.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:39.275" level="INFO">${OVERHEAD} = {'time': [0.022123806, 0.022176597, 0.022225139, 0.022275292, 0.022323472, 0.022372639, 0.022426694, 0.022476694, 0.022528056, 0.022579153, 0.022632528, 0.022684833, 0.022733014, 0.022783125, 0.022834...</msg>
<status status="PASS" starttime="20201115 22:02:39.263" endtime="20201115 22:02:39.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.280" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:39.279" endtime="20201115 22:02:39.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.282" level="INFO">VALUE: [1.7369999999981844e-06, 1.4859999999984608e-06, 1.4860000000019302e-06, 1.4859999999984608e-06, 1.51400000000107e-06, 1.4859999999984608e-06, 1.5000000000015001e-06, 1.4859999999984608e-06, 1.473000000001834e-06, 1.5000000000015001e-06, 1.4859999999984608e-06, 1.4720000000023603e-06, 1.5420000000002099e-06, 1.4170000000000849e-06, 1.4860000000019302e-06, 1.5000000000015001e-06, 1.5409999999972668e-06, 1.4719999999988909e-06, 1.4860000000019302e-06, 1.4859999999984608e-06, 1.4859999999984608e-06, 1.4859999999984608e-06, 1.4999999999980307e-06, 1.4859999999984608e-06, 1.4859999999984608e-06, 1.5000000000015001e-06, 1.4869999999979344e-06, 1.4720000000023603e-06, 1.443999999999751e-06, 1.4170000000000849e-06, 1.4999999999980307e-06, 1.5000000000015001e-06, 1.5000000000015001e-06, 1.5000000000015001e-06, 1.4870000000014039e-06, 1.4859999999984608e-06, 1.4999999999980307e-06, 1.5000000000015001e-06, 1.4860000000019302e-06, 1.4999999999980307e-06, 1.5139999999976006e-06, 1.4449999999992247e-06, 1.4999999999980307e-06, 1.4719999999988909e-06, 1.5000000000015001e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.5420000000002099e-06, 1.5000000000015001e-06, 1.5000000000015001e-06]</msg>
<status status="PASS" starttime="20201115 22:02:39.281" endtime="20201115 22:02:39.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.276" endtime="20201115 22:02:39.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.286" endtime="20201115 22:02:39.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:39.289" endtime="20201115 22:02:39.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.287" endtime="20201115 22:02:39.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.284" endtime="20201115 22:02:39.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.916" endtime="20201115 22:02:39.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.358" endtime="20201115 22:02:39.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.358" endtime="20201115 22:02:39.310"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.312" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.321" endtime="20201115 22:02:39.333"></status>
</kw>
<msg timestamp="20201115 22:02:39.334" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.319" endtime="20201115 22:02:39.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.336" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.335" endtime="20201115 22:02:39.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.337" endtime="20201115 22:02:39.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.317" endtime="20201115 22:02:39.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.315" endtime="20201115 22:02:39.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.347" endtime="20201115 22:02:39.633"></status>
</kw>
<msg timestamp="20201115 22:02:39.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024398736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024400597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.345" endtime="20201115 22:02:39.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024398736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024400597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.637" endtime="20201115 22:02:39.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.645" endtime="20201115 22:02:39.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.343" endtime="20201115 22:02:39.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.341" endtime="20201115 22:02:39.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:39.652" level="INFO">${RESULT} = [{'time': 0.024400597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.024455375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:39.649" endtime="20201115 22:02:39.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:39.665" level="INFO">${OVERHEAD} = {'time': [0.024400597, 0.024455375, 0.024507125, 0.024556444, 0.0246055, 0.024655625, 0.024707944, 0.024763403, 0.024817708, 0.024872278, 0.024925889, 0.024977236, 0.025028986, 0.025085681, 0.02513902...</msg>
<status status="PASS" starttime="20201115 22:02:39.653" endtime="20201115 22:02:39.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.670" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:39.669" endtime="20201115 22:02:39.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.672" level="INFO">VALUE: [1.8609999999988358e-06, 1.5970000000024853e-06, 1.6110000000020552e-06, 1.5969999999990159e-06, 1.6109999999985858e-06, 1.5969999999990159e-06, 1.6519999999978219e-06, 1.52800000000064e-06, 1.6110000000020552e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.582999999999446e-06, 1.639000000001195e-06, 1.5979999999984895e-06, 1.5970000000024853e-06, 1.5969999999990159e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.6120000000015289e-06, 1.6110000000020552e-06, 1.6120000000015289e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.5969999999990159e-06, 1.6109999999985858e-06, 1.5970000000024853e-06, 1.6110000000020552e-06, 1.5969999999990159e-06, 1.6109999999985858e-06, 1.6119999999980594e-06, 1.5420000000002099e-06, 1.6110000000020552e-06, 1.6389999999977256e-06, 1.6110000000020552e-06, 1.5969999999990159e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.694000000000001e-06, 1.5969999999990159e-06, 1.6249999999981557e-06, 1.6660000000008612e-06]</msg>
<status status="PASS" starttime="20201115 22:02:39.671" endtime="20201115 22:02:39.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.666" endtime="20201115 22:02:39.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.675" endtime="20201115 22:02:39.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:39.679" endtime="20201115 22:02:39.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.677" endtime="20201115 22:02:39.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.674" endtime="20201115 22:02:39.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.313" endtime="20201115 22:02:39.700"></status>
</kw>
<msg timestamp="20201115 22:02:39.700" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.709" endtime="20201115 22:02:39.723"></status>
</kw>
<msg timestamp="20201115 22:02:39.724" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.707" endtime="20201115 22:02:39.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.726" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.725" endtime="20201115 22:02:39.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.728" endtime="20201115 22:02:39.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.704" endtime="20201115 22:02:39.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.702" endtime="20201115 22:02:39.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.736" endtime="20201115 22:02:40.023"></status>
</kw>
<msg timestamp="20201115 22:02:40.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.735" endtime="20201115 22:02:40.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.027" endtime="20201115 22:02:40.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.035" endtime="20201115 22:02:40.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.732" endtime="20201115 22:02:40.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.731" endtime="20201115 22:02:40.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:40.042" level="INFO">${RESULT} = [{'time': 0.022283306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.022340792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:40.039" endtime="20201115 22:02:40.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:40.055" level="INFO">${OVERHEAD} = {'time': [0.022283306, 0.022340792, 0.022394528, 0.022444931, 0.022500028, 0.022550556, 0.022605819, 0.022656875, 0.022711569, 0.022760833, 0.022811278, 0.022861417, 0.022913847, 0.022965708, 0.023018...</msg>
<status status="PASS" starttime="20201115 22:02:40.043" endtime="20201115 22:02:40.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.060" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:40.059" endtime="20201115 22:02:40.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.062" level="INFO">VALUE: [1.8479999999987395e-06, 1.639000000001195e-06, 1.6110000000020552e-06, 1.598000000001959e-06, 1.6109999999985858e-06, 1.6119999999980594e-06, 1.637999999998252e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.694000000000001e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.582999999999446e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.5830000000029154e-06, 1.5969999999990159e-06, 1.5970000000024853e-06, 1.6380000000017214e-06, 1.639000000001195e-06, 1.582999999999446e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.5969999999990159e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.5969999999990159e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.582999999999446e-06, 1.6109999999985858e-06, 1.653000000000765e-06, 1.6110000000020552e-06, 1.6800000000004311e-06, 1.5969999999990159e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.598000000001959e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.6120000000015289e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.639000000001195e-06, 1.568999999999876e-06]</msg>
<status status="PASS" starttime="20201115 22:02:40.061" endtime="20201115 22:02:40.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.056" endtime="20201115 22:02:40.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.065" endtime="20201115 22:02:40.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:40.069" endtime="20201115 22:02:40.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.067" endtime="20201115 22:02:40.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.064" endtime="20201115 22:02:40.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.700" endtime="20201115 22:02:40.089"></status>
</kw>
<msg timestamp="20201115 22:02:40.089" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.099" endtime="20201115 22:02:40.112"></status>
</kw>
<msg timestamp="20201115 22:02:40.112" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.097" endtime="20201115 22:02:40.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.115" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.113" endtime="20201115 22:02:40.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.116" endtime="20201115 22:02:40.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.094" endtime="20201115 22:02:40.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.092" endtime="20201115 22:02:40.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.125" endtime="20201115 22:02:40.411"></status>
</kw>
<msg timestamp="20201115 22:02:40.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022943417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022945278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.123" endtime="20201115 22:02:40.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022943417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022945278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.415" endtime="20201115 22:02:40.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.424" endtime="20201115 22:02:40.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.121" endtime="20201115 22:02:40.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.119" endtime="20201115 22:02:40.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:40.430" level="INFO">${RESULT} = [{'time': 0.022945278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.023002611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:40.427" endtime="20201115 22:02:40.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:40.443" level="INFO">${OVERHEAD} = {'time': [0.022945278, 0.023002611, 0.023057319, 0.023109722, 0.023158917, 0.023214944, 0.023269931, 0.023324903, 0.023381736, 0.023437222, 0.023491931, 0.023546819, 0.023599569, 0.023648931, 0.023702...</msg>
<status status="PASS" starttime="20201115 22:02:40.431" endtime="20201115 22:02:40.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.448" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:40.447" endtime="20201115 22:02:40.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.450" level="INFO">VALUE: [1.8609999999988358e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.6110000000020552e-06, 1.568999999999876e-06, 1.6250000000016251e-06, 1.584000000002389e-06, 1.6109999999985858e-06, 1.568999999999876e-06, 1.6250000000016251e-06, 1.694000000000001e-06, 1.6110000000020552e-06, 1.653000000000765e-06, 1.6250000000016251e-06, 1.6119999999980594e-06, 1.6110000000020552e-06, 1.5969999999990159e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.598000000001959e-06, 1.5409999999972668e-06, 1.5699999999993497e-06, 1.6110000000020552e-06, 1.568999999999876e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.5830000000029154e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.6110000000020552e-06, 1.653000000000765e-06, 1.5969999999990159e-06, 1.6109999999985858e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.6250000000016251e-06, 1.6120000000015289e-06, 1.6110000000020552e-06, 1.5969999999990159e-06, 1.6110000000020552e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.694000000000001e-06, 1.6110000000020552e-06]</msg>
<status status="PASS" starttime="20201115 22:02:40.449" endtime="20201115 22:02:40.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.444" endtime="20201115 22:02:40.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.453" endtime="20201115 22:02:40.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:40.457" endtime="20201115 22:02:40.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.455" endtime="20201115 22:02:40.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.452" endtime="20201115 22:02:40.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.090" endtime="20201115 22:02:40.478"></status>
</kw>
<msg timestamp="20201115 22:02:40.478" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.487" endtime="20201115 22:02:40.499"></status>
</kw>
<msg timestamp="20201115 22:02:40.500" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.485" endtime="20201115 22:02:40.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.501" endtime="20201115 22:02:40.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.503" endtime="20201115 22:02:40.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.483" endtime="20201115 22:02:40.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.481" endtime="20201115 22:02:40.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.512" endtime="20201115 22:02:40.799"></status>
</kw>
<msg timestamp="20201115 22:02:40.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022048681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.511" endtime="20201115 22:02:40.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022048681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.803" endtime="20201115 22:02:40.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.812" endtime="20201115 22:02:40.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.508" endtime="20201115 22:02:40.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.506" endtime="20201115 22:02:40.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:40.818" level="INFO">${RESULT} = [{'time': 0.022050528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.022105458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:40.815" endtime="20201115 22:02:40.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:40.832" level="INFO">${OVERHEAD} = {'time': [0.022050528, 0.022105458, 0.022155097, 0.022207042, 0.022257167, 0.022308389, 0.022358125, 0.022411347, 0.022462806, 0.022516417, 0.022568694, 0.022618028, 0.022669375, 0.022723778, 0.022775...</msg>
<status status="PASS" starttime="20201115 22:02:40.819" endtime="20201115 22:02:40.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.836" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:40.835" endtime="20201115 22:02:40.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.838" level="INFO">VALUE: [1.846999999999266e-06, 1.6110000000020552e-06, 1.6799999999969617e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.5839999999989196e-06, 1.5839999999989196e-06, 1.5969999999990159e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.5979999999984895e-06, 1.6250000000016251e-06, 1.5979999999984895e-06, 1.6110000000020552e-06, 1.6389999999977256e-06, 1.5830000000029154e-06, 1.6380000000017214e-06, 1.6119999999980594e-06, 1.6249999999981557e-06, 1.6250000000016251e-06, 1.5979999999984895e-06, 1.5969999999990159e-06, 1.6110000000020552e-06, 1.6110000000020552e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.6529999999972955e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.6809999999999048e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.639000000001195e-06, 1.6660000000008612e-06, 1.639000000001195e-06, 1.6110000000020552e-06, 1.582999999999446e-06, 1.5549999999968367e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6380000000017214e-06, 1.6109999999985858e-06]</msg>
<status status="PASS" starttime="20201115 22:02:40.837" endtime="20201115 22:02:40.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.832" endtime="20201115 22:02:40.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.842" endtime="20201115 22:02:40.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:40.845" endtime="20201115 22:02:40.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.844" endtime="20201115 22:02:40.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.840" endtime="20201115 22:02:40.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.479" endtime="20201115 22:02:40.866"></status>
</kw>
<msg timestamp="20201115 22:02:40.866" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.875" endtime="20201115 22:02:40.887"></status>
</kw>
<msg timestamp="20201115 22:02:40.888" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.873" endtime="20201115 22:02:40.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.890" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.889" endtime="20201115 22:02:40.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.891" endtime="20201115 22:02:40.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.871" endtime="20201115 22:02:40.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.869" endtime="20201115 22:02:40.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.900" endtime="20201115 22:02:41.188"></status>
</kw>
<msg timestamp="20201115 22:02:41.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022227819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.899" endtime="20201115 22:02:41.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022227819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.192" endtime="20201115 22:02:41.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.201" endtime="20201115 22:02:41.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.896" endtime="20201115 22:02:41.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.894" endtime="20201115 22:02:41.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:41.207" level="INFO">${RESULT} = [{'time': 0.022227819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.022283542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:41.204" endtime="20201115 22:02:41.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:41.221" level="INFO">${OVERHEAD} = {'time': [0.022227819, 0.022283542, 0.022335819, 0.022385417, 0.022437486, 0.022494819, 0.022543722, 0.022593458, 0.022646736, 0.022701778, 0.022750972, 0.022807431, 0.022864264, 0.022913847, 0.022970...</msg>
<status status="PASS" starttime="20201115 22:02:41.208" endtime="20201115 22:02:41.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.225" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:41.224" endtime="20201115 22:02:41.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.228" level="INFO">VALUE: [1.8609999999988358e-06, 1.5979999999984895e-06, 1.5969999999990159e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6109999999985858e-06, 1.6800000000004311e-06, 1.5420000000002099e-06, 1.6110000000020552e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.5970000000024853e-06, 1.5979999999984895e-06, 1.6110000000020552e-06, 1.5559999999997798e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.52800000000064e-06, 1.6109999999985858e-06, 1.637999999998252e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.5559999999997798e-06, 1.598000000001959e-06, 1.653000000000765e-06, 1.6380000000017214e-06, 1.582999999999446e-06, 1.6109999999985858e-06, 1.6119999999980594e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6119999999980594e-06, 1.6250000000016251e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6110000000020552e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.6110000000020552e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6109999999985858e-06]</msg>
<status status="PASS" starttime="20201115 22:02:41.226" endtime="20201115 22:02:41.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.222" endtime="20201115 22:02:41.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.231" endtime="20201115 22:02:41.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:41.235" endtime="20201115 22:02:41.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.233" endtime="20201115 22:02:41.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.230" endtime="20201115 22:02:41.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.867" endtime="20201115 22:02:41.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.311" endtime="20201115 22:02:41.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.310" endtime="20201115 22:02:41.256"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.258" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.266" endtime="20201115 22:02:41.280"></status>
</kw>
<msg timestamp="20201115 22:02:41.281" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.265" endtime="20201115 22:02:41.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.283" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.282" endtime="20201115 22:02:41.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.284" endtime="20201115 22:02:41.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.262" endtime="20201115 22:02:41.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.260" endtime="20201115 22:02:41.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.293" endtime="20201115 22:02:41.580"></status>
</kw>
<msg timestamp="20201115 22:02:41.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02512975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02513175, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:41.291" endtime="20201115 22:02:41.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02512975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02513175, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:41.584" endtime="20201115 22:02:41.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.592" endtime="20201115 22:02:41.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.289" endtime="20201115 22:02:41.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.287" endtime="20201115 22:02:41.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:41.599" level="INFO">${RESULT} = [{'time': 0.02513175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.025188264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77...</msg>
<status status="PASS" starttime="20201115 22:02:41.595" endtime="20201115 22:02:41.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:41.612" level="INFO">${OVERHEAD} = {'time': [0.02513175, 0.025188264, 0.025247056, 0.025301333, 0.025358375, 0.025413042, 0.025471042, 0.025525833, 0.025585722, 0.025643889, 0.025699069, 0.025755611, 0.025809319, 0.025870014, 0.0259249...</msg>
<status status="PASS" starttime="20201115 22:02:41.600" endtime="20201115 22:02:41.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.616" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:41.615" endtime="20201115 22:02:41.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.619" level="INFO">VALUE: [2.000000000002e-06, 1.7779999999974205e-06, 1.76400000000132e-06, 1.7769999999979469e-06, 1.7219999999991409e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.7920000000004599e-06, 1.7630000000018464e-06, 1.77800000000089e-06, 1.7630000000018464e-06, 1.77800000000089e-06, 1.7779999999974205e-06, 1.6809999999999048e-06, 1.76400000000132e-06, 1.6809999999999048e-06, 1.76400000000132e-06, 1.7089999999990446e-06, 1.8060000000000298e-06, 1.8050000000005562e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7639999999978506e-06, 1.8060000000000298e-06, 1.7630000000018464e-06, 1.8200000000030692e-06, 1.6950000000029442e-06, 1.7920000000004599e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.77800000000089e-06, 1.77800000000089e-06, 1.7770000000014163e-06, 1.7919999999969904e-06, 1.7639999999978506e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.819000000000126e-06, 1.7779999999974205e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.76400000000132e-06, 1.7229999999986145e-06, 1.7769999999979469e-06, 1.709000000002514e-06, 1.8199999999995997e-06, 1.7770000000014163e-06, 1.7080000000030404e-06]</msg>
<status status="PASS" starttime="20201115 22:02:41.618" endtime="20201115 22:02:41.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.613" endtime="20201115 22:02:41.620"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.623" endtime="20201115 22:02:41.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:41.626" endtime="20201115 22:02:41.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.624" endtime="20201115 22:02:41.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.621" endtime="20201115 22:02:41.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.258" endtime="20201115 22:02:41.646"></status>
</kw>
<msg timestamp="20201115 22:02:41.647" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.656" endtime="20201115 22:02:41.671"></status>
</kw>
<msg timestamp="20201115 22:02:41.671" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.654" endtime="20201115 22:02:41.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.674" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.672" endtime="20201115 22:02:41.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.675" endtime="20201115 22:02:41.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.651" endtime="20201115 22:02:41.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.649" endtime="20201115 22:02:41.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.683" endtime="20201115 22:02:41.970"></status>
</kw>
<msg timestamp="20201115 22:02:41.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.682" endtime="20201115 22:02:41.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.974" endtime="20201115 22:02:41.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.983" endtime="20201115 22:02:41.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.679" endtime="20201115 22:02:41.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.678" endtime="20201115 22:02:41.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:41.989" level="INFO">${RESULT} = [{'time': 0.022522569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.022580556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:41.986" endtime="20201115 22:02:41.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.003" level="INFO">${OVERHEAD} = {'time': [0.022522569, 0.022580556, 0.022636861, 0.0226955, 0.022749903, 0.022806056, 0.022864333, 0.022917764, 0.022975264, 0.023031236, 0.023091403, 0.023148208, 0.023206472, 0.02325925, 0.023314736...</msg>
<status status="PASS" starttime="20201115 22:02:41.990" endtime="20201115 22:02:42.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.008" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:42.007" endtime="20201115 22:02:42.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.010" level="INFO">VALUE: [1.971999999999391e-06, 1.709000000002514e-06, 1.8050000000005562e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7770000000014163e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.7770000000014163e-06, 1.7639999999978506e-06, 1.7639999999978506e-06, 1.7779999999974205e-06, 1.77800000000089e-06, 1.7779999999974205e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.832999999999696e-06, 1.76400000000132e-06, 1.7770000000014163e-06, 1.7920000000004599e-06, 1.76400000000132e-06, 1.7639999999978506e-06, 1.7499999999982807e-06, 1.7919999999969904e-06, 1.7499999999982807e-06, 1.7639999999978506e-06, 1.7639999999978506e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.7080000000030404e-06, 1.7779999999974205e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7089999999990446e-06, 1.7639999999978506e-06, 1.77800000000089e-06, 1.77800000000089e-06, 1.7360000000021802e-06, 1.7769999999979469e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7770000000014163e-06, 1.76400000000132e-06, 1.7639999999978506e-06]</msg>
<status status="PASS" starttime="20201115 22:02:42.009" endtime="20201115 22:02:42.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.004" endtime="20201115 22:02:42.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.013" endtime="20201115 22:02:42.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.016" endtime="20201115 22:02:42.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.015" endtime="20201115 22:02:42.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.012" endtime="20201115 22:02:42.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.647" endtime="20201115 22:02:42.037"></status>
</kw>
<msg timestamp="20201115 22:02:42.037" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.046" endtime="20201115 22:02:42.059"></status>
</kw>
<msg timestamp="20201115 22:02:42.060" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.044" endtime="20201115 22:02:42.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.062" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.061" endtime="20201115 22:02:42.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.063" endtime="20201115 22:02:42.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.042" endtime="20201115 22:02:42.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.040" endtime="20201115 22:02:42.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.072" endtime="20201115 22:02:42.359"></status>
</kw>
<msg timestamp="20201115 22:02:42.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022010764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02201275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:42.070" endtime="20201115 22:02:42.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022010764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02201275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:42.364" endtime="20201115 22:02:42.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.372" endtime="20201115 22:02:42.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.068" endtime="20201115 22:02:42.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.066" endtime="20201115 22:02:42.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:42.378" level="INFO">${RESULT} = [{'time': 0.02201275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.022068194, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:42.375" endtime="20201115 22:02:42.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.392" level="INFO">${OVERHEAD} = {'time': [0.02201275, 0.022068194, 0.022124042, 0.022179375, 0.022233611, 0.022287042, 0.022341028, 0.022401333, 0.022455597, 0.022510903, 0.0225675, 0.0226225, 0.022676347, 0.022737056, 0.022793972, ...</msg>
<status status="PASS" starttime="20201115 22:02:42.380" endtime="20201115 22:02:42.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.396" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:42.395" endtime="20201115 22:02:42.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.399" level="INFO">VALUE: [1.9860000000024303e-06, 1.7769999999979469e-06, 1.76400000000132e-06, 1.77800000000089e-06, 1.77800000000089e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7639999999978506e-06, 1.77800000000089e-06, 1.7639999999978506e-06, 1.832999999999696e-06, 1.76400000000132e-06, 1.7639999999978506e-06, 1.7639999999978506e-06, 1.7499999999982807e-06, 1.7639999999978506e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.77800000000089e-06, 1.76400000000132e-06, 1.7770000000014163e-06, 1.7630000000018464e-06, 1.76400000000132e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.6800000000004311e-06, 1.762999999998377e-06, 1.7920000000004599e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.7779999999974205e-06, 1.76400000000132e-06, 1.7770000000014163e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.8199999999995997e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.7639999999978506e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.76400000000132e-06]</msg>
<status status="PASS" starttime="20201115 22:02:42.397" endtime="20201115 22:02:42.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.393" endtime="20201115 22:02:42.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.402" endtime="20201115 22:02:42.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.405" endtime="20201115 22:02:42.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.404" endtime="20201115 22:02:42.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.400" endtime="20201115 22:02:42.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.038" endtime="20201115 22:02:42.426"></status>
</kw>
<msg timestamp="20201115 22:02:42.426" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.435" endtime="20201115 22:02:42.447"></status>
</kw>
<msg timestamp="20201115 22:02:42.448" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.433" endtime="20201115 22:02:42.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.450" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.449" endtime="20201115 22:02:42.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.451" endtime="20201115 22:02:42.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.431" endtime="20201115 22:02:42.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.429" endtime="20201115 22:02:42.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.460" endtime="20201115 22:02:42.746"></status>
</kw>
<msg timestamp="20201115 22:02:42.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022173528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.459" endtime="20201115 22:02:42.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022173528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.751" endtime="20201115 22:02:42.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.759" endtime="20201115 22:02:42.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.456" endtime="20201115 22:02:42.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.454" endtime="20201115 22:02:42.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:42.766" level="INFO">${RESULT} = [{'time': 0.022175528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.022234306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:42.763" endtime="20201115 22:02:42.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.779" level="INFO">${OVERHEAD} = {'time': [0.022175528, 0.022234306, 0.022293514, 0.022351681, 0.022410903, 0.022468778, 0.022521819, 0.022576083, 0.022633958, 0.02269425, 0.022750236, 0.022808, 0.022861722, 0.022918542, 0.022978153,...</msg>
<status status="PASS" starttime="20201115 22:02:42.767" endtime="20201115 22:02:42.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.784" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:42.783" endtime="20201115 22:02:42.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.786" level="INFO">VALUE: [1.9999999999985307e-06, 1.6809999999999048e-06, 1.76400000000132e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7639999999978506e-06, 1.7499999999982807e-06, 1.7770000000014163e-06, 1.7499999999982807e-06, 1.7779999999974205e-06, 1.707999999999571e-06, 1.7779999999974205e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.7920000000004599e-06, 1.7639999999978506e-06, 1.8060000000000298e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.8049999999970867e-06, 1.7639999999978506e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.7639999999978506e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.707999999999571e-06, 1.8199999999995997e-06, 1.7359999999987108e-06, 1.76400000000132e-06, 1.7779999999974205e-06, 1.762999999998377e-06, 1.7639999999978506e-06, 1.77800000000089e-06, 1.7639999999978506e-06, 1.77800000000089e-06, 1.77800000000089e-06, 1.76400000000132e-06, 1.7639999999978506e-06, 1.7779999999974205e-06, 1.7499999999982807e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.7630000000018464e-06]</msg>
<status status="PASS" starttime="20201115 22:02:42.785" endtime="20201115 22:02:42.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.780" endtime="20201115 22:02:42.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.789" endtime="20201115 22:02:42.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.793" endtime="20201115 22:02:42.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.791" endtime="20201115 22:02:42.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.788" endtime="20201115 22:02:42.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.426" endtime="20201115 22:02:42.813"></status>
</kw>
<msg timestamp="20201115 22:02:42.813" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.822" endtime="20201115 22:02:42.836"></status>
</kw>
<msg timestamp="20201115 22:02:42.836" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.821" endtime="20201115 22:02:42.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.839" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.837" endtime="20201115 22:02:42.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.840" endtime="20201115 22:02:42.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.818" endtime="20201115 22:02:42.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.816" endtime="20201115 22:02:42.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.849" endtime="20201115 22:02:43.134"></status>
</kw>
<msg timestamp="20201115 22:02:43.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022067292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.847" endtime="20201115 22:02:43.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022067292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.139" endtime="20201115 22:02:43.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.147" endtime="20201115 22:02:43.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.845" endtime="20201115 22:02:43.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.843" endtime="20201115 22:02:43.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:43.154" level="INFO">${RESULT} = [{'time': 0.022067292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.022128, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:43.150" endtime="20201115 22:02:43.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:43.167" level="INFO">${OVERHEAD} = {'time': [0.022067292, 0.022128, 0.022187306, 0.022243028, 0.022299361, 0.022351792, 0.022410681, 0.022469569, 0.022527181, 0.0225825, 0.02264025, 0.022696097, 0.022755986, 0.022816069, 0.022875903, 0...</msg>
<status status="PASS" starttime="20201115 22:02:43.155" endtime="20201115 22:02:43.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.172" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:43.171" endtime="20201115 22:02:43.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.174" level="INFO">VALUE: [1.9589999999992946e-06, 1.8060000000000298e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.832999999999696e-06, 1.7639999999978506e-06, 1.8339999999991696e-06, 1.7499999999982807e-06, 1.7089999999990446e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.707999999999571e-06, 1.7639999999978506e-06, 1.819000000000126e-06, 1.7639999999978506e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.7639999999978506e-06, 1.76400000000132e-06, 1.7639999999978506e-06, 1.7499999999982807e-06, 1.8050000000005562e-06, 1.7500000000017502e-06, 1.762999999998377e-06, 1.7639999999978506e-06, 1.7779999999974205e-06, 1.7920000000004599e-06, 1.819000000000126e-06, 1.7770000000014163e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.7639999999978506e-06, 1.77800000000089e-06, 1.76400000000132e-06, 1.762999999998377e-06, 1.7639999999978506e-06, 1.77800000000089e-06, 1.7500000000017502e-06, 1.7779999999974205e-06, 1.7500000000017502e-06, 1.76400000000132e-06, 1.77800000000089e-06, 1.7769999999979469e-06, 1.77800000000089e-06, 1.7639999999978506e-06]</msg>
<status status="PASS" starttime="20201115 22:02:43.173" endtime="20201115 22:02:43.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.168" endtime="20201115 22:02:43.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.177" endtime="20201115 22:02:43.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.181" endtime="20201115 22:02:43.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.179" endtime="20201115 22:02:43.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.175" endtime="20201115 22:02:43.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.814" endtime="20201115 22:02:43.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.257" endtime="20201115 22:02:43.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.256" endtime="20201115 22:02:43.202"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.204" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.213" endtime="20201115 22:02:43.227"></status>
</kw>
<msg timestamp="20201115 22:02:43.227" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.211" endtime="20201115 22:02:43.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.228" endtime="20201115 22:02:43.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.231" endtime="20201115 22:02:43.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.209" endtime="20201115 22:02:43.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.207" endtime="20201115 22:02:43.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.240" endtime="20201115 22:02:43.526"></status>
</kw>
<msg timestamp="20201115 22:02:43.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024658125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02466025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:43.239" endtime="20201115 22:02:43.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024658125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02466025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:43.530" endtime="20201115 22:02:43.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.538" endtime="20201115 22:02:43.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.236" endtime="20201115 22:02:43.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.234" endtime="20201115 22:02:43.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:43.545" level="INFO">${RESULT} = [{'time': 0.02466025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.125000000002125e-06, 'source_diff': 2.125000000002125e-06}, {'time': 0.024725278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:43.542" endtime="20201115 22:02:43.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:43.558" level="INFO">${OVERHEAD} = {'time': [0.02466025, 0.024725278, 0.024788111, 0.024850736, 0.024912306, 0.024973486, 0.025035875, 0.025098806, 0.025155972, 0.025217681, 0.025280625, 0.025339389, 0.025404083, 0.02546725, 0.02552762...</msg>
<status status="PASS" starttime="20201115 22:02:43.546" endtime="20201115 22:02:43.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.563" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:43.562" endtime="20201115 22:02:43.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.565" level="INFO">VALUE: [2.125000000002125e-06, 1.903000000001015e-06, 1.944000000000251e-06, 1.8889999999979756e-06, 1.8889999999979756e-06, 1.8889999999979756e-06, 1.8889999999979756e-06, 1.889000000001445e-06, 1.9029999999975455e-06, 1.8889999999979756e-06, 1.903000000001015e-06, 1.889000000001445e-06, 1.9020000000015413e-06, 1.889000000001445e-06, 1.889000000001445e-06, 1.957999999999821e-06, 1.903000000001015e-06, 1.901999999998072e-06, 1.8889999999979756e-06, 1.889000000001445e-06, 1.903000000001015e-06, 1.8749999999984057e-06, 1.9029999999975455e-06, 1.8889999999979756e-06, 1.8479999999987395e-06, 1.889000000001445e-06, 1.8750000000018752e-06, 1.903000000001015e-06, 1.903000000001015e-06, 1.915999999997642e-06, 1.8609999999988358e-06, 1.9160000000011113e-06, 1.8470000000027353e-06, 1.9029999999975455e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.9020000000015413e-06, 1.903000000001015e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.9029999999975455e-06, 1.903000000001015e-06, 1.9020000000015413e-06, 1.9029999999975455e-06, 1.9299999999972117e-06, 1.8889999999979756e-06, 1.9160000000011113e-06, 1.8749999999984057e-06, 1.9029999999975455e-06]</msg>
<status status="PASS" starttime="20201115 22:02:43.564" endtime="20201115 22:02:43.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.559" endtime="20201115 22:02:43.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.568" endtime="20201115 22:02:43.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.572" endtime="20201115 22:02:43.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.570" endtime="20201115 22:02:43.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.567" endtime="20201115 22:02:43.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.205" endtime="20201115 22:02:43.592"></status>
</kw>
<msg timestamp="20201115 22:02:43.593" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.601" endtime="20201115 22:02:43.614"></status>
</kw>
<msg timestamp="20201115 22:02:43.615" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.600" endtime="20201115 22:02:43.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.617" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.616" endtime="20201115 22:02:43.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.619" endtime="20201115 22:02:43.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.597" endtime="20201115 22:02:43.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.595" endtime="20201115 22:02:43.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.628" endtime="20201115 22:02:43.915"></status>
</kw>
<msg timestamp="20201115 22:02:43.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022091764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022093889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.626" endtime="20201115 22:02:43.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022091764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022093889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.919" endtime="20201115 22:02:43.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.928" endtime="20201115 22:02:43.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.623" endtime="20201115 22:02:43.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.622" endtime="20201115 22:02:43.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:43.934" level="INFO">${RESULT} = [{'time': 0.022093889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1249999999986557e-06, 'source_diff': 2.1249999999986557e-06}, {'time': 0.0221565, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:43.931" endtime="20201115 22:02:43.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:43.947" level="INFO">${OVERHEAD} = {'time': [0.022093889, 0.0221565, 0.022220431, 0.022277806, 0.022334458, 0.022398708, 0.022459597, 0.022520792, 0.022582514, 0.022641014, 0.022699111, 0.022761819, 0.022820931, 0.022879181, 0.02293930...</msg>
<status status="PASS" starttime="20201115 22:02:43.935" endtime="20201115 22:02:43.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.952" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:43.951" endtime="20201115 22:02:43.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.954" level="INFO">VALUE: [2.1249999999986557e-06, 1.8749999999984057e-06, 1.9449999999997247e-06, 1.8750000000018752e-06, 1.9020000000015413e-06, 1.9020000000015413e-06, 1.889000000001445e-06, 1.889000000001445e-06, 1.889000000001445e-06, 1.903000000001015e-06, 1.819000000000126e-06, 1.944000000000251e-06, 1.8889999999979756e-06, 1.9029999999975455e-06, 1.931000000000155e-06, 1.903000000001015e-06, 1.889000000001445e-06, 1.846999999999266e-06, 1.903000000001015e-06, 1.889000000001445e-06, 1.9029999999975455e-06, 1.915999999997642e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.901999999998072e-06, 1.8889999999979756e-06, 1.8749999999984057e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.917000000000585e-06, 1.9860000000024303e-06, 1.9160000000011113e-06, 1.8889999999979756e-06, 1.8889999999979756e-06, 1.8750000000018752e-06, 1.889000000001445e-06, 1.903000000001015e-06, 1.9029999999975455e-06, 1.8610000000023053e-06, 1.915999999997642e-06, 1.9029999999975455e-06, 1.832999999999696e-06, 1.9029999999975455e-06, 1.8750000000018752e-06, 1.9020000000015413e-06, 1.889000000001445e-06, 1.903000000001015e-06]</msg>
<status status="PASS" starttime="20201115 22:02:43.953" endtime="20201115 22:02:43.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.948" endtime="20201115 22:02:43.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.957" endtime="20201115 22:02:43.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.961" endtime="20201115 22:02:43.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.959" endtime="20201115 22:02:43.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.956" endtime="20201115 22:02:43.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.593" endtime="20201115 22:02:43.982"></status>
</kw>
<msg timestamp="20201115 22:02:43.982" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.991" endtime="20201115 22:02:44.004"></status>
</kw>
<msg timestamp="20201115 22:02:44.005" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.989" endtime="20201115 22:02:44.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.007" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.006" endtime="20201115 22:02:44.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.008" endtime="20201115 22:02:44.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.986" endtime="20201115 22:02:44.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.984" endtime="20201115 22:02:44.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.017" endtime="20201115 22:02:44.304"></status>
</kw>
<msg timestamp="20201115 22:02:44.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022588736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.016" endtime="20201115 22:02:44.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022588736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.308" endtime="20201115 22:02:44.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.316" endtime="20201115 22:02:44.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.013" endtime="20201115 22:02:44.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.011" endtime="20201115 22:02:44.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:44.323" level="INFO">${RESULT} = [{'time': 0.022590806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0699999999998497e-06, 'source_diff': 2.0699999999998497e-06}, {'time': 0.022647986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:44.320" endtime="20201115 22:02:44.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:44.336" level="INFO">${OVERHEAD} = {'time': [0.022590806, 0.022647986, 0.022708986, 0.022770986, 0.022833833, 0.022891319, 0.022950889, 0.023007931, 0.023067236, 0.023131764, 0.02319175, 0.023256417, 0.023321083, 0.023378111, 0.0234365...</msg>
<status status="PASS" starttime="20201115 22:02:44.324" endtime="20201115 22:02:44.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.341" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:44.340" endtime="20201115 22:02:44.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.343" level="INFO">VALUE: [2.0699999999998497e-06, 1.9439999999967816e-06, 1.889000000001445e-06, 1.917000000000585e-06, 1.9720000000028604e-06, 1.8880000000019714e-06, 1.832999999999696e-06, 1.9029999999975455e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.889000000001445e-06, 1.8889999999979756e-06, 1.903000000001015e-06, 1.917000000000585e-06, 1.8889999999979756e-06, 1.903000000001015e-06, 1.889000000001445e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.887999999998502e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8889999999979756e-06, 1.8889999999979756e-06, 1.8880000000019714e-06, 1.889000000001445e-06, 1.819000000000126e-06, 1.9020000000015413e-06, 1.889000000001445e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.889000000001445e-06, 1.903000000001015e-06, 1.8199999999995997e-06, 1.903000000001015e-06, 1.9169999999971155e-06, 1.889000000001445e-06, 1.8880000000019714e-06, 1.8889999999979756e-06, 1.8889999999979756e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.9449999999997247e-06, 1.8889999999979756e-06, 1.889000000001445e-06, 1.819000000000126e-06, 1.889000000001445e-06]</msg>
<status status="PASS" starttime="20201115 22:02:44.342" endtime="20201115 22:02:44.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.337" endtime="20201115 22:02:44.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.346" endtime="20201115 22:02:44.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:44.349" endtime="20201115 22:02:44.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.348" endtime="20201115 22:02:44.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.344" endtime="20201115 22:02:44.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.982" endtime="20201115 22:02:44.375"></status>
</kw>
<msg timestamp="20201115 22:02:44.376" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.384" endtime="20201115 22:02:44.397"></status>
</kw>
<msg timestamp="20201115 22:02:44.398" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.383" endtime="20201115 22:02:44.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.400" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.399" endtime="20201115 22:02:44.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.401" endtime="20201115 22:02:44.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.380" endtime="20201115 22:02:44.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.378" endtime="20201115 22:02:44.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.410" endtime="20201115 22:02:44.697"></status>
</kw>
<msg timestamp="20201115 22:02:44.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027528444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027530569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.409" endtime="20201115 22:02:44.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027528444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027530569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.701" endtime="20201115 22:02:44.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.709" endtime="20201115 22:02:44.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.406" endtime="20201115 22:02:44.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.404" endtime="20201115 22:02:44.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:44.716" level="INFO">${RESULT} = [{'time': 0.027530569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.125000000002125e-06, 'source_diff': 2.125000000002125e-06}, {'time': 0.027589569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:44.713" endtime="20201115 22:02:44.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:44.729" level="INFO">${OVERHEAD} = {'time': [0.027530569, 0.027589569, 0.027646319, 0.027706278, 0.027763431, 0.027826889, 0.027885931, 0.027950347, 0.028013278, 0.028071514, 0.02812975, 0.02818825, 0.028250236, 0.02831275, 0.028372069...</msg>
<status status="PASS" starttime="20201115 22:02:44.717" endtime="20201115 22:02:44.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.734" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:44.733" endtime="20201115 22:02:44.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.736" level="INFO">VALUE: [2.125000000002125e-06, 1.9020000000015413e-06, 1.887999999998502e-06, 1.889000000001445e-06, 1.889000000001445e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.8749999999984057e-06, 1.9029999999975455e-06, 1.9169999999971155e-06, 1.903000000001015e-06, 1.903000000001015e-06, 1.903000000001015e-06, 1.887999999998502e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.889000000001445e-06, 1.889000000001445e-06, 1.9029999999975455e-06, 1.8889999999979756e-06, 1.9029999999975455e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8339999999991696e-06, 1.8889999999979756e-06, 1.917000000000585e-06, 1.973000000002334e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.8889999999979756e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.917000000000585e-06, 1.8889999999979756e-06, 1.901999999998072e-06, 1.917000000000585e-06, 1.931000000000155e-06, 1.889000000001445e-06, 1.917000000000585e-06, 1.889000000001445e-06, 1.8889999999979756e-06]</msg>
<status status="PASS" starttime="20201115 22:02:44.735" endtime="20201115 22:02:44.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.730" endtime="20201115 22:02:44.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.740" endtime="20201115 22:02:44.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:44.743" endtime="20201115 22:02:44.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.742" endtime="20201115 22:02:44.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.738" endtime="20201115 22:02:44.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.376" endtime="20201115 22:02:44.764"></status>
</kw>
<msg timestamp="20201115 22:02:44.764" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.773" endtime="20201115 22:02:44.786"></status>
</kw>
<msg timestamp="20201115 22:02:44.786" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.771" endtime="20201115 22:02:44.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.789" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.788" endtime="20201115 22:02:44.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.790" endtime="20201115 22:02:44.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.769" endtime="20201115 22:02:44.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.767" endtime="20201115 22:02:44.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.799" endtime="20201115 22:02:45.085"></status>
</kw>
<msg timestamp="20201115 22:02:45.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022415028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.797" endtime="20201115 22:02:45.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022415028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.090" endtime="20201115 22:02:45.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.098" endtime="20201115 22:02:45.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.795" endtime="20201115 22:02:45.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.793" endtime="20201115 22:02:45.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:45.105" level="INFO">${RESULT} = [{'time': 0.022415028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0699999999998497e-06, 'source_diff': 2.0699999999998497e-06}, {'time': 0.022477653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:45.101" endtime="20201115 22:02:45.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:45.118" level="INFO">${OVERHEAD} = {'time': [0.022415028, 0.022477653, 0.022535069, 0.022593194, 0.022651403, 0.022716208, 0.022772833, 0.022830917, 0.022888889, 0.022953042, 0.023010847, 0.023071278, 0.023130514, 0.023192431, 0.023252...</msg>
<status status="PASS" starttime="20201115 22:02:45.105" endtime="20201115 22:02:45.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.122" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:45.121" endtime="20201115 22:02:45.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.125" level="INFO">VALUE: [2.0699999999998497e-06, 1.889000000001445e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.889000000001445e-06, 1.8610000000023053e-06, 1.901999999998072e-06, 1.8889999999979756e-06, 1.9029999999975455e-06, 1.917000000000585e-06, 1.889000000001445e-06, 1.9589999999992946e-06, 1.889000000001445e-06, 1.9589999999992946e-06, 1.9029999999975455e-06, 1.8750000000018752e-06, 1.832999999999696e-06, 1.903000000001015e-06, 1.889000000001445e-06, 1.889000000001445e-06, 1.9029999999975455e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.8880000000019714e-06, 1.887999999998502e-06, 1.9020000000015413e-06, 1.8610000000023053e-06, 1.8889999999979756e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.8880000000019714e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.917000000000585e-06, 1.889000000001445e-06, 1.832999999999696e-06, 1.889000000001445e-06, 1.9020000000015413e-06, 1.930000000000681e-06, 1.903000000001015e-06, 1.8479999999987395e-06, 1.8889999999979756e-06, 1.903000000001015e-06, 1.889000000001445e-06, 1.889000000001445e-06, 1.846999999999266e-06, 1.903000000001015e-06, 1.903000000001015e-06, 1.9160000000011113e-06]</msg>
<status status="PASS" starttime="20201115 22:02:45.123" endtime="20201115 22:02:45.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.119" endtime="20201115 22:02:45.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.128" endtime="20201115 22:02:45.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:45.132" endtime="20201115 22:02:45.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.130" endtime="20201115 22:02:45.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.127" endtime="20201115 22:02:45.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.765" endtime="20201115 22:02:45.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.203" endtime="20201115 22:02:45.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.202" endtime="20201115 22:02:45.153"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.155" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.164" endtime="20201115 22:02:45.177"></status>
</kw>
<msg timestamp="20201115 22:02:45.178" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.162" endtime="20201115 22:02:45.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.180" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.179" endtime="20201115 22:02:45.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.181" endtime="20201115 22:02:45.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.160" endtime="20201115 22:02:45.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.157" endtime="20201115 22:02:45.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.190" endtime="20201115 22:02:45.478"></status>
</kw>
<msg timestamp="20201115 22:02:45.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024543944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024546208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.189" endtime="20201115 22:02:45.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024543944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024546208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.482" endtime="20201115 22:02:45.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.490" endtime="20201115 22:02:45.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.186" endtime="20201115 22:02:45.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.184" endtime="20201115 22:02:45.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:45.496" level="INFO">${RESULT} = [{'time': 0.024546208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2639999999983507e-06, 'source_diff': 2.2639999999983507e-06}, {'time': 0.024608861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:45.493" endtime="20201115 22:02:45.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:45.510" level="INFO">${OVERHEAD} = {'time': [0.024546208, 0.024608861, 0.024673917, 0.024739125, 0.024807014, 0.024875986, 0.024939875, 0.025003319, 0.025069056, 0.025129972, 0.025194694, 0.025263208, 0.025330611, 0.025391611, 0.025460...</msg>
<status status="PASS" starttime="20201115 22:02:45.497" endtime="20201115 22:02:45.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.514" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:45.513" endtime="20201115 22:02:45.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.517" level="INFO">VALUE: [2.2639999999983507e-06, 2.069000000000376e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.0279999999976706e-06, 2.0279999999976706e-06, 2.069000000000376e-06, 2.0410000000012363e-06, 2.0279999999976706e-06, 2.0410000000012363e-06, 2.0410000000012363e-06, 2.0139999999981006e-06, 2.082999999999946e-06, 2.055000000000806e-06, 2.0419999999972405e-06, 2.01400000000157e-06, 2.04200000000071e-06, 2.0139999999981006e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.082999999999946e-06, 2.0139999999981006e-06, 2.040999999997767e-06, 2.0139999999981006e-06, 2.04200000000071e-06, 2.069000000000376e-06, 2.02800000000114e-06, 2.05600000000028e-06, 2.04200000000071e-06, 2.040999999997767e-06, 2.01400000000157e-06, 2.096999999999516e-06, 2.0139999999981006e-06, 2.04200000000071e-06, 2.0419999999972405e-06, 2.0410000000012363e-06, 2.04200000000071e-06, 2.012999999998627e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.096999999999516e-06, 2.05600000000028e-06, 2.0279999999976706e-06, 2.04200000000071e-06, 2.0270000000016664e-06, 2.04200000000071e-06, 2.000000000002e-06, 2.0699999999998497e-06, 2.040999999997767e-06]</msg>
<status status="PASS" starttime="20201115 22:02:45.515" endtime="20201115 22:02:45.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.510" endtime="20201115 22:02:45.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.520" endtime="20201115 22:02:45.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:45.523" endtime="20201115 22:02:45.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.522" endtime="20201115 22:02:45.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.518" endtime="20201115 22:02:45.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.155" endtime="20201115 22:02:45.544"></status>
</kw>
<msg timestamp="20201115 22:02:45.544" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.553" endtime="20201115 22:02:45.567"></status>
</kw>
<msg timestamp="20201115 22:02:45.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.552" endtime="20201115 22:02:45.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.570" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.568" endtime="20201115 22:02:45.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.571" endtime="20201115 22:02:45.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.549" endtime="20201115 22:02:45.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.547" endtime="20201115 22:02:45.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.580" endtime="20201115 22:02:45.866"></status>
</kw>
<msg timestamp="20201115 22:02:45.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022037403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022039667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.578" endtime="20201115 22:02:45.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022037403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022039667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.870" endtime="20201115 22:02:45.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.878" endtime="20201115 22:02:45.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.575" endtime="20201115 22:02:45.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.574" endtime="20201115 22:02:45.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:45.885" level="INFO">${RESULT} = [{'time': 0.022039667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2639999999983507e-06, 'source_diff': 2.2639999999983507e-06}, {'time': 0.022100806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:45.882" endtime="20201115 22:02:45.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:45.898" level="INFO">${OVERHEAD} = {'time': [0.022039667, 0.022100806, 0.022167806, 0.022233389, 0.022299528, 0.022367417, 0.022434111, 0.022496361, 0.022557403, 0.022626, 0.022692944, 0.022760681, 0.022829639, 0.022892431, 0.022957097...</msg>
<status status="PASS" starttime="20201115 22:02:45.886" endtime="20201115 22:02:45.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.903" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:45.902" endtime="20201115 22:02:45.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.905" level="INFO">VALUE: [2.2639999999983507e-06, 2.04200000000071e-06, 2.070000000003319e-06, 1.9999999999985307e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.069000000000376e-06, 2.069000000000376e-06, 2.05600000000028e-06, 2.0419999999972405e-06, 2.000000000002e-06, 2.040999999997767e-06, 2.0410000000012363e-06, 2.0279999999976706e-06, 2.02800000000114e-06, 2.000000000002e-06, 2.02800000000114e-06, 2.0419999999972405e-06, 2.05600000000028e-06, 2.1110000000025553e-06, 2.05600000000028e-06, 1.9999999999985307e-06, 2.000000000002e-06, 2.05600000000028e-06, 2.02800000000114e-06, 2.05600000000028e-06, 2.05600000000028e-06, 2.082999999999946e-06, 2.0549999999973367e-06, 2.069000000000376e-06, 2.0419999999972405e-06, 2.0419999999972405e-06, 1.971999999999391e-06, 2.0279999999976706e-06, 2.084000000002889e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.01400000000157e-06, 2.055000000000806e-06, 2.05600000000028e-06, 2.05600000000028e-06, 2.069000000000376e-06, 1.9999999999985307e-06, 2.0699999999998497e-06, 1.9860000000024303e-06, 2.0279999999976706e-06, 2.0410000000012363e-06]</msg>
<status status="PASS" starttime="20201115 22:02:45.904" endtime="20201115 22:02:45.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.899" endtime="20201115 22:02:45.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.908" endtime="20201115 22:02:45.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:45.912" endtime="20201115 22:02:45.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.910" endtime="20201115 22:02:45.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.907" endtime="20201115 22:02:45.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.545" endtime="20201115 22:02:45.932"></status>
</kw>
<msg timestamp="20201115 22:02:45.933" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.941" endtime="20201115 22:02:45.955"></status>
</kw>
<msg timestamp="20201115 22:02:45.955" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.940" endtime="20201115 22:02:45.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.958" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.956" endtime="20201115 22:02:45.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.959" endtime="20201115 22:02:45.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.937" endtime="20201115 22:02:45.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.935" endtime="20201115 22:02:45.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.968" endtime="20201115 22:02:46.254"></status>
</kw>
<msg timestamp="20201115 22:02:46.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022136292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.966" endtime="20201115 22:02:46.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022136292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.259" endtime="20201115 22:02:46.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.267" endtime="20201115 22:02:46.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.964" endtime="20201115 22:02:46.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.962" endtime="20201115 22:02:46.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:46.273" level="INFO">${RESULT} = [{'time': 0.022138556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.26400000000182e-06, 'source_diff': 2.26400000000182e-06}, {'time': 0.022200653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:46.270" endtime="20201115 22:02:46.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:46.287" level="INFO">${OVERHEAD} = {'time': [0.022138556, 0.022200653, 0.0222625, 0.022325181, 0.022390236, 0.022458069, 0.022518514, 0.022581167, 0.022645306, 0.022709306, 0.022771972, 0.022835014, 0.022899431, 0.022960486, 0.02302356...</msg>
<status status="PASS" starttime="20201115 22:02:46.275" endtime="20201115 22:02:46.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.291" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:46.290" endtime="20201115 22:02:46.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.294" level="INFO">VALUE: [2.26400000000182e-06, 2.05600000000028e-06, 2.02800000000114e-06, 2.05600000000028e-06, 2.02800000000114e-06, 2.110999999999086e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.05600000000028e-06, 2.055000000000806e-06, 2.02800000000114e-06, 2.000000000002e-06, 2.0419999999972405e-06, 2.096999999999516e-06, 2.04200000000071e-06, 2.0970000000029854e-06, 2.040999999997767e-06, 2.04200000000071e-06, 2.069000000000376e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.05600000000028e-06, 2.0270000000016664e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.0139999999981006e-06, 2.055000000000806e-06, 2.069000000000376e-06, 2.040999999997767e-06, 2.04200000000071e-06, 2.0419999999972405e-06, 2.01400000000157e-06, 2.0419999999972405e-06, 2.05600000000028e-06, 1.987000000001904e-06, 2.0689999999969066e-06, 2.0549999999973367e-06, 2.01400000000157e-06, 2.082999999999946e-06, 2.05600000000028e-06, 2.04200000000071e-06, 2.0410000000012363e-06, 2.0279999999976706e-06, 2.0699999999998497e-06, 2.110999999999086e-06, 2.096999999999516e-06, 2.04200000000071e-06, 2.055000000000806e-06]</msg>
<status status="PASS" starttime="20201115 22:02:46.293" endtime="20201115 22:02:46.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.288" endtime="20201115 22:02:46.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.297" endtime="20201115 22:02:46.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:46.300" endtime="20201115 22:02:46.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.299" endtime="20201115 22:02:46.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.295" endtime="20201115 22:02:46.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.933" endtime="20201115 22:02:46.321"></status>
</kw>
<msg timestamp="20201115 22:02:46.321" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.330" endtime="20201115 22:02:46.343"></status>
</kw>
<msg timestamp="20201115 22:02:46.344" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.329" endtime="20201115 22:02:46.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.346" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.345" endtime="20201115 22:02:46.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.347" endtime="20201115 22:02:46.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.326" endtime="20201115 22:02:46.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.324" endtime="20201115 22:02:46.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.356" endtime="20201115 22:02:46.642"></status>
</kw>
<msg timestamp="20201115 22:02:46.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022202458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.355" endtime="20201115 22:02:46.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022202458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.647" endtime="20201115 22:02:46.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.655" endtime="20201115 22:02:46.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.352" endtime="20201115 22:02:46.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.351" endtime="20201115 22:02:46.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:46.662" level="INFO">${RESULT} = [{'time': 0.022202458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2910000000014863e-06, 'source_diff': 2.2910000000014863e-06}, {'time': 0.022266403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:46.658" endtime="20201115 22:02:46.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:46.675" level="INFO">${OVERHEAD} = {'time': [0.022202458, 0.022266403, 0.022329583, 0.022397611, 0.022460931, 0.022522111, 0.022586792, 0.022654806, 0.022715583, 0.022784139, 0.022844917, 0.022909069, 0.022976403, 0.023040181, 0.023101...</msg>
<status status="PASS" starttime="20201115 22:02:46.663" endtime="20201115 22:02:46.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.679" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:46.678" endtime="20201115 22:02:46.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.682" level="INFO">VALUE: [2.2910000000014863e-06, 2.04200000000071e-06, 2.0410000000012363e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.01400000000157e-06, 2.0419999999972405e-06, 2.0279999999976706e-06, 2.0410000000012363e-06, 2.04200000000071e-06, 2.0839999999994197e-06, 2.0279999999976706e-06, 2.0419999999972405e-06, 2.0279999999976706e-06, 2.01400000000157e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.0419999999972405e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.0699999999998497e-06, 2.05600000000028e-06, 2.082999999999946e-06, 2.02800000000114e-06, 2.0549999999973367e-06, 2.04200000000071e-06, 2.055000000000806e-06, 2.0410000000012363e-06, 2.02800000000114e-06, 2.1110000000025553e-06, 2.082999999999946e-06, 2.0410000000012363e-06, 2.055000000000806e-06, 2.02800000000114e-06, 2.055000000000806e-06, 2.04200000000071e-06, 2.096999999999516e-06, 2.0410000000012363e-06, 2.0419999999972405e-06, 2.0410000000012363e-06, 1.9999999999985307e-06, 2.04200000000071e-06, 2.082999999999946e-06, 2.0410000000012363e-06, 2.0839999999994197e-06, 2.000000000002e-06, 2.0279999999976706e-06]</msg>
<status status="PASS" starttime="20201115 22:02:46.681" endtime="20201115 22:02:46.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.676" endtime="20201115 22:02:46.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.685" endtime="20201115 22:02:46.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:46.688" endtime="20201115 22:02:46.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.687" endtime="20201115 22:02:46.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.683" endtime="20201115 22:02:46.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.322" endtime="20201115 22:02:46.709"></status>
</kw>
<msg timestamp="20201115 22:02:46.709" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.718" endtime="20201115 22:02:46.732"></status>
</kw>
<msg timestamp="20201115 22:02:46.732" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.716" endtime="20201115 22:02:46.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.735" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.733" endtime="20201115 22:02:46.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.736" endtime="20201115 22:02:46.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.714" endtime="20201115 22:02:46.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.712" endtime="20201115 22:02:46.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.745" endtime="20201115 22:02:47.032"></status>
</kw>
<msg timestamp="20201115 22:02:47.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022140431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02214275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:46.743" endtime="20201115 22:02:47.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022140431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02214275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:47.037" endtime="20201115 22:02:47.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.045" endtime="20201115 22:02:47.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.741" endtime="20201115 22:02:47.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.739" endtime="20201115 22:02:47.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:47.052" level="INFO">${RESULT} = [{'time': 0.02214275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.319000000000626e-06, 'source_diff': 2.319000000000626e-06}, {'time': 0.022207208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:47.048" endtime="20201115 22:02:47.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:47.065" level="INFO">${OVERHEAD} = {'time': [0.02214275, 0.022207208, 0.022267847, 0.022329833, 0.022391583, 0.022460236, 0.022521264, 0.022589958, 0.022651569, 0.022716486, 0.022778056, 0.022846347, 0.022915306, 0.022979847, 0.0230449...</msg>
<status status="PASS" starttime="20201115 22:02:47.053" endtime="20201115 22:02:47.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.069" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:47.068" endtime="20201115 22:02:47.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.072" level="INFO">VALUE: [2.319000000000626e-06, 2.026999999998197e-06, 2.0410000000012363e-06, 2.055000000000806e-06, 2.069000000000376e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.0270000000016664e-06, 2.069000000000376e-06, 2.04200000000071e-06, 2.01400000000157e-06, 2.040999999997767e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.0279999999976706e-06, 2.069000000000376e-06, 1.9999999999985307e-06, 2.04200000000071e-06, 2.0549999999973367e-06, 2.04200000000071e-06, 1.985999999998961e-06, 2.05600000000028e-06, 2.082999999999946e-06, 1.9999999999985307e-06, 2.04200000000071e-06, 1.985999999998961e-06, 2.01400000000157e-06, 2.0279999999976706e-06, 2.04200000000071e-06, 2.0699999999998497e-06, 2.0279999999976706e-06, 2.069000000000376e-06, 2.02800000000114e-06, 2.069000000000376e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.0419999999972405e-06, 2.01400000000157e-06, 2.04200000000071e-06, 2.110999999999086e-06, 2.0139999999981006e-06, 1.985999999998961e-06, 2.0279999999976706e-06, 2.04200000000071e-06, 1.9999999999985307e-06, 2.0410000000012363e-06, 2.069000000000376e-06]</msg>
<status status="PASS" starttime="20201115 22:02:47.070" endtime="20201115 22:02:47.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.066" endtime="20201115 22:02:47.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.075" endtime="20201115 22:02:47.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:47.078" endtime="20201115 22:02:47.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.076" endtime="20201115 22:02:47.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.073" endtime="20201115 22:02:47.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.710" endtime="20201115 22:02:47.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.154" endtime="20201115 22:02:47.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.153" endtime="20201115 22:02:47.099"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.101" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.110" endtime="20201115 22:02:47.124"></status>
</kw>
<msg timestamp="20201115 22:02:47.124" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.108" endtime="20201115 22:02:47.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.127" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.125" endtime="20201115 22:02:47.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.128" endtime="20201115 22:02:47.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.106" endtime="20201115 22:02:47.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.104" endtime="20201115 22:02:47.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.137" endtime="20201115 22:02:47.423"></status>
</kw>
<msg timestamp="20201115 22:02:47.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024338125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024340514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.136" endtime="20201115 22:02:47.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024338125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024340514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.427" endtime="20201115 22:02:47.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.436" endtime="20201115 22:02:47.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.133" endtime="20201115 22:02:47.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.131" endtime="20201115 22:02:47.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:47.442" level="INFO">${RESULT} = [{'time': 0.024340514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.389000000001945e-06, 'source_diff': 2.389000000001945e-06}, {'time': 0.024413736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:47.439" endtime="20201115 22:02:47.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:47.455" level="INFO">${OVERHEAD} = {'time': [0.024340514, 0.024413736, 0.024486444, 0.024552042, 0.024622194, 0.024693153, 0.02476225, 0.024830653, 0.024899875, 0.0249675, 0.025038458, 0.025108042, 0.025178778, 0.025244917, 0.025310556...</msg>
<status status="PASS" starttime="20201115 22:02:47.443" endtime="20201115 22:02:47.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.460" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:47.459" endtime="20201115 22:02:47.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.462" level="INFO">VALUE: [2.389000000001945e-06, 2.1669999999973655e-06, 2.151999999998322e-06, 2.167000000000835e-06, 2.1660000000013613e-06, 2.1669999999973655e-06, 2.167000000000835e-06, 2.153000000001265e-06, 2.1669999999973655e-06, 2.1249999999986557e-06, 2.165999999997892e-06, 2.26400000000182e-06, 2.1669999999973655e-06, 2.1669999999973655e-06, 2.209000000003014e-06, 2.167000000000835e-06, 2.167000000000835e-06, 2.1119999999985595e-06, 2.1799999999974617e-06, 2.180000000000931e-06, 2.1669999999973655e-06, 2.167000000000835e-06, 2.2089999999995447e-06, 2.194000000000501e-06, 2.180000000000931e-06, 2.167000000000835e-06, 2.1949999999999747e-06, 2.1809999999969354e-06, 2.167000000000835e-06, 2.167000000000835e-06, 2.1389999999982257e-06, 2.153000000001265e-06, 2.1669999999973655e-06, 2.194000000000501e-06, 2.181000000000405e-06, 2.167000000000835e-06, 2.167000000000835e-06, 2.1669999999973655e-06, 2.153000000001265e-06, 2.139000000001695e-06, 2.1660000000013613e-06, 2.1249999999986557e-06, 2.180000000000931e-06, 2.0839999999994197e-06, 2.221999999999641e-06, 2.1669999999973655e-06, 2.1389999999982257e-06, 2.153000000001265e-06, 2.153000000001265e-06, 2.221999999999641e-06]</msg>
<status status="PASS" starttime="20201115 22:02:47.461" endtime="20201115 22:02:47.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.456" endtime="20201115 22:02:47.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.466" endtime="20201115 22:02:47.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:47.469" endtime="20201115 22:02:47.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.467" endtime="20201115 22:02:47.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.464" endtime="20201115 22:02:47.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.102" endtime="20201115 22:02:47.490"></status>
</kw>
<msg timestamp="20201115 22:02:47.490" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.499" endtime="20201115 22:02:47.512"></status>
</kw>
<msg timestamp="20201115 22:02:47.513" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.497" endtime="20201115 22:02:47.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.516" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.514" endtime="20201115 22:02:47.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.517" endtime="20201115 22:02:47.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.494" endtime="20201115 22:02:47.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.492" endtime="20201115 22:02:47.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.526" endtime="20201115 22:02:47.812"></status>
</kw>
<msg timestamp="20201115 22:02:47.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022177708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022180125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.524" endtime="20201115 22:02:47.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022177708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022180125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.816" endtime="20201115 22:02:47.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.824" endtime="20201115 22:02:47.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.522" endtime="20201115 22:02:47.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.520" endtime="20201115 22:02:47.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:47.831" level="INFO">${RESULT} = [{'time': 0.022180125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.022250903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:47.828" endtime="20201115 22:02:47.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:47.844" level="INFO">${OVERHEAD} = {'time': [0.022180125, 0.022250903, 0.022324194, 0.022389069, 0.022459236, 0.022526694, 0.022594722, 0.022666333, 0.022735153, 0.022806917, 0.02287225, 0.022944181, 0.023014986, 0.023083944, 0.0231550...</msg>
<status status="PASS" starttime="20201115 22:02:47.832" endtime="20201115 22:02:47.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.848" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:47.847" endtime="20201115 22:02:47.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.851" level="INFO">VALUE: [2.4169999999976155e-06, 2.1249999999986557e-06, 2.221999999999641e-06, 2.125000000002125e-06, 2.180000000000931e-06, 2.1660000000013613e-06, 2.194000000000501e-06, 2.1660000000013613e-06, 2.167000000000835e-06, 2.1529999999977956e-06, 2.181000000000405e-06, 2.1949999999999747e-06, 2.167000000000835e-06, 2.110999999999086e-06, 2.181000000000405e-06, 2.165999999997892e-06, 2.1660000000013613e-06, 2.181000000000405e-06, 2.221999999999641e-06, 2.1520000000017914e-06, 2.1529999999977956e-06, 2.167000000000835e-06, 2.194000000000501e-06, 2.167000000000835e-06, 2.1669999999973655e-06, 2.165999999997892e-06, 2.167000000000835e-06, 2.1660000000013613e-06, 2.1949999999999747e-06, 2.110999999999086e-06, 2.167000000000835e-06, 2.180000000000931e-06, 2.165999999997892e-06, 2.167000000000835e-06, 2.153000000001265e-06, 2.180000000000931e-06, 2.1660000000013613e-06, 2.167000000000835e-06, 2.1529999999977956e-06, 2.1949999999999747e-06, 2.165999999997892e-06, 2.167000000000835e-06, 2.194000000000501e-06, 2.1529999999977956e-06, 2.180000000000931e-06, 2.1669999999973655e-06, 2.167000000000835e-06, 2.2220000000031104e-06, 2.181000000000405e-06, 2.1529999999977956e-06]</msg>
<status status="PASS" starttime="20201115 22:02:47.850" endtime="20201115 22:02:47.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.845" endtime="20201115 22:02:47.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.854" endtime="20201115 22:02:47.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:47.857" endtime="20201115 22:02:47.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.856" endtime="20201115 22:02:47.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.852" endtime="20201115 22:02:47.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.490" endtime="20201115 22:02:47.878"></status>
</kw>
<msg timestamp="20201115 22:02:47.878" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.888" endtime="20201115 22:02:47.901"></status>
</kw>
<msg timestamp="20201115 22:02:47.901" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.885" endtime="20201115 22:02:47.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.904" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.902" endtime="20201115 22:02:47.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.905" endtime="20201115 22:02:47.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.883" endtime="20201115 22:02:47.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.881" endtime="20201115 22:02:47.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.914" endtime="20201115 22:02:48.200"></status>
</kw>
<msg timestamp="20201115 22:02:48.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022961792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.912" endtime="20201115 22:02:48.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022961792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.204" endtime="20201115 22:02:48.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.213" endtime="20201115 22:02:48.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.910" endtime="20201115 22:02:48.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.908" endtime="20201115 22:02:48.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.219" level="INFO">${RESULT} = [{'time': 0.022964194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.401999999998572e-06, 'source_diff': 2.401999999998572e-06}, {'time': 0.023035653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:48.216" endtime="20201115 22:02:48.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:48.232" level="INFO">${OVERHEAD} = {'time': [0.022964194, 0.023035653, 0.023107556, 0.023175986, 0.023245472, 0.023312403, 0.023384431, 0.023454458, 0.023521528, 0.023594931, 0.023661181, 0.023730681, 0.023803917, 0.023872208, 0.023940...</msg>
<status status="PASS" starttime="20201115 22:02:48.220" endtime="20201115 22:02:48.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.237" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:48.236" endtime="20201115 22:02:48.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.239" level="INFO">VALUE: [2.401999999998572e-06, 2.167000000000835e-06, 2.167000000000835e-06, 2.1799999999974617e-06, 2.1660000000013613e-06, 2.1529999999977956e-06, 2.167000000000835e-06, 2.1520000000017914e-06, 2.167000000000835e-06, 2.167000000000835e-06, 2.167000000000835e-06, 2.181000000000405e-06, 2.181000000000405e-06, 2.1799999999974617e-06, 2.153000000001265e-06, 2.181000000000405e-06, 2.1520000000017914e-06, 2.167000000000835e-06, 2.194000000000501e-06, 2.1799999999974617e-06, 2.167000000000835e-06, 2.181000000000405e-06, 2.181000000000405e-06, 2.181000000000405e-06, 2.180000000000931e-06, 2.139000000001695e-06, 2.167000000000835e-06, 2.194000000000501e-06, 2.167000000000835e-06, 2.167000000000835e-06, 2.1529999999977956e-06, 2.151999999998322e-06, 2.221999999999641e-06, 2.153000000001265e-06, 2.167000000000835e-06, 2.125000000002125e-06, 2.167000000000835e-06, 2.167000000000835e-06, 2.181000000000405e-06, 2.1809999999969354e-06, 2.1809999999969354e-06, 2.180000000000931e-06, 2.194000000000501e-06, 2.1660000000013613e-06, 2.167000000000835e-06, 2.181000000000405e-06, 2.1660000000013613e-06, 2.167000000000835e-06, 2.181000000000405e-06, 2.194000000000501e-06]</msg>
<status status="PASS" starttime="20201115 22:02:48.238" endtime="20201115 22:02:48.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.233" endtime="20201115 22:02:48.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.242" endtime="20201115 22:02:48.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.246" endtime="20201115 22:02:48.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.244" endtime="20201115 22:02:48.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.241" endtime="20201115 22:02:48.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.879" endtime="20201115 22:02:48.267"></status>
</kw>
<msg timestamp="20201115 22:02:48.267" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.277" endtime="20201115 22:02:48.291"></status>
</kw>
<msg timestamp="20201115 22:02:48.292" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.275" endtime="20201115 22:02:48.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.294" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.293" endtime="20201115 22:02:48.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.295" endtime="20201115 22:02:48.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.272" endtime="20201115 22:02:48.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.270" endtime="20201115 22:02:48.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.304" endtime="20201115 22:02:48.592"></status>
</kw>
<msg timestamp="20201115 22:02:48.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024022319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024024722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.302" endtime="20201115 22:02:48.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024022319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024024722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.596" endtime="20201115 22:02:48.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.604" endtime="20201115 22:02:48.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.300" endtime="20201115 22:02:48.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.298" endtime="20201115 22:02:48.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.611" level="INFO">${RESULT} = [{'time': 0.024024722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.024097542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:48.607" endtime="20201115 22:02:48.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:48.624" level="INFO">${OVERHEAD} = {'time': [0.024024722, 0.024097542, 0.024168083, 0.024237708, 0.024302625, 0.024372125, 0.024439194, 0.024505194, 0.024577639, 0.024645528, 0.024712653, 0.024782903, 0.024848375, 0.024915736, 0.024983...</msg>
<status status="PASS" starttime="20201115 22:02:48.612" endtime="20201115 22:02:48.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.628" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:48.627" endtime="20201115 22:02:48.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.631" level="INFO">VALUE: [2.4029999999980456e-06, 2.1949999999999747e-06, 2.151999999998322e-06, 2.1660000000013613e-06, 2.125000000002125e-06, 2.181000000000405e-06, 2.180000000000931e-06, 2.1660000000013613e-06, 2.1529999999977956e-06, 2.153000000001265e-06, 2.167000000000835e-06, 2.1529999999977956e-06, 2.1389999999982257e-06, 2.194000000000501e-06, 2.1660000000013613e-06, 2.181000000000405e-06, 2.167000000000835e-06, 2.1799999999974617e-06, 2.167000000000835e-06, 2.167000000000835e-06, 2.167000000000835e-06, 2.1660000000013613e-06, 2.167000000000835e-06, 2.181000000000405e-06, 2.1529999999977956e-06, 2.1660000000013613e-06, 2.2499999999987808e-06, 2.167000000000835e-06, 2.1660000000013613e-06, 2.1389999999982257e-06, 2.1939999999970317e-06, 2.180000000000931e-06, 2.2499999999987808e-06, 2.181000000000405e-06, 2.1520000000017914e-06, 2.1799999999974617e-06, 2.181000000000405e-06, 2.167000000000835e-06, 2.1669999999973655e-06, 2.1249999999986557e-06, 2.181000000000405e-06, 2.167000000000835e-06, 2.153000000001265e-06, 2.096999999999516e-06, 2.1110000000025553e-06, 2.167000000000835e-06, 2.181000000000405e-06, 2.180000000000931e-06, 2.167000000000835e-06, 2.1809999999969354e-06]</msg>
<status status="PASS" starttime="20201115 22:02:48.629" endtime="20201115 22:02:48.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.625" endtime="20201115 22:02:48.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.634" endtime="20201115 22:02:48.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.638" endtime="20201115 22:02:48.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.636" endtime="20201115 22:02:48.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.632" endtime="20201115 22:02:48.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.268" endtime="20201115 22:02:48.658"></status>
</kw>
<msg timestamp="20201115 22:02:48.659" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.667" endtime="20201115 22:02:48.681"></status>
</kw>
<msg timestamp="20201115 22:02:48.681" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.666" endtime="20201115 22:02:48.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.684" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.682" endtime="20201115 22:02:48.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.685" endtime="20201115 22:02:48.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.663" endtime="20201115 22:02:48.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.661" endtime="20201115 22:02:48.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.694" endtime="20201115 22:02:48.979"></status>
</kw>
<msg timestamp="20201115 22:02:48.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.692" endtime="20201115 22:02:48.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.984" endtime="20201115 22:02:48.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.992" endtime="20201115 22:02:48.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.690" endtime="20201115 22:02:48.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.688" endtime="20201115 22:02:48.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.999" level="INFO">${RESULT} = [{'time': 0.022554486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.022628097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:48.995" endtime="20201115 22:02:48.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:49.012" level="INFO">${OVERHEAD} = {'time': [0.022554486, 0.022628097, 0.022695833, 0.022766125, 0.022837917, 0.022911278, 0.022982639, 0.023052806, 0.023119472, 0.023185097, 0.023255653, 0.023322833, 0.023389639, 0.023461819, 0.023534...</msg>
<status status="PASS" starttime="20201115 22:02:49.000" endtime="20201115 22:02:49.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.016" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:49.015" endtime="20201115 22:02:49.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.019" level="INFO">VALUE: [2.4029999999980456e-06, 2.1249999999986557e-06, 2.165999999997892e-06, 2.153000000001265e-06, 2.181000000000405e-06, 2.167000000000835e-06, 2.1529999999977956e-06, 2.1669999999973655e-06, 2.1799999999974617e-06, 2.208000000000071e-06, 2.1949999999999747e-06, 2.1660000000013613e-06, 2.167000000000835e-06, 2.1799999999974617e-06, 2.1529999999977956e-06, 2.167000000000835e-06, 2.181000000000405e-06, 2.153000000001265e-06, 2.167000000000835e-06, 2.1669999999973655e-06, 2.1660000000013613e-06, 2.167000000000835e-06, 2.1660000000013613e-06, 2.1669999999973655e-06, 2.167000000000835e-06, 2.165999999997892e-06, 2.1660000000013613e-06, 2.181000000000405e-06, 2.1809999999969354e-06, 2.1799999999974617e-06, 2.221999999999641e-06, 2.125000000002125e-06, 2.1949999999999747e-06, 2.180000000000931e-06, 2.221999999999641e-06, 2.194000000000501e-06, 2.167000000000835e-06, 2.2229999999991146e-06, 2.153000000001265e-06, 2.167000000000835e-06, 2.1669999999973655e-06, 2.180000000000931e-06, 2.208000000000071e-06, 2.181000000000405e-06, 2.153000000001265e-06, 2.167000000000835e-06, 2.180000000000931e-06, 2.151999999998322e-06, 2.082999999999946e-06, 2.181000000000405e-06]</msg>
<status status="PASS" starttime="20201115 22:02:49.017" endtime="20201115 22:02:49.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.013" endtime="20201115 22:02:49.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.022" endtime="20201115 22:02:49.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:49.026" endtime="20201115 22:02:49.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.024" endtime="20201115 22:02:49.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.021" endtime="20201115 22:02:49.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.659" endtime="20201115 22:02:49.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.100" endtime="20201115 22:02:49.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.099" endtime="20201115 22:02:49.047"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.049" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.058" endtime="20201115 22:02:49.072"></status>
</kw>
<msg timestamp="20201115 22:02:49.072" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.056" endtime="20201115 22:02:49.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.075" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.073" endtime="20201115 22:02:49.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.076" endtime="20201115 22:02:49.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.053" endtime="20201115 22:02:49.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.051" endtime="20201115 22:02:49.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.085" endtime="20201115 22:02:49.371"></status>
</kw>
<msg timestamp="20201115 22:02:49.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024577194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024579778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.083" endtime="20201115 22:02:49.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024577194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024579778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.375" endtime="20201115 22:02:49.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.383" endtime="20201115 22:02:49.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.081" endtime="20201115 22:02:49.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.079" endtime="20201115 22:02:49.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:49.390" level="INFO">${RESULT} = [{'time': 0.024579778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5839999999999197e-06, 'source_diff': 2.5839999999999197e-06}, {'time': 0.024652833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:49.387" endtime="20201115 22:02:49.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:49.403" level="INFO">${OVERHEAD} = {'time': [0.024579778, 0.024652833, 0.024725861, 0.024801819, 0.024878167, 0.024956333, 0.025029306, 0.025105264, 0.025180583, 0.025257139, 0.025331569, 0.025403222, 0.025476111, 0.025554097, 0.025628...</msg>
<status status="PASS" starttime="20201115 22:02:49.391" endtime="20201115 22:02:49.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.408" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:49.407" endtime="20201115 22:02:49.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.414" level="INFO">VALUE: [2.5839999999999197e-06, 2.333000000000196e-06, 2.3329999999967266e-06, 2.333000000000196e-06, 2.3200000000000998e-06, 2.360999999999336e-06, 2.3200000000000998e-06, 2.2779999999979206e-06, 2.333000000000196e-06, 2.375000000002375e-06, 2.333000000000196e-06, 2.2779999999979206e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.305000000001056e-06, 2.333000000000196e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.3049999999975868e-06, 2.30600000000053e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.3329999999967266e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.305000000001056e-06, 2.319000000000626e-06, 2.3059999999970604e-06, 2.333000000000196e-06, 2.30600000000053e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.3049999999975868e-06, 2.319000000000626e-06, 2.3339999999996697e-06, 2.3339999999996697e-06, 2.305000000001056e-06, 2.360999999999336e-06, 2.305000000001056e-06, 2.319000000000626e-06, 2.3339999999996697e-06, 2.3339999999996697e-06, 2.3200000000000998e-06]</msg>
<status status="PASS" starttime="20201115 22:02:49.409" endtime="20201115 22:02:49.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.404" endtime="20201115 22:02:49.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.418" endtime="20201115 22:02:49.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:49.421" endtime="20201115 22:02:49.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.419" endtime="20201115 22:02:49.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.416" endtime="20201115 22:02:49.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.049" endtime="20201115 22:02:49.442"></status>
</kw>
<msg timestamp="20201115 22:02:49.442" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.451" endtime="20201115 22:02:49.464"></status>
</kw>
<msg timestamp="20201115 22:02:49.464" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.449" endtime="20201115 22:02:49.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.467" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.465" endtime="20201115 22:02:49.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.468" endtime="20201115 22:02:49.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.446" endtime="20201115 22:02:49.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.444" endtime="20201115 22:02:49.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.477" endtime="20201115 22:02:49.763"></status>
</kw>
<msg timestamp="20201115 22:02:49.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.475" endtime="20201115 22:02:49.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.767" endtime="20201115 22:02:49.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.775" endtime="20201115 22:02:49.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.473" endtime="20201115 22:02:49.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.471" endtime="20201115 22:02:49.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:49.782" level="INFO">${RESULT} = [{'time': 0.022131389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5700000000003498e-06, 'source_diff': 2.5700000000003498e-06}, {'time': 0.022209764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:49.779" endtime="20201115 22:02:49.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:49.795" level="INFO">${OVERHEAD} = {'time': [0.022131389, 0.022209764, 0.022286653, 0.022361944, 0.022436708, 0.022508403, 0.022585722, 0.022660847, 0.02273425, 0.022806736, 0.022882014, 0.022954097, 0.023026181, 0.023101069, 0.0231755...</msg>
<status status="PASS" starttime="20201115 22:02:49.783" endtime="20201115 22:02:49.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.800" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:49.799" endtime="20201115 22:02:49.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.803" level="INFO">VALUE: [2.5700000000003498e-06, 2.360999999999336e-06, 2.3339999999996697e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.3200000000000998e-06, 2.305000000001056e-06, 2.3339999999996697e-06, 2.3189999999971567e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.2779999999979206e-06, 2.333000000000196e-06, 2.3189999999971567e-06, 2.30600000000053e-06, 2.30600000000053e-06, 2.3200000000000998e-06, 2.3339999999996697e-06, 2.3189999999971567e-06, 2.333000000000196e-06, 2.3049999999975868e-06, 2.3059999999970604e-06, 2.290999999998017e-06, 2.3200000000000998e-06, 2.305000000001056e-06, 2.30600000000053e-06, 2.3059999999970604e-06, 2.290999999998017e-06, 2.3200000000000998e-06, 2.333000000000196e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.2499999999987808e-06, 2.3189999999971567e-06, 2.305000000001056e-06, 2.319000000000626e-06, 2.3049999999975868e-06, 2.3189999999971567e-06, 2.29200000000096e-06, 2.3189999999971567e-06, 2.333000000000196e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.305000000001056e-06]</msg>
<status status="PASS" starttime="20201115 22:02:49.801" endtime="20201115 22:02:49.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.796" endtime="20201115 22:02:49.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.806" endtime="20201115 22:02:49.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:49.809" endtime="20201115 22:02:49.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.808" endtime="20201115 22:02:49.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.804" endtime="20201115 22:02:49.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.442" endtime="20201115 22:02:49.830"></status>
</kw>
<msg timestamp="20201115 22:02:49.830" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.839" endtime="20201115 22:02:49.853"></status>
</kw>
<msg timestamp="20201115 22:02:49.854" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.837" endtime="20201115 22:02:49.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.856" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.855" endtime="20201115 22:02:49.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.857" endtime="20201115 22:02:49.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.835" endtime="20201115 22:02:49.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.832" endtime="20201115 22:02:49.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.866" endtime="20201115 22:02:50.153"></status>
</kw>
<msg timestamp="20201115 22:02:50.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022185306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022187819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.865" endtime="20201115 22:02:50.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022185306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022187819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.157" endtime="20201115 22:02:50.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.166" endtime="20201115 22:02:50.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.862" endtime="20201115 22:02:50.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.860" endtime="20201115 22:02:50.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:50.172" level="INFO">${RESULT} = [{'time': 0.022187819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5130000000025965e-06, 'source_diff': 2.5130000000025965e-06}, {'time': 0.022262153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:50.169" endtime="20201115 22:02:50.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:50.186" level="INFO">${OVERHEAD} = {'time': [0.022187819, 0.022262153, 0.022332347, 0.022408694, 0.022484944, 0.022561722, 0.022639278, 0.022715306, 0.022793222, 0.022863833, 0.022941958, 0.023013208, 0.023087306, 0.023162847, 0.023234...</msg>
<status status="PASS" starttime="20201115 22:02:50.174" endtime="20201115 22:02:50.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.190" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:50.189" endtime="20201115 22:02:50.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.193" level="INFO">VALUE: [2.5130000000025965e-06, 2.3200000000000998e-06, 2.333000000000196e-06, 2.305000000001056e-06, 2.319000000000626e-06, 2.305000000001056e-06, 2.3059999999970604e-06, 2.389000000001945e-06, 2.3049999999975868e-06, 2.319000000000626e-06, 2.276999999998447e-06, 2.2910000000014863e-06, 2.3200000000000998e-06, 2.305000000001056e-06, 2.29200000000096e-06, 2.26400000000182e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.3339999999996697e-06, 2.2639999999983507e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.26400000000182e-06, 2.3189999999971567e-06, 2.3339999999996697e-06, 2.3049999999975868e-06, 2.3339999999996697e-06, 2.3339999999996697e-06, 2.319000000000626e-06, 2.3059999999970604e-06, 2.3339999999996697e-06, 2.29200000000096e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.3059999999970604e-06, 2.3059999999970604e-06, 2.3200000000000998e-06, 2.305000000001056e-06, 2.3200000000000998e-06, 2.3610000000028053e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.3059999999970604e-06, 2.360999999999336e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.3189999999971567e-06, 2.2910000000014863e-06]</msg>
<status status="PASS" starttime="20201115 22:02:50.191" endtime="20201115 22:02:50.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.187" endtime="20201115 22:02:50.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.196" endtime="20201115 22:02:50.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.199" endtime="20201115 22:02:50.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.198" endtime="20201115 22:02:50.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.194" endtime="20201115 22:02:50.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.830" endtime="20201115 22:02:50.220"></status>
</kw>
<msg timestamp="20201115 22:02:50.220" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.229" endtime="20201115 22:02:50.244"></status>
</kw>
<msg timestamp="20201115 22:02:50.244" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.227" endtime="20201115 22:02:50.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.246" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.245" endtime="20201115 22:02:50.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.248" endtime="20201115 22:02:50.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.225" endtime="20201115 22:02:50.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.223" endtime="20201115 22:02:50.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.256" endtime="20201115 22:02:50.542"></status>
</kw>
<msg timestamp="20201115 22:02:50.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.255" endtime="20201115 22:02:50.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.546" endtime="20201115 22:02:50.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.555" endtime="20201115 22:02:50.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.252" endtime="20201115 22:02:50.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.251" endtime="20201115 22:02:50.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:50.562" level="INFO">${RESULT} = [{'time': 0.022448236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.022522431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:50.558" endtime="20201115 22:02:50.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:50.575" level="INFO">${OVERHEAD} = {'time': [0.022448236, 0.022522431, 0.022592236, 0.022663625, 0.022733278, 0.022804667, 0.022876736, 0.022952583, 0.023026264, 0.023097931, 0.023171889, 0.023244514, 0.0233225, 0.023399028, 0.02347481...</msg>
<status status="PASS" starttime="20201115 22:02:50.563" endtime="20201115 22:02:50.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.579" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:50.578" endtime="20201115 22:02:50.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.582" level="INFO">VALUE: [2.5279999999981706e-06, 2.30600000000053e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.3339999999996697e-06, 2.29200000000096e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.30600000000053e-06, 2.333000000000196e-06, 2.2639999999983507e-06, 2.3200000000000998e-06, 2.25000000000225e-06, 2.3339999999996697e-06, 2.3329999999967266e-06, 2.30600000000053e-06, 2.235999999999211e-06, 2.319000000000626e-06, 2.3189999999971567e-06, 2.3189999999971567e-06, 2.333000000000196e-06, 2.3049999999975868e-06, 2.2639999999983507e-06, 2.3339999999996697e-06, 2.3339999999996697e-06, 2.333000000000196e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.3339999999996697e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.30600000000053e-06, 2.3610000000028053e-06, 2.30600000000053e-06, 2.30600000000053e-06, 2.3339999999996697e-06, 2.30600000000053e-06, 2.3889999999984757e-06, 2.319000000000626e-06, 2.305000000001056e-06, 2.2499999999987808e-06, 2.3339999999996697e-06, 2.305000000001056e-06, 2.305000000001056e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.3059999999970604e-06]</msg>
<status status="PASS" starttime="20201115 22:02:50.580" endtime="20201115 22:02:50.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.576" endtime="20201115 22:02:50.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.585" endtime="20201115 22:02:50.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.588" endtime="20201115 22:02:50.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.587" endtime="20201115 22:02:50.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.583" endtime="20201115 22:02:50.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.221" endtime="20201115 22:02:50.609"></status>
</kw>
<msg timestamp="20201115 22:02:50.609" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.618" endtime="20201115 22:02:50.632"></status>
</kw>
<msg timestamp="20201115 22:02:50.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.616" endtime="20201115 22:02:50.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.635" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.634" endtime="20201115 22:02:50.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.636" endtime="20201115 22:02:50.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.614" endtime="20201115 22:02:50.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.611" endtime="20201115 22:02:50.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.645" endtime="20201115 22:02:50.931"></status>
</kw>
<msg timestamp="20201115 22:02:50.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.643" endtime="20201115 22:02:50.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.936" endtime="20201115 22:02:50.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.944" endtime="20201115 22:02:50.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.641" endtime="20201115 22:02:50.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.639" endtime="20201115 22:02:50.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:50.951" level="INFO">${RESULT} = [{'time': 0.022365958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.540999999998267e-06, 'source_diff': 2.540999999998267e-06}, {'time': 0.022437056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:50.947" endtime="20201115 22:02:50.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:50.964" level="INFO">${OVERHEAD} = {'time': [0.022365958, 0.022437056, 0.022507125, 0.022581736, 0.022653125, 0.022723167, 0.022796722, 0.022868139, 0.022946097, 0.023018181, 0.023091861, 0.023161556, 0.023234403, 0.023307958, 0.023385...</msg>
<status status="PASS" starttime="20201115 22:02:50.952" endtime="20201115 22:02:50.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.969" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:50.967" endtime="20201115 22:02:50.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.971" level="INFO">VALUE: [2.540999999998267e-06, 2.3339999999996697e-06, 2.319000000000626e-06, 2.25000000000225e-06, 2.30600000000053e-06, 2.3200000000000998e-06, 2.3189999999971567e-06, 2.346999999999766e-06, 2.3189999999971567e-06, 2.3339999999996697e-06, 2.25000000000225e-06, 2.3479999999992396e-06, 2.26400000000182e-06, 2.333000000000196e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.2499999999987808e-06, 2.3200000000000998e-06, 2.3339999999996697e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.2910000000014863e-06, 2.346999999999766e-06, 2.30600000000053e-06, 2.333000000000196e-06, 2.3339999999996697e-06, 2.3200000000000998e-06, 2.3610000000028053e-06, 2.333000000000196e-06, 2.2639999999983507e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.30600000000053e-06, 2.346999999999766e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.319000000000626e-06, 2.27800000000139e-06, 2.333000000000196e-06]</msg>
<status status="PASS" starttime="20201115 22:02:50.970" endtime="20201115 22:02:50.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.965" endtime="20201115 22:02:50.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.974" endtime="20201115 22:02:50.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.977" endtime="20201115 22:02:50.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.976" endtime="20201115 22:02:50.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.972" endtime="20201115 22:02:50.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.609" endtime="20201115 22:02:50.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.048" endtime="20201115 22:02:50.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.047" endtime="20201115 22:02:50.999"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.001" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.009" endtime="20201115 22:02:51.024"></status>
</kw>
<msg timestamp="20201115 22:02:51.025" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.008" endtime="20201115 22:02:51.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.027" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.026" endtime="20201115 22:02:51.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.029" endtime="20201115 22:02:51.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.005" endtime="20201115 22:02:51.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.003" endtime="20201115 22:02:51.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.038" endtime="20201115 22:02:51.325"></status>
</kw>
<msg timestamp="20201115 22:02:51.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024523806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024526486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.036" endtime="20201115 22:02:51.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024523806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024526486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.329" endtime="20201115 22:02:51.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.337" endtime="20201115 22:02:51.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.034" endtime="20201115 22:02:51.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.032" endtime="20201115 22:02:51.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:51.344" level="INFO">${RESULT} = [{'time': 0.024526486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.024603514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:51.341" endtime="20201115 22:02:51.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:51.357" level="INFO">${OVERHEAD} = {'time': [0.024526486, 0.024603514, 0.024685278, 0.024763681, 0.024838736, 0.024920083, 0.024999458, 0.025077569, 0.025157597, 0.02523975, 0.025322208, 0.025403681, 0.025484389, 0.025562639, 0.0256410...</msg>
<status status="PASS" starttime="20201115 22:02:51.345" endtime="20201115 22:02:51.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.361" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:02:51.360" endtime="20201115 22:02:51.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.364" level="INFO">VALUE: [2.6800000000014312e-06, 2.458000000000321e-06, 2.4589999999997947e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.415999999998142e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.4309999999971854e-06, 2.471999999999891e-06, 2.431000000000655e-06, 2.458000000000321e-06, 2.4450000000002248e-06, 2.471999999999891e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.4439999999972817e-06, 2.444000000000751e-06, 2.444000000000751e-06, 2.4450000000002248e-06, 2.4999999999990308e-06, 2.4589999999997947e-06, 2.4579999999968516e-06, 2.471999999999891e-06, 2.4729999999993646e-06, 2.458000000000321e-06, 2.4999999999990308e-06, 2.471999999999891e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2.4450000000002248e-06, 2.4169999999976155e-06, 2.4020000000020414e-06, 2.4300000000011812e-06, 2.4439999999972817e-06, 2.444000000000751e-06, 2.4439999999972817e-06, 2.4439999999972817e-06, 2.4449999999967553e-06, 2.458000000000321e-06, 2.4579999999968516e-06, 2.458000000000321e-06, 2.4450000000002248e-06, 2.458000000000321e-06, 2.4589999999997947e-06, 2.4579999999968516e-06, 2.4589999999997947e-06, 2.52800000000164e-06, 2.444000000000751e-06]</msg>
<status status="PASS" starttime="20201115 22:02:51.363" endtime="20201115 22:02:51.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.358" endtime="20201115 22:02:51.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.367" endtime="20201115 22:02:51.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:51.370" endtime="20201115 22:02:51.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.369" endtime="20201115 22:02:51.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.365" endtime="20201115 22:02:51.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.001" endtime="20201115 22:02:51.391"></status>
</kw>
<msg timestamp="20201115 22:02:51.391" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.400" endtime="20201115 22:02:51.414"></status>
</kw>
<msg timestamp="20201115 22:02:51.415" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.399" endtime="20201115 22:02:51.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.417" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.416" endtime="20201115 22:02:51.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.419" endtime="20201115 22:02:51.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.396" endtime="20201115 22:02:51.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.394" endtime="20201115 22:02:51.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.428" endtime="20201115 22:02:51.715"></status>
</kw>
<msg timestamp="20201115 22:02:51.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022324653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.426" endtime="20201115 22:02:51.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022324653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.719" endtime="20201115 22:02:51.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.727" endtime="20201115 22:02:51.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.423" endtime="20201115 22:02:51.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.422" endtime="20201115 22:02:51.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:51.734" level="INFO">${RESULT} = [{'time': 0.022324653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.695000000000475e-06, 'source_diff': 2.695000000000475e-06}, {'time': 0.022404097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:51.731" endtime="20201115 22:02:51.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:51.747" level="INFO">${OVERHEAD} = {'time': [0.022324653, 0.022404097, 0.022480875, 0.022558208, 0.022639167, 0.022715292, 0.022791944, 0.022867514, 0.022944847, 0.023020167, 0.023096986, 0.023178333, 0.023258097, 0.023339847, 0.023419...</msg>
<status status="PASS" starttime="20201115 22:02:51.735" endtime="20201115 22:02:51.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.752" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:02:51.751" endtime="20201115 22:02:51.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.754" level="INFO">VALUE: [2.695000000000475e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2.360999999999336e-06, 2.4450000000002248e-06, 2.4589999999997947e-06, 2.458000000000321e-06, 2.4450000000002248e-06, 2.4300000000011812e-06, 2.431000000000655e-06, 2.471999999999891e-06, 2.4439999999972817e-06, 2.4439999999972817e-06, 2.389000000001945e-06, 2.458000000000321e-06, 2.4450000000002248e-06, 2.4439999999972817e-06, 2.4450000000002248e-06, 2.417000000001085e-06, 2.4450000000002248e-06, 2.4309999999971854e-06, 2.387999999999002e-06, 2.444000000000751e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.4589999999997947e-06, 2.4300000000011812e-06, 2.526999999998697e-06, 2.458000000000321e-06, 2.4729999999993646e-06, 2.444000000000751e-06, 2.485999999999461e-06, 2.4299999999977118e-06, 2.4589999999997947e-06, 2.4439999999972817e-06, 2.444000000000751e-06, 2.4579999999968516e-06, 2.4020000000020414e-06, 2.4439999999972817e-06, 2.4169999999976155e-06, 2.471999999999891e-06, 2.444000000000751e-06, 2.458000000000321e-06, 2.4439999999972817e-06, 2.471999999999891e-06, 2.4720000000033604e-06, 2.4589999999997947e-06, 2.4589999999997947e-06]</msg>
<status status="PASS" starttime="20201115 22:02:51.753" endtime="20201115 22:02:51.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.748" endtime="20201115 22:02:51.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.757" endtime="20201115 22:02:51.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:51.761" endtime="20201115 22:02:51.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.759" endtime="20201115 22:02:51.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.756" endtime="20201115 22:02:51.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.392" endtime="20201115 22:02:51.781"></status>
</kw>
<msg timestamp="20201115 22:02:51.781" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.791" endtime="20201115 22:02:51.805"></status>
</kw>
<msg timestamp="20201115 22:02:51.805" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.789" endtime="20201115 22:02:51.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.808" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.807" endtime="20201115 22:02:51.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.809" endtime="20201115 22:02:51.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.786" endtime="20201115 22:02:51.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.784" endtime="20201115 22:02:51.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.818" endtime="20201115 22:02:52.104"></status>
</kw>
<msg timestamp="20201115 22:02:52.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.816" endtime="20201115 22:02:52.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.108" endtime="20201115 22:02:52.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.117" endtime="20201115 22:02:52.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.814" endtime="20201115 22:02:52.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.812" endtime="20201115 22:02:52.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.123" level="INFO">${RESULT} = [{'time': 0.022781792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6949999999970053e-06, 'source_diff': 2.6949999999970053e-06}, {'time': 0.022858417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:52.120" endtime="20201115 22:02:52.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.136" level="INFO">${OVERHEAD} = {'time': [0.022781792, 0.022858417, 0.022939097, 0.023017653, 0.023100167, 0.023180236, 0.023259069, 0.0233415, 0.023422292, 0.023500042, 0.023580583, 0.023662208, 0.023741444, 0.023820903, 0.02389643...</msg>
<status status="PASS" starttime="20201115 22:02:52.124" endtime="20201115 22:02:52.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.141" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:02:52.140" endtime="20201115 22:02:52.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.143" level="INFO">VALUE: [2.6949999999970053e-06, 2.4589999999997947e-06, 2.4029999999980456e-06, 2.4589999999997947e-06, 2.4589999999997947e-06, 2.444000000000751e-06, 2.471999999999891e-06, 2.444000000000751e-06, 2.375000000002375e-06, 2.4729999999993646e-06, 2.458000000000321e-06, 2.3749999999989058e-06, 2.471999999999891e-06, 2.4450000000002248e-06, 2.4999999999990308e-06, 2.4589999999997947e-06, 2.4579999999968516e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.4439999999972817e-06, 2.4450000000002248e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.471999999999891e-06, 2.444000000000751e-06, 2.444000000000751e-06, 2.471999999999891e-06, 2.4450000000002248e-06, 2.4450000000002248e-06, 2.3749999999989058e-06, 2.417000000001085e-06, 2.458000000000321e-06, 2.4589999999997947e-06, 2.471999999999891e-06, 2.52800000000164e-06, 2.431000000000655e-06, 2.471999999999891e-06, 2.4450000000002248e-06, 2.431000000000655e-06, 2.4999999999990308e-06, 2.444000000000751e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.4999999999990308e-06, 2.485999999999461e-06, 2.458000000000321e-06, 2.4579999999968516e-06, 2.4450000000002248e-06, 2.4860000000029303e-06, 2.458000000000321e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.142" endtime="20201115 22:02:52.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.137" endtime="20201115 22:02:52.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.146" endtime="20201115 22:02:52.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.150" endtime="20201115 22:02:52.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.148" endtime="20201115 22:02:52.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.145" endtime="20201115 22:02:52.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.782" endtime="20201115 22:02:52.171"></status>
</kw>
<msg timestamp="20201115 22:02:52.171" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.180" endtime="20201115 22:02:52.194"></status>
</kw>
<msg timestamp="20201115 22:02:52.195" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.178" endtime="20201115 22:02:52.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.197" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.196" endtime="20201115 22:02:52.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.198" endtime="20201115 22:02:52.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.176" endtime="20201115 22:02:52.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.174" endtime="20201115 22:02:52.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.207" endtime="20201115 22:02:52.494"></status>
</kw>
<msg timestamp="20201115 22:02:52.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022580778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.205" endtime="20201115 22:02:52.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022580778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.498" endtime="20201115 22:02:52.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.506" endtime="20201115 22:02:52.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.203" endtime="20201115 22:02:52.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.201" endtime="20201115 22:02:52.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.513" level="INFO">${RESULT} = [{'time': 0.022580778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.695000000000475e-06, 'source_diff': 2.695000000000475e-06}, {'time': 0.022663833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:52.510" endtime="20201115 22:02:52.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.526" level="INFO">${OVERHEAD} = {'time': [0.022580778, 0.022663833, 0.022739306, 0.022816917, 0.022895444, 0.022975722, 0.023053583, 0.023136292, 0.023218861, 0.023301292, 0.023379972, 0.023457569, 0.023536264, 0.023614917, 0.023695...</msg>
<status status="PASS" starttime="20201115 22:02:52.514" endtime="20201115 22:02:52.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.531" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:02:52.530" endtime="20201115 22:02:52.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.533" level="INFO">VALUE: [2.695000000000475e-06, 2.4300000000011812e-06, 2.4589999999997947e-06, 2.4729999999993646e-06, 2.444000000000751e-06, 2.4300000000011812e-06, 2.444000000000751e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.403000000001515e-06, 2.4299999999977118e-06, 2.458000000000321e-06, 2.471999999999891e-06, 2.4589999999997947e-06, 2.4720000000033604e-06, 2.431000000000655e-06, 2.444000000000751e-06, 2.3889999999984757e-06, 2.458000000000321e-06, 2.4299999999977118e-06, 2.4729999999993646e-06, 2.4999999999990308e-06, 2.4439999999972817e-06, 2.4450000000002248e-06, 2.458000000000321e-06, 2.4450000000002248e-06, 2.458000000000321e-06, 2.4439999999972817e-06, 2.431000000000655e-06, 2.444000000000751e-06, 2.458000000000321e-06, 2.4439999999972817e-06, 2.4450000000002248e-06, 2.458000000000321e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.4589999999997947e-06, 2.444000000000751e-06, 2.4450000000002248e-06, 2.360999999999336e-06, 2.52800000000164e-06, 2.471999999999891e-06, 2.444000000000751e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.431000000000655e-06, 2.4860000000029303e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.532" endtime="20201115 22:02:52.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.527" endtime="20201115 22:02:52.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.537" endtime="20201115 22:02:52.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.540" endtime="20201115 22:02:52.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.539" endtime="20201115 22:02:52.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.535" endtime="20201115 22:02:52.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.171" endtime="20201115 22:02:52.561"></status>
</kw>
<msg timestamp="20201115 22:02:52.561" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.570" endtime="20201115 22:02:52.584"></status>
</kw>
<msg timestamp="20201115 22:02:52.585" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.568" endtime="20201115 22:02:52.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.587" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.586" endtime="20201115 22:02:52.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.588" endtime="20201115 22:02:52.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.566" endtime="20201115 22:02:52.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.563" endtime="20201115 22:02:52.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.597" endtime="20201115 22:02:52.884"></status>
</kw>
<msg timestamp="20201115 22:02:52.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022155653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.596" endtime="20201115 22:02:52.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022155653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.888" endtime="20201115 22:02:52.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.896" endtime="20201115 22:02:52.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.593" endtime="20201115 22:02:52.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.592" endtime="20201115 22:02:52.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.902" level="INFO">${RESULT} = [{'time': 0.022158375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.022241542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:52.899" endtime="20201115 22:02:52.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.916" level="INFO">${OVERHEAD} = {'time': [0.022158375, 0.022241542, 0.022318528, 0.022399153, 0.022475431, 0.022550958, 0.022626736, 0.022705264, 0.022781667, 0.022860347, 0.022940236, 0.02301675, 0.023094625, 0.0231725, 0.023252639...</msg>
<status status="PASS" starttime="20201115 22:02:52.903" endtime="20201115 22:02:52.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.920" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:02:52.919" endtime="20201115 22:02:52.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.923" level="INFO">VALUE: [2.722000000000141e-06, 2.4589999999997947e-06, 2.4999999999990308e-06, 2.431000000000655e-06, 2.4589999999997947e-06, 2.526999999998697e-06, 2.458000000000321e-06, 2.431000000000655e-06, 2.4589999999997947e-06, 2.458000000000321e-06, 2.4299999999977118e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.4309999999971854e-06, 2.4450000000002248e-06, 2.4589999999997947e-06, 2.431000000000655e-06, 2.4450000000002248e-06, 2.458000000000321e-06, 2.485999999999461e-06, 2.4299999999977118e-06, 2.487000000002404e-06, 2.4589999999997947e-06, 2.458000000000321e-06, 2.444000000000751e-06, 2.444000000000751e-06, 2.458000000000321e-06, 2.4450000000002248e-06, 2.4579999999968516e-06, 2.444000000000751e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.403000000001515e-06, 2.458000000000321e-06, 2.5270000000021664e-06, 2.4169999999976155e-06, 2.458000000000321e-06, 2.458000000000321e-06, 2.4729999999993646e-06, 2.444000000000751e-06, 2.4450000000002248e-06, 2.444000000000751e-06, 2.444000000000751e-06, 2.444000000000751e-06, 2.4589999999997947e-06, 2.458000000000321e-06, 2.4439999999972817e-06, 2.4589999999997947e-06, 2.444000000000751e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.921" endtime="20201115 22:02:52.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.916" endtime="20201115 22:02:52.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.926" endtime="20201115 22:02:52.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.930" endtime="20201115 22:02:52.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.928" endtime="20201115 22:02:52.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.924" endtime="20201115 22:02:52.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.561" endtime="20201115 22:02:52.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.000" endtime="20201115 22:02:52.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.999" endtime="20201115 22:02:52.951"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.953" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.961" endtime="20201115 22:02:52.977"></status>
</kw>
<msg timestamp="20201115 22:02:52.978" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.960" endtime="20201115 22:02:52.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.980" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.979" endtime="20201115 22:02:52.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.981" endtime="20201115 22:02:52.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.957" endtime="20201115 22:02:52.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.955" endtime="20201115 22:02:52.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.990" endtime="20201115 22:02:53.278"></status>
</kw>
<msg timestamp="20201115 22:02:53.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024637083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024639917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.989" endtime="20201115 22:02:53.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024637083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024639917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.282" endtime="20201115 22:02:53.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.290" endtime="20201115 22:02:53.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.986" endtime="20201115 22:02:53.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.984" endtime="20201115 22:02:53.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:53.297" level="INFO">${RESULT} = [{'time': 0.024639917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8340000000001697e-06, 'source_diff': 2.8340000000001697e-06}, {'time': 0.024723597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:53.294" endtime="20201115 22:02:53.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:53.310" level="INFO">${OVERHEAD} = {'time': [0.024639917, 0.024723597, 0.024806778, 0.024890486, 0.024978097, 0.025065417, 0.025152222, 0.025235542, 0.025319236, 0.025402542, 0.025488944, 0.025576153, 0.025664556, 0.025745056, 0.025826...</msg>
<status status="PASS" starttime="20201115 22:02:53.298" endtime="20201115 22:02:53.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.315" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:02:53.314" endtime="20201115 22:02:53.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.318" level="INFO">VALUE: [2.8340000000001697e-06, 2.597000000000016e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.5979999999994896e-06, 2.5829999999969766e-06, 2.5979999999994896e-06, 2.5829999999969766e-06, 2.5979999999994896e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.5839999999999197e-06, 2.5419999999977405e-06, 2.6110000000030553e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.5979999999994896e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.5839999999999197e-06, 2.5839999999999197e-06, 2.5979999999994896e-06, 2.5700000000003498e-06, 2.597000000000016e-06, 2.6119999999990595e-06, 2.597000000000016e-06, 2.6389999999987257e-06, 2.610999999999586e-06, 2.55600000000078e-06, 2.610999999999586e-06, 2.6249999999991558e-06, 2.6800000000014312e-06, 2.5979999999994896e-06, 2.54200000000121e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.5550000000013062e-06, 2.5839999999999197e-06, 2.6110000000030553e-06, 2.597000000000016e-06, 2.639000000002195e-06, 2.6249999999991558e-06, 2.5839999999999197e-06, 2.583000000000446e-06]</msg>
<status status="PASS" starttime="20201115 22:02:53.316" endtime="20201115 22:02:53.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.311" endtime="20201115 22:02:53.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.321" endtime="20201115 22:02:53.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:53.324" endtime="20201115 22:02:53.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.323" endtime="20201115 22:02:53.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.319" endtime="20201115 22:02:53.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.953" endtime="20201115 22:02:53.345"></status>
</kw>
<msg timestamp="20201115 22:02:53.345" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.355" endtime="20201115 22:02:53.370"></status>
</kw>
<msg timestamp="20201115 22:02:53.371" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.353" endtime="20201115 22:02:53.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.372" endtime="20201115 22:02:53.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.374" endtime="20201115 22:02:53.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.350" endtime="20201115 22:02:53.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.348" endtime="20201115 22:02:53.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.383" endtime="20201115 22:02:53.669"></status>
</kw>
<msg timestamp="20201115 22:02:53.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023817583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023820361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.382" endtime="20201115 22:02:53.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023817583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023820361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.673" endtime="20201115 22:02:53.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.682" endtime="20201115 22:02:53.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.379" endtime="20201115 22:02:53.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.377" endtime="20201115 22:02:53.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:53.688" level="INFO">${RESULT} = [{'time': 0.023820361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.77800000000189e-06, 'source_diff': 2.77800000000189e-06}, {'time': 0.023905778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:53.685" endtime="20201115 22:02:53.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:53.701" level="INFO">${OVERHEAD} = {'time': [0.023820361, 0.023905778, 0.0239895, 0.024072681, 0.024160139, 0.024246417, 0.024334681, 0.024418, 0.024500361, 0.024585569, 0.024672931, 0.024753514, 0.024841819, 0.024927125, 0.025010028, ...</msg>
<status status="PASS" starttime="20201115 22:02:53.689" endtime="20201115 22:02:53.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.706" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:02:53.705" endtime="20201115 22:02:53.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.709" level="INFO">VALUE: [2.77800000000189e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.5979999999994896e-06, 2.597000000000016e-06, 2.5839999999999197e-06, 2.5979999999994896e-06, 2.597000000000016e-06, 2.5969999999965465e-06, 2.6110000000030553e-06, 2.6389999999987257e-06, 2.583000000000446e-06, 2.6250000000026252e-06, 2.569000000000876e-06, 2.597000000000016e-06, 2.5979999999994896e-06, 2.5979999999994896e-06, 2.5979999999994896e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.6249999999991558e-06, 2.610999999999586e-06, 2.612000000002529e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.6250000000026252e-06, 2.5829999999969766e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.5979999999994896e-06, 2.5979999999994896e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.5839999999999197e-06, 2.610999999999586e-06, 2.5979999999994896e-06, 2.6249999999991558e-06, 2.597000000000016e-06, 2.5979999999994896e-06, 2.569000000000876e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.6110000000030553e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.5839999999999197e-06, 2.612000000002529e-06]</msg>
<status status="PASS" starttime="20201115 22:02:53.707" endtime="20201115 22:02:53.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.703" endtime="20201115 22:02:53.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.712" endtime="20201115 22:02:53.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:53.715" endtime="20201115 22:02:53.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.714" endtime="20201115 22:02:53.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.710" endtime="20201115 22:02:53.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.346" endtime="20201115 22:02:53.736"></status>
</kw>
<msg timestamp="20201115 22:02:53.736" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.745" endtime="20201115 22:02:53.760"></status>
</kw>
<msg timestamp="20201115 22:02:53.761" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.743" endtime="20201115 22:02:53.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.763" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.762" endtime="20201115 22:02:53.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.764" endtime="20201115 22:02:53.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.741" endtime="20201115 22:02:53.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.739" endtime="20201115 22:02:53.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.773" endtime="20201115 22:02:54.060"></status>
</kw>
<msg timestamp="20201115 22:02:54.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022505556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022508375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.772" endtime="20201115 22:02:54.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022505556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022508375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.064" endtime="20201115 22:02:54.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.072" endtime="20201115 22:02:54.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.769" endtime="20201115 22:02:54.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.767" endtime="20201115 22:02:54.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.079" level="INFO">${RESULT} = [{'time': 0.022508375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.819000000001126e-06, 'source_diff': 2.819000000001126e-06}, {'time': 0.022590583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:54.075" endtime="20201115 22:02:54.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.092" level="INFO">${OVERHEAD} = {'time': [0.022508375, 0.022590583, 0.022674444, 0.022755472, 0.022842778, 0.022924486, 0.023007389, 0.023095306, 0.023183278, 0.023264847, 0.023348958, 0.023432667, 0.023516931, 0.023604653, 0.023684...</msg>
<status status="PASS" starttime="20201115 22:02:54.080" endtime="20201115 22:02:54.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.097" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:02:54.096" endtime="20201115 22:02:54.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.099" level="INFO">VALUE: [2.819000000001126e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.6389999999987257e-06, 2.597000000000016e-06, 2.6110000000030553e-06, 2.610999999999586e-06, 2.5979999999994896e-06, 2.598000000002959e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.54200000000121e-06, 2.5839999999999197e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.5979999999994896e-06, 2.6529999999982956e-06, 2.598000000002959e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.5829999999969766e-06, 2.6249999999991558e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.6389999999987257e-06, 2.6389999999987257e-06, 2.6389999999987257e-06, 2.5839999999999197e-06, 2.6389999999987257e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.52800000000164e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.5979999999994896e-06, 2.597000000000016e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.098" endtime="20201115 22:02:54.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.093" endtime="20201115 22:02:54.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.102" endtime="20201115 22:02:54.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.106" endtime="20201115 22:02:54.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.104" endtime="20201115 22:02:54.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.101" endtime="20201115 22:02:54.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.737" endtime="20201115 22:02:54.126"></status>
</kw>
<msg timestamp="20201115 22:02:54.127" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.135" endtime="20201115 22:02:54.150"></status>
</kw>
<msg timestamp="20201115 22:02:54.150" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.134" endtime="20201115 22:02:54.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.153" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.151" endtime="20201115 22:02:54.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.154" endtime="20201115 22:02:54.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.131" endtime="20201115 22:02:54.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.129" endtime="20201115 22:02:54.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.163" endtime="20201115 22:02:54.449"></status>
</kw>
<msg timestamp="20201115 22:02:54.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.161" endtime="20201115 22:02:54.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.453" endtime="20201115 22:02:54.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.466" endtime="20201115 22:02:54.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.159" endtime="20201115 22:02:54.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.157" endtime="20201115 22:02:54.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.473" level="INFO">${RESULT} = [{'time': 0.022287472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.022371639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:54.469" endtime="20201115 22:02:54.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.486" level="INFO">${OVERHEAD} = {'time': [0.022287472, 0.022371639, 0.022451972, 0.02254025, 0.022620458, 0.022706208, 0.022790597, 0.022876444, 0.022964056, 0.023050986, 0.023136014, 0.023220556, 0.023305333, 0.023392806, 0.0234771...</msg>
<status status="PASS" starttime="20201115 22:02:54.474" endtime="20201115 22:02:54.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.490" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:02:54.489" endtime="20201115 22:02:54.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.493" level="INFO">VALUE: [2.915999999998642e-06, 2.6389999999987257e-06, 2.597000000000016e-06, 2.55600000000078e-06, 2.597000000000016e-06, 2.5829999999969766e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.5979999999994896e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.6119999999990595e-06, 2.583000000000446e-06, 2.5419999999977405e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.5979999999994896e-06, 2.5559999999973104e-06, 2.569000000000876e-06, 2.5270000000021664e-06, 2.5839999999999197e-06, 2.598000000002959e-06, 2.597000000000016e-06, 2.5700000000003498e-06, 2.55600000000078e-06, 2.583000000000446e-06, 2.51400000000207e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.5700000000003498e-06, 2.583000000000446e-06, 2.6249999999991558e-06, 2.583000000000446e-06, 2.5979999999994896e-06, 2.5979999999994896e-06, 2.5979999999994896e-06, 2.653000000001765e-06, 2.6250000000026252e-06, 2.6250000000026252e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.5829999999969766e-06, 2.597000000000016e-06, 2.569000000000876e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.491" endtime="20201115 22:02:54.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.487" endtime="20201115 22:02:54.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.496" endtime="20201115 22:02:54.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.499" endtime="20201115 22:02:54.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.498" endtime="20201115 22:02:54.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.494" endtime="20201115 22:02:54.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.127" endtime="20201115 22:02:54.520"></status>
</kw>
<msg timestamp="20201115 22:02:54.520" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.529" endtime="20201115 22:02:54.543"></status>
</kw>
<msg timestamp="20201115 22:02:54.543" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.527" endtime="20201115 22:02:54.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.546" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.544" endtime="20201115 22:02:54.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.547" endtime="20201115 22:02:54.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.525" endtime="20201115 22:02:54.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.523" endtime="20201115 22:02:54.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.555" endtime="20201115 22:02:54.843"></status>
</kw>
<msg timestamp="20201115 22:02:54.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022248458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.554" endtime="20201115 22:02:54.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022248458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.848" endtime="20201115 22:02:54.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.856" endtime="20201115 22:02:54.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.552" endtime="20201115 22:02:54.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.550" endtime="20201115 22:02:54.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.863" level="INFO">${RESULT} = [{'time': 0.022251292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8340000000001697e-06, 'source_diff': 2.8340000000001697e-06}, {'time': 0.022334833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:54.859" endtime="20201115 22:02:54.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.876" level="INFO">${OVERHEAD} = {'time': [0.022251292, 0.022334833, 0.022418847, 0.022505083, 0.022588264, 0.022676542, 0.022757306, 0.022839278, 0.022919764, 0.023001069, 0.023085597, 0.023169972, 0.023256236, 0.023343431, 0.023431...</msg>
<status status="PASS" starttime="20201115 22:02:54.863" endtime="20201115 22:02:54.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.880" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:02:54.879" endtime="20201115 22:02:54.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.883" level="INFO">VALUE: [2.8340000000001697e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.5979999999994896e-06, 2.5700000000003498e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.5700000000003498e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.569000000000876e-06, 2.6249999999991558e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.610999999999586e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.610999999999586e-06, 2.51400000000207e-06, 2.597000000000016e-06, 2.55600000000078e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.598000000002959e-06, 2.5839999999999197e-06, 2.5829999999969766e-06, 2.5979999999994896e-06, 2.583000000000446e-06, 2.6110000000030553e-06, 2.597000000000016e-06, 2.5700000000003498e-06, 2.597000000000016e-06, 2.5419999999977405e-06, 2.597000000000016e-06, 2.610999999999586e-06, 2.583000000000446e-06, 2.584000000003389e-06, 2.597000000000016e-06, 2.5979999999994896e-06, 2.597000000000016e-06, 2.6249999999991558e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.881" endtime="20201115 22:02:54.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.876" endtime="20201115 22:02:54.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.886" endtime="20201115 22:02:54.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.889" endtime="20201115 22:02:54.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.888" endtime="20201115 22:02:54.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.884" endtime="20201115 22:02:54.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.521" endtime="20201115 22:02:54.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.952" endtime="20201115 22:02:54.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.951" endtime="20201115 22:02:54.910"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.912" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.921" endtime="20201115 22:02:54.936"></status>
</kw>
<msg timestamp="20201115 22:02:54.936" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.919" endtime="20201115 22:02:54.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.939" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.937" endtime="20201115 22:02:54.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.940" endtime="20201115 22:02:54.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.917" endtime="20201115 22:02:54.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.915" endtime="20201115 22:02:54.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.949" endtime="20201115 22:02:55.236"></status>
</kw>
<msg timestamp="20201115 22:02:55.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024546236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024549181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.948" endtime="20201115 22:02:55.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024546236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024549181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.240" endtime="20201115 22:02:55.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.248" endtime="20201115 22:02:55.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.945" endtime="20201115 22:02:55.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.943" endtime="20201115 22:02:55.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:55.255" level="INFO">${RESULT} = [{'time': 0.024549181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.945000000000725e-06, 'source_diff': 2.945000000000725e-06}, {'time': 0.024641792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:55.251" endtime="20201115 22:02:55.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:55.268" level="INFO">${OVERHEAD} = {'time': [0.024549181, 0.024641792, 0.024735486, 0.024825292, 0.024910958, 0.025001306, 0.025090875, 0.025179597, 0.025272236, 0.025360847, 0.025447028, 0.025538083, 0.025630028, 0.025721097, 0.025811...</msg>
<status status="PASS" starttime="20201115 22:02:55.256" endtime="20201115 22:02:55.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.272" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:02:55.271" endtime="20201115 22:02:55.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.275" level="INFO">VALUE: [2.945000000000725e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.7090000000000447e-06, 2.722000000000141e-06, 2.7229999999996146e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.708000000000571e-06, 2.722000000000141e-06, 2.7090000000000447e-06, 2.7639999999988507e-06, 2.722000000000141e-06, 2.749999999999281e-06, 2.749999999999281e-06, 2.694000000001001e-06, 2.7229999999996146e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.722000000000141e-06, 2.7229999999996146e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.7500000000027502e-06, 2.79200000000146e-06, 2.722000000000141e-06, 2.7779999999984206e-06, 2.7360000000031803e-06, 2.708000000000571e-06, 2.735999999999711e-06, 2.7090000000000447e-06, 2.708000000000571e-06, 2.7229999999996146e-06, 2.6529999999982956e-06, 2.735999999999711e-06, 2.7639999999988507e-06, 2.708000000000571e-06, 2.7090000000000447e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.722000000000141e-06, 2.7229999999996146e-06, 2.735999999999711e-06, 2.79200000000146e-06, 2.708000000000571e-06, 2.8059999999975604e-06, 2.7090000000000447e-06, 2.7079999999971016e-06]</msg>
<status status="PASS" starttime="20201115 22:02:55.273" endtime="20201115 22:02:55.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.269" endtime="20201115 22:02:55.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.278" endtime="20201115 22:02:55.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.281" endtime="20201115 22:02:55.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.280" endtime="20201115 22:02:55.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.276" endtime="20201115 22:02:55.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.913" endtime="20201115 22:02:55.302"></status>
</kw>
<msg timestamp="20201115 22:02:55.302" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.311" endtime="20201115 22:02:55.325"></status>
</kw>
<msg timestamp="20201115 22:02:55.325" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.309" endtime="20201115 22:02:55.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.328" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.326" endtime="20201115 22:02:55.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.329" endtime="20201115 22:02:55.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.307" endtime="20201115 22:02:55.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.304" endtime="20201115 22:02:55.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.338" endtime="20201115 22:02:55.624"></status>
</kw>
<msg timestamp="20201115 22:02:55.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022194681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.336" endtime="20201115 22:02:55.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022194681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.629" endtime="20201115 22:02:55.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.637" endtime="20201115 22:02:55.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.334" endtime="20201115 22:02:55.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.332" endtime="20201115 22:02:55.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:55.644" level="INFO">${RESULT} = [{'time': 0.022194681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9590000000002947e-06, 'source_diff': 2.9590000000002947e-06}, {'time': 0.022284222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:55.640" endtime="20201115 22:02:55.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:55.657" level="INFO">${OVERHEAD} = {'time': [0.022194681, 0.022284222, 0.022369847, 0.022458722, 0.022546292, 0.022637944, 0.022729722, 0.022815861, 0.022906056, 0.022993986, 0.023085319, 0.023174125, 0.023261931, 0.023350806, 0.023440...</msg>
<status status="PASS" starttime="20201115 22:02:55.644" endtime="20201115 22:02:55.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.661" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:02:55.660" endtime="20201115 22:02:55.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.664" level="INFO">VALUE: [2.9590000000002947e-06, 2.7639999999988507e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.7090000000000447e-06, 2.722000000000141e-06, 2.7910000000019863e-06, 2.749999999999281e-06, 2.695000000000475e-06, 2.735999999999711e-06, 2.762999999999377e-06, 2.722000000000141e-06, 2.7229999999996146e-06, 2.723000000003084e-06, 2.735999999999711e-06, 2.7229999999996146e-06, 2.722000000000141e-06, 2.7500000000027502e-06, 2.76400000000232e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.7229999999996146e-06, 2.708000000000571e-06, 2.749999999999281e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.695000000000475e-06, 2.722000000000141e-06, 2.7500000000027502e-06, 2.7090000000000447e-06, 2.7639999999988507e-06, 2.722000000000141e-06, 2.7639999999988507e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.681000000000905e-06, 2.7229999999996146e-06, 2.7079999999971016e-06, 2.7630000000028465e-06, 2.735999999999711e-06, 2.7919999999979905e-06, 2.735999999999711e-06, 2.7229999999996146e-06, 2.7639999999988507e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.7779999999984206e-06, 2.722000000000141e-06]</msg>
<status status="PASS" starttime="20201115 22:02:55.662" endtime="20201115 22:02:55.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.658" endtime="20201115 22:02:55.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.667" endtime="20201115 22:02:55.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.670" endtime="20201115 22:02:55.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.669" endtime="20201115 22:02:55.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.665" endtime="20201115 22:02:55.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.302" endtime="20201115 22:02:55.691"></status>
</kw>
<msg timestamp="20201115 22:02:55.691" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.700" endtime="20201115 22:02:55.715"></status>
</kw>
<msg timestamp="20201115 22:02:55.716" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.699" endtime="20201115 22:02:55.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.718" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.717" endtime="20201115 22:02:55.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.719" endtime="20201115 22:02:55.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.696" endtime="20201115 22:02:55.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.693" endtime="20201115 22:02:55.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.728" endtime="20201115 22:02:56.015"></status>
</kw>
<msg timestamp="20201115 22:02:56.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022841833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022844736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.726" endtime="20201115 22:02:56.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022841833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022844736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.019" endtime="20201115 22:02:56.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.027" endtime="20201115 22:02:56.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.724" endtime="20201115 22:02:56.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.722" endtime="20201115 22:02:56.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.034" level="INFO">${RESULT} = [{'time': 0.022844736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.022931472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:56.030" endtime="20201115 22:02:56.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.047" level="INFO">${OVERHEAD} = {'time': [0.022844736, 0.022931472, 0.023019347, 0.023109708, 0.023201278, 0.023292847, 0.023378361, 0.023470597, 0.023557181, 0.023650889, 0.023740722, 0.023832542, 0.023921486, 0.024010569, 0.024103...</msg>
<status status="PASS" starttime="20201115 22:02:56.035" endtime="20201115 22:02:56.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.051" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:02:56.050" endtime="20201115 22:02:56.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.054" level="INFO">VALUE: [2.903000000002015e-06, 2.77800000000189e-06, 2.708000000000571e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.7090000000000447e-06, 2.722000000000141e-06, 2.7079999999971016e-06, 2.723000000003084e-06, 2.7779999999984206e-06, 2.735999999999711e-06, 2.708000000000571e-06, 2.6800000000014312e-06, 2.695000000000475e-06, 2.708000000000571e-06, 2.7079999999971016e-06, 2.722000000000141e-06, 2.667000000001335e-06, 2.708000000000571e-06, 2.7090000000000447e-06, 2.735999999999711e-06, 2.667000000001335e-06, 2.708000000000571e-06, 2.722000000000141e-06, 2.7090000000000447e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.7090000000000447e-06, 2.7219999999966715e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.7229999999996146e-06, 2.722000000000141e-06, 2.7229999999996146e-06, 2.7090000000000447e-06, 2.722000000000141e-06, 2.681000000000905e-06, 2.7360000000031803e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.735999999999711e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.052" endtime="20201115 22:02:56.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.048" endtime="20201115 22:02:56.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.057" endtime="20201115 22:02:56.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.060" endtime="20201115 22:02:56.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.059" endtime="20201115 22:02:56.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.055" endtime="20201115 22:02:56.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.691" endtime="20201115 22:02:56.081"></status>
</kw>
<msg timestamp="20201115 22:02:56.082" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.090" endtime="20201115 22:02:56.105"></status>
</kw>
<msg timestamp="20201115 22:02:56.106" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.089" endtime="20201115 22:02:56.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.108" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.107" endtime="20201115 22:02:56.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.109" endtime="20201115 22:02:56.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.086" endtime="20201115 22:02:56.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.084" endtime="20201115 22:02:56.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.118" endtime="20201115 22:02:56.407"></status>
</kw>
<msg timestamp="20201115 22:02:56.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022519778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.116" endtime="20201115 22:02:56.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022519778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.411" endtime="20201115 22:02:56.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.419" endtime="20201115 22:02:56.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.114" endtime="20201115 22:02:56.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.112" endtime="20201115 22:02:56.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.426" level="INFO">${RESULT} = [{'time': 0.022522736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.958000000000821e-06, 'source_diff': 2.958000000000821e-06}, {'time': 0.022613167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:56.423" endtime="20201115 22:02:56.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.439" level="INFO">${OVERHEAD} = {'time': [0.022522736, 0.022613167, 0.022700167, 0.022793458, 0.022882944, 0.022969917, 0.023063708, 0.023152236, 0.023244, 0.023333, 0.023423889, 0.023509681, 0.023600292, 0.023693056, 0.023783972, 0...</msg>
<status status="PASS" starttime="20201115 22:02:56.427" endtime="20201115 22:02:56.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.443" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:02:56.442" endtime="20201115 22:02:56.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.446" level="INFO">VALUE: [2.958000000000821e-06, 2.7229999999996146e-06, 2.735999999999711e-06, 2.679999999997962e-06, 2.804999999998087e-06, 2.7639999999988507e-06, 2.735999999999711e-06, 2.7919999999979905e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.7229999999996146e-06, 2.6949999999970053e-06, 2.7229999999996146e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.6529999999982956e-06, 2.708000000000571e-06, 2.722000000000141e-06, 2.708000000000571e-06, 2.735999999999711e-06, 2.694000000001001e-06, 2.735999999999711e-06, 2.7500000000027502e-06, 2.6809999999974354e-06, 2.7919999999979905e-06, 2.735999999999711e-06, 2.7079999999971016e-06, 2.695000000000475e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.7779999999984206e-06, 2.7229999999996146e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.637999999999252e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.79200000000146e-06, 2.708000000000571e-06, 2.735999999999711e-06, 2.7090000000000447e-06, 2.735999999999711e-06, 2.7229999999996146e-06, 2.6809999999974354e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.76400000000232e-06, 2.76400000000232e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.444" endtime="20201115 22:02:56.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.440" endtime="20201115 22:02:56.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.449" endtime="20201115 22:02:56.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.453" endtime="20201115 22:02:56.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.451" endtime="20201115 22:02:56.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.448" endtime="20201115 22:02:56.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.082" endtime="20201115 22:02:56.473"></status>
</kw>
<msg timestamp="20201115 22:02:56.474" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.482" endtime="20201115 22:02:56.497"></status>
</kw>
<msg timestamp="20201115 22:02:56.498" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.481" endtime="20201115 22:02:56.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.500" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.499" endtime="20201115 22:02:56.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.501" endtime="20201115 22:02:56.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.478" endtime="20201115 22:02:56.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.476" endtime="20201115 22:02:56.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.510" endtime="20201115 22:02:56.796"></status>
</kw>
<msg timestamp="20201115 22:02:56.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.508" endtime="20201115 22:02:56.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.800" endtime="20201115 22:02:56.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.808" endtime="20201115 22:02:56.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.506" endtime="20201115 22:02:56.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.504" endtime="20201115 22:02:56.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.815" level="INFO">${RESULT} = [{'time': 0.022332486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.022421208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:56.812" endtime="20201115 22:02:56.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.828" level="INFO">${OVERHEAD} = {'time': [0.022332486, 0.022421208, 0.022508597, 0.022599931, 0.022687681, 0.022773458, 0.02286275, 0.022950819, 0.02304425, 0.023130625, 0.023218097, 0.023306569, 0.023399403, 0.023489264, 0.02357526...</msg>
<status status="PASS" starttime="20201115 22:02:56.816" endtime="20201115 22:02:56.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.833" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:02:56.832" endtime="20201115 22:02:56.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.835" level="INFO">VALUE: [2.9169999999981155e-06, 2.722000000000141e-06, 2.7360000000031803e-06, 2.749999999999281e-06, 2.737000000002654e-06, 2.694000000001001e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.7079999999971016e-06, 2.7779999999984206e-06, 2.722000000000141e-06, 2.6939999999975317e-06, 2.7639999999988507e-06, 2.681000000000905e-06, 2.8059999999975604e-06, 2.735999999999711e-06, 2.7219999999966715e-06, 2.722000000000141e-06, 2.7229999999996146e-06, 2.7639999999988507e-06, 2.77800000000189e-06, 2.651999999998822e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.708000000000571e-06, 2.708000000000571e-06, 2.722000000000141e-06, 2.762999999999377e-06, 2.708000000000571e-06, 2.722000000000141e-06, 2.7229999999996146e-06, 2.762999999999377e-06, 2.722000000000141e-06, 2.7229999999996146e-06, 2.7079999999971016e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.7360000000031803e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.76400000000232e-06, 2.708000000000571e-06, 2.735999999999711e-06, 2.7219999999966715e-06, 2.749999999999281e-06, 2.77800000000189e-06, 2.7090000000000447e-06, 2.749999999999281e-06, 2.7229999999996146e-06, 2.722000000000141e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.834" endtime="20201115 22:02:56.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.829" endtime="20201115 22:02:56.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.839" endtime="20201115 22:02:56.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.842" endtime="20201115 22:02:56.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.841" endtime="20201115 22:02:56.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.837" endtime="20201115 22:02:56.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.474" endtime="20201115 22:02:56.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.911" endtime="20201115 22:02:56.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.910" endtime="20201115 22:02:56.863"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.865" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.874" endtime="20201115 22:02:56.890"></status>
</kw>
<msg timestamp="20201115 22:02:56.890" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.872" endtime="20201115 22:02:56.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.892" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.891" endtime="20201115 22:02:56.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.893" endtime="20201115 22:02:56.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.870" endtime="20201115 22:02:56.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.868" endtime="20201115 22:02:56.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.902" endtime="20201115 22:02:57.189"></status>
</kw>
<msg timestamp="20201115 22:02:57.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024735639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024738681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.901" endtime="20201115 22:02:57.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024735639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024738681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.193" endtime="20201115 22:02:57.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.202" endtime="20201115 22:02:57.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.898" endtime="20201115 22:02:57.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.897" endtime="20201115 22:02:57.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.208" level="INFO">${RESULT} = [{'time': 0.024738681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0419999999982406e-06, 'source_diff': 3.0419999999982406e-06}, {'time': 0.02483125, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:57.205" endtime="20201115 22:02:57.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:57.221" level="INFO">${OVERHEAD} = {'time': [0.024738681, 0.02483125, 0.024924042, 0.025021597, 0.025121194, 0.025219431, 0.025317931, 0.025416181, 0.025515222, 0.025614667, 0.025713181, 0.025812361, 0.025911694, 0.026004028, 0.0261033...</msg>
<status status="PASS" starttime="20201115 22:02:57.209" endtime="20201115 22:02:57.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.226" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:02:57.225" endtime="20201115 22:02:57.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.229" level="INFO">VALUE: [3.0419999999982406e-06, 2.860999999999836e-06, 2.917000000001585e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.8619999999993095e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.8750000000028753e-06, 2.874999999999406e-06, 2.887999999999502e-06, 2.874999999999406e-06, 2.917000000001585e-06, 2.8619999999993095e-06, 2.8610000000033053e-06, 2.903000000002015e-06, 2.80600000000103e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.8329999999972266e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.8619999999993095e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.8329999999972266e-06, 2.8750000000028753e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.8479999999997396e-06, 2.874999999999406e-06, 2.819000000001126e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.917000000001585e-06, 2.874999999999406e-06, 2.8610000000033053e-06, 2.8889999999989757e-06, 2.8059999999975604e-06]</msg>
<status status="PASS" starttime="20201115 22:02:57.227" endtime="20201115 22:02:57.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.222" endtime="20201115 22:02:57.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.232" endtime="20201115 22:02:57.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.235" endtime="20201115 22:02:57.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.234" endtime="20201115 22:02:57.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.230" endtime="20201115 22:02:57.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.866" endtime="20201115 22:02:57.256"></status>
</kw>
<msg timestamp="20201115 22:02:57.256" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.265" endtime="20201115 22:02:57.281"></status>
</kw>
<msg timestamp="20201115 22:02:57.281" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.263" endtime="20201115 22:02:57.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.284" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.282" endtime="20201115 22:02:57.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.285" endtime="20201115 22:02:57.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.261" endtime="20201115 22:02:57.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.259" endtime="20201115 22:02:57.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.294" endtime="20201115 22:02:57.580"></status>
</kw>
<msg timestamp="20201115 22:02:57.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.292" endtime="20201115 22:02:57.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.584" endtime="20201115 22:02:57.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.593" endtime="20201115 22:02:57.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.290" endtime="20201115 22:02:57.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.288" endtime="20201115 22:02:57.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.599" level="INFO">${RESULT} = [{'time': 0.022547889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.07000000000085e-06, 'source_diff': 3.07000000000085e-06}, {'time': 0.022642083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:57.596" endtime="20201115 22:02:57.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:57.612" level="INFO">${OVERHEAD} = {'time': [0.022547889, 0.022642083, 0.022736611, 0.022828625, 0.022924042, 0.023023097, 0.023119472, 0.023216097, 0.023315139, 0.023407208, 0.023501958, 0.023594556, 0.023687833, 0.023780722, 0.023875...</msg>
<status status="PASS" starttime="20201115 22:02:57.600" endtime="20201115 22:02:57.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.617" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:02:57.616" endtime="20201115 22:02:57.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.620" level="INFO">VALUE: [3.07000000000085e-06, 2.8889999999989757e-06, 2.917000000001585e-06, 2.8750000000028753e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8619999999993095e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.8750000000028753e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.901999999999072e-06, 2.8750000000028753e-06, 2.8610000000033053e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.8750000000028753e-06, 2.8750000000028753e-06, 2.833000000000696e-06, 2.833000000000696e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.833000000000696e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.903000000002015e-06, 2.8750000000028753e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.8199999999971304e-06, 2.860999999999836e-06]</msg>
<status status="PASS" starttime="20201115 22:02:57.618" endtime="20201115 22:02:57.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.614" endtime="20201115 22:02:57.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.623" endtime="20201115 22:02:57.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.626" endtime="20201115 22:02:57.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.625" endtime="20201115 22:02:57.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.621" endtime="20201115 22:02:57.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.257" endtime="20201115 22:02:57.647"></status>
</kw>
<msg timestamp="20201115 22:02:57.647" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.656" endtime="20201115 22:02:57.671"></status>
</kw>
<msg timestamp="20201115 22:02:57.671" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.654" endtime="20201115 22:02:57.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.674" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.672" endtime="20201115 22:02:57.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.675" endtime="20201115 22:02:57.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.652" endtime="20201115 22:02:57.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.650" endtime="20201115 22:02:57.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.684" endtime="20201115 22:02:57.971"></status>
</kw>
<msg timestamp="20201115 22:02:57.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022613667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.682" endtime="20201115 22:02:57.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022613667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.975" endtime="20201115 22:02:57.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.983" endtime="20201115 22:02:57.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.680" endtime="20201115 22:02:57.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.678" endtime="20201115 22:02:57.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.990" level="INFO">${RESULT} = [{'time': 0.022616833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.165999999998892e-06, 'source_diff': 3.165999999998892e-06}, {'time': 0.022712458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:57.986" endtime="20201115 22:02:57.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.003" level="INFO">${OVERHEAD} = {'time': [0.022616833, 0.022712458, 0.022808403, 0.022901333, 0.022995514, 0.023089903, 0.023186375, 0.023278028, 0.023374431, 0.023471458, 0.023571167, 0.023667014, 0.023762153, 0.023854903, 0.023949...</msg>
<status status="PASS" starttime="20201115 22:02:57.991" endtime="20201115 22:02:58.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.008" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:02:58.007" endtime="20201115 22:02:58.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.010" level="INFO">VALUE: [3.165999999998892e-06, 2.889000000002445e-06, 2.860999999999836e-06, 2.915999999998642e-06, 2.8610000000033053e-06, 2.9309999999976855e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.903000000002015e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.860999999999836e-06, 2.80600000000103e-06, 2.9300000000016813e-06, 2.8750000000028753e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.833000000000696e-06, 2.860999999999836e-06, 2.9029999999985456e-06, 2.887999999999502e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.915999999998642e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.9300000000016813e-06, 2.847000000000266e-06, 2.862000000002779e-06, 2.804999999998087e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.8200000000006e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.860999999999836e-06]</msg>
<status status="PASS" starttime="20201115 22:02:58.009" endtime="20201115 22:02:58.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.004" endtime="20201115 22:02:58.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.013" endtime="20201115 22:02:58.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.017" endtime="20201115 22:02:58.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.015" endtime="20201115 22:02:58.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.012" endtime="20201115 22:02:58.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.648" endtime="20201115 22:02:58.038"></status>
</kw>
<msg timestamp="20201115 22:02:58.038" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.046" endtime="20201115 22:02:58.062"></status>
</kw>
<msg timestamp="20201115 22:02:58.062" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.045" endtime="20201115 22:02:58.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.065" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.063" endtime="20201115 22:02:58.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.066" endtime="20201115 22:02:58.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.042" endtime="20201115 22:02:58.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.040" endtime="20201115 22:02:58.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.075" endtime="20201115 22:02:58.362"></status>
</kw>
<msg timestamp="20201115 22:02:58.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022345889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:58.073" endtime="20201115 22:02:58.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022345889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:58.366" endtime="20201115 22:02:58.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.374" endtime="20201115 22:02:58.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.071" endtime="20201115 22:02:58.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.069" endtime="20201115 22:02:58.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.381" level="INFO">${RESULT} = [{'time': 0.022349, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.022445194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:02:58.378" endtime="20201115 22:02:58.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.394" level="INFO">${OVERHEAD} = {'time': [0.022349, 0.022445194, 0.022538347, 0.022637389, 0.022730403, 0.022825028, 0.022920708, 0.023019889, 0.023117278, 0.023210208, 0.023307792, 0.023402, 0.023498097, 0.023595542, 0.02369325, 0....</msg>
<status status="PASS" starttime="20201115 22:02:58.382" endtime="20201115 22:02:58.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.399" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:02:58.398" endtime="20201115 22:02:58.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.401" level="INFO">VALUE: [3.111000000000086e-06, 2.8610000000033053e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.8750000000028753e-06, 2.8750000000028753e-06, 2.9590000000002947e-06, 2.860999999999836e-06, 2.889000000002445e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.79200000000146e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.9169999999981155e-06, 2.9300000000016813e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.929999999998212e-06, 2.874999999999406e-06, 2.915999999998642e-06, 2.860999999999836e-06, 2.8189999999976567e-06, 2.874999999999406e-06, 2.833000000000696e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.917000000001585e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.915999999998642e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.833000000000696e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.8750000000028753e-06, 2.8050000000015562e-06]</msg>
<status status="PASS" starttime="20201115 22:02:58.400" endtime="20201115 22:02:58.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.395" endtime="20201115 22:02:58.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.404" endtime="20201115 22:02:58.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.408" endtime="20201115 22:02:58.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.406" endtime="20201115 22:02:58.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.403" endtime="20201115 22:02:58.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.038" endtime="20201115 22:02:58.429"></status>
</kw>
<msg timestamp="20201115 22:02:58.429" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.439" endtime="20201115 22:02:58.456"></status>
</kw>
<msg timestamp="20201115 22:02:58.456" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.437" endtime="20201115 22:02:58.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.459" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.457" endtime="20201115 22:02:58.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.460" endtime="20201115 22:02:58.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.434" endtime="20201115 22:02:58.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.432" endtime="20201115 22:02:58.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.469" endtime="20201115 22:02:58.754"></status>
</kw>
<msg timestamp="20201115 22:02:58.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023726514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023729569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.467" endtime="20201115 22:02:58.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023726514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023729569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.758" endtime="20201115 22:02:58.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.767" endtime="20201115 22:02:58.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.465" endtime="20201115 22:02:58.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.463" endtime="20201115 22:02:58.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.773" level="INFO">${RESULT} = [{'time': 0.023729569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.054999999998337e-06, 'source_diff': 3.054999999998337e-06}, {'time': 0.023823069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:58.770" endtime="20201115 22:02:58.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.786" level="INFO">${OVERHEAD} = {'time': [0.023729569, 0.023823069, 0.023922042, 0.024014333, 0.024108681, 0.024206528, 0.0243045, 0.024401667, 0.024496431, 0.024593597, 0.024687569, 0.024780417, 0.024873903, 0.024968597, 0.02506536...</msg>
<status status="PASS" starttime="20201115 22:02:58.774" endtime="20201115 22:02:58.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.791" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:02:58.790" endtime="20201115 22:02:58.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.793" level="INFO">VALUE: [3.054999999998337e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.8619999999993095e-06, 2.8750000000028753e-06, 2.847000000000266e-06, 2.8479999999997396e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.887999999999502e-06, 2.874999999999406e-06, 2.945000000000725e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.833000000000696e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.945000000000725e-06, 2.804999999998087e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.833000000000696e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.874999999999406e-06, 2.917000000001585e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8619999999993095e-06, 2.8610000000033053e-06, 2.833000000000696e-06, 2.860999999999836e-06, 2.8340000000001697e-06]</msg>
<status status="PASS" starttime="20201115 22:02:58.792" endtime="20201115 22:02:58.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.787" endtime="20201115 22:02:58.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.796" endtime="20201115 22:02:58.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.800" endtime="20201115 22:02:58.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.798" endtime="20201115 22:02:58.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.795" endtime="20201115 22:02:58.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.430" endtime="20201115 22:02:58.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.864" endtime="20201115 22:02:58.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.863" endtime="20201115 22:02:58.821"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.823" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.832" endtime="20201115 22:02:58.847"></status>
</kw>
<msg timestamp="20201115 22:02:58.848" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.830" endtime="20201115 22:02:58.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.850" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.849" endtime="20201115 22:02:58.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.851" endtime="20201115 22:02:58.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.828" endtime="20201115 22:02:58.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.826" endtime="20201115 22:02:58.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.861" endtime="20201115 22:02:59.148"></status>
</kw>
<msg timestamp="20201115 22:02:59.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024509486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024512694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.859" endtime="20201115 22:02:59.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024509486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024512694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.152" endtime="20201115 22:02:59.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.160" endtime="20201115 22:02:59.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.857" endtime="20201115 22:02:59.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.855" endtime="20201115 22:02:59.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.167" level="INFO">${RESULT} = [{'time': 0.024512694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.208000000001071e-06, 'source_diff': 3.208000000001071e-06}, {'time': 0.024611014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:59.164" endtime="20201115 22:02:59.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.180" level="INFO">${OVERHEAD} = {'time': [0.024512694, 0.024611014, 0.024713653, 0.0248175, 0.024923042, 0.025028278, 0.025130236, 0.025230361, 0.025330611, 0.025431986, 0.025532069, 0.025633903, 0.025736944, 0.025840556, 0.02594183...</msg>
<status status="PASS" starttime="20201115 22:02:59.168" endtime="20201115 22:02:59.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.185" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:02:59.184" endtime="20201115 22:02:59.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.187" level="INFO">VALUE: [3.208000000001071e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.0979999999999897e-06, 2.985999999999961e-06, 2.972000000000391e-06, 3.0419999999982406e-06, 3.054999999998337e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.972000000000391e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.01400000000257e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.985999999999961e-06, 2.999999999999531e-06, 3.01400000000257e-06, 3.0139999999991007e-06, 2.985999999999961e-06, 2.958000000000821e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.985999999999961e-06, 2.9449999999972554e-06, 2.9719999999969215e-06, 2.999999999999531e-06, 2.985999999999961e-06, 3.0139999999991007e-06, 3.0279999999986706e-06, 3.097000000000516e-06, 3.0279999999986706e-06, 2.985999999999961e-06, 2.985999999999961e-06, 3.0139999999991007e-06, 3.0000000000030003e-06, 2.9449999999972554e-06, 3.012999999999627e-06, 3.02800000000214e-06, 3.01400000000257e-06, 3.012999999999627e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 2.999999999999531e-06]</msg>
<status status="PASS" starttime="20201115 22:02:59.186" endtime="20201115 22:02:59.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.181" endtime="20201115 22:02:59.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.190" endtime="20201115 22:02:59.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.194" endtime="20201115 22:02:59.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.192" endtime="20201115 22:02:59.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.189" endtime="20201115 22:02:59.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.824" endtime="20201115 22:02:59.214"></status>
</kw>
<msg timestamp="20201115 22:02:59.214" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.223" endtime="20201115 22:02:59.239"></status>
</kw>
<msg timestamp="20201115 22:02:59.239" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.222" endtime="20201115 22:02:59.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.242" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.241" endtime="20201115 22:02:59.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.243" endtime="20201115 22:02:59.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.219" endtime="20201115 22:02:59.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.217" endtime="20201115 22:02:59.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.252" endtime="20201115 22:02:59.540"></status>
</kw>
<msg timestamp="20201115 22:02:59.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022396153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.251" endtime="20201115 22:02:59.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022396153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.544" endtime="20201115 22:02:59.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.552" endtime="20201115 22:02:59.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.248" endtime="20201115 22:02:59.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.247" endtime="20201115 22:02:59.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.559" level="INFO">${RESULT} = [{'time': 0.022396153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.022495667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:59.556" endtime="20201115 22:02:59.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.572" level="INFO">${OVERHEAD} = {'time': [0.022396153, 0.022495667, 0.022594556, 0.022695486, 0.022799694, 0.022899778, 0.022997444, 0.023094986, 0.023194556, 0.023299208, 0.023403181, 0.023502333, 0.023601222, 0.023705597, 0.023806...</msg>
<status status="PASS" starttime="20201115 22:02:59.560" endtime="20201115 22:02:59.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.577" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:02:59.576" endtime="20201115 22:02:59.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.579" level="INFO">VALUE: [3.236000000000211e-06, 2.985999999999961e-06, 2.999999999999531e-06, 3.04200000000171e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.0000000000030003e-06, 2.945000000000725e-06, 3.026999999999197e-06, 2.9309999999976855e-06, 2.999999999999531e-06, 3.01400000000257e-06, 2.999999999999531e-06, 3.0840000000004197e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.985999999999961e-06, 2.985999999999961e-06, 2.9869999999994346e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 2.985999999999961e-06, 3.0139999999991007e-06, 3.0279999999986706e-06, 3.0550000000018063e-06, 3.0000000000030003e-06, 2.999999999999531e-06, 3.04200000000171e-06, 2.958000000000821e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.985999999999961e-06, 2.985999999999961e-06, 2.999999999999531e-06, 2.958000000000821e-06, 2.972000000000391e-06, 2.999999999999531e-06, 3.0000000000030003e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.02800000000214e-06, 2.985999999999961e-06]</msg>
<status status="PASS" starttime="20201115 22:02:59.578" endtime="20201115 22:02:59.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.573" endtime="20201115 22:02:59.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.582" endtime="20201115 22:02:59.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.585" endtime="20201115 22:02:59.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.584" endtime="20201115 22:02:59.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.580" endtime="20201115 22:02:59.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.215" endtime="20201115 22:02:59.606"></status>
</kw>
<msg timestamp="20201115 22:02:59.606" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.621" endtime="20201115 22:02:59.636"></status>
</kw>
<msg timestamp="20201115 22:02:59.637" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.613" endtime="20201115 22:02:59.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.639" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.638" endtime="20201115 22:02:59.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.640" endtime="20201115 22:02:59.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.611" endtime="20201115 22:02:59.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.609" endtime="20201115 22:02:59.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.649" endtime="20201115 22:02:59.935"></status>
</kw>
<msg timestamp="20201115 22:02:59.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028758292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028761528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.648" endtime="20201115 22:02:59.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028758292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028761528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.940" endtime="20201115 22:02:59.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.948" endtime="20201115 22:02:59.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.645" endtime="20201115 22:02:59.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.644" endtime="20201115 22:02:59.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.954" level="INFO">${RESULT} = [{'time': 0.028761528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.028861708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:59.951" endtime="20201115 22:02:59.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.967" level="INFO">${OVERHEAD} = {'time': [0.028761528, 0.028861708, 0.0289645, 0.029070333, 0.029173375, 0.029271986, 0.02937625, 0.029480917, 0.029584931, 0.029685375, 0.029790972, 0.029889208, 0.029991569, 0.030095153, 0.030194472...</msg>
<status status="PASS" starttime="20201115 22:02:59.955" endtime="20201115 22:02:59.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.972" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:02:59.971" endtime="20201115 22:02:59.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.974" level="INFO">VALUE: [3.236000000000211e-06, 2.915999999998642e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 3.0000000000030003e-06, 2.999999999999531e-06, 2.931000000001155e-06, 2.999999999999531e-06, 2.9869999999994346e-06, 2.944000000001251e-06, 2.999999999999531e-06, 3.026999999999197e-06, 3.012999999999627e-06, 3.0139999999991007e-06, 3.040999999998767e-06, 3.0139999999991007e-06, 3.01400000000257e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 2.985999999999961e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.0000000000030003e-06, 2.9300000000016813e-06, 2.999999999999531e-06, 2.9439999999977817e-06, 3.0000000000030003e-06, 3.05600000000128e-06, 3.02800000000214e-06, 2.9439999999977817e-06, 2.9720000000038604e-06, 2.9999999999960614e-06, 3.027999999995201e-06, 3.0139999999956313e-06, 2.9999999999960614e-06, 3.0000000000030003e-06, 2.987000000002904e-06, 3.01400000000257e-06, 3.0000000000030003e-06, 3.0000000000030003e-06, 2.9999999999960614e-06, 3.0000000000030003e-06, 2.9859999999964915e-06, 2.9999999999960614e-06, 3.01400000000257e-06, 3.05600000000128e-06, 3.0000000000030003e-06, 2.9720000000038604e-06, 2.9719999999969215e-06, 3.01400000000257e-06]</msg>
<status status="PASS" starttime="20201115 22:02:59.973" endtime="20201115 22:02:59.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.968" endtime="20201115 22:02:59.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.977" endtime="20201115 22:02:59.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.981" endtime="20201115 22:03:00.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.979" endtime="20201115 22:03:00.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.976" endtime="20201115 22:03:00.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.607" endtime="20201115 22:03:00.002"></status>
</kw>
<msg timestamp="20201115 22:03:00.002" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.011" endtime="20201115 22:03:00.026"></status>
</kw>
<msg timestamp="20201115 22:03:00.027" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.009" endtime="20201115 22:03:00.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.029" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.028" endtime="20201115 22:03:00.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.030" endtime="20201115 22:03:00.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.007" endtime="20201115 22:03:00.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.005" endtime="20201115 22:03:00.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.039" endtime="20201115 22:03:00.325"></status>
</kw>
<msg timestamp="20201115 22:03:00.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022803472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022806764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.037" endtime="20201115 22:03:00.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022803472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022806764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.329" endtime="20201115 22:03:00.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.337" endtime="20201115 22:03:00.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.035" endtime="20201115 22:03:00.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.033" endtime="20201115 22:03:00.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.344" level="INFO">${RESULT} = [{'time': 0.022806764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2919999999984906e-06, 'source_diff': 3.2919999999984906e-06}, {'time': 0.022912986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:00.341" endtime="20201115 22:03:00.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.357" level="INFO">${OVERHEAD} = {'time': [0.022806764, 0.022912986, 0.023017319, 0.023117125, 0.023221903, 0.023323764, 0.023427597, 0.023529736, 0.023632208, 0.023734722, 0.023836, 0.023939736, 0.024037403, 0.024143125, 0.024242014...</msg>
<status status="PASS" starttime="20201115 22:03:00.345" endtime="20201115 22:03:00.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.362" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:00.361" endtime="20201115 22:03:00.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.364" level="INFO">VALUE: [3.2919999999984906e-06, 3.0419999999982406e-06, 3.012999999999627e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 2.985999999999961e-06, 3.0419999999982406e-06, 3.0139999999991007e-06, 3.0279999999986706e-06, 2.985999999999961e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.01400000000257e-06, 2.972000000000391e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.026999999999197e-06, 2.999999999999531e-06, 2.9590000000002947e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 2.985999999999961e-06, 3.02800000000214e-06, 2.9589999999968253e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 3.01400000000257e-06, 2.917000000001585e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.0279999999986706e-06, 3.0279999999986706e-06, 2.999999999999531e-06, 3.0279999999986706e-06, 2.985999999999961e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 3.0000000000030003e-06, 3.0279999999986706e-06, 3.02800000000214e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.985999999999961e-06, 3.0279999999986706e-06, 3.0279999999986706e-06]</msg>
<status status="PASS" starttime="20201115 22:03:00.363" endtime="20201115 22:03:00.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.358" endtime="20201115 22:03:00.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.368" endtime="20201115 22:03:00.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:00.371" endtime="20201115 22:03:00.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.370" endtime="20201115 22:03:00.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.366" endtime="20201115 22:03:00.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.003" endtime="20201115 22:03:00.392"></status>
</kw>
<msg timestamp="20201115 22:03:00.392" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.401" endtime="20201115 22:03:00.417"></status>
</kw>
<msg timestamp="20201115 22:03:00.418" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.399" endtime="20201115 22:03:00.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.420" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.419" endtime="20201115 22:03:00.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.421" endtime="20201115 22:03:00.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.397" endtime="20201115 22:03:00.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.395" endtime="20201115 22:03:00.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.430" endtime="20201115 22:03:00.718"></status>
</kw>
<msg timestamp="20201115 22:03:00.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022264069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022267306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.429" endtime="20201115 22:03:00.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022264069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022267306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.722" endtime="20201115 22:03:00.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.730" endtime="20201115 22:03:00.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.426" endtime="20201115 22:03:00.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.425" endtime="20201115 22:03:00.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.737" level="INFO">${RESULT} = [{'time': 0.022267306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2369999999996846e-06, 'source_diff': 3.2369999999996846e-06}, {'time': 0.022370306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:00.733" endtime="20201115 22:03:00.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.750" level="INFO">${OVERHEAD} = {'time': [0.022267306, 0.022370306, 0.022474014, 0.022578458, 0.022679847, 0.022782069, 0.022881083, 0.022980347, 0.023084069, 0.023187514, 0.023293417, 0.023395208, 0.023500944, 0.023605417, 0.023709...</msg>
<status status="PASS" starttime="20201115 22:03:00.738" endtime="20201115 22:03:00.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.754" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:00.753" endtime="20201115 22:03:00.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.757" level="INFO">VALUE: [3.2369999999996846e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.054999999998337e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 3.0000000000030003e-06, 3.012999999999627e-06, 2.999999999999531e-06, 3.0279999999986706e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.0979999999999897e-06, 2.999999999999531e-06, 2.985999999999961e-06, 2.999999999999531e-06, 2.985999999999961e-06, 2.985999999999961e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 2.9869999999994346e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 2.945000000000725e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 2.972000000000391e-06, 2.9719999999969215e-06, 2.999999999999531e-06, 3.012999999999627e-06, 2.9300000000016813e-06, 2.985999999999961e-06, 2.931000000001155e-06, 3.0000000000030003e-06, 2.999999999999531e-06, 2.985999999999961e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.0279999999986706e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 2.9729999999998646e-06, 3.0139999999991007e-06, 3.04200000000171e-06, 3.02800000000214e-06, 2.999999999999531e-06]</msg>
<status status="PASS" starttime="20201115 22:03:00.755" endtime="20201115 22:03:00.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.751" endtime="20201115 22:03:00.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.760" endtime="20201115 22:03:00.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:00.764" endtime="20201115 22:03:00.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.762" endtime="20201115 22:03:00.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.759" endtime="20201115 22:03:00.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.393" endtime="20201115 22:03:00.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.822" endtime="20201115 22:03:00.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.821" endtime="20201115 22:03:00.784"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.787" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.795" endtime="20201115 22:03:00.810"></status>
</kw>
<msg timestamp="20201115 22:03:00.811" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.794" endtime="20201115 22:03:00.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.813" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.812" endtime="20201115 22:03:00.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.814" endtime="20201115 22:03:00.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.791" endtime="20201115 22:03:00.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.789" endtime="20201115 22:03:00.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.823" endtime="20201115 22:03:01.110"></status>
</kw>
<msg timestamp="20201115 22:03:01.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024586792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024590111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.822" endtime="20201115 22:03:01.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024586792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024590111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.114" endtime="20201115 22:03:01.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.122" endtime="20201115 22:03:01.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.819" endtime="20201115 22:03:01.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.817" endtime="20201115 22:03:01.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.128" level="INFO">${RESULT} = [{'time': 0.024590111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.319000000001626e-06, 'source_diff': 3.319000000001626e-06}, {'time': 0.024697014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:01.125" endtime="20201115 22:03:01.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.141" level="INFO">${OVERHEAD} = {'time': [0.024590111, 0.024697014, 0.024806778, 0.024915069, 0.025022292, 0.02513325, 0.025238236, 0.025346514, 0.025453681, 0.025561514, 0.025669319, 0.025776125, 0.025881042, 0.025989611, 0.0260966...</msg>
<status status="PASS" starttime="20201115 22:03:01.129" endtime="20201115 22:03:01.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.146" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:01.145" endtime="20201115 22:03:01.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.149" level="INFO">VALUE: [3.319000000001626e-06, 3.1389999999992257e-06, 3.153000000002265e-06, 3.1660000000023614e-06, 3.167000000001835e-06, 3.1529999999987957e-06, 3.208000000001071e-06, 3.208000000001071e-06, 3.1389999999992257e-06, 3.195000000000975e-06, 3.151999999999322e-06, 3.167000000001835e-06, 3.1389999999992257e-06, 3.1529999999987957e-06, 3.1529999999987957e-06, 3.151999999999322e-06, 3.153000000002265e-06, 3.208000000001071e-06, 3.1529999999987957e-06, 3.1250000000031253e-06, 3.1529999999987957e-06, 3.1939999999980317e-06, 3.151999999999322e-06, 3.165999999998892e-06, 3.137999999999752e-06, 3.208000000001071e-06, 3.153000000002265e-06, 3.1529999999987957e-06, 3.153000000002265e-06, 3.1389999999992257e-06, 3.137999999999752e-06, 3.1529999999987957e-06, 3.1529999999987957e-06, 3.1250000000031253e-06, 3.153000000002265e-06, 3.0979999999999897e-06, 3.151999999999322e-06, 3.097000000000516e-06, 3.153000000002265e-06, 3.181000000001405e-06, 3.208000000001071e-06, 3.1520000000027915e-06, 3.1389999999992257e-06, 3.151999999999322e-06, 3.1389999999992257e-06, 3.124999999999656e-06, 3.1529999999987957e-06, 3.179999999998462e-06, 3.1529999999987957e-06, 3.1529999999987957e-06]</msg>
<status status="PASS" starttime="20201115 22:03:01.147" endtime="20201115 22:03:01.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.142" endtime="20201115 22:03:01.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.152" endtime="20201115 22:03:01.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.155" endtime="20201115 22:03:01.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.154" endtime="20201115 22:03:01.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.150" endtime="20201115 22:03:01.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.787" endtime="20201115 22:03:01.176"></status>
</kw>
<msg timestamp="20201115 22:03:01.176" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.185" endtime="20201115 22:03:01.200"></status>
</kw>
<msg timestamp="20201115 22:03:01.201" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.183" endtime="20201115 22:03:01.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.203" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.202" endtime="20201115 22:03:01.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.204" endtime="20201115 22:03:01.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.181" endtime="20201115 22:03:01.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.179" endtime="20201115 22:03:01.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.213" endtime="20201115 22:03:01.499"></status>
</kw>
<msg timestamp="20201115 22:03:01.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022265097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.212" endtime="20201115 22:03:01.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022265097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.503" endtime="20201115 22:03:01.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.511" endtime="20201115 22:03:01.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.209" endtime="20201115 22:03:01.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.207" endtime="20201115 22:03:01.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.518" level="INFO">${RESULT} = [{'time': 0.022268486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.022374458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:01.515" endtime="20201115 22:03:01.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.531" level="INFO">${OVERHEAD} = {'time': [0.022268486, 0.022374458, 0.022485694, 0.022594833, 0.022702542, 0.022808569, 0.022917653, 0.023024056, 0.023133167, 0.023239708, 0.023351625, 0.023463444, 0.023572778, 0.023677458, 0.023782...</msg>
<status status="PASS" starttime="20201115 22:03:01.519" endtime="20201115 22:03:01.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.536" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:01.535" endtime="20201115 22:03:01.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.539" level="INFO">VALUE: [3.3889999999994758e-06, 3.1389999999992257e-06, 3.151999999999322e-06, 3.1800000000019313e-06, 3.1529999999987957e-06, 3.1660000000023614e-06, 3.1389999999992257e-06, 3.139000000002695e-06, 3.1529999999987957e-06, 3.1520000000027915e-06, 3.1389999999992257e-06, 3.194000000001501e-06, 3.1389999999992257e-06, 3.165999999998892e-06, 3.1529999999987957e-06, 3.1529999999987957e-06, 3.165999999998892e-06, 3.153000000002265e-06, 3.151999999999322e-06, 3.1529999999987957e-06, 3.1529999999987957e-06, 3.195000000000975e-06, 3.194000000001501e-06, 3.1529999999987957e-06, 3.181000000001405e-06, 3.1389999999992257e-06, 3.1660000000023614e-06, 3.1529999999987957e-06, 3.1389999999992257e-06, 3.1529999999987957e-06, 3.137999999999752e-06, 3.1529999999987957e-06, 3.1520000000027915e-06, 3.153000000002265e-06, 3.1389999999992257e-06, 3.153000000002265e-06, 3.153000000002265e-06, 3.167000000001835e-06, 3.097000000000516e-06, 3.1389999999992257e-06, 3.1949999999975054e-06, 3.124999999999656e-06, 3.1389999999992257e-06, 3.1119999999995596e-06, 3.1520000000027915e-06, 3.1389999999992257e-06, 3.165999999998892e-06, 3.1389999999992257e-06, 3.139000000002695e-06, 3.1529999999987957e-06]</msg>
<status status="PASS" starttime="20201115 22:03:01.537" endtime="20201115 22:03:01.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.532" endtime="20201115 22:03:01.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.542" endtime="20201115 22:03:01.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.545" endtime="20201115 22:03:01.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.544" endtime="20201115 22:03:01.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.540" endtime="20201115 22:03:01.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.177" endtime="20201115 22:03:01.566"></status>
</kw>
<msg timestamp="20201115 22:03:01.566" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.575" endtime="20201115 22:03:01.590"></status>
</kw>
<msg timestamp="20201115 22:03:01.590" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.573" endtime="20201115 22:03:01.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.593" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.591" endtime="20201115 22:03:01.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.594" endtime="20201115 22:03:01.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.571" endtime="20201115 22:03:01.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.568" endtime="20201115 22:03:01.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.603" endtime="20201115 22:03:01.889"></status>
</kw>
<msg timestamp="20201115 22:03:01.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022333597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.601" endtime="20201115 22:03:01.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022333597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.893" endtime="20201115 22:03:01.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.901" endtime="20201115 22:03:01.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.599" endtime="20201115 22:03:01.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.597" endtime="20201115 22:03:01.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.908" level="INFO">${RESULT} = [{'time': 0.022333597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.022444042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:01.904" endtime="20201115 22:03:01.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.922" level="INFO">${OVERHEAD} = {'time': [0.022333597, 0.022444042, 0.022555556, 0.022665167, 0.022775458, 0.022885361, 0.022990292, 0.023096986, 0.023202042, 0.023310583, 0.023414986, 0.023524486, 0.023628917, 0.023735028, 0.023841...</msg>
<status status="PASS" starttime="20201115 22:03:01.909" endtime="20201115 22:03:01.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.928" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:01.927" endtime="20201115 22:03:01.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.931" level="INFO">VALUE: [3.374999999999906e-06, 3.167000000001835e-06, 3.0979999999999897e-06, 3.1669999999983656e-06, 3.124999999999656e-06, 3.1389999999992257e-06, 3.1529999999987957e-06, 3.1529999999987957e-06, 3.1529999999987957e-06, 3.1389999999992257e-06, 3.1529999999987957e-06, 3.1389999999992257e-06, 3.195000000000975e-06, 3.1669999999983656e-06, 3.097000000000516e-06, 3.165999999998892e-06, 3.1529999999987957e-06, 3.1389999999992257e-06, 3.151999999999322e-06, 3.1529999999987957e-06, 3.165999999998892e-06, 3.1660000000023614e-06, 3.1389999999992257e-06, 3.153000000002265e-06, 3.1809999999979355e-06, 3.167000000001835e-06, 3.1669999999983656e-06, 3.1529999999987957e-06, 3.1529999999987957e-06, 3.097000000000516e-06, 3.137999999999752e-06, 3.153000000002265e-06, 3.181000000001405e-06, 3.0840000000004197e-06, 3.1809999999979355e-06, 3.1389999999992257e-06, 3.097000000000516e-06, 3.1660000000023614e-06, 3.167000000001835e-06, 3.137999999999752e-06, 3.1389999999992257e-06, 3.1389999999992257e-06, 3.1389999999992257e-06, 3.1529999999987957e-06, 3.1529999999987957e-06, 3.195000000000975e-06, 3.1389999999992257e-06, 3.181000000001405e-06, 3.1529999999987957e-06, 3.1669999999983656e-06]</msg>
<status status="PASS" starttime="20201115 22:03:01.929" endtime="20201115 22:03:01.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.924" endtime="20201115 22:03:01.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.935" endtime="20201115 22:03:01.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.940" endtime="20201115 22:03:01.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.938" endtime="20201115 22:03:01.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.933" endtime="20201115 22:03:01.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.566" endtime="20201115 22:03:01.962"></status>
</kw>
<msg timestamp="20201115 22:03:01.962" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.974" endtime="20201115 22:03:01.990"></status>
</kw>
<msg timestamp="20201115 22:03:01.991" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.972" endtime="20201115 22:03:01.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.993" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.992" endtime="20201115 22:03:01.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.994" endtime="20201115 22:03:01.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.968" endtime="20201115 22:03:01.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.966" endtime="20201115 22:03:01.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.003" endtime="20201115 22:03:02.289"></status>
</kw>
<msg timestamp="20201115 22:03:02.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026667556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026670944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.002" endtime="20201115 22:03:02.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026667556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026670944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.293" endtime="20201115 22:03:02.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.302" endtime="20201115 22:03:02.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.999" endtime="20201115 22:03:02.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.997" endtime="20201115 22:03:02.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:02.309" level="INFO">${RESULT} = [{'time': 0.026670944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.388000000000002e-06, 'source_diff': 3.388000000000002e-06}, {'time': 0.026776375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:02.305" endtime="20201115 22:03:02.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.322" level="INFO">${OVERHEAD} = {'time': [0.026670944, 0.026776375, 0.026883167, 0.026987417, 0.027093833, 0.027200111, 0.027304917, 0.027414403, 0.027526722, 0.027637431, 0.027747611, 0.027854014, 0.027959097, 0.028067375, 0.028174...</msg>
<status status="PASS" starttime="20201115 22:03:02.310" endtime="20201115 22:03:02.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.326" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:02.325" endtime="20201115 22:03:02.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.329" level="INFO">VALUE: [3.388000000000002e-06, 3.167000000001835e-06, 3.1389999999992257e-06, 3.1529999999987957e-06, 3.1520000000027915e-06, 3.1529999999987957e-06, 3.167000000001835e-06, 3.1389999999992257e-06, 3.1529999999987957e-06, 3.1389999999992257e-06, 3.0969999999970466e-06, 3.1529999999987957e-06, 3.1529999999987957e-06, 3.1529999999987957e-06, 3.0689999999979067e-06, 3.137999999999752e-06, 3.1529999999987957e-06, 3.153000000002265e-06, 3.153000000002265e-06, 3.139000000002695e-06, 3.151999999999322e-06, 3.165999999998892e-06, 3.153000000002265e-06, 3.1389999999992257e-06, 3.1529999999987957e-06, 3.1389999999992257e-06, 3.1389999999992257e-06, 3.1389999999992257e-06, 3.137999999999752e-06, 3.1529999999987957e-06, 3.1529999999987957e-06, 3.167000000001835e-06, 3.1669999999983656e-06, 3.124999999999656e-06, 3.1529999999987957e-06, 3.097000000000516e-06, 3.137999999999752e-06, 3.1529999999987957e-06, 3.111000000000086e-06, 3.236000000000211e-06, 3.137999999999752e-06, 3.1669999999983656e-06, 3.194000000001501e-06, 3.0979999999999897e-06, 3.1389999999992257e-06, 3.151999999999322e-06, 3.1390000000061646e-06, 3.1389999999992257e-06, 3.152000000006261e-06, 3.1389999999992257e-06]</msg>
<status status="PASS" starttime="20201115 22:03:02.327" endtime="20201115 22:03:02.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.323" endtime="20201115 22:03:02.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.332" endtime="20201115 22:03:02.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.335" endtime="20201115 22:03:02.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.334" endtime="20201115 22:03:02.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.330" endtime="20201115 22:03:02.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.963" endtime="20201115 22:03:02.356"></status>
</kw>
<msg timestamp="20201115 22:03:02.356" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.365" endtime="20201115 22:03:02.380"></status>
</kw>
<msg timestamp="20201115 22:03:02.380" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.363" endtime="20201115 22:03:02.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.383" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.381" endtime="20201115 22:03:02.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.384" endtime="20201115 22:03:02.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.361" endtime="20201115 22:03:02.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.359" endtime="20201115 22:03:02.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.393" endtime="20201115 22:03:02.681"></status>
</kw>
<msg timestamp="20201115 22:03:02.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022188236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.391" endtime="20201115 22:03:02.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022188236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.685" endtime="20201115 22:03:02.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.693" endtime="20201115 22:03:02.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.389" endtime="20201115 22:03:02.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.387" endtime="20201115 22:03:02.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:02.700" level="INFO">${RESULT} = [{'time': 0.022188236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.022299958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:02.696" endtime="20201115 22:03:02.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.756" level="INFO">${OVERHEAD} = {'time': [0.022188236, 0.022299958, 0.022407292, 0.022513833, 0.022620514, 0.022725306, 0.022836972, 0.022949, 0.023053806, 0.023158472, 0.023269972, 0.023377986, 0.023483861, 0.023590028, 0.023697361...</msg>
<status status="PASS" starttime="20201115 22:03:02.701" endtime="20201115 22:03:02.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.761" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:02.760" endtime="20201115 22:03:02.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.763" level="INFO">VALUE: [3.3889999999994758e-06, 3.111000000000086e-06, 3.1529999999987957e-06, 3.151999999999322e-06, 3.153000000002265e-06, 3.153000000002265e-06, 3.1529999999987957e-06, 3.153000000002265e-06, 3.0979999999999897e-06, 3.1389999999992257e-06, 3.124999999999656e-06, 3.1529999999987957e-06, 3.139000000002695e-06, 3.1389999999992257e-06, 3.111000000000086e-06, 3.194000000001501e-06, 3.151999999999322e-06, 3.151999999999322e-06, 3.1389999999992257e-06, 3.153000000002265e-06, 3.151999999999322e-06, 3.111000000000086e-06, 3.1529999999987957e-06, 3.097000000000516e-06, 3.167000000001835e-06, 3.1520000000027915e-06, 3.165999999998892e-06, 3.1529999999987957e-06, 3.1529999999987957e-06, 3.124999999999656e-06, 3.153000000002265e-06, 3.167000000001835e-06, 3.1529999999987957e-06, 3.1389999999992257e-06, 3.167000000001835e-06, 3.167000000001835e-06, 3.1529999999987957e-06, 3.1669999999983656e-06, 3.167000000001835e-06, 3.1389999999992257e-06, 3.1529999999987957e-06, 3.179999999998462e-06, 3.1389999999992257e-06, 3.0829999999974766e-06, 3.153000000002265e-06, 3.167000000001835e-06, 3.167000000001835e-06, 3.167000000001835e-06, 3.1949999999975054e-06, 3.0979999999999897e-06]</msg>
<status status="PASS" starttime="20201115 22:03:02.762" endtime="20201115 22:03:02.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.757" endtime="20201115 22:03:02.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.766" endtime="20201115 22:03:02.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.770" endtime="20201115 22:03:02.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.768" endtime="20201115 22:03:02.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.765" endtime="20201115 22:03:02.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.356" endtime="20201115 22:03:02.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.786" endtime="20201115 22:03:02.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.785" endtime="20201115 22:03:02.791"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.793" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.802" endtime="20201115 22:03:02.818"></status>
</kw>
<msg timestamp="20201115 22:03:02.819" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.801" endtime="20201115 22:03:02.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.821" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.820" endtime="20201115 22:03:02.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.822" endtime="20201115 22:03:02.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.797" endtime="20201115 22:03:02.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.795" endtime="20201115 22:03:02.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.832" endtime="20201115 22:03:03.116"></status>
</kw>
<msg timestamp="20201115 22:03:03.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025355917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025359431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.830" endtime="20201115 22:03:03.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025355917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025359431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.120" endtime="20201115 22:03:03.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.128" endtime="20201115 22:03:03.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.828" endtime="20201115 22:03:03.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.826" endtime="20201115 22:03:03.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.135" level="INFO">${RESULT} = [{'time': 0.025359431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5140000000030702e-06, 'source_diff': 3.5140000000030702e-06}, {'time': 0.025476931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:03.132" endtime="20201115 22:03:03.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.148" level="INFO">${OVERHEAD} = {'time': [0.025359431, 0.025476931, 0.025595431, 0.025706542, 0.025820333, 0.025934639, 0.026046292, 0.026157917, 0.026274667, 0.026386292, 0.026503708, 0.026616431, 0.026728111, 0.026844681, 0.026963...</msg>
<status status="PASS" starttime="20201115 22:03:03.136" endtime="20201115 22:03:03.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.153" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:03.152" endtime="20201115 22:03:03.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.155" level="INFO">VALUE: [3.5140000000030702e-06, 3.29200000000196e-06, 3.2779999999989207e-06, 3.3059999999980605e-06, 3.2910000000024864e-06, 3.2779999999989207e-06, 3.3059999999980605e-06, 3.2919999999984906e-06, 3.29200000000196e-06, 3.2779999999989207e-06, 3.2639999999993508e-06, 3.2919999999984906e-06, 3.304999999998587e-06, 3.2919999999984906e-06, 3.290999999999017e-06, 3.236000000000211e-06, 3.3199999999976304e-06, 3.2919999999984906e-06, 3.333000000001196e-06, 3.236000000000211e-06, 3.2639999999993508e-06, 3.361000000000336e-06, 3.2779999999989207e-06, 3.290999999999017e-06, 3.2779999999989207e-06, 3.2770000000029165e-06, 3.2639999999993508e-06, 3.290999999999017e-06, 3.3619999999998096e-06, 3.3050000000020563e-06, 3.2779999999989207e-06, 3.2779999999989207e-06, 3.29200000000196e-06, 3.2919999999984906e-06, 3.27800000000239e-06, 3.208000000001071e-06, 3.3189999999981568e-06, 3.276999999999447e-06, 3.2779999999989207e-06, 3.290999999999017e-06, 3.3619999999998096e-06, 3.304999999998587e-06, 3.29200000000196e-06, 3.27800000000239e-06, 3.2639999999993508e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.2919999999984906e-06, 3.29200000000196e-06, 3.2779999999989207e-06]</msg>
<status status="PASS" starttime="20201115 22:03:03.154" endtime="20201115 22:03:03.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.149" endtime="20201115 22:03:03.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.159" endtime="20201115 22:03:03.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.162" endtime="20201115 22:03:03.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.161" endtime="20201115 22:03:03.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.157" endtime="20201115 22:03:03.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.793" endtime="20201115 22:03:03.183"></status>
</kw>
<msg timestamp="20201115 22:03:03.183" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.192" endtime="20201115 22:03:03.209"></status>
</kw>
<msg timestamp="20201115 22:03:03.210" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.191" endtime="20201115 22:03:03.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.213" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.211" endtime="20201115 22:03:03.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.214" endtime="20201115 22:03:03.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.187" endtime="20201115 22:03:03.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.185" endtime="20201115 22:03:03.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.223" endtime="20201115 22:03:03.509"></status>
</kw>
<msg timestamp="20201115 22:03:03.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023459222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023462736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.221" endtime="20201115 22:03:03.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023459222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023462736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.513" endtime="20201115 22:03:03.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.522" endtime="20201115 22:03:03.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.219" endtime="20201115 22:03:03.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.217" endtime="20201115 22:03:03.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.528" level="INFO">${RESULT} = [{'time': 0.023462736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5140000000030702e-06, 'source_diff': 3.5140000000030702e-06}, {'time': 0.023577708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:03.525" endtime="20201115 22:03:03.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.542" level="INFO">${OVERHEAD} = {'time': [0.023462736, 0.023577708, 0.023692861, 0.023811611, 0.023922583, 0.024038528, 0.024156611, 0.024271069, 0.024386472, 0.024503236, 0.024619569, 0.024730542, 0.024849708, 0.024962417, 0.025077...</msg>
<status status="PASS" starttime="20201115 22:03:03.529" endtime="20201115 22:03:03.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.546" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:03.545" endtime="20201115 22:03:03.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.549" level="INFO">VALUE: [3.5140000000030702e-06, 3.2639999999993508e-06, 3.304999999998587e-06, 3.2919999999984906e-06, 3.236000000000211e-06, 3.2639999999993508e-06, 3.29200000000196e-06, 3.290999999999017e-06, 3.236000000000211e-06, 3.26400000000282e-06, 3.2910000000024864e-06, 3.29200000000196e-06, 3.2910000000024864e-06, 3.29200000000196e-06, 3.29200000000196e-06, 3.2919999999984906e-06, 3.2779999999989207e-06, 3.304999999998587e-06, 3.2779999999989207e-06, 3.2779999999989207e-06, 3.249999999999781e-06, 3.26400000000282e-06, 3.2779999999989207e-06, 3.249999999999781e-06, 3.3059999999980605e-06, 3.2910000000024864e-06, 3.2919999999984906e-06, 3.3050000000020563e-06, 3.29200000000196e-06, 3.27800000000239e-06, 3.2919999999984906e-06, 3.304999999998587e-06, 3.290999999999017e-06, 3.3200000000011e-06, 3.276999999999447e-06, 3.2090000000005448e-06, 3.29200000000196e-06, 3.2090000000005448e-06, 3.29200000000196e-06, 3.27800000000239e-06, 3.2919999999984906e-06, 3.2770000000029165e-06, 3.2919999999984906e-06, 3.2779999999989207e-06, 3.29200000000196e-06, 3.2919999999984906e-06, 3.2770000000029165e-06, 3.3059999999980605e-06, 3.276999999999447e-06, 3.2230000000001147e-06]</msg>
<status status="PASS" starttime="20201115 22:03:03.547" endtime="20201115 22:03:03.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.543" endtime="20201115 22:03:03.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.552" endtime="20201115 22:03:03.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.555" endtime="20201115 22:03:03.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.554" endtime="20201115 22:03:03.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.550" endtime="20201115 22:03:03.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.183" endtime="20201115 22:03:03.576"></status>
</kw>
<msg timestamp="20201115 22:03:03.576" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.585" endtime="20201115 22:03:03.602"></status>
</kw>
<msg timestamp="20201115 22:03:03.603" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.584" endtime="20201115 22:03:03.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.605" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.604" endtime="20201115 22:03:03.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.606" endtime="20201115 22:03:03.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.581" endtime="20201115 22:03:03.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.579" endtime="20201115 22:03:03.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.615" endtime="20201115 22:03:03.900"></status>
</kw>
<msg timestamp="20201115 22:03:03.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023578875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023582375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.614" endtime="20201115 22:03:03.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023578875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023582375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.904" endtime="20201115 22:03:03.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.912" endtime="20201115 22:03:03.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.611" endtime="20201115 22:03:03.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.609" endtime="20201115 22:03:03.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.919" level="INFO">${RESULT} = [{'time': 0.023582375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.02369425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:03.915" endtime="20201115 22:03:03.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.932" level="INFO">${OVERHEAD} = {'time': [0.023582375, 0.02369425, 0.023811278, 0.023925847, 0.024037097, 0.024148611, 0.024260528, 0.024373778, 0.024485681, 0.024600819, 0.024715167, 0.024827458, 0.024942069, 0.025053514, 0.0251680...</msg>
<status status="PASS" starttime="20201115 22:03:03.919" endtime="20201115 22:03:03.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.936" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:03.935" endtime="20201115 22:03:03.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.939" level="INFO">VALUE: [3.500000000000031e-06, 3.2919999999984906e-06, 3.30600000000153e-06, 3.2779999999989207e-06, 3.290999999999017e-06, 3.2779999999989207e-06, 3.2779999999989207e-06, 3.2779999999989207e-06, 3.1949999999975054e-06, 3.236000000000211e-06, 3.3059999999980605e-06, 3.222000000000641e-06, 3.290999999999017e-06, 3.3199999999976304e-06, 3.27800000000239e-06, 3.2779999999989207e-06, 3.3189999999981568e-06, 3.2919999999984906e-06, 3.30600000000153e-06, 3.2779999999989207e-06, 3.2779999999989207e-06, 3.304999999998587e-06, 3.2779999999989207e-06, 3.2910000000024864e-06, 3.2779999999989207e-06, 3.290999999999017e-06, 3.2639999999993508e-06, 3.249999999999781e-06, 3.2779999999989207e-06, 3.276999999999447e-06, 3.26400000000282e-06, 3.26400000000282e-06, 3.2910000000024864e-06, 3.2910000000024864e-06, 3.2770000000029165e-06, 3.2639999999993508e-06, 3.2910000000024864e-06, 3.2639999999993508e-06, 3.3059999999980605e-06, 3.262999999999877e-06, 3.2639999999993508e-06, 3.276999999999447e-06, 3.2779999999989207e-06, 3.27800000000239e-06, 3.2910000000024864e-06, 3.2779999999989207e-06, 3.29200000000196e-06, 3.2230000000001147e-06, 3.2919999999984906e-06, 3.2919999999984906e-06]</msg>
<status status="PASS" starttime="20201115 22:03:03.937" endtime="20201115 22:03:03.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.933" endtime="20201115 22:03:03.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.942" endtime="20201115 22:03:03.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.945" endtime="20201115 22:03:03.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.944" endtime="20201115 22:03:03.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.940" endtime="20201115 22:03:03.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.576" endtime="20201115 22:03:03.966"></status>
</kw>
<msg timestamp="20201115 22:03:03.967" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.975" endtime="20201115 22:03:03.992"></status>
</kw>
<msg timestamp="20201115 22:03:03.992" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.974" endtime="20201115 22:03:03.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.994" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.993" endtime="20201115 22:03:03.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.996" endtime="20201115 22:03:03.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.971" endtime="20201115 22:03:03.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.969" endtime="20201115 22:03:03.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.005" endtime="20201115 22:03:04.288"></status>
</kw>
<msg timestamp="20201115 22:03:04.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023069361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.003" endtime="20201115 22:03:04.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023069361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.293" endtime="20201115 22:03:04.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.301" endtime="20201115 22:03:04.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.001" endtime="20201115 22:03:04.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.999" endtime="20201115 22:03:04.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.307" level="INFO">${RESULT} = [{'time': 0.023072903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.023190528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:04.304" endtime="20201115 22:03:04.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.322" level="INFO">${OVERHEAD} = {'time': [0.023072903, 0.023190528, 0.023307125, 0.023419181, 0.023535278, 0.023652819, 0.023764736, 0.023877847, 0.023992708, 0.024109722, 0.024227806, 0.024346042, 0.024463583, 0.024576431, 0.024691...</msg>
<status status="PASS" starttime="20201115 22:03:04.308" endtime="20201115 22:03:04.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.326" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:04.325" endtime="20201115 22:03:04.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.329" level="INFO">VALUE: [3.5419999999987406e-06, 3.2779999999989207e-06, 3.27800000000239e-06, 3.27800000000239e-06, 3.2919999999984906e-06, 3.276999999999447e-06, 3.29200000000196e-06, 3.2779999999989207e-06, 3.26400000000282e-06, 3.2639999999993508e-06, 3.27800000000239e-06, 3.3059999999980605e-06, 3.276999999999447e-06, 3.2779999999989207e-06, 3.3189999999981568e-06, 3.333000000001196e-06, 3.2919999999984906e-06, 3.2779999999989207e-06, 3.29200000000196e-06, 3.236000000000211e-06, 3.29200000000196e-06, 3.2770000000029165e-06, 3.2919999999984906e-06, 3.2919999999984906e-06, 3.27800000000239e-06, 3.2910000000024864e-06, 3.236000000000211e-06, 3.276999999999447e-06, 3.2779999999989207e-06, 3.2639999999993508e-06, 3.2919999999984906e-06, 3.2779999999989207e-06, 3.3200000000011e-06, 3.2219999999971716e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.304999999998587e-06, 3.2639999999993508e-06, 3.2230000000001147e-06, 3.2779999999989207e-06, 3.276999999999447e-06, 3.2779999999989207e-06, 3.276999999999447e-06, 3.2779999999989207e-06, 3.2919999999984906e-06, 3.2910000000024864e-06, 3.27800000000239e-06, 3.2919999999984906e-06, 3.2919999999984906e-06, 3.304999999998587e-06]</msg>
<status status="PASS" starttime="20201115 22:03:04.327" endtime="20201115 22:03:04.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.322" endtime="20201115 22:03:04.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.332" endtime="20201115 22:03:04.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.335" endtime="20201115 22:03:04.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.334" endtime="20201115 22:03:04.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.330" endtime="20201115 22:03:04.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.967" endtime="20201115 22:03:04.356"></status>
</kw>
<msg timestamp="20201115 22:03:04.356" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.365" endtime="20201115 22:03:04.381"></status>
</kw>
<msg timestamp="20201115 22:03:04.381" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.363" endtime="20201115 22:03:04.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.384" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.382" endtime="20201115 22:03:04.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.385" endtime="20201115 22:03:04.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.361" endtime="20201115 22:03:04.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.359" endtime="20201115 22:03:04.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.395" endtime="20201115 22:03:04.680"></status>
</kw>
<msg timestamp="20201115 22:03:04.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.393" endtime="20201115 22:03:04.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.684" endtime="20201115 22:03:04.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.692" endtime="20201115 22:03:04.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.391" endtime="20201115 22:03:04.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.389" endtime="20201115 22:03:04.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.699" level="INFO">${RESULT} = [{'time': 0.022165847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.022280944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:04.696" endtime="20201115 22:03:04.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.712" level="INFO">${OVERHEAD} = {'time': [0.022165847, 0.022280944, 0.022394861, 0.022512847, 0.022631069, 0.022742833, 0.022855972, 0.022972722, 0.023089597, 0.023208222, 0.023324597, 0.023441292, 0.023554819, 0.023671986, 0.023790...</msg>
<status status="PASS" starttime="20201115 22:03:04.700" endtime="20201115 22:03:04.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.717" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:04.716" endtime="20201115 22:03:04.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.719" level="INFO">VALUE: [3.500000000000031e-06, 3.262999999999877e-06, 3.2779999999989207e-06, 3.304999999998587e-06, 3.304999999998587e-06, 3.276999999999447e-06, 3.2639999999993508e-06, 3.2910000000024864e-06, 3.290999999999017e-06, 3.290999999999017e-06, 3.3189999999981568e-06, 3.2639999999993508e-06, 3.276999999999447e-06, 3.2919999999984906e-06, 3.2639999999993508e-06, 3.290999999999017e-06, 3.2779999999989207e-06, 3.2779999999989207e-06, 3.29200000000196e-06, 3.2639999999993508e-06, 3.249999999999781e-06, 3.29200000000196e-06, 3.2919999999984906e-06, 3.2919999999984906e-06, 3.276999999999447e-06, 3.2779999999989207e-06, 3.2919999999984906e-06, 3.276999999999447e-06, 3.276999999999447e-06, 3.304999999998587e-06, 3.2919999999984906e-06, 3.2779999999989207e-06, 3.2910000000024864e-06, 3.262999999999877e-06, 3.2779999999989207e-06, 3.2639999999993508e-06, 3.27800000000239e-06, 3.2779999999989207e-06, 3.222000000000641e-06, 3.262999999999877e-06, 3.290999999999017e-06, 3.26400000000282e-06, 3.2919999999984906e-06, 3.26400000000282e-06, 3.27800000000239e-06, 3.2919999999984906e-06, 3.2779999999989207e-06, 3.319000000001626e-06, 3.27800000000239e-06, 3.29200000000196e-06]</msg>
<status status="PASS" starttime="20201115 22:03:04.718" endtime="20201115 22:03:04.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.713" endtime="20201115 22:03:04.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.729" endtime="20201115 22:03:04.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.732" endtime="20201115 22:03:04.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.731" endtime="20201115 22:03:04.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.727" endtime="20201115 22:03:04.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.357" endtime="20201115 22:03:04.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.792" endtime="20201115 22:03:04.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.791" endtime="20201115 22:03:04.753"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.755" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.764" endtime="20201115 22:03:04.780"></status>
</kw>
<msg timestamp="20201115 22:03:04.781" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.762" endtime="20201115 22:03:04.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.783" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.782" endtime="20201115 22:03:04.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.784" endtime="20201115 22:03:04.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.760" endtime="20201115 22:03:04.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.758" endtime="20201115 22:03:04.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.793" endtime="20201115 22:03:05.079"></status>
</kw>
<msg timestamp="20201115 22:03:05.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024941264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024944944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.792" endtime="20201115 22:03:05.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024941264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024944944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.083" endtime="20201115 22:03:05.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.091" endtime="20201115 22:03:05.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.789" endtime="20201115 22:03:05.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.787" endtime="20201115 22:03:05.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.098" level="INFO">${RESULT} = [{'time': 0.024944944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.679999999998962e-06, 'source_diff': 3.679999999998962e-06}, {'time': 0.025067861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:05.095" endtime="20201115 22:03:05.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.111" level="INFO">${OVERHEAD} = {'time': [0.024944944, 0.025067861, 0.025189625, 0.025314625, 0.025435722, 0.025553431, 0.025671583, 0.025795764, 0.02591925, 0.026043694, 0.026167611, 0.026288583, 0.026407514, 0.02652525, 0.02664713...</msg>
<status status="PASS" starttime="20201115 22:03:05.099" endtime="20201115 22:03:05.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.116" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:05.115" endtime="20201115 22:03:05.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.119" level="INFO">VALUE: [3.679999999998962e-06, 3.4169999999986156e-06, 3.4029999999990457e-06, 3.4440000000017512e-06, 3.403000000002515e-06, 3.431000000001655e-06, 3.4440000000017512e-06, 3.4449999999977554e-06, 3.417000000002085e-06, 3.347000000000766e-06, 3.4169999999986156e-06, 3.4300000000021813e-06, 3.374999999999906e-06, 3.431000000001655e-06, 3.431000000001655e-06, 3.4309999999981855e-06, 3.4029999999990457e-06, 3.431000000001655e-06, 3.415999999999142e-06, 3.3889999999994758e-06, 3.4160000000026114e-06, 3.5139999999996008e-06, 3.445000000001225e-06, 3.500000000000031e-06, 3.472000000000891e-06, 3.415999999999142e-06, 3.361000000000336e-06, 3.4029999999990457e-06, 3.415999999999142e-06, 3.4859999999969915e-06, 3.4439999999982818e-06, 3.401999999999572e-06, 3.4300000000021813e-06, 3.417000000002085e-06, 3.4579999999978517e-06, 3.374999999999906e-06, 3.472000000000891e-06, 3.4169999999986156e-06, 3.500000000000031e-06, 3.374999999999906e-06, 3.4440000000017512e-06, 3.431000000001655e-06, 3.431000000001655e-06, 3.4309999999981855e-06, 3.4300000000021813e-06, 3.4169999999986156e-06, 3.4869999999999346e-06, 3.403000000002515e-06, 3.4440000000017512e-06, 3.486000000000461e-06]</msg>
<status status="PASS" starttime="20201115 22:03:05.117" endtime="20201115 22:03:05.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.112" endtime="20201115 22:03:05.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.122" endtime="20201115 22:03:05.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.125" endtime="20201115 22:03:05.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.124" endtime="20201115 22:03:05.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.120" endtime="20201115 22:03:05.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.756" endtime="20201115 22:03:05.146"></status>
</kw>
<msg timestamp="20201115 22:03:05.146" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.155" endtime="20201115 22:03:05.171"></status>
</kw>
<msg timestamp="20201115 22:03:05.172" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.153" endtime="20201115 22:03:05.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.174" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.173" endtime="20201115 22:03:05.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.175" endtime="20201115 22:03:05.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.151" endtime="20201115 22:03:05.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.149" endtime="20201115 22:03:05.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.185" endtime="20201115 22:03:05.470"></status>
</kw>
<msg timestamp="20201115 22:03:05.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022310833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.183" endtime="20201115 22:03:05.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022310833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.474" endtime="20201115 22:03:05.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.482" endtime="20201115 22:03:05.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.181" endtime="20201115 22:03:05.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.179" endtime="20201115 22:03:05.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.489" level="INFO">${RESULT} = [{'time': 0.022310833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.022433639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:05.486" endtime="20201115 22:03:05.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.502" level="INFO">${OVERHEAD} = {'time': [0.022310833, 0.022433639, 0.022554069, 0.022676889, 0.022796514, 0.022921097, 0.023040194, 0.023163694, 0.023285986, 0.023408917, 0.023534222, 0.023655042, 0.023779889, 0.023901264, 0.024027...</msg>
<status status="PASS" starttime="20201115 22:03:05.490" endtime="20201115 22:03:05.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.507" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:05.506" endtime="20201115 22:03:05.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.510" level="INFO">VALUE: [3.6389999999997258e-06, 3.4169999999986156e-06, 3.4439999999982818e-06, 3.4169999999986156e-06, 3.3889999999994758e-06, 3.4300000000021813e-06, 3.374999999999906e-06, 3.415999999999142e-06, 3.4300000000021813e-06, 3.500000000000031e-06, 3.415999999999142e-06, 3.431000000001655e-06, 3.374999999999906e-06, 3.4449999999977554e-06, 3.4309999999981855e-06, 3.4309999999981855e-06, 3.4439999999982818e-06, 3.4169999999986156e-06, 3.415999999999142e-06, 3.431000000001655e-06, 3.4439999999982818e-06, 3.4439999999982818e-06, 3.429999999998712e-06, 3.429999999998712e-06, 3.429999999998712e-06, 3.4730000000003647e-06, 3.4300000000021813e-06, 3.458000000001321e-06, 3.4300000000021813e-06, 3.486000000000461e-06, 3.4440000000017512e-06, 3.4169999999986156e-06, 3.401999999999572e-06, 3.388000000000002e-06, 3.4440000000017512e-06, 3.4439999999982818e-06, 3.445000000001225e-06, 3.4169999999986156e-06, 3.429999999998712e-06, 3.4309999999981855e-06, 3.415999999999142e-06, 3.417000000002085e-06, 3.486000000000461e-06, 3.4309999999981855e-06, 3.361000000000336e-06, 3.4309999999981855e-06, 3.4590000000007948e-06, 3.4439999999982818e-06, 3.4449999999977554e-06, 3.429999999998712e-06]</msg>
<status status="PASS" starttime="20201115 22:03:05.508" endtime="20201115 22:03:05.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.504" endtime="20201115 22:03:05.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.513" endtime="20201115 22:03:05.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.516" endtime="20201115 22:03:05.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.515" endtime="20201115 22:03:05.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.511" endtime="20201115 22:03:05.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.147" endtime="20201115 22:03:05.537"></status>
</kw>
<msg timestamp="20201115 22:03:05.537" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.547" endtime="20201115 22:03:05.564"></status>
</kw>
<msg timestamp="20201115 22:03:05.565" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.545" endtime="20201115 22:03:05.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.566" endtime="20201115 22:03:05.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.568" endtime="20201115 22:03:05.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.542" endtime="20201115 22:03:05.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.540" endtime="20201115 22:03:05.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.578" endtime="20201115 22:03:05.863"></status>
</kw>
<msg timestamp="20201115 22:03:05.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023805139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023808764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.577" endtime="20201115 22:03:05.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023805139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023808764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.867" endtime="20201115 22:03:05.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.875" endtime="20201115 22:03:05.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.574" endtime="20201115 22:03:05.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.572" endtime="20201115 22:03:05.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.882" level="INFO">${RESULT} = [{'time': 0.023808764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.023926736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:05.878" endtime="20201115 22:03:05.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.896" level="INFO">${OVERHEAD} = {'time': [0.023808764, 0.023926736, 0.024051306, 0.024170389, 0.024289819, 0.024412556, 0.024537014, 0.024659056, 0.024776917, 0.024897347, 0.025016, 0.025136153, 0.025255389, 0.025378472, 0.025501472...</msg>
<status status="PASS" starttime="20201115 22:03:05.883" endtime="20201115 22:03:05.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.901" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:05.900" endtime="20201115 22:03:05.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.903" level="INFO">VALUE: [3.625000000000156e-06, 3.4440000000017512e-06, 3.3619999999998096e-06, 3.445000000001225e-06, 3.513000000000127e-06, 3.4169999999986156e-06, 3.374999999999906e-06, 3.4309999999981855e-06, 3.4309999999981855e-06, 3.4440000000017512e-06, 3.4029999999990457e-06, 3.417000000002085e-06, 3.445000000001225e-06, 3.429999999998712e-06, 3.458000000001321e-06, 3.4440000000017512e-06, 3.3889999999994758e-06, 3.417000000002085e-06, 3.4029999999990457e-06, 3.4719999999974216e-06, 3.4309999999981855e-06, 3.500000000000031e-06, 3.472000000000891e-06, 3.445000000001225e-06, 3.4309999999981855e-06, 3.429999999998712e-06, 3.429999999998712e-06, 3.347000000000766e-06, 3.4169999999986156e-06, 3.4169999999986156e-06, 3.4300000000021813e-06, 3.4309999999981855e-06, 3.4309999999981855e-06, 3.429999999998712e-06, 3.4169999999986156e-06, 3.429999999998712e-06, 3.417000000002085e-06, 3.431000000001655e-06, 3.4440000000017512e-06, 3.4309999999981855e-06, 3.445000000001225e-06, 3.429999999998712e-06, 3.500000000000031e-06, 3.4029999999990457e-06, 3.429999999998712e-06, 3.500000000000031e-06, 3.429999999998712e-06, 3.415999999999142e-06, 3.4309999999981855e-06, 3.4309999999981855e-06]</msg>
<status status="PASS" starttime="20201115 22:03:05.902" endtime="20201115 22:03:05.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.897" endtime="20201115 22:03:05.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.906" endtime="20201115 22:03:05.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.910" endtime="20201115 22:03:05.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.908" endtime="20201115 22:03:05.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.905" endtime="20201115 22:03:05.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.538" endtime="20201115 22:03:05.930"></status>
</kw>
<msg timestamp="20201115 22:03:05.930" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.939" endtime="20201115 22:03:05.957"></status>
</kw>
<msg timestamp="20201115 22:03:05.957" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.938" endtime="20201115 22:03:05.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.959" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.958" endtime="20201115 22:03:05.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.961" endtime="20201115 22:03:05.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.935" endtime="20201115 22:03:05.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.933" endtime="20201115 22:03:05.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.970" endtime="20201115 22:03:06.255"></status>
</kw>
<msg timestamp="20201115 22:03:06.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.969" endtime="20201115 22:03:06.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.260" endtime="20201115 22:03:06.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.268" endtime="20201115 22:03:06.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.966" endtime="20201115 22:03:06.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.965" endtime="20201115 22:03:06.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.275" level="INFO">${RESULT} = [{'time': 0.022304375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.653000000002765e-06, 'source_diff': 3.653000000002765e-06}, {'time': 0.022429597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:06.271" endtime="20201115 22:03:06.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.288" level="INFO">${OVERHEAD} = {'time': [0.022304375, 0.022429597, 0.022552028, 0.02267675, 0.022795833, 0.022918653, 0.023037333, 0.023158306, 0.023283972, 0.023409736, 0.023530819, 0.023655806, 0.0237765, 0.023896986, 0.024021653...</msg>
<status status="PASS" starttime="20201115 22:03:06.276" endtime="20201115 22:03:06.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.292" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:06.291" endtime="20201115 22:03:06.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.295" level="INFO">VALUE: [3.653000000002765e-06, 3.429999999998712e-06, 3.4309999999981855e-06, 3.4439999999982818e-06, 3.4300000000021813e-06, 3.374999999999906e-06, 3.429999999998712e-06, 3.445000000001225e-06, 3.458000000001321e-06, 3.429999999998712e-06, 3.374999999999906e-06, 3.431000000001655e-06, 3.4309999999981855e-06, 3.4859999999969915e-06, 3.431000000001655e-06, 3.445000000001225e-06, 3.4029999999990457e-06, 3.401999999999572e-06, 3.4169999999986156e-06, 3.4439999999982818e-06, 3.431000000001655e-06, 3.361000000000336e-06, 3.431000000001655e-06, 3.500000000000031e-06, 3.4439999999982818e-06, 3.4300000000021813e-06, 3.500000000000031e-06, 3.4579999999978517e-06, 3.415999999999142e-06, 3.4300000000021813e-06, 3.403000000002515e-06, 3.4300000000021813e-06, 3.4300000000021813e-06, 3.4439999999982818e-06, 3.415999999999142e-06, 3.4449999999977554e-06, 3.458000000001321e-06, 3.4309999999981855e-06, 3.4719999999974216e-06, 3.4449999999977554e-06, 3.4309999999981855e-06, 3.4169999999986156e-06, 3.4029999999990457e-06, 3.4730000000003647e-06, 3.4169999999986156e-06, 3.4309999999981855e-06, 3.4169999999986156e-06, 3.429999999998712e-06, 3.4309999999981855e-06, 3.429999999998712e-06]</msg>
<status status="PASS" starttime="20201115 22:03:06.293" endtime="20201115 22:03:06.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.289" endtime="20201115 22:03:06.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.298" endtime="20201115 22:03:06.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.301" endtime="20201115 22:03:06.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.300" endtime="20201115 22:03:06.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.296" endtime="20201115 22:03:06.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.931" endtime="20201115 22:03:06.322"></status>
</kw>
<msg timestamp="20201115 22:03:06.322" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.331" endtime="20201115 22:03:06.348"></status>
</kw>
<msg timestamp="20201115 22:03:06.348" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.330" endtime="20201115 22:03:06.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.351" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.349" endtime="20201115 22:03:06.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.352" endtime="20201115 22:03:06.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.327" endtime="20201115 22:03:06.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.325" endtime="20201115 22:03:06.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.362" endtime="20201115 22:03:06.646"></status>
</kw>
<msg timestamp="20201115 22:03:06.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022235875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.360" endtime="20201115 22:03:06.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022235875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.651" endtime="20201115 22:03:06.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.659" endtime="20201115 22:03:06.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.357" endtime="20201115 22:03:06.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.356" endtime="20201115 22:03:06.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.666" level="INFO">${RESULT} = [{'time': 0.022239528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.653000000002765e-06, 'source_diff': 3.653000000002765e-06}, {'time': 0.022365556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:06.662" endtime="20201115 22:03:06.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.679" level="INFO">${OVERHEAD} = {'time': [0.022239528, 0.022365556, 0.022487708, 0.022607319, 0.022726139, 0.022848028, 0.022970208, 0.023092958, 0.023217194, 0.023339083, 0.023456958, 0.023577514, 0.023697236, 0.023822222, 0.023947...</msg>
<status status="PASS" starttime="20201115 22:03:06.666" endtime="20201115 22:03:06.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.683" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:06.682" endtime="20201115 22:03:06.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.686" level="INFO">VALUE: [3.653000000002765e-06, 3.403000000002515e-06, 3.429999999998712e-06, 3.4300000000021813e-06, 3.4309999999981855e-06, 3.4169999999986156e-06, 3.3889999999994758e-06, 3.486000000000461e-06, 3.429999999998712e-06, 3.429999999998712e-06, 3.429999999998712e-06, 3.431000000001655e-06, 3.429999999998712e-06, 3.374999999999906e-06, 3.5139999999996008e-06, 3.458000000001321e-06, 3.4309999999981855e-06, 3.415999999999142e-06, 3.429999999998712e-06, 3.4169999999986156e-06, 3.429999999998712e-06, 3.4449999999977554e-06, 3.4439999999982818e-06, 3.3889999999994758e-06, 3.417000000002085e-06, 3.500000000000031e-06, 3.458000000001321e-06, 3.4169999999986156e-06, 3.4169999999986156e-06, 3.458000000001321e-06, 3.401999999999572e-06, 3.431000000001655e-06, 3.4309999999981855e-06, 3.4160000000026114e-06, 3.4439999999982818e-06, 3.4449999999977554e-06, 3.4440000000017512e-06, 3.431000000001655e-06, 3.415999999999142e-06, 3.4169999999986156e-06, 3.472000000000891e-06, 3.415999999999142e-06, 3.4449999999977554e-06, 3.417000000002085e-06, 3.4169999999986156e-06, 3.4309999999981855e-06, 3.458000000001321e-06, 3.445000000001225e-06, 3.431000000001655e-06, 3.431000000001655e-06]</msg>
<status status="PASS" starttime="20201115 22:03:06.684" endtime="20201115 22:03:06.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.680" endtime="20201115 22:03:06.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.689" endtime="20201115 22:03:06.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.692" endtime="20201115 22:03:06.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.691" endtime="20201115 22:03:06.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.687" endtime="20201115 22:03:06.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.323" endtime="20201115 22:03:06.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.754" endtime="20201115 22:03:06.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.753" endtime="20201115 22:03:06.713"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.715" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.724" endtime="20201115 22:03:06.741"></status>
</kw>
<msg timestamp="20201115 22:03:06.741" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.723" endtime="20201115 22:03:06.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.744" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.742" endtime="20201115 22:03:06.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.745" endtime="20201115 22:03:06.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.720" endtime="20201115 22:03:06.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.718" endtime="20201115 22:03:06.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.754" endtime="20201115 22:03:07.038"></status>
</kw>
<msg timestamp="20201115 22:03:07.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024494222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024497972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.753" endtime="20201115 22:03:07.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024494222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024497972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.042" endtime="20201115 22:03:07.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.050" endtime="20201115 22:03:07.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.750" endtime="20201115 22:03:07.053"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.748" endtime="20201115 22:03:07.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.057" level="INFO">${RESULT} = [{'time': 0.024497972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.024629, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:03:07.054" endtime="20201115 22:03:07.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.070" level="INFO">${OVERHEAD} = {'time': [0.024497972, 0.024629, 0.024755889, 0.024882667, 0.025010417, 0.025140236, 0.025272375, 0.025404375, 0.025532236, 0.025660472, 0.025790333, 0.025920597, 0.0260495, 0.026174931, 0.026304639, ...</msg>
<status status="PASS" starttime="20201115 22:03:07.058" endtime="20201115 22:03:07.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.075" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:07.074" endtime="20201115 22:03:07.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.077" level="INFO">VALUE: [3.750000000000281e-06, 3.55600000000178e-06, 3.5419999999987406e-06, 3.57000000000135e-06, 3.55600000000178e-06, 3.554999999998837e-06, 3.5689999999984068e-06, 3.5279999999991707e-06, 3.554999999998837e-06, 3.540999999999267e-06, 3.5689999999984068e-06, 3.5279999999991707e-06, 3.5559999999983105e-06, 3.5419999999987406e-06, 3.55600000000178e-06, 3.5550000000023063e-06, 3.5550000000023063e-06, 3.5689999999984068e-06, 3.5419999999987406e-06, 3.540999999999267e-06, 3.5689999999984068e-06, 3.5689999999984068e-06, 3.5699999999978804e-06, 3.5559999999983105e-06, 3.554999999998837e-06, 3.5690000000018762e-06, 3.5279999999991707e-06, 3.540999999999267e-06, 3.554999999998837e-06, 3.5699999999978804e-06, 3.597000000001016e-06, 3.5689999999984068e-06, 3.5139999999996008e-06, 3.5279999999991707e-06, 3.5419999999987406e-06, 3.5550000000023063e-06, 3.5419999999987406e-06, 3.5559999999983105e-06, 3.5550000000023063e-06, 3.5559999999983105e-06, 3.5410000000027364e-06, 3.5550000000023063e-06, 3.6389999999997258e-06, 3.5550000000023063e-06, 3.5419999999987406e-06, 3.5829999999979767e-06, 3.55600000000178e-06, 3.554999999998837e-06, 3.5689999999984068e-06, 3.5689999999984068e-06]</msg>
<status status="PASS" starttime="20201115 22:03:07.076" endtime="20201115 22:03:07.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.071" endtime="20201115 22:03:07.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.080" endtime="20201115 22:03:07.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.084" endtime="20201115 22:03:07.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.082" endtime="20201115 22:03:07.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.079" endtime="20201115 22:03:07.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.716" endtime="20201115 22:03:07.104"></status>
</kw>
<msg timestamp="20201115 22:03:07.105" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.113" endtime="20201115 22:03:07.131"></status>
</kw>
<msg timestamp="20201115 22:03:07.131" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.112" endtime="20201115 22:03:07.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.134" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.132" endtime="20201115 22:03:07.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.135" endtime="20201115 22:03:07.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.109" endtime="20201115 22:03:07.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.107" endtime="20201115 22:03:07.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.145" endtime="20201115 22:03:07.430"></status>
</kw>
<msg timestamp="20201115 22:03:07.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022289986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.143" endtime="20201115 22:03:07.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022289986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.434" endtime="20201115 22:03:07.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.442" endtime="20201115 22:03:07.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.141" endtime="20201115 22:03:07.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.139" endtime="20201115 22:03:07.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.449" level="INFO">${RESULT} = [{'time': 0.022289986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.79200000000246e-06, 'source_diff': 3.79200000000246e-06}, {'time': 0.02242175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:03:07.445" endtime="20201115 22:03:07.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.463" level="INFO">${OVERHEAD} = {'time': [0.022289986, 0.02242175, 0.022553014, 0.022684486, 0.022816264, 0.022946194, 0.023078472, 0.023205514, 0.023338861, 0.023472056, 0.023598958, 0.023731125, 0.023857056, 0.023982875, 0.0241158...</msg>
<status status="PASS" starttime="20201115 22:03:07.450" endtime="20201115 22:03:07.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.467" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:07.466" endtime="20201115 22:03:07.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.470" level="INFO">VALUE: [3.79200000000246e-06, 3.625000000000156e-06, 3.5559999999983105e-06, 3.5690000000018762e-06, 3.597000000001016e-06, 3.554999999998837e-06, 3.5279999999991707e-06, 3.5419999999987406e-06, 3.554999999998837e-06, 3.55600000000178e-06, 3.554999999998837e-06, 3.5829999999979767e-06, 3.55600000000178e-06, 3.55600000000178e-06, 3.540999999999267e-06, 3.5419999999987406e-06, 3.5419999999987406e-06, 3.526999999999697e-06, 3.5410000000027364e-06, 3.540999999999267e-06, 3.554999999998837e-06, 3.57000000000135e-06, 3.554999999998837e-06, 3.5559999999983105e-06, 3.5419999999987406e-06, 3.5419999999987406e-06, 3.55600000000178e-06, 3.5690000000018762e-06, 3.5699999999978804e-06, 3.55600000000178e-06, 3.5559999999983105e-06, 3.554999999998837e-06, 3.5689999999984068e-06, 3.57000000000135e-06, 3.5559999999983105e-06, 3.540999999999267e-06, 3.554999999998837e-06, 3.500000000000031e-06, 3.5840000000009198e-06, 3.5689999999984068e-06, 3.500000000000031e-06, 3.540999999999267e-06, 3.5689999999984068e-06, 3.5690000000018762e-06, 3.55600000000178e-06, 3.5559999999983105e-06, 3.57000000000135e-06, 3.554999999998837e-06, 3.5690000000018762e-06, 3.526999999999697e-06]</msg>
<status status="PASS" starttime="20201115 22:03:07.468" endtime="20201115 22:03:07.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.464" endtime="20201115 22:03:07.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.473" endtime="20201115 22:03:07.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.476" endtime="20201115 22:03:07.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.475" endtime="20201115 22:03:07.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.471" endtime="20201115 22:03:07.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.105" endtime="20201115 22:03:07.497"></status>
</kw>
<msg timestamp="20201115 22:03:07.497" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.506" endtime="20201115 22:03:07.523"></status>
</kw>
<msg timestamp="20201115 22:03:07.524" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.505" endtime="20201115 22:03:07.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.526" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.525" endtime="20201115 22:03:07.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.527" endtime="20201115 22:03:07.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.502" endtime="20201115 22:03:07.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.500" endtime="20201115 22:03:07.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.537" endtime="20201115 22:03:07.822"></status>
</kw>
<msg timestamp="20201115 22:03:07.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022764208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022768042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.536" endtime="20201115 22:03:07.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022764208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022768042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.826" endtime="20201115 22:03:07.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.834" endtime="20201115 22:03:07.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.533" endtime="20201115 22:03:07.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.531" endtime="20201115 22:03:07.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.841" level="INFO">${RESULT} = [{'time': 0.022768042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8339999999977e-06, 'source_diff': 3.8339999999977e-06}, {'time': 0.022895556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3...</msg>
<status status="PASS" starttime="20201115 22:03:07.838" endtime="20201115 22:03:07.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.854" level="INFO">${OVERHEAD} = {'time': [0.022768042, 0.022895556, 0.023025375, 0.023158056, 0.023290333, 0.023415611, 0.023545875, 0.023672361, 0.023801806, 0.0239275, 0.024058167, 0.024185528, 0.024315333, 0.024440764, 0.02456777...</msg>
<status status="PASS" starttime="20201115 22:03:07.842" endtime="20201115 22:03:07.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.859" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:07.858" endtime="20201115 22:03:07.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.861" level="INFO">VALUE: [3.8339999999977e-06, 3.57000000000135e-06, 3.486000000000461e-06, 3.5559999999983105e-06, 3.540999999999267e-06, 3.554999999998837e-06, 3.5279999999991707e-06, 3.5419999999987406e-06, 3.5559999999983105e-06, 3.55600000000178e-06, 3.4859999999969915e-06, 3.597000000001016e-06, 3.5550000000023063e-06, 3.55600000000178e-06, 3.5559999999983105e-06, 3.55600000000178e-06, 3.5969999999975466e-06, 3.5559999999983105e-06, 3.5699999999978804e-06, 3.554999999998837e-06, 3.5419999999987406e-06, 3.54200000000221e-06, 3.57000000000135e-06, 3.54200000000221e-06, 3.54200000000221e-06, 3.5699999999978804e-06, 3.5410000000027364e-06, 3.54200000000221e-06, 3.5699999999978804e-06, 3.5699999999978804e-06, 3.5559999999983105e-06, 3.5689999999984068e-06, 3.554999999998837e-06, 3.5689999999984068e-06, 3.5689999999984068e-06, 3.5279999999991707e-06, 3.597000000001016e-06, 3.55600000000178e-06, 3.54200000000221e-06, 3.540999999999267e-06, 3.5550000000023063e-06, 3.55600000000178e-06, 3.5689999999984068e-06, 3.5559999999983105e-06, 3.5840000000009198e-06, 3.5559999999983105e-06, 3.5829999999979767e-06, 3.5419999999987406e-06, 3.5559999999983105e-06, 3.5419999999987406e-06]</msg>
<status status="PASS" starttime="20201115 22:03:07.860" endtime="20201115 22:03:07.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.855" endtime="20201115 22:03:07.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.864" endtime="20201115 22:03:07.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.868" endtime="20201115 22:03:07.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.866" endtime="20201115 22:03:07.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.863" endtime="20201115 22:03:07.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.498" endtime="20201115 22:03:07.889"></status>
</kw>
<msg timestamp="20201115 22:03:07.889" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.898" endtime="20201115 22:03:07.915"></status>
</kw>
<msg timestamp="20201115 22:03:07.915" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.896" endtime="20201115 22:03:07.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.918" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.916" endtime="20201115 22:03:07.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.919" endtime="20201115 22:03:07.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.894" endtime="20201115 22:03:07.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.891" endtime="20201115 22:03:07.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.929" endtime="20201115 22:03:08.215"></status>
</kw>
<msg timestamp="20201115 22:03:08.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022349125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022352917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.927" endtime="20201115 22:03:08.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022349125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022352917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.219" endtime="20201115 22:03:08.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.227" endtime="20201115 22:03:08.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.925" endtime="20201115 22:03:08.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.923" endtime="20201115 22:03:08.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:08.234" level="INFO">${RESULT} = [{'time': 0.022352917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.022482194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:08.231" endtime="20201115 22:03:08.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:08.247" level="INFO">${OVERHEAD} = {'time': [0.022352917, 0.022482194, 0.022614194, 0.022740097, 0.02286625, 0.022993306, 0.023122472, 0.023255569, 0.023382708, 0.023510958, 0.023643778, 0.023775556, 0.023904417, 0.024030653, 0.0241586...</msg>
<status status="PASS" starttime="20201115 22:03:08.235" endtime="20201115 22:03:08.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.252" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:08.251" endtime="20201115 22:03:08.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.254" level="INFO">VALUE: [3.7919999999989906e-06, 3.486000000000461e-06, 3.5550000000023063e-06, 3.597000000001016e-06, 3.54200000000221e-06, 3.4869999999999346e-06, 3.5690000000018762e-06, 3.583000000001446e-06, 3.554999999998837e-06, 3.554999999998837e-06, 3.55600000000178e-06, 3.6120000000000596e-06, 3.55600000000178e-06, 3.5139999999996008e-06, 3.5419999999987406e-06, 3.57000000000135e-06, 3.54200000000221e-06, 3.540999999999267e-06, 3.5690000000018762e-06, 3.5559999999983105e-06, 3.55600000000178e-06, 3.55600000000178e-06, 3.500000000000031e-06, 3.5419999999987406e-06, 3.5840000000009198e-06, 3.583000000001446e-06, 3.5690000000018762e-06, 3.5140000000030702e-06, 3.5839999999974503e-06, 3.554999999998837e-06, 3.5550000000023063e-06, 3.500000000000031e-06, 3.5550000000023063e-06, 3.5279999999991707e-06, 3.55600000000178e-06, 3.5279999999991707e-06, 3.55600000000178e-06, 3.5829999999979767e-06, 3.540999999999267e-06, 3.5279999999991707e-06, 3.625000000000156e-06, 3.5689999999984068e-06, 3.5559999999983105e-06, 3.540999999999267e-06, 3.554999999998837e-06, 3.583000000001446e-06, 3.55600000000178e-06, 3.554999999998837e-06, 3.5689999999984068e-06, 3.5550000000023063e-06]</msg>
<status status="PASS" starttime="20201115 22:03:08.253" endtime="20201115 22:03:08.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.248" endtime="20201115 22:03:08.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.258" endtime="20201115 22:03:08.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:08.261" endtime="20201115 22:03:08.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.259" endtime="20201115 22:03:08.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.256" endtime="20201115 22:03:08.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.889" endtime="20201115 22:03:08.282"></status>
</kw>
<msg timestamp="20201115 22:03:08.282" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.291" endtime="20201115 22:03:08.308"></status>
</kw>
<msg timestamp="20201115 22:03:08.309" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.289" endtime="20201115 22:03:08.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.311" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.310" endtime="20201115 22:03:08.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.312" endtime="20201115 22:03:08.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.286" endtime="20201115 22:03:08.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.284" endtime="20201115 22:03:08.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.322" endtime="20201115 22:03:08.608"></status>
</kw>
<msg timestamp="20201115 22:03:08.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022622125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.320" endtime="20201115 22:03:08.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022622125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.612" endtime="20201115 22:03:08.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.620" endtime="20201115 22:03:08.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.318" endtime="20201115 22:03:08.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.316" endtime="20201115 22:03:08.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:08.626" level="INFO">${RESULT} = [{'time': 0.022622125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.022752472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:08.623" endtime="20201115 22:03:08.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:08.640" level="INFO">${OVERHEAD} = {'time': [0.022622125, 0.022752472, 0.022885153, 0.023011778, 0.023138542, 0.023270167, 0.023402778, 0.023528792, 0.023654806, 0.023783931, 0.023913667, 0.024039333, 0.024172431, 0.024298514, 0.024430...</msg>
<status status="PASS" starttime="20201115 22:03:08.627" endtime="20201115 22:03:08.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.644" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:08.643" endtime="20201115 22:03:08.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.647" level="INFO">VALUE: [3.750000000000281e-06, 3.540999999999267e-06, 3.5559999999983105e-06, 3.55600000000178e-06, 3.55600000000178e-06, 3.57000000000135e-06, 3.5969999999975466e-06, 3.486000000000461e-06, 3.6120000000000596e-06, 3.55600000000178e-06, 3.5840000000009198e-06, 3.540999999999267e-06, 3.5840000000009198e-06, 3.472000000000891e-06, 3.5840000000009198e-06, 3.57000000000135e-06, 3.5829999999979767e-06, 3.55600000000178e-06, 3.5550000000023063e-06, 3.540999999999267e-06, 3.540999999999267e-06, 3.5559999999983105e-06, 3.57000000000135e-06, 3.54200000000221e-06, 3.5840000000009198e-06, 3.5559999999983105e-06, 3.55600000000178e-06, 3.5559999999983105e-06, 3.55600000000178e-06, 3.500000000000031e-06, 3.5559999999983105e-06, 3.5689999999984068e-06, 3.5689999999984068e-06, 3.6389999999997258e-06, 3.5689999999984068e-06, 3.5699999999978804e-06, 3.540999999999267e-06, 3.5699999999978804e-06, 3.5559999999983105e-06, 3.54200000000221e-06, 3.5559999999983105e-06, 3.583000000001446e-06, 3.597000000001016e-06, 3.5419999999987406e-06, 3.6249999999966864e-06, 3.5139999999996008e-06, 3.55600000000178e-06, 3.55600000000178e-06, 3.625000000000156e-06, 3.55600000000178e-06]</msg>
<status status="PASS" starttime="20201115 22:03:08.645" endtime="20201115 22:03:08.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.641" endtime="20201115 22:03:08.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.650" endtime="20201115 22:03:08.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:08.654" endtime="20201115 22:03:08.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.652" endtime="20201115 22:03:08.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.649" endtime="20201115 22:03:08.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.282" endtime="20201115 22:03:08.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.714" endtime="20201115 22:03:08.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.714" endtime="20201115 22:03:08.675"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.677" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.686" endtime="20201115 22:03:08.703"></status>
</kw>
<msg timestamp="20201115 22:03:08.704" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.684" endtime="20201115 22:03:08.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.706" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.705" endtime="20201115 22:03:08.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.707" endtime="20201115 22:03:08.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.681" endtime="20201115 22:03:08.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.679" endtime="20201115 22:03:08.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.716" endtime="20201115 22:03:09.002"></status>
</kw>
<msg timestamp="20201115 22:03:09.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024850417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024854333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.715" endtime="20201115 22:03:09.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024850417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024854333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.006" endtime="20201115 22:03:09.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.014" endtime="20201115 22:03:09.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.712" endtime="20201115 22:03:09.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.710" endtime="20201115 22:03:09.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.021" level="INFO">${RESULT} = [{'time': 0.024854333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.915999999999642e-06, 'source_diff': 3.915999999999642e-06}, {'time': 0.024995653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:09.017" endtime="20201115 22:03:09.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.035" level="INFO">${OVERHEAD} = {'time': [0.024854333, 0.024995653, 0.025128972, 0.025266, 0.025405472, 0.025545069, 0.025680917, 0.025817694, 0.025954083, 0.026093486, 0.026234097, 0.026369944, 0.026509417, 0.026642708, 0.026780972...</msg>
<status status="PASS" starttime="20201115 22:03:09.021" endtime="20201115 22:03:09.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.039" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:09.038" endtime="20201115 22:03:09.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.042" level="INFO">VALUE: [3.915999999999642e-06, 3.709000000001045e-06, 3.736000000000711e-06, 3.693999999998532e-06, 3.7219999999976716e-06, 3.693999999998532e-06, 3.709000000001045e-06, 3.7079999999981017e-06, 3.679999999998962e-06, 3.763999999999851e-06, 3.6800000000024313e-06, 3.7079999999981017e-06, 3.709000000001045e-06, 3.708000000001571e-06, 3.693999999998532e-06, 3.722000000001141e-06, 3.722000000001141e-06, 3.6800000000024313e-06, 3.7079999999981017e-06, 3.6669999999988656e-06, 3.695000000001475e-06, 3.6949999999980054e-06, 3.708000000001571e-06, 3.693999999998532e-06, 3.7919999999989906e-06, 3.7089999999975753e-06, 3.708000000001571e-06, 3.736000000000711e-06, 3.722000000001141e-06, 3.6949999999980054e-06, 3.763999999999851e-06, 3.708000000001571e-06, 3.750000000000281e-06, 3.695000000001475e-06, 3.6949999999980054e-06, 3.653000000002765e-06, 3.708000000001571e-06, 3.7079999999981017e-06, 3.708000000001571e-06, 3.708000000001571e-06, 3.695000000001475e-06, 3.709000000001045e-06, 3.7089999999975753e-06, 3.722000000001141e-06, 3.7079999999981017e-06, 3.7079999999981017e-06, 3.6389999999997258e-06, 3.693999999998532e-06, 3.6950000000049443e-06, 3.693999999998532e-06]</msg>
<status status="PASS" starttime="20201115 22:03:09.040" endtime="20201115 22:03:09.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.036" endtime="20201115 22:03:09.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.045" endtime="20201115 22:03:09.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.049" endtime="20201115 22:03:09.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.047" endtime="20201115 22:03:09.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.044" endtime="20201115 22:03:09.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.677" endtime="20201115 22:03:09.069"></status>
</kw>
<msg timestamp="20201115 22:03:09.070" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.078" endtime="20201115 22:03:09.096"></status>
</kw>
<msg timestamp="20201115 22:03:09.096" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.077" endtime="20201115 22:03:09.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.099" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.097" endtime="20201115 22:03:09.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.100" endtime="20201115 22:03:09.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.074" endtime="20201115 22:03:09.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.072" endtime="20201115 22:03:09.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.110" endtime="20201115 22:03:09.396"></status>
</kw>
<msg timestamp="20201115 22:03:09.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022275319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.108" endtime="20201115 22:03:09.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022275319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.400" endtime="20201115 22:03:09.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.408" endtime="20201115 22:03:09.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.106" endtime="20201115 22:03:09.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.104" endtime="20201115 22:03:09.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.415" level="INFO">${RESULT} = [{'time': 0.022275319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.022409986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:09.411" endtime="20201115 22:03:09.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.428" level="INFO">${OVERHEAD} = {'time': [0.022275319, 0.022409986, 0.022545528, 0.022686597, 0.022819611, 0.022955861, 0.023090236, 0.023223125, 0.023363, 0.02349925, 0.023633486, 0.023769889, 0.023908806, 0.024048417, 0.024184792,...</msg>
<status status="PASS" starttime="20201115 22:03:09.416" endtime="20201115 22:03:09.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.433" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:09.432" endtime="20201115 22:03:09.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.435" level="INFO">VALUE: [3.929999999999212e-06, 3.763999999999851e-06, 3.7219999999976716e-06, 3.7219999999976716e-06, 3.708000000001571e-06, 3.708000000001571e-06, 3.693999999998532e-06, 3.667000000002335e-06, 3.693999999998532e-06, 3.693999999998532e-06, 3.693999999998532e-06, 3.7079999999981017e-06, 3.695000000001475e-06, 3.7089999999975753e-06, 3.695000000001475e-06, 3.708000000001571e-06, 3.708000000001571e-06, 3.722000000001141e-06, 3.667000000002335e-06, 3.653000000002765e-06, 3.679999999998962e-06, 3.6809999999984355e-06, 3.709000000001045e-06, 3.6949999999980054e-06, 3.6940000000020012e-06, 3.695000000001475e-06, 3.7229999999971453e-06, 3.695000000001475e-06, 3.708000000001571e-06, 3.763000000000377e-06, 3.736000000000711e-06, 3.6940000000020012e-06, 3.709000000001045e-06, 3.708000000001571e-06, 3.7079999999981017e-06, 3.763999999999851e-06, 3.709000000001045e-06, 3.7079999999981017e-06, 3.6949999999980054e-06, 3.7079999999981017e-06, 3.7079999999981017e-06, 3.708000000001571e-06, 3.750000000000281e-06, 3.708000000001571e-06, 3.695000000001475e-06, 3.709000000001045e-06, 3.708000000001571e-06, 3.708000000001571e-06, 3.7219999999976716e-06, 3.693999999998532e-06]</msg>
<status status="PASS" starttime="20201115 22:03:09.434" endtime="20201115 22:03:09.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.429" endtime="20201115 22:03:09.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.438" endtime="20201115 22:03:09.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.442" endtime="20201115 22:03:09.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.440" endtime="20201115 22:03:09.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.437" endtime="20201115 22:03:09.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.070" endtime="20201115 22:03:09.462"></status>
</kw>
<msg timestamp="20201115 22:03:09.463" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.471" endtime="20201115 22:03:09.489"></status>
</kw>
<msg timestamp="20201115 22:03:09.489" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.470" endtime="20201115 22:03:09.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.492" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.490" endtime="20201115 22:03:09.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.493" endtime="20201115 22:03:09.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.467" endtime="20201115 22:03:09.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.465" endtime="20201115 22:03:09.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.503" endtime="20201115 22:03:09.787"></status>
</kw>
<msg timestamp="20201115 22:03:09.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.501" endtime="20201115 22:03:09.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.791" endtime="20201115 22:03:09.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.799" endtime="20201115 22:03:09.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.499" endtime="20201115 22:03:09.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.497" endtime="20201115 22:03:09.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.806" level="INFO">${RESULT} = [{'time': 0.022482181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.945000000001725e-06, 'source_diff': 3.945000000001725e-06}, {'time': 0.022621333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:09.803" endtime="20201115 22:03:09.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.823" level="INFO">${OVERHEAD} = {'time': [0.022482181, 0.022621333, 0.022756111, 0.022890208, 0.023030347, 0.023165125, 0.023297875, 0.023430639, 0.023568125, 0.023701903, 0.023840986, 0.023976403, 0.024115653, 0.024251458, 0.024384...</msg>
<status status="PASS" starttime="20201115 22:03:09.811" endtime="20201115 22:03:09.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.828" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:09.827" endtime="20201115 22:03:09.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.830" level="INFO">VALUE: [3.945000000001725e-06, 3.708000000001571e-06, 3.7079999999981017e-06, 3.7079999999981017e-06, 3.7079999999981017e-06, 3.708000000001571e-06, 3.7079999999981017e-06, 3.722000000001141e-06, 3.7079999999981017e-06, 3.709000000001045e-06, 3.708000000001571e-06, 3.709000000001045e-06, 3.763999999999851e-06, 3.722000000001141e-06, 3.6800000000024313e-06, 3.7079999999981017e-06, 3.7230000000006147e-06, 3.693999999998532e-06, 3.693999999998532e-06, 3.708000000001571e-06, 3.7079999999981017e-06, 3.708000000001571e-06, 3.736000000000711e-06, 3.722000000001141e-06, 3.7219999999976716e-06, 3.7079999999981017e-06, 3.708000000001571e-06, 3.695000000001475e-06, 3.7079999999981017e-06, 3.709000000001045e-06, 3.708000000001571e-06, 3.722000000001141e-06, 3.7219999999976716e-06, 3.693999999998532e-06, 3.7219999999976716e-06, 3.708000000001571e-06, 3.693999999998532e-06, 3.708000000001571e-06, 3.681000000001905e-06, 3.625000000000156e-06, 3.6940000000020012e-06, 3.7219999999976716e-06, 3.7079999999981017e-06, 3.722000000001141e-06, 3.708000000001571e-06, 3.6529999999992957e-06, 3.6389999999997258e-06, 3.693999999998532e-06, 3.6669999999988656e-06, 3.7230000000006147e-06]</msg>
<status status="PASS" starttime="20201115 22:03:09.829" endtime="20201115 22:03:09.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.824" endtime="20201115 22:03:09.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.833" endtime="20201115 22:03:09.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.837" endtime="20201115 22:03:09.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.835" endtime="20201115 22:03:09.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.832" endtime="20201115 22:03:09.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.463" endtime="20201115 22:03:09.857"></status>
</kw>
<msg timestamp="20201115 22:03:09.858" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.866" endtime="20201115 22:03:09.884"></status>
</kw>
<msg timestamp="20201115 22:03:09.884" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.865" endtime="20201115 22:03:09.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.887" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.885" endtime="20201115 22:03:09.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.888" endtime="20201115 22:03:09.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.862" endtime="20201115 22:03:09.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.860" endtime="20201115 22:03:09.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.898" endtime="20201115 22:03:10.183"></status>
</kw>
<msg timestamp="20201115 22:03:10.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022483319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.896" endtime="20201115 22:03:10.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022483319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.187" endtime="20201115 22:03:10.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.196" endtime="20201115 22:03:10.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.894" endtime="20201115 22:03:10.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.892" endtime="20201115 22:03:10.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.202" level="INFO">${RESULT} = [{'time': 0.022487278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.958999999997825e-06, 'source_diff': 3.958999999997825e-06}, {'time': 0.022622667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:10.199" endtime="20201115 22:03:10.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.216" level="INFO">${OVERHEAD} = {'time': [0.022487278, 0.022622667, 0.022758375, 0.022896778, 0.023032, 0.023168069, 0.023309153, 0.023445583, 0.02358475, 0.023723681, 0.023859792, 0.023992542, 0.024131347, 0.024266792, 0.024399847,...</msg>
<status status="PASS" starttime="20201115 22:03:10.203" endtime="20201115 22:03:10.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.220" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:10.219" endtime="20201115 22:03:10.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.223" level="INFO">VALUE: [3.958999999997825e-06, 3.6529999999992957e-06, 3.708000000001571e-06, 3.6529999999992957e-06, 3.750000000000281e-06, 3.7079999999981017e-06, 3.7089999999975753e-06, 3.750000000000281e-06, 3.681000000001905e-06, 3.7230000000006147e-06, 3.709000000001045e-06, 3.6949999999980054e-06, 3.6940000000020012e-06, 3.7089999999975753e-06, 3.7359999999972415e-06, 3.693999999998532e-06, 3.708000000001571e-06, 3.7089999999975753e-06, 3.681000000001905e-06, 3.6529999999992957e-06, 3.6940000000020012e-06, 3.7089999999975753e-06, 3.7079999999981017e-06, 3.7079999999981017e-06, 3.6940000000020012e-06, 3.763999999999851e-06, 3.7079999999981017e-06, 3.7079999999981017e-06, 3.6809999999984355e-06, 3.695000000001475e-06, 3.708000000001571e-06, 3.709000000001045e-06, 3.693999999998532e-06, 3.709000000001045e-06, 3.7229999999971453e-06, 3.7079999999981017e-06, 3.6949999999980054e-06, 3.763000000000377e-06, 3.7779999999994207e-06, 3.6940000000020012e-06, 3.681000000001905e-06, 3.708000000001571e-06, 3.6809999999984355e-06, 3.693999999998532e-06, 3.709000000001045e-06, 3.708000000001571e-06, 3.7079999999981017e-06, 3.708000000001571e-06, 3.695000000001475e-06, 3.7079999999981017e-06]</msg>
<status status="PASS" starttime="20201115 22:03:10.221" endtime="20201115 22:03:10.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.217" endtime="20201115 22:03:10.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.226" endtime="20201115 22:03:10.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.229" endtime="20201115 22:03:10.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.228" endtime="20201115 22:03:10.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.224" endtime="20201115 22:03:10.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.858" endtime="20201115 22:03:10.250"></status>
</kw>
<msg timestamp="20201115 22:03:10.250" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.259" endtime="20201115 22:03:10.276"></status>
</kw>
<msg timestamp="20201115 22:03:10.277" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.257" endtime="20201115 22:03:10.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.279" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.278" endtime="20201115 22:03:10.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.280" endtime="20201115 22:03:10.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.255" endtime="20201115 22:03:10.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.253" endtime="20201115 22:03:10.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.290" endtime="20201115 22:03:10.575"></status>
</kw>
<msg timestamp="20201115 22:03:10.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022623333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.289" endtime="20201115 22:03:10.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022623333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.579" endtime="20201115 22:03:10.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.587" endtime="20201115 22:03:10.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.286" endtime="20201115 22:03:10.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.284" endtime="20201115 22:03:10.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.594" level="INFO">${RESULT} = [{'time': 0.022623333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.943999999998782e-06, 'source_diff': 3.943999999998782e-06}, {'time': 0.022756583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:10.591" endtime="20201115 22:03:10.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.608" level="INFO">${OVERHEAD} = {'time': [0.022623333, 0.022756583, 0.022889889, 0.023025569, 0.023165861, 0.02330625, 0.023439431, 0.023576472, 0.023712736, 0.023847347, 0.023983597, 0.024116542, 0.024250486, 0.024389681, 0.0245276...</msg>
<status status="PASS" starttime="20201115 22:03:10.595" endtime="20201115 22:03:10.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.613" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:10.612" endtime="20201115 22:03:10.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.616" level="INFO">VALUE: [3.943999999998782e-06, 3.722000000001141e-06, 3.722000000001141e-06, 3.7079999999981017e-06, 3.7219999999976716e-06, 3.6940000000020012e-06, 3.6669999999988656e-06, 3.708000000001571e-06, 3.736000000000711e-06, 3.6800000000024313e-06, 3.7079999999981017e-06, 3.750000000000281e-06, 3.722000000001141e-06, 3.709000000001045e-06, 3.709000000001045e-06, 3.7230000000006147e-06, 3.7079999999981017e-06, 3.6949999999980054e-06, 3.6949999999980054e-06, 3.722000000001141e-06, 3.7079999999981017e-06, 3.708000000001571e-06, 3.7089999999975753e-06, 3.7079999999981017e-06, 3.7219999999976716e-06, 3.708000000001571e-06, 3.722000000001141e-06, 3.7219999999976716e-06, 3.693999999998532e-06, 3.7079999999981017e-06, 3.693999999998532e-06, 3.722000000001141e-06, 3.708000000001571e-06, 3.7079999999981017e-06, 3.708000000001571e-06, 3.7079999999981017e-06, 3.6529999999992957e-06, 3.7079999999981017e-06, 3.708000000001571e-06, 3.708000000001571e-06, 3.709000000001045e-06, 3.6940000000020012e-06, 3.6949999999980054e-06, 3.708000000001571e-06, 3.7230000000006147e-06, 3.7219999999976716e-06, 3.709000000001045e-06, 3.6940000000020012e-06, 3.709000000001045e-06, 3.763999999999851e-06]</msg>
<status status="PASS" starttime="20201115 22:03:10.614" endtime="20201115 22:03:10.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.609" endtime="20201115 22:03:10.617"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.619" endtime="20201115 22:03:10.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.623" endtime="20201115 22:03:10.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.621" endtime="20201115 22:03:10.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.617" endtime="20201115 22:03:10.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.251" endtime="20201115 22:03:10.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.676" endtime="20201115 22:03:10.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.675" endtime="20201115 22:03:10.644"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.647" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.655" endtime="20201115 22:03:10.672"></status>
</kw>
<msg timestamp="20201115 22:03:10.673" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.654" endtime="20201115 22:03:10.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.675" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.674" endtime="20201115 22:03:10.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.676" endtime="20201115 22:03:10.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.651" endtime="20201115 22:03:10.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.649" endtime="20201115 22:03:10.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.686" endtime="20201115 22:03:10.971"></status>
</kw>
<msg timestamp="20201115 22:03:10.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025068542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025072625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.684" endtime="20201115 22:03:10.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025068542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025072625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.975" endtime="20201115 22:03:10.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.983" endtime="20201115 22:03:10.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.682" endtime="20201115 22:03:10.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.680" endtime="20201115 22:03:10.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.990" level="INFO">${RESULT} = [{'time': 0.025072625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.025217486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:10.986" endtime="20201115 22:03:10.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.003" level="INFO">${OVERHEAD} = {'time': [0.025072625, 0.025217486, 0.02536225, 0.025504097, 0.025651014, 0.025797153, 0.025941528, 0.026083486, 0.026230875, 0.026376667, 0.026524139, 0.026667903, 0.026816403, 0.026964556, 0.0271129...</msg>
<status status="PASS" starttime="20201115 22:03:10.991" endtime="20201115 22:03:11.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.007" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:11.006" endtime="20201115 22:03:11.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.010" level="INFO">VALUE: [4.083000000001946e-06, 3.833000000001696e-06, 3.818999999998657e-06, 3.832999999998227e-06, 3.8199999999981304e-06, 3.847000000001266e-06, 3.8059999999985605e-06, 3.804999999999087e-06, 3.833000000001696e-06, 3.84800000000074e-06, 3.846999999997797e-06, 3.888999999999976e-06, 3.8339999999977e-06, 3.84800000000074e-06, 3.832999999998227e-06, 3.77800000000289e-06, 3.902999999999546e-06, 3.8200000000016e-06, 3.833000000001696e-06, 3.846999999997797e-06, 3.847000000001266e-06, 3.861000000000836e-06, 3.8199999999981304e-06, 3.8200000000016e-06, 3.847000000001266e-06, 3.84800000000074e-06, 3.832999999998227e-06, 3.818999999998657e-06, 3.833000000001696e-06, 3.832999999998227e-06, 3.833000000001696e-06, 3.8199999999981304e-06, 3.818999999998657e-06, 3.832999999998227e-06, 3.861000000000836e-06, 3.902999999999546e-06, 3.847000000001266e-06, 3.8199999999981304e-06, 3.847000000001266e-06, 3.832999999998227e-06, 3.832999999998227e-06, 3.847000000001266e-06, 3.7640000000033202e-06, 3.818999999995187e-06, 3.832999999994757e-06, 3.84800000000074e-06, 3.833000000001696e-06, 3.902000000000072e-06, 3.8200000000016e-06, 3.875000000000406e-06]</msg>
<status status="PASS" starttime="20201115 22:03:11.009" endtime="20201115 22:03:11.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.004" endtime="20201115 22:03:11.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.013" endtime="20201115 22:03:11.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.016" endtime="20201115 22:03:11.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.015" endtime="20201115 22:03:11.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.011" endtime="20201115 22:03:11.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.647" endtime="20201115 22:03:11.037"></status>
</kw>
<msg timestamp="20201115 22:03:11.037" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.046" endtime="20201115 22:03:11.063"></status>
</kw>
<msg timestamp="20201115 22:03:11.064" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.044" endtime="20201115 22:03:11.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.067" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.065" endtime="20201115 22:03:11.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.068" endtime="20201115 22:03:11.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.042" endtime="20201115 22:03:11.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.040" endtime="20201115 22:03:11.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.077" endtime="20201115 22:03:11.363"></status>
</kw>
<msg timestamp="20201115 22:03:11.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02235275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:11.076" endtime="20201115 22:03:11.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02235275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:11.367" endtime="20201115 22:03:11.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.374" endtime="20201115 22:03:11.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.073" endtime="20201115 22:03:11.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.072" endtime="20201115 22:03:11.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.381" level="INFO">${RESULT} = [{'time': 0.022356806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0559999999988106e-06, 'source_diff': 4.0559999999988106e-06}, {'time': 0.022505847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:11.378" endtime="20201115 22:03:11.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.394" level="INFO">${OVERHEAD} = {'time': [0.022356806, 0.022505847, 0.022654111, 0.022797556, 0.022944611, 0.023088333, 0.023230569, 0.023373056, 0.023517431, 0.023666111, 0.023811708, 0.023957556, 0.024103278, 0.024244694, 0.024392...</msg>
<status status="PASS" starttime="20201115 22:03:11.382" endtime="20201115 22:03:11.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.399" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:11.398" endtime="20201115 22:03:11.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.401" level="INFO">VALUE: [4.0559999999988106e-06, 3.846999999997797e-06, 3.8050000000025563e-06, 3.83400000000117e-06, 3.804999999999087e-06, 3.846999999997797e-06, 3.818999999998657e-06, 3.83400000000117e-06, 3.8339999999977e-06, 3.847000000001266e-06, 3.790999999999517e-06, 3.84800000000074e-06, 3.8339999999977e-06, 3.819000000002126e-06, 3.84800000000074e-06, 3.875000000000406e-06, 3.819000000002126e-06, 3.83400000000117e-06, 3.833000000001696e-06, 3.833000000001696e-06, 3.8200000000016e-06, 3.8059999999985605e-06, 3.902999999999546e-06, 3.83400000000117e-06, 3.888000000000502e-06, 3.818999999998657e-06, 3.846999999997797e-06, 3.818999999998657e-06, 3.8199999999981304e-06, 3.833000000001696e-06, 3.861000000000836e-06, 3.84800000000074e-06, 3.846999999997797e-06, 3.7779999999994207e-06, 3.847000000001266e-06, 3.833000000001696e-06, 3.875000000000406e-06, 3.83400000000117e-06, 3.832999999998227e-06, 3.83400000000117e-06, 3.875000000000406e-06, 3.83400000000117e-06, 3.833000000001696e-06, 3.888999999999976e-06, 3.902999999999546e-06, 3.832999999998227e-06, 3.847000000001266e-06, 3.832999999998227e-06, 3.8339999999977e-06, 3.847000000001266e-06]</msg>
<status status="PASS" starttime="20201115 22:03:11.400" endtime="20201115 22:03:11.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.395" endtime="20201115 22:03:11.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.404" endtime="20201115 22:03:11.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.408" endtime="20201115 22:03:11.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.406" endtime="20201115 22:03:11.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.403" endtime="20201115 22:03:11.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.038" endtime="20201115 22:03:11.428"></status>
</kw>
<msg timestamp="20201115 22:03:11.429" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.438" endtime="20201115 22:03:11.456"></status>
</kw>
<msg timestamp="20201115 22:03:11.456" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.436" endtime="20201115 22:03:11.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.459" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.457" endtime="20201115 22:03:11.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.460" endtime="20201115 22:03:11.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.433" endtime="20201115 22:03:11.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.431" endtime="20201115 22:03:11.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.470" endtime="20201115 22:03:11.755"></status>
</kw>
<msg timestamp="20201115 22:03:11.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022956569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022960611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.468" endtime="20201115 22:03:11.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022956569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022960611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.759" endtime="20201115 22:03:11.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.767" endtime="20201115 22:03:11.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.466" endtime="20201115 22:03:11.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.464" endtime="20201115 22:03:11.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.774" level="INFO">${RESULT} = [{'time': 0.022960611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.023108833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:11.770" endtime="20201115 22:03:11.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.787" level="INFO">${OVERHEAD} = {'time': [0.022960611, 0.023108833, 0.023255514, 0.023397458, 0.023543708, 0.023689833, 0.023837153, 0.023985694, 0.024131028, 0.024272986, 0.024420986, 0.024562556, 0.024704514, 0.024848278, 0.024989...</msg>
<status status="PASS" starttime="20201115 22:03:11.775" endtime="20201115 22:03:11.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.791" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:11.790" endtime="20201115 22:03:11.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.794" level="INFO">VALUE: [4.041999999999241e-06, 3.846999999997797e-06, 3.861000000000836e-06, 3.832999999998227e-06, 3.833000000001696e-06, 3.847000000001266e-06, 3.83400000000117e-06, 3.846999999997797e-06, 3.846999999997797e-06, 3.804999999999087e-06, 3.846999999997797e-06, 3.84800000000074e-06, 3.80600000000203e-06, 3.903000000003015e-06, 3.833000000001696e-06, 3.819000000002126e-06, 3.818999999998657e-06, 3.832999999998227e-06, 3.847000000001266e-06, 3.8199999999981304e-06, 3.833000000001696e-06, 3.83400000000117e-06, 3.832999999998227e-06, 3.8199999999981304e-06, 3.833000000001696e-06, 3.832999999998227e-06, 3.847000000001266e-06, 3.86200000000031e-06, 3.847000000001266e-06, 3.847000000001266e-06, 3.8200000000016e-06, 3.83400000000117e-06, 3.8339999999977e-06, 3.819000000002126e-06, 3.818999999998657e-06, 3.875000000000406e-06, 3.832999999998227e-06, 3.861000000000836e-06, 3.847000000001266e-06, 3.833000000001696e-06, 3.8339999999977e-06, 3.847000000001266e-06, 3.8339999999977e-06, 3.832999999998227e-06, 3.804999999999087e-06, 3.832999999998227e-06, 3.818999999998657e-06, 3.875000000000406e-06, 3.819000000002126e-06, 3.819000000002126e-06]</msg>
<status status="PASS" starttime="20201115 22:03:11.792" endtime="20201115 22:03:11.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.788" endtime="20201115 22:03:11.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.797" endtime="20201115 22:03:11.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.800" endtime="20201115 22:03:11.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.799" endtime="20201115 22:03:11.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.795" endtime="20201115 22:03:11.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.429" endtime="20201115 22:03:11.821"></status>
</kw>
<msg timestamp="20201115 22:03:11.821" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.830" endtime="20201115 22:03:11.848"></status>
</kw>
<msg timestamp="20201115 22:03:11.848" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.829" endtime="20201115 22:03:11.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.851" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.849" endtime="20201115 22:03:11.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.852" endtime="20201115 22:03:11.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.826" endtime="20201115 22:03:11.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.824" endtime="20201115 22:03:11.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.862" endtime="20201115 22:03:12.148"></status>
</kw>
<msg timestamp="20201115 22:03:12.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022770431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227745, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:11.860" endtime="20201115 22:03:12.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022770431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227745, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:12.152" endtime="20201115 22:03:12.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.160" endtime="20201115 22:03:12.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.858" endtime="20201115 22:03:12.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.856" endtime="20201115 22:03:12.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.167" level="INFO">${RESULT} = [{'time': 0.0227745, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.068999999998907e-06, 'source_diff': 4.068999999998907e-06}, {'time': 0.022917639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:12.164" endtime="20201115 22:03:12.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.181" level="INFO">${OVERHEAD} = {'time': [0.0227745, 0.022917639, 0.023065361, 0.0232095, 0.023351431, 0.023498083, 0.023642583, 0.023789514, 0.023933639, 0.024077736, 0.024224264, 0.02437025, 0.024513556, 0.024660889, 0.024802583, ...</msg>
<status status="PASS" starttime="20201115 22:03:12.168" endtime="20201115 22:03:12.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.186" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:12.185" endtime="20201115 22:03:12.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.188" level="INFO">VALUE: [4.068999999998907e-06, 3.847000000001266e-06, 3.832999999998227e-06, 3.819000000002126e-06, 3.8339999999977e-06, 3.832999999998227e-06, 3.832999999998227e-06, 3.80600000000203e-06, 3.847000000001266e-06, 3.832999999998227e-06, 3.846999999997797e-06, 3.818999999998657e-06, 3.8199999999981304e-06, 3.832999999998227e-06, 3.832999999998227e-06, 3.902999999999546e-06, 3.83400000000117e-06, 3.7779999999994207e-06, 3.83400000000117e-06, 3.818999999998657e-06, 3.833000000001696e-06, 3.832999999998227e-06, 3.847000000001266e-06, 3.847000000001266e-06, 3.83400000000117e-06, 3.8200000000016e-06, 3.818999999998657e-06, 3.832999999998227e-06, 3.832999999998227e-06, 3.832999999998227e-06, 3.832999999998227e-06, 3.8050000000025563e-06, 3.819000000002126e-06, 3.819000000002126e-06, 3.846999999997797e-06, 3.8609999999973665e-06, 3.818999999998657e-06, 3.819000000002126e-06, 3.861000000000836e-06, 3.846999999997797e-06, 3.832999999998227e-06, 3.875000000000406e-06, 3.832999999998227e-06, 3.847000000001266e-06, 3.888000000000502e-06, 3.804999999999087e-06, 3.7779999999994207e-06, 3.8339999999977e-06, 3.833000000001696e-06, 3.888999999999976e-06]</msg>
<status status="PASS" starttime="20201115 22:03:12.187" endtime="20201115 22:03:12.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.182" endtime="20201115 22:03:12.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.191" endtime="20201115 22:03:12.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.195" endtime="20201115 22:03:12.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.194" endtime="20201115 22:03:12.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.190" endtime="20201115 22:03:12.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.822" endtime="20201115 22:03:12.216"></status>
</kw>
<msg timestamp="20201115 22:03:12.216" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.225" endtime="20201115 22:03:12.243"></status>
</kw>
<msg timestamp="20201115 22:03:12.243" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.223" endtime="20201115 22:03:12.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.244" endtime="20201115 22:03:12.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.246" endtime="20201115 22:03:12.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.221" endtime="20201115 22:03:12.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.219" endtime="20201115 22:03:12.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.256" endtime="20201115 22:03:12.542"></status>
</kw>
<msg timestamp="20201115 22:03:12.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022466375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022470444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.255" endtime="20201115 22:03:12.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022466375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022470444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.546" endtime="20201115 22:03:12.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.554" endtime="20201115 22:03:12.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.252" endtime="20201115 22:03:12.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.251" endtime="20201115 22:03:12.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.561" level="INFO">${RESULT} = [{'time': 0.022470444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.068999999998907e-06, 'source_diff': 4.068999999998907e-06}, {'time': 0.022618278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:12.558" endtime="20201115 22:03:12.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.574" level="INFO">${OVERHEAD} = {'time': [0.022470444, 0.022618278, 0.022761847, 0.022905542, 0.023053833, 0.023194847, 0.023339361, 0.023480528, 0.023626653, 0.023775583, 0.0239205, 0.024065278, 0.024210736, 0.024354736, 0.02450231...</msg>
<status status="PASS" starttime="20201115 22:03:12.562" endtime="20201115 22:03:12.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.579" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:12.578" endtime="20201115 22:03:12.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.581" level="INFO">VALUE: [4.068999999998907e-06, 3.8339999999977e-06, 3.819000000002126e-06, 3.83400000000117e-06, 3.846999999997797e-06, 3.833000000001696e-06, 3.818999999998657e-06, 3.847000000001266e-06, 3.847000000001266e-06, 3.804999999999087e-06, 3.833000000001696e-06, 3.8339999999977e-06, 3.833000000001696e-06, 3.832999999998227e-06, 3.819000000002126e-06, 3.83400000000117e-06, 3.8609999999973665e-06, 3.80600000000203e-06, 3.804999999999087e-06, 3.83400000000117e-06, 3.833000000001696e-06, 3.763999999999851e-06, 3.832999999998227e-06, 3.861000000000836e-06, 3.888999999999976e-06, 3.8200000000016e-06, 3.84800000000074e-06, 3.8339999999977e-06, 3.8609999999973665e-06, 3.83400000000117e-06, 3.833000000001696e-06, 3.84799999999727e-06, 3.846999999997797e-06, 3.83400000000117e-06, 3.832999999998227e-06, 3.832999999998227e-06, 3.847000000001266e-06, 3.847000000001266e-06, 3.8199999999981304e-06, 3.832999999998227e-06, 3.861000000000836e-06, 3.83400000000117e-06, 3.832999999998227e-06, 3.846999999997797e-06, 3.8059999999985605e-06, 3.83400000000117e-06, 3.861000000000836e-06, 3.832999999998227e-06, 3.833000000001696e-06, 3.8200000000016e-06]</msg>
<status status="PASS" starttime="20201115 22:03:12.580" endtime="20201115 22:03:12.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.575" endtime="20201115 22:03:12.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.585" endtime="20201115 22:03:12.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.588" endtime="20201115 22:03:12.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.586" endtime="20201115 22:03:12.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.583" endtime="20201115 22:03:12.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.216" endtime="20201115 22:03:12.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.646" endtime="20201115 22:03:12.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.645" endtime="20201115 22:03:12.609"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.611" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.620" endtime="20201115 22:03:12.639"></status>
</kw>
<msg timestamp="20201115 22:03:12.639" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.619" endtime="20201115 22:03:12.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.642" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.640" endtime="20201115 22:03:12.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.643" endtime="20201115 22:03:12.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.616" endtime="20201115 22:03:12.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.614" endtime="20201115 22:03:12.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.653" endtime="20201115 22:03:12.939"></status>
</kw>
<msg timestamp="20201115 22:03:12.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025075472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025079708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.651" endtime="20201115 22:03:12.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025075472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025079708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.943" endtime="20201115 22:03:12.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.951" endtime="20201115 22:03:12.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.648" endtime="20201115 22:03:12.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.646" endtime="20201115 22:03:12.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.958" level="INFO">${RESULT} = [{'time': 0.025079708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2359999999977416e-06, 'source_diff': 4.2359999999977416e-06}, {'time': 0.025233528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:12.954" endtime="20201115 22:03:12.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.971" level="INFO">${OVERHEAD} = {'time': [0.025079708, 0.025233528, 0.025388097, 0.025540653, 0.025690653, 0.025843069, 0.025996181, 0.026152222, 0.026309194, 0.026458569, 0.026615528, 0.026769139, 0.026919556, 0.027072903, 0.027222...</msg>
<status status="PASS" starttime="20201115 22:03:12.959" endtime="20201115 22:03:12.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.976" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:12.975" endtime="20201115 22:03:12.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.978" level="INFO">VALUE: [4.2359999999977416e-06, 3.986000000000961e-06, 3.9859999999974915e-06, 3.986000000000961e-06, 4.000000000000531e-06, 3.972000000001391e-06, 4.000000000000531e-06, 4.000000000000531e-06, 3.986000000000961e-06, 4.027000000000197e-06, 3.916999999999116e-06, 3.986000000000961e-06, 4.000000000000531e-06, 3.9859999999974915e-06, 3.972000000001391e-06, 3.9859999999974915e-06, 3.986000000000961e-06, 4.000000000000531e-06, 4.068999999998907e-06, 3.971999999997922e-06, 4.000000000000531e-06, 3.971999999997922e-06, 3.986000000000961e-06, 3.986000000000961e-06, 4.000000000000531e-06, 4.000000000000531e-06, 3.959000000001295e-06, 3.972000000001391e-06, 3.972000000001391e-06, 3.987000000000435e-06, 3.9859999999974915e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.987000000000435e-06, 3.959000000001295e-06, 4.000000000000531e-06, 4.000000000000531e-06, 3.9859999999974915e-06, 3.958000000001821e-06, 3.9999999999970615e-06, 3.973000000000865e-06, 3.9720000000048605e-06, 3.9859999999974915e-06, 3.9859999999974915e-06, 3.9859999999974915e-06, 3.9999999999970615e-06, 4.04200000000271e-06, 3.986999999996965e-06, 3.9999999999970615e-06, 3.9859999999974915e-06]</msg>
<status status="PASS" starttime="20201115 22:03:12.977" endtime="20201115 22:03:12.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.972" endtime="20201115 22:03:12.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.982" endtime="20201115 22:03:12.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.985" endtime="20201115 22:03:13.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.983" endtime="20201115 22:03:13.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.980" endtime="20201115 22:03:13.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.612" endtime="20201115 22:03:13.006"></status>
</kw>
<msg timestamp="20201115 22:03:13.006" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.015" endtime="20201115 22:03:13.032"></status>
</kw>
<msg timestamp="20201115 22:03:13.033" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.013" endtime="20201115 22:03:13.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.035" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.034" endtime="20201115 22:03:13.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.036" endtime="20201115 22:03:13.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.011" endtime="20201115 22:03:13.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.008" endtime="20201115 22:03:13.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.046" endtime="20201115 22:03:13.331"></status>
</kw>
<msg timestamp="20201115 22:03:13.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022473847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.044" endtime="20201115 22:03:13.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022473847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.335" endtime="20201115 22:03:13.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.343" endtime="20201115 22:03:13.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.042" endtime="20201115 22:03:13.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.040" endtime="20201115 22:03:13.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:13.350" level="INFO">${RESULT} = [{'time': 0.022478028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.022629597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:13.347" endtime="20201115 22:03:13.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.363" level="INFO">${OVERHEAD} = {'time': [0.022478028, 0.022629597, 0.022783083, 0.022931736, 0.023088583, 0.023245431, 0.023394889, 0.023549472, 0.0237015, 0.023858486, 0.024010764, 0.024159819, 0.024316139, 0.024466542, 0.02461629...</msg>
<status status="PASS" starttime="20201115 22:03:13.351" endtime="20201115 22:03:13.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.368" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:13.367" endtime="20201115 22:03:13.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.371" level="INFO">VALUE: [4.1809999999989356e-06, 3.986000000000961e-06, 3.971999999997922e-06, 3.986000000000961e-06, 3.957999999998352e-06, 3.987000000000435e-06, 3.9859999999974915e-06, 3.9859999999974915e-06, 4.000000000000531e-06, 3.958000000001821e-06, 3.986000000000961e-06, 3.957999999998352e-06, 3.972000000001391e-06, 3.973000000000865e-06, 4.000000000000531e-06, 3.9999999999970615e-06, 3.986000000000961e-06, 3.917000000002585e-06, 3.971999999997922e-06, 3.972000000001391e-06, 4.000000000000531e-06, 3.972000000001391e-06, 3.944000000002251e-06, 3.972000000001391e-06, 3.986000000000961e-06, 4.068999999998907e-06, 4.000000000000531e-06, 3.9859999999974915e-06, 3.973000000000865e-06, 3.972000000001391e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.9859999999974915e-06, 4.014000000000101e-06, 4.014000000000101e-06, 3.972999999997395e-06, 4.000000000000531e-06, 3.972000000001391e-06, 3.957999999998352e-06, 3.986000000000961e-06, 3.9859999999974915e-06, 3.986000000000961e-06, 4.027999999999671e-06, 3.957999999998352e-06, 3.972000000001391e-06, 4.000000000000531e-06, 4.000000000000531e-06, 3.9859999999974915e-06, 3.9859999999974915e-06, 4.014000000000101e-06]</msg>
<status status="PASS" starttime="20201115 22:03:13.369" endtime="20201115 22:03:13.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.365" endtime="20201115 22:03:13.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.374" endtime="20201115 22:03:13.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.377" endtime="20201115 22:03:13.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.376" endtime="20201115 22:03:13.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.372" endtime="20201115 22:03:13.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.006" endtime="20201115 22:03:13.398"></status>
</kw>
<msg timestamp="20201115 22:03:13.398" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.407" endtime="20201115 22:03:13.426"></status>
</kw>
<msg timestamp="20201115 22:03:13.426" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.405" endtime="20201115 22:03:13.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.429" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.427" endtime="20201115 22:03:13.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.430" endtime="20201115 22:03:13.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.403" endtime="20201115 22:03:13.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.401" endtime="20201115 22:03:13.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.440" endtime="20201115 22:03:13.725"></status>
</kw>
<msg timestamp="20201115 22:03:13.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022317847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.438" endtime="20201115 22:03:13.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022317847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.729" endtime="20201115 22:03:13.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.737" endtime="20201115 22:03:13.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.435" endtime="20201115 22:03:13.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.434" endtime="20201115 22:03:13.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:13.744" level="INFO">${RESULT} = [{'time': 0.022322042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.195000000001975e-06, 'source_diff': 4.195000000001975e-06}, {'time': 0.022474444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:13.740" endtime="20201115 22:03:13.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.758" level="INFO">${OVERHEAD} = {'time': [0.022322042, 0.022474444, 0.022624972, 0.022774847, 0.022926597, 0.023076597, 0.023231181, 0.023380639, 0.023532667, 0.023689514, 0.023845958, 0.023999583, 0.024155903, 0.024310875, 0.024465...</msg>
<status status="PASS" starttime="20201115 22:03:13.745" endtime="20201115 22:03:13.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.763" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:13.762" endtime="20201115 22:03:13.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.765" level="INFO">VALUE: [4.195000000001975e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.972000000001391e-06, 3.987000000000435e-06, 3.986000000000961e-06, 3.973000000000865e-06, 3.971999999997922e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.958999999997825e-06, 3.9859999999974915e-06, 3.987000000000435e-06, 3.973000000000865e-06, 3.971999999997922e-06, 3.958000000001821e-06, 3.986000000000961e-06, 3.987000000000435e-06, 4.027999999999671e-06, 4.000000000000531e-06, 3.973000000000865e-06, 3.9999999999970615e-06, 3.972000000001391e-06, 4.000000000000531e-06, 4.0410000000032364e-06, 3.986000000000961e-06, 3.971999999997922e-06, 4.000000000000531e-06, 3.915999999999642e-06, 3.986000000000961e-06, 4.014000000000101e-06, 3.973000000000865e-06, 3.971999999997922e-06, 3.971999999997922e-06, 4.041999999999241e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.972000000001391e-06, 3.9859999999974915e-06, 4.000000000000531e-06, 3.986000000000961e-06, 3.9859999999974915e-06, 3.972000000001391e-06, 3.986999999996965e-06, 3.986000000000961e-06, 3.971999999997922e-06, 3.986000000000961e-06, 4.055000000002806e-06]</msg>
<status status="PASS" starttime="20201115 22:03:13.764" endtime="20201115 22:03:13.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.759" endtime="20201115 22:03:13.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.768" endtime="20201115 22:03:13.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.772" endtime="20201115 22:03:13.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.770" endtime="20201115 22:03:13.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.767" endtime="20201115 22:03:13.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.399" endtime="20201115 22:03:13.792"></status>
</kw>
<msg timestamp="20201115 22:03:13.793" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.801" endtime="20201115 22:03:13.819"></status>
</kw>
<msg timestamp="20201115 22:03:13.819" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.800" endtime="20201115 22:03:13.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.822" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.821" endtime="20201115 22:03:13.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.823" endtime="20201115 22:03:13.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.797" endtime="20201115 22:03:13.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.795" endtime="20201115 22:03:13.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.833" endtime="20201115 22:03:14.119"></status>
</kw>
<msg timestamp="20201115 22:03:14.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022289611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.831" endtime="20201115 22:03:14.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022289611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.123" endtime="20201115 22:03:14.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.131" endtime="20201115 22:03:14.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.829" endtime="20201115 22:03:14.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.827" endtime="20201115 22:03:14.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.138" level="INFO">${RESULT} = [{'time': 0.022289611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.208000000002071e-06, 'source_diff': 4.208000000002071e-06}, {'time': 0.02244125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:14.134" endtime="20201115 22:03:14.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.151" level="INFO">${OVERHEAD} = {'time': [0.022289611, 0.02244125, 0.022595917, 0.022748306, 0.022904097, 0.02306025, 0.023209444, 0.02336175, 0.023511875, 0.023663486, 0.023817264, 0.023968486, 0.024117278, 0.024267278, 0.024417014...</msg>
<status status="PASS" starttime="20201115 22:03:14.139" endtime="20201115 22:03:14.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.155" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:14.154" endtime="20201115 22:03:14.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.158" level="INFO">VALUE: [4.208000000002071e-06, 4.0559999999988106e-06, 4.014000000000101e-06, 3.973000000000865e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.971999999997922e-06, 4.000000000000531e-06, 3.917000000002585e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.9449999999982555e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.987000000000435e-06, 4.027000000000197e-06, 3.973000000000865e-06, 4.014000000000101e-06, 3.986000000000961e-06, 4.000000000000531e-06, 3.958000000001821e-06, 3.986000000000961e-06, 3.9309999999986855e-06, 3.986000000000961e-06, 4.000000000000531e-06, 3.9999999999970615e-06, 3.944000000002251e-06, 3.986000000000961e-06, 4.027000000000197e-06, 3.986000000000961e-06, 3.986000000000961e-06, 4.000000000000531e-06, 3.987000000000435e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.987000000000435e-06, 3.972000000001391e-06, 3.986000000000961e-06, 3.9859999999974915e-06, 4.000000000000531e-06, 4.000000000000531e-06, 3.972999999997395e-06, 3.987000000000435e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.931000000002155e-06, 4.000000000000531e-06, 3.9859999999974915e-06, 3.9859999999974915e-06]</msg>
<status status="PASS" starttime="20201115 22:03:14.156" endtime="20201115 22:03:14.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.152" endtime="20201115 22:03:14.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.161" endtime="20201115 22:03:14.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.164" endtime="20201115 22:03:14.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.163" endtime="20201115 22:03:14.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.159" endtime="20201115 22:03:14.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.793" endtime="20201115 22:03:14.185"></status>
</kw>
<msg timestamp="20201115 22:03:14.185" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.194" endtime="20201115 22:03:14.212"></status>
</kw>
<msg timestamp="20201115 22:03:14.213" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.192" endtime="20201115 22:03:14.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.215" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.214" endtime="20201115 22:03:14.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.216" endtime="20201115 22:03:14.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.190" endtime="20201115 22:03:14.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.188" endtime="20201115 22:03:14.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.226" endtime="20201115 22:03:14.512"></status>
</kw>
<msg timestamp="20201115 22:03:14.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0222335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:14.225" endtime="20201115 22:03:14.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0222335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:14.517" endtime="20201115 22:03:14.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.525" endtime="20201115 22:03:14.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.222" endtime="20201115 22:03:14.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.221" endtime="20201115 22:03:14.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.532" level="INFO">${RESULT} = [{'time': 0.022237736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.022389306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:14.528" endtime="20201115 22:03:14.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.545" level="INFO">${OVERHEAD} = {'time': [0.022237736, 0.022389306, 0.022541861, 0.022693083, 0.022844153, 0.022998861, 0.023152347, 0.023309069, 0.023464431, 0.023613514, 0.023762431, 0.023917361, 0.024073069, 0.024225083, 0.024375...</msg>
<status status="PASS" starttime="20201115 22:03:14.533" endtime="20201115 22:03:14.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.550" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:14.549" endtime="20201115 22:03:14.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.552" level="INFO">VALUE: [4.236000000001211e-06, 3.973000000000865e-06, 3.943999999998782e-06, 4.000000000000531e-06, 3.971999999997922e-06, 3.9859999999974915e-06, 3.986000000000961e-06, 4.000000000000531e-06, 3.973000000000865e-06, 3.9449999999982555e-06, 3.987000000000435e-06, 4.055000000002806e-06, 3.971999999997922e-06, 4.000000000000531e-06, 4.014000000000101e-06, 3.986000000000961e-06, 3.9859999999974915e-06, 3.943999999998782e-06, 3.929999999999212e-06, 3.972000000001391e-06, 3.972000000001391e-06, 3.972000000001391e-06, 3.987000000000435e-06, 3.972000000001391e-06, 3.972000000001391e-06, 3.972999999997395e-06, 3.9309999999986855e-06, 3.986000000000961e-06, 3.9859999999974915e-06, 3.958000000001821e-06, 3.9859999999974915e-06, 3.931000000002155e-06, 4.000000000000531e-06, 3.958000000001821e-06, 3.9859999999974915e-06, 3.986000000000961e-06, 3.973000000000865e-06, 3.986000000000961e-06, 3.958000000001821e-06, 3.986000000000961e-06, 3.9859999999974915e-06, 3.9859999999974915e-06, 3.986000000000961e-06, 3.9859999999974915e-06, 4.000000000000531e-06, 3.973000000000865e-06, 3.986000000000961e-06, 3.987000000000435e-06, 3.971999999997922e-06, 3.986000000000961e-06]</msg>
<status status="PASS" starttime="20201115 22:03:14.551" endtime="20201115 22:03:14.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.546" endtime="20201115 22:03:14.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.555" endtime="20201115 22:03:14.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.559" endtime="20201115 22:03:14.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.557" endtime="20201115 22:03:14.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.554" endtime="20201115 22:03:14.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.186" endtime="20201115 22:03:14.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.610" endtime="20201115 22:03:14.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.609" endtime="20201115 22:03:14.580"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.582" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.591" endtime="20201115 22:03:14.609"></status>
</kw>
<msg timestamp="20201115 22:03:14.609" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.589" endtime="20201115 22:03:14.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.612" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.610" endtime="20201115 22:03:14.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.613" endtime="20201115 22:03:14.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.586" endtime="20201115 22:03:14.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.584" endtime="20201115 22:03:14.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.623" endtime="20201115 22:03:14.908"></status>
</kw>
<msg timestamp="20201115 22:03:14.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024952319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024956667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.621" endtime="20201115 22:03:14.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024952319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024956667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.912" endtime="20201115 22:03:14.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.920" endtime="20201115 22:03:14.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.618" endtime="20201115 22:03:14.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.617" endtime="20201115 22:03:14.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.927" level="INFO">${RESULT} = [{'time': 0.024956667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.34799999999777e-06, 'source_diff': 4.34799999999777e-06}, {'time': 0.025120583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:14.923" endtime="20201115 22:03:14.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.940" level="INFO">${OVERHEAD} = {'time': [0.024956667, 0.025120583, 0.025285861, 0.025443778, 0.025608972, 0.025769792, 0.025933806, 0.026095389, 0.026254639, 0.026414083, 0.026574347, 0.026739708, 0.026900778, 0.027058042, 0.027217...</msg>
<status status="PASS" starttime="20201115 22:03:14.928" endtime="20201115 22:03:14.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.944" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:14.943" endtime="20201115 22:03:14.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.947" level="INFO">VALUE: [4.34799999999777e-06, 4.096999999998047e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.165999999999892e-06, 4.09800000000099e-06, 4.166999999999366e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.180000000002931e-06, 4.111000000001086e-06, 4.165999999999892e-06, 4.125000000000656e-06, 4.139000000000226e-06, 4.09800000000099e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.1249999999971865e-06, 4.097000000001516e-06, 4.096999999998047e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.152999999999796e-06, 4.1109999999976166e-06, 4.11200000000056e-06, 4.111000000001086e-06, 4.068999999998907e-06, 4.11200000000056e-06, 4.125000000000656e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.165999999999892e-06, 4.125000000000656e-06, 4.082999999998477e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.1109999999976166e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.139000000000226e-06, 4.125000000000656e-06, 4.139000000000226e-06, 4.097000000001516e-06, 4.0409999999962976e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.111000000001086e-06]</msg>
<status status="PASS" starttime="20201115 22:03:14.945" endtime="20201115 22:03:14.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.941" endtime="20201115 22:03:14.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.950" endtime="20201115 22:03:14.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.953" endtime="20201115 22:03:14.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.952" endtime="20201115 22:03:14.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.948" endtime="20201115 22:03:14.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.582" endtime="20201115 22:03:14.974"></status>
</kw>
<msg timestamp="20201115 22:03:14.974" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.983" endtime="20201115 22:03:15.002"></status>
</kw>
<msg timestamp="20201115 22:03:15.002" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.982" endtime="20201115 22:03:15.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.012" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.003" endtime="20201115 22:03:15.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.013" endtime="20201115 22:03:15.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.979" endtime="20201115 22:03:15.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.977" endtime="20201115 22:03:15.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.023" endtime="20201115 22:03:15.307"></status>
</kw>
<msg timestamp="20201115 22:03:15.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022766639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:15.021" endtime="20201115 22:03:15.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022766639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:15.311" endtime="20201115 22:03:15.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.319" endtime="20201115 22:03:15.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.019" endtime="20201115 22:03:15.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.017" endtime="20201115 22:03:15.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.326" level="INFO">${RESULT} = [{'time': 0.022771, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.022935833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:03:15.322" endtime="20201115 22:03:15.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.340" level="INFO">${OVERHEAD} = {'time': [0.022771, 0.022935833, 0.02309525, 0.023260528, 0.023425556, 0.023585306, 0.023744569, 0.023908792, 0.024068708, 0.024233472, 0.024391361, 0.024556458, 0.024716292, 0.024878222, 0.025041917,...</msg>
<status status="PASS" starttime="20201115 22:03:15.326" endtime="20201115 22:03:15.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.344" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:15.343" endtime="20201115 22:03:15.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.347" level="INFO">VALUE: [4.360999999997867e-06, 4.096999999998047e-06, 4.139000000000226e-06, 4.125000000000656e-06, 4.139000000000226e-06, 4.11200000000056e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.069000000002376e-06, 4.139000000000226e-06, 4.111000000001086e-06, 4.179999999999462e-06, 4.111000000001086e-06, 4.1109999999976166e-06, 4.125000000000656e-06, 4.096999999998047e-06, 4.1249999999971865e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.139000000000226e-06, 4.09800000000099e-06, 4.125000000000656e-06, 4.152999999999796e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.09800000000099e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.111000000001086e-06, 4.096999999998047e-06, 4.1109999999976166e-06, 4.068999999998907e-06, 4.152000000000322e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.0559999999988106e-06, 4.1249999999971865e-06, 4.096999999998047e-06, 4.1949999999985055e-06, 4.08400000000142e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.1109999999976166e-06, 4.111000000001086e-06, 4.139000000000226e-06, 4.096999999998047e-06, 4.1109999999976166e-06]</msg>
<status status="PASS" starttime="20201115 22:03:15.345" endtime="20201115 22:03:15.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.341" endtime="20201115 22:03:15.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.350" endtime="20201115 22:03:15.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.353" endtime="20201115 22:03:15.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.352" endtime="20201115 22:03:15.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.348" endtime="20201115 22:03:15.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.975" endtime="20201115 22:03:15.374"></status>
</kw>
<msg timestamp="20201115 22:03:15.374" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.383" endtime="20201115 22:03:15.402"></status>
</kw>
<msg timestamp="20201115 22:03:15.403" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.381" endtime="20201115 22:03:15.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.405" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.404" endtime="20201115 22:03:15.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.406" endtime="20201115 22:03:15.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.379" endtime="20201115 22:03:15.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.376" endtime="20201115 22:03:15.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.416" endtime="20201115 22:03:15.701"></status>
</kw>
<msg timestamp="20201115 22:03:15.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023218375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023222667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.414" endtime="20201115 22:03:15.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023218375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023222667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.706" endtime="20201115 22:03:15.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.714" endtime="20201115 22:03:15.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.412" endtime="20201115 22:03:15.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.410" endtime="20201115 22:03:15.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.721" level="INFO">${RESULT} = [{'time': 0.023222667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.023383778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:15.717" endtime="20201115 22:03:15.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.734" level="INFO">${OVERHEAD} = {'time': [0.023222667, 0.023383778, 0.023545278, 0.023708417, 0.023870625, 0.024029319, 0.024189514, 0.024351097, 0.024512986, 0.024673042, 0.024834306, 0.024999181, 0.025156264, 0.025313903, 0.025472...</msg>
<status status="PASS" starttime="20201115 22:03:15.722" endtime="20201115 22:03:15.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.738" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:15.737" endtime="20201115 22:03:15.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.741" level="INFO">VALUE: [4.291999999999491e-06, 4.139000000000226e-06, 4.1109999999976166e-06, 4.09799999999752e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.096999999998047e-06, 4.179999999999462e-06, 4.083000000001946e-06, 4.125000000000656e-06, 4.139000000000226e-06, 4.11199999999709e-06, 4.125000000000656e-06, 4.1109999999976166e-06, 4.1109999999976166e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.09800000000099e-06, 4.125000000000656e-06, 4.181000000002405e-06, 4.068999999998907e-06, 4.111000000001086e-06, 4.11200000000056e-06, 4.1109999999976166e-06, 4.082999999998477e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.09800000000099e-06, 4.139000000000226e-06, 4.111000000001086e-06, 4.1109999999976166e-06, 4.097000000001516e-06, 4.097000000001516e-06, 4.09800000000099e-06, 4.097000000001516e-06, 4.1949999999985055e-06, 4.139000000000226e-06, 4.1249999999971865e-06, 4.1109999999976166e-06, 4.082999999998477e-06, 4.139000000000226e-06, 4.111000000001086e-06, 4.097000000001516e-06, 4.096999999998047e-06, 4.11200000000056e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.096999999998047e-06]</msg>
<status status="PASS" starttime="20201115 22:03:15.740" endtime="20201115 22:03:15.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.735" endtime="20201115 22:03:15.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.744" endtime="20201115 22:03:15.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.747" endtime="20201115 22:03:15.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.746" endtime="20201115 22:03:15.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.742" endtime="20201115 22:03:15.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.374" endtime="20201115 22:03:15.768"></status>
</kw>
<msg timestamp="20201115 22:03:15.769" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.777" endtime="20201115 22:03:15.796"></status>
</kw>
<msg timestamp="20201115 22:03:15.797" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.776" endtime="20201115 22:03:15.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.799" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.798" endtime="20201115 22:03:15.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.800" endtime="20201115 22:03:15.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.773" endtime="20201115 22:03:15.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.771" endtime="20201115 22:03:15.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.810" endtime="20201115 22:03:16.096"></status>
</kw>
<msg timestamp="20201115 22:03:16.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022861653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022866028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.809" endtime="20201115 22:03:16.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022861653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022866028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.100" endtime="20201115 22:03:16.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.108" endtime="20201115 22:03:16.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.806" endtime="20201115 22:03:16.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.805" endtime="20201115 22:03:16.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.114" level="INFO">${RESULT} = [{'time': 0.022866028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.0230275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:16.111" endtime="20201115 22:03:16.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.128" level="INFO">${OVERHEAD} = {'time': [0.022866028, 0.0230275, 0.023191042, 0.023353375, 0.023518264, 0.023680583, 0.023842903, 0.024005722, 0.024162778, 0.024322125, 0.024480597, 0.024638194, 0.024799069, 0.024962264, 0.02512547...</msg>
<status status="PASS" starttime="20201115 22:03:16.115" endtime="20201115 22:03:16.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.132" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:16.131" endtime="20201115 22:03:16.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.134" level="INFO">VALUE: [4.375000000000906e-06, 4.125000000000656e-06, 4.09799999999752e-06, 4.125000000000656e-06, 4.139000000000226e-06, 4.111000000001086e-06, 4.1109999999976166e-06, 4.193999999999032e-06, 4.166999999999366e-06, 4.125000000000656e-06, 4.152999999999796e-06, 4.096999999998047e-06, 4.125000000000656e-06, 4.181000000002405e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.09800000000099e-06, 4.09800000000099e-06, 4.1249999999971865e-06, 4.09800000000099e-06, 4.07000000000185e-06, 4.11200000000056e-06, 4.165999999999892e-06, 4.139000000000226e-06, 4.09800000000099e-06, 4.139000000000226e-06, 4.111000000001086e-06, 4.152999999999796e-06, 4.05600000000228e-06, 4.096999999998047e-06, 4.1809999999989356e-06, 4.096999999998047e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.152999999999796e-06, 4.125000000000656e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.111000000001086e-06, 4.1109999999976166e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.096999999998047e-06, 4.111000000001086e-06, 4.027999999999671e-06, 4.097000000001516e-06, 4.111000000001086e-06]</msg>
<status status="PASS" starttime="20201115 22:03:16.133" endtime="20201115 22:03:16.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.128" endtime="20201115 22:03:16.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.138" endtime="20201115 22:03:16.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:16.141" endtime="20201115 22:03:16.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.140" endtime="20201115 22:03:16.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.136" endtime="20201115 22:03:16.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.769" endtime="20201115 22:03:16.162"></status>
</kw>
<msg timestamp="20201115 22:03:16.162" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.171" endtime="20201115 22:03:16.190"></status>
</kw>
<msg timestamp="20201115 22:03:16.190" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.170" endtime="20201115 22:03:16.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.193" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.191" endtime="20201115 22:03:16.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.194" endtime="20201115 22:03:16.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.167" endtime="20201115 22:03:16.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.165" endtime="20201115 22:03:16.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.204" endtime="20201115 22:03:16.489"></status>
</kw>
<msg timestamp="20201115 22:03:16.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.202" endtime="20201115 22:03:16.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.494" endtime="20201115 22:03:16.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.502" endtime="20201115 22:03:16.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.200" endtime="20201115 22:03:16.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.198" endtime="20201115 22:03:16.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.508" level="INFO">${RESULT} = [{'time': 0.022475431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.34800000000124e-06, 'source_diff': 4.34800000000124e-06}, {'time': 0.022638375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:16.505" endtime="20201115 22:03:16.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.521" level="INFO">${OVERHEAD} = {'time': [0.022475431, 0.022638375, 0.022802181, 0.022965194, 0.023123764, 0.023282208, 0.023443486, 0.023606458, 0.02376425, 0.023923083, 0.024085694, 0.024248819, 0.024409972, 0.024572042, 0.0247359...</msg>
<status status="PASS" starttime="20201115 22:03:16.509" endtime="20201115 22:03:16.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.526" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:16.525" endtime="20201115 22:03:16.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.528" level="INFO">VALUE: [4.34800000000124e-06, 4.1109999999976166e-06, 4.08400000000142e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.1249999999971865e-06, 4.125000000000656e-06, 4.097000000001516e-06, 4.139000000000226e-06, 4.125000000000656e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.082999999998477e-06, 4.1249999999971865e-06, 4.139000000000226e-06, 4.180000000002931e-06, 4.139000000000226e-06, 4.179999999999462e-06, 4.152999999999796e-06, 4.097000000001516e-06, 4.041999999999241e-06, 4.1249999999971865e-06, 4.097000000001516e-06, 4.1109999999976166e-06, 4.1249999999971865e-06, 4.111000000001086e-06, 4.138999999996756e-06, 4.125000000000656e-06, 4.111000000001086e-06, 4.1109999999976166e-06, 4.097000000001516e-06, 4.165999999999892e-06, 4.139000000000226e-06, 4.096999999998047e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.125000000000656e-06, 4.1109999999976166e-06, 4.152000000000322e-06, 4.125000000000656e-06, 4.1249999999971865e-06, 4.097000000001516e-06, 4.139000000000226e-06, 4.0559999999988106e-06, 4.08400000000142e-06, 4.097000000001516e-06, 4.096999999998047e-06, 4.111000000001086e-06, 4.167000000002835e-06, 4.111000000001086e-06]</msg>
<status status="PASS" starttime="20201115 22:03:16.527" endtime="20201115 22:03:16.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.522" endtime="20201115 22:03:16.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.532" endtime="20201115 22:03:16.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:16.535" endtime="20201115 22:03:16.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.534" endtime="20201115 22:03:16.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.530" endtime="20201115 22:03:16.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.163" endtime="20201115 22:03:16.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.581" endtime="20201115 22:03:16.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.580" endtime="20201115 22:03:16.556"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.559" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.567" endtime="20201115 22:03:16.586"></status>
</kw>
<msg timestamp="20201115 22:03:16.587" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.566" endtime="20201115 22:03:16.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.589" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.588" endtime="20201115 22:03:16.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.590" endtime="20201115 22:03:16.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.563" endtime="20201115 22:03:16.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.561" endtime="20201115 22:03:16.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.599" endtime="20201115 22:03:16.885"></status>
</kw>
<msg timestamp="20201115 22:03:16.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024741931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024746458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.598" endtime="20201115 22:03:16.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024741931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024746458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.889" endtime="20201115 22:03:16.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.897" endtime="20201115 22:03:16.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.595" endtime="20201115 22:03:16.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.594" endtime="20201115 22:03:16.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.904" level="INFO">${RESULT} = [{'time': 0.024746458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.526999999997228e-06, 'source_diff': 4.526999999997228e-06}, {'time': 0.024916139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:16.901" endtime="20201115 22:03:16.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.918" level="INFO">${OVERHEAD} = {'time': [0.024746458, 0.024916139, 0.025084542, 0.025250931, 0.025418792, 0.025587181, 0.025760222, 0.025929486, 0.026103528, 0.026273125, 0.026443681, 0.026614097, 0.026786667, 0.026958833, 0.027125...</msg>
<status status="PASS" starttime="20201115 22:03:16.905" endtime="20201115 22:03:16.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.923" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:16.922" endtime="20201115 22:03:16.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.926" level="INFO">VALUE: [4.526999999997228e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.237000000000685e-06, 4.291000000000017e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.237000000000685e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.277000000000447e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.1809999999989356e-06, 4.2499999999973115e-06, 4.193999999999032e-06, 4.277000000000447e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.263999999996881e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.263000000000877e-06, 4.277999999999921e-06, 4.2499999999973115e-06, 4.264000000000351e-06, 4.263000000000877e-06, 4.277000000000447e-06, 4.2359999999977416e-06, 4.262999999997408e-06, 4.276999999996978e-06, 4.277999999996451e-06, 4.2910000000034865e-06, 4.262999999997408e-06, 4.2770000000039166e-06, 4.29200000000296e-06, 4.263000000004347e-06, 4.2499999999973115e-06, 4.263999999996881e-06, 4.263999999996881e-06, 4.26400000000382e-06, 4.2499999999973115e-06]</msg>
<status status="PASS" starttime="20201115 22:03:16.924" endtime="20201115 22:03:16.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.919" endtime="20201115 22:03:16.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.929" endtime="20201115 22:03:16.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:16.932" endtime="20201115 22:03:16.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.931" endtime="20201115 22:03:16.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.927" endtime="20201115 22:03:16.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.559" endtime="20201115 22:03:16.953"></status>
</kw>
<msg timestamp="20201115 22:03:16.953" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.962" endtime="20201115 22:03:16.981"></status>
</kw>
<msg timestamp="20201115 22:03:16.981" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.960" endtime="20201115 22:03:16.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.984" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.982" endtime="20201115 22:03:16.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.985" endtime="20201115 22:03:16.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.958" endtime="20201115 22:03:16.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.956" endtime="20201115 22:03:16.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.995" endtime="20201115 22:03:17.280"></status>
</kw>
<msg timestamp="20201115 22:03:17.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022265736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02227025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:16.993" endtime="20201115 22:03:17.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022265736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02227025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:17.284" endtime="20201115 22:03:17.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.293" endtime="20201115 22:03:17.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.991" endtime="20201115 22:03:17.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.989" endtime="20201115 22:03:17.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:17.299" level="INFO">${RESULT} = [{'time': 0.02227025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.022439125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:17.296" endtime="20201115 22:03:17.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:17.312" level="INFO">${OVERHEAD} = {'time': [0.02227025, 0.022439125, 0.02260725, 0.022775639, 0.022946458, 0.023115194, 0.023282444, 0.023449917, 0.023615875, 0.023784, 0.023954278, 0.024127236, 0.024294819, 0.024468444, 0.024638194, ...</msg>
<status status="PASS" starttime="20201115 22:03:17.300" endtime="20201115 22:03:17.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.317" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:17.316" endtime="20201115 22:03:17.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.320" level="INFO">VALUE: [4.513999999997131e-06, 4.264000000000351e-06, 4.2359999999977416e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.332999999998727e-06, 4.250000000000781e-06, 4.277999999999921e-06, 4.236000000001211e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.236000000001211e-06, 4.262999999997408e-06, 4.262999999997408e-06, 4.2499999999973115e-06, 4.2359999999977416e-06, 4.264000000000351e-06, 4.291000000000017e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.263999999996881e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.277000000000447e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.332999999998727e-06, 4.250000000000781e-06, 4.277999999999921e-06, 4.250000000000781e-06, 4.2499999999973115e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.291999999999491e-06, 4.264000000000351e-06, 4.263000000000877e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.166999999999366e-06, 4.250000000000781e-06, 4.263999999996881e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.277999999999921e-06]</msg>
<status status="PASS" starttime="20201115 22:03:17.318" endtime="20201115 22:03:17.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.314" endtime="20201115 22:03:17.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.323" endtime="20201115 22:03:17.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.326" endtime="20201115 22:03:17.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.325" endtime="20201115 22:03:17.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.321" endtime="20201115 22:03:17.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.954" endtime="20201115 22:03:17.347"></status>
</kw>
<msg timestamp="20201115 22:03:17.347" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.356" endtime="20201115 22:03:17.374"></status>
</kw>
<msg timestamp="20201115 22:03:17.375" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.354" endtime="20201115 22:03:17.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.377" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.376" endtime="20201115 22:03:17.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.378" endtime="20201115 22:03:17.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.352" endtime="20201115 22:03:17.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.350" endtime="20201115 22:03:17.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.388" endtime="20201115 22:03:17.673"></status>
</kw>
<msg timestamp="20201115 22:03:17.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223735, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:17.387" endtime="20201115 22:03:17.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223735, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:17.677" endtime="20201115 22:03:17.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.685" endtime="20201115 22:03:17.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.384" endtime="20201115 22:03:17.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.382" endtime="20201115 22:03:17.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:17.692" level="INFO">${RESULT} = [{'time': 0.0223735, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.431000000002655e-06, 'source_diff': 4.431000000002655e-06}, {'time': 0.022545472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:17.689" endtime="20201115 22:03:17.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:17.706" level="INFO">${OVERHEAD} = {'time': [0.0223735, 0.022545472, 0.02271575, 0.022888306, 0.023062681, 0.023236417, 0.023405611, 0.023575347, 0.023744125, 0.023912, 0.024083889, 0.024256708, 0.024426736, 0.0246005, 0.024772653, 0.0...</msg>
<status status="PASS" starttime="20201115 22:03:17.694" endtime="20201115 22:03:17.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.710" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:17.709" endtime="20201115 22:03:17.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.713" level="INFO">VALUE: [4.431000000002655e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.3200000000021e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.2359999999977416e-06, 4.264000000000351e-06, 4.263999999996881e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.2499999999973115e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.263000000000877e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.291999999999491e-06, 4.277000000000447e-06, 4.221999999998172e-06, 4.264000000000351e-06, 4.277000000000447e-06, 4.333000000002196e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.277000000000447e-06, 4.2359999999977416e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.207999999998602e-06, 4.276999999996978e-06, 4.236000000001211e-06, 4.305999999999061e-06, 4.277999999999921e-06, 4.262999999997408e-06, 4.264000000000351e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.277000000000447e-06, 4.264000000000351e-06]</msg>
<status status="PASS" starttime="20201115 22:03:17.711" endtime="20201115 22:03:17.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.707" endtime="20201115 22:03:17.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.716" endtime="20201115 22:03:17.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.719" endtime="20201115 22:03:17.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.718" endtime="20201115 22:03:17.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.714" endtime="20201115 22:03:17.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.348" endtime="20201115 22:03:17.740"></status>
</kw>
<msg timestamp="20201115 22:03:17.740" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.749" endtime="20201115 22:03:17.768"></status>
</kw>
<msg timestamp="20201115 22:03:17.769" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.748" endtime="20201115 22:03:17.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.771" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.770" endtime="20201115 22:03:17.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.772" endtime="20201115 22:03:17.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.745" endtime="20201115 22:03:17.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.743" endtime="20201115 22:03:17.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.782" endtime="20201115 22:03:18.067"></status>
</kw>
<msg timestamp="20201115 22:03:18.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.781" endtime="20201115 22:03:18.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.072" endtime="20201115 22:03:18.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.080" endtime="20201115 22:03:18.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.778" endtime="20201115 22:03:18.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.776" endtime="20201115 22:03:18.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.087" level="INFO">${RESULT} = [{'time': 0.022650833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.022817847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:18.083" endtime="20201115 22:03:18.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.100" level="INFO">${OVERHEAD} = {'time': [0.022650833, 0.022817847, 0.022984764, 0.023158139, 0.023326264, 0.023497083, 0.023667083, 0.023840708, 0.024013139, 0.02417925, 0.024345792, 0.024512569, 0.024678819, 0.024851125, 0.0250243...</msg>
<status status="PASS" starttime="20201115 22:03:18.088" endtime="20201115 22:03:18.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.104" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:18.103" endtime="20201115 22:03:18.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.107" level="INFO">VALUE: [4.416000000000142e-06, 4.2499999999973115e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.263999999996881e-06, 4.276999999996978e-06, 4.2359999999977416e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.277999999999921e-06, 4.277000000000447e-06, 4.263000000000877e-06, 4.27800000000339e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.2499999999973115e-06, 4.236999999997215e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.195000000001975e-06, 4.250000000000781e-06, 4.3339999999982e-06, 4.264000000000351e-06, 4.346999999998297e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.262999999997408e-06, 4.277999999999921e-06, 4.236000000001211e-06, 4.264000000000351e-06, 4.291000000000017e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.263000000000877e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.264000000000351e-06]</msg>
<status status="PASS" starttime="20201115 22:03:18.105" endtime="20201115 22:03:18.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.101" endtime="20201115 22:03:18.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.110" endtime="20201115 22:03:18.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.113" endtime="20201115 22:03:18.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.112" endtime="20201115 22:03:18.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.108" endtime="20201115 22:03:18.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.741" endtime="20201115 22:03:18.134"></status>
</kw>
<msg timestamp="20201115 22:03:18.134" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.143" endtime="20201115 22:03:18.162"></status>
</kw>
<msg timestamp="20201115 22:03:18.163" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.141" endtime="20201115 22:03:18.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.165" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.164" endtime="20201115 22:03:18.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.166" endtime="20201115 22:03:18.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.139" endtime="20201115 22:03:18.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.137" endtime="20201115 22:03:18.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.176" endtime="20201115 22:03:18.463"></status>
</kw>
<msg timestamp="20201115 22:03:18.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022337264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.175" endtime="20201115 22:03:18.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022337264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.467" endtime="20201115 22:03:18.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.475" endtime="20201115 22:03:18.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.172" endtime="20201115 22:03:18.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.170" endtime="20201115 22:03:18.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.482" level="INFO">${RESULT} = [{'time': 0.022337264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.022509653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:18.479" endtime="20201115 22:03:18.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.496" level="INFO">${OVERHEAD} = {'time': [0.022337264, 0.022509653, 0.022680208, 0.022851431, 0.023024403, 0.023197347, 0.023371264, 0.023538306, 0.023707361, 0.023875222, 0.024048736, 0.02421525, 0.024386042, 0.024552042, 0.0247253...</msg>
<status status="PASS" starttime="20201115 22:03:18.483" endtime="20201115 22:03:18.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.501" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:18.500" endtime="20201115 22:03:18.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.503" level="INFO">VALUE: [4.4999999999975615e-06, 4.222000000001641e-06, 4.264000000000351e-06, 4.236999999997215e-06, 4.277999999999921e-06, 4.236000000001211e-06, 4.291999999999491e-06, 4.263999999996881e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.291999999999491e-06, 4.264000000000351e-06, 4.263999999996881e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.222000000001641e-06, 4.264000000000351e-06, 4.277000000000447e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.291000000000017e-06, 4.250000000000781e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.221999999998172e-06, 4.277999999999921e-06, 4.291000000000017e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.263999999996881e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.291999999999491e-06, 4.3200000000021e-06]</msg>
<status status="PASS" starttime="20201115 22:03:18.502" endtime="20201115 22:03:18.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.497" endtime="20201115 22:03:18.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.506" endtime="20201115 22:03:18.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.509" endtime="20201115 22:03:18.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.508" endtime="20201115 22:03:18.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.504" endtime="20201115 22:03:18.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.135" endtime="20201115 22:03:18.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.558" endtime="20201115 22:03:18.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.557" endtime="20201115 22:03:18.531"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.533" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.541" endtime="20201115 22:03:18.561"></status>
</kw>
<msg timestamp="20201115 22:03:18.562" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.540" endtime="20201115 22:03:18.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.564" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.563" endtime="20201115 22:03:18.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.565" endtime="20201115 22:03:18.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.537" endtime="20201115 22:03:18.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.535" endtime="20201115 22:03:18.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.574" endtime="20201115 22:03:18.860"></status>
</kw>
<msg timestamp="20201115 22:03:18.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024944806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024949444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.573" endtime="20201115 22:03:18.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024944806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024949444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.864" endtime="20201115 22:03:18.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.872" endtime="20201115 22:03:18.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.570" endtime="20201115 22:03:18.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.569" endtime="20201115 22:03:18.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.879" level="INFO">${RESULT} = [{'time': 0.024949444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.638000000001252e-06, 'source_diff': 4.638000000001252e-06}, {'time': 0.025132694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:18.875" endtime="20201115 22:03:18.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.892" level="INFO">${OVERHEAD} = {'time': [0.024949444, 0.025132694, 0.025309569, 0.025485, 0.025660097, 0.025839528, 0.026021236, 0.026201444, 0.026383708, 0.026563639, 0.026741722, 0.026921819, 0.027098153, 0.027278236, 0.027457931...</msg>
<status status="PASS" starttime="20201115 22:03:18.880" endtime="20201115 22:03:18.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.896" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:18.895" endtime="20201115 22:03:18.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.899" level="INFO">VALUE: [4.638000000001252e-06, 4.388000000001002e-06, 4.388000000001002e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.388000000001002e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.387999999997533e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.459000000001795e-06, 4.389000000000476e-06, 4.387999999994063e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.319999999995161e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201115 22:03:18.898" endtime="20201115 22:03:18.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.893" endtime="20201115 22:03:18.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.902" endtime="20201115 22:03:18.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.905" endtime="20201115 22:03:18.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.904" endtime="20201115 22:03:18.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.900" endtime="20201115 22:03:18.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.533" endtime="20201115 22:03:18.926"></status>
</kw>
<msg timestamp="20201115 22:03:18.926" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.935" endtime="20201115 22:03:18.954"></status>
</kw>
<msg timestamp="20201115 22:03:18.954" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.933" endtime="20201115 22:03:18.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.957" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.955" endtime="20201115 22:03:18.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.958" endtime="20201115 22:03:18.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.931" endtime="20201115 22:03:18.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.929" endtime="20201115 22:03:18.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.968" endtime="20201115 22:03:19.254"></status>
</kw>
<msg timestamp="20201115 22:03:19.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022289306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.966" endtime="20201115 22:03:19.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022289306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.258" endtime="20201115 22:03:19.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.266" endtime="20201115 22:03:19.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.964" endtime="20201115 22:03:19.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.962" endtime="20201115 22:03:19.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.273" level="INFO">${RESULT} = [{'time': 0.022289306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.61199999999759e-06, 'source_diff': 4.61199999999759e-06}, {'time': 0.022471917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:19.270" endtime="20201115 22:03:19.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.286" level="INFO">${OVERHEAD} = {'time': [0.022289306, 0.022471917, 0.022652306, 0.022830639, 0.023009792, 0.023189944, 0.02336675, 0.023545903, 0.023721042, 0.023898222, 0.024076792, 0.024259181, 0.024441028, 0.0246175, 0.024797347...</msg>
<status status="PASS" starttime="20201115 22:03:19.274" endtime="20201115 22:03:19.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.291" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:19.290" endtime="20201115 22:03:19.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.293" level="INFO">VALUE: [4.61199999999759e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.443999999999282e-06, 4.388999999997006e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.375000000000906e-06, 4.3749999999974365e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.458999999998325e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.3200000000021e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.347000000001766e-06, 4.486000000001461e-06, 4.416999999999616e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.375000000000906e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.416999999999616e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201115 22:03:19.292" endtime="20201115 22:03:19.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.287" endtime="20201115 22:03:19.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.296" endtime="20201115 22:03:19.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.300" endtime="20201115 22:03:19.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.298" endtime="20201115 22:03:19.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.295" endtime="20201115 22:03:19.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.927" endtime="20201115 22:03:19.320"></status>
</kw>
<msg timestamp="20201115 22:03:19.321" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.330" endtime="20201115 22:03:19.349"></status>
</kw>
<msg timestamp="20201115 22:03:19.350" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.328" endtime="20201115 22:03:19.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.352" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.351" endtime="20201115 22:03:19.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.353" endtime="20201115 22:03:19.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.325" endtime="20201115 22:03:19.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.323" endtime="20201115 22:03:19.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.364" endtime="20201115 22:03:19.649"></status>
</kw>
<msg timestamp="20201115 22:03:19.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022929972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022934597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.362" endtime="20201115 22:03:19.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022929972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022934597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.653" endtime="20201115 22:03:19.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.661" endtime="20201115 22:03:19.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.359" endtime="20201115 22:03:19.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.358" endtime="20201115 22:03:19.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.668" level="INFO">${RESULT} = [{'time': 0.022934597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.023112611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:19.664" endtime="20201115 22:03:19.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.681" level="INFO">${OVERHEAD} = {'time': [0.022934597, 0.023112611, 0.023292181, 0.023474556, 0.023651417, 0.023831653, 0.024011736, 0.024187278, 0.024369917, 0.024549333, 0.024728639, 0.024904028, 0.025082236, 0.025260486, 0.025440...</msg>
<status status="PASS" starttime="20201115 22:03:19.669" endtime="20201115 22:03:19.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.685" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:19.684" endtime="20201115 22:03:19.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.688" level="INFO">VALUE: [4.625000000001156e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.416999999999616e-06, 4.3749999999974365e-06, 4.402000000000572e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.361000000001336e-06, 4.3749999999974365e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.402999999996576e-06, 4.389000000000476e-06, 4.458000000002321e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.388999999997006e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201115 22:03:19.686" endtime="20201115 22:03:19.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.682" endtime="20201115 22:03:19.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.691" endtime="20201115 22:03:19.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.694" endtime="20201115 22:03:19.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.693" endtime="20201115 22:03:19.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.689" endtime="20201115 22:03:19.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.321" endtime="20201115 22:03:19.715"></status>
</kw>
<msg timestamp="20201115 22:03:19.715" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.724" endtime="20201115 22:03:19.744"></status>
</kw>
<msg timestamp="20201115 22:03:19.744" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.723" endtime="20201115 22:03:19.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.747" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.745" endtime="20201115 22:03:19.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.748" endtime="20201115 22:03:19.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.720" endtime="20201115 22:03:19.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.718" endtime="20201115 22:03:19.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.758" endtime="20201115 22:03:20.043"></status>
</kw>
<msg timestamp="20201115 22:03:20.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022896097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022900722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.756" endtime="20201115 22:03:20.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022896097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022900722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.047" endtime="20201115 22:03:20.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.055" endtime="20201115 22:03:20.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.754" endtime="20201115 22:03:20.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.752" endtime="20201115 22:03:20.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:20.062" level="INFO">${RESULT} = [{'time': 0.022900722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6249999999976865e-06, 'source_diff': 4.6249999999976865e-06}, {'time': 0.023077417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:20.059" endtime="20201115 22:03:20.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:20.076" level="INFO">${OVERHEAD} = {'time': [0.022900722, 0.023077417, 0.023257569, 0.023437472, 0.023618639, 0.023799931, 0.023981639, 0.024160528, 0.024342236, 0.024520306, 0.024698792, 0.024880083, 0.025061389, 0.025244347, 0.025422...</msg>
<status status="PASS" starttime="20201115 22:03:20.063" endtime="20201115 22:03:20.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.081" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:20.080" endtime="20201115 22:03:20.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.083" level="INFO">VALUE: [4.6249999999976865e-06, 4.375000000000906e-06, 4.443999999999282e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.388999999997006e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.416000000000142e-06, 4.388000000001002e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.360999999997867e-06, 4.388999999997006e-06, 4.375000000000906e-06, 4.346999999998297e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.375000000000906e-06, 4.361000000001336e-06, 4.375000000000906e-06, 4.416000000000142e-06, 4.401999999997103e-06, 4.403000000000046e-06, 4.375000000000906e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.375000000000906e-06]</msg>
<status status="PASS" starttime="20201115 22:03:20.082" endtime="20201115 22:03:20.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.077" endtime="20201115 22:03:20.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.086" endtime="20201115 22:03:20.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:20.095" endtime="20201115 22:03:20.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.094" endtime="20201115 22:03:20.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.085" endtime="20201115 22:03:20.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.716" endtime="20201115 22:03:20.116"></status>
</kw>
<msg timestamp="20201115 22:03:20.116" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.125" endtime="20201115 22:03:20.144"></status>
</kw>
<msg timestamp="20201115 22:03:20.145" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.123" endtime="20201115 22:03:20.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.147" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.146" endtime="20201115 22:03:20.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.148" endtime="20201115 22:03:20.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.121" endtime="20201115 22:03:20.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.119" endtime="20201115 22:03:20.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.158" endtime="20201115 22:03:20.444"></status>
</kw>
<msg timestamp="20201115 22:03:20.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022322278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.156" endtime="20201115 22:03:20.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022322278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.448" endtime="20201115 22:03:20.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.456" endtime="20201115 22:03:20.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.154" endtime="20201115 22:03:20.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.152" endtime="20201115 22:03:20.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:20.462" level="INFO">${RESULT} = [{'time': 0.022326903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6249999999976865e-06, 'source_diff': 4.6249999999976865e-06}, {'time': 0.022502403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:20.459" endtime="20201115 22:03:20.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:20.475" level="INFO">${OVERHEAD} = {'time': [0.022326903, 0.022502403, 0.022677403, 0.022857903, 0.023034097, 0.023210569, 0.023391347, 0.023570361, 0.023749375, 0.023927444, 0.024105681, 0.024285514, 0.024460889, 0.024639389, 0.024822...</msg>
<status status="PASS" starttime="20201115 22:03:20.463" endtime="20201115 22:03:20.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.480" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:20.479" endtime="20201115 22:03:20.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.482" level="INFO">VALUE: [4.6249999999976865e-06, 4.361000000001336e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.346999999998297e-06, 4.347000000001766e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.387999999997533e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.429999999999712e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.403000000000046e-06, 4.388000000001002e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.388999999997006e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.402000000000572e-06, 4.445000000002225e-06, 4.360999999997867e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.387999999997533e-06, 4.403000000000046e-06, 4.360999999997867e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.389000000000476e-06, 4.361000000001336e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201115 22:03:20.481" endtime="20201115 22:03:20.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.476" endtime="20201115 22:03:20.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.486" endtime="20201115 22:03:20.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:20.489" endtime="20201115 22:03:20.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.488" endtime="20201115 22:03:20.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.484" endtime="20201115 22:03:20.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.117" endtime="20201115 22:03:20.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.532" endtime="20201115 22:03:20.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.531" endtime="20201115 22:03:20.510"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.513" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.521" endtime="20201115 22:03:20.541"></status>
</kw>
<msg timestamp="20201115 22:03:20.541" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.520" endtime="20201115 22:03:20.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.544" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.542" endtime="20201115 22:03:20.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.545" endtime="20201115 22:03:20.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.517" endtime="20201115 22:03:20.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.515" endtime="20201115 22:03:20.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.554" endtime="20201115 22:03:20.841"></status>
</kw>
<msg timestamp="20201115 22:03:20.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024688375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.552" endtime="20201115 22:03:20.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024688375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.845" endtime="20201115 22:03:20.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.853" endtime="20201115 22:03:20.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.550" endtime="20201115 22:03:20.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.548" endtime="20201115 22:03:20.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:20.860" level="INFO">${RESULT} = [{'time': 0.024693125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.024881181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:20.856" endtime="20201115 22:03:20.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:20.873" level="INFO">${OVERHEAD} = {'time': [0.024693125, 0.024881181, 0.025068181, 0.0252595, 0.025451042, 0.025639236, 0.025827444, 0.026013653, 0.02620025, 0.026391028, 0.026580181, 0.026769708, 0.026960333, 0.027150167, 0.027338417...</msg>
<status status="PASS" starttime="20201115 22:03:20.861" endtime="20201115 22:03:20.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.878" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:20.877" endtime="20201115 22:03:20.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.881" level="INFO">VALUE: [4.750000000001281e-06, 4.555999999999311e-06, 4.555999999999311e-06, 4.582999999998977e-06, 4.5699999999988805e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.55600000000278e-06, 4.541000000000267e-06, 4.527000000000697e-06, 4.541999999999741e-06, 4.58400000000192e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.555999999999311e-06, 4.541000000000267e-06, 4.528000000000171e-06, 4.555999999999311e-06, 4.541999999999741e-06, 4.554999999999837e-06, 4.473000000001365e-06, 4.554999999999837e-06, 4.541000000000267e-06, 4.540999999996798e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.54200000000321e-06, 4.541999999999741e-06, 4.554999999999837e-06, 4.528000000000171e-06, 4.486000000001461e-06, 4.541000000000267e-06, 4.540999999996798e-06, 4.54200000000321e-06, 4.52800000000364e-06, 4.555999999995841e-06, 4.541999999996271e-06, 4.5549999999963675e-06, 4.54200000000321e-06, 4.55600000000278e-06, 4.54200000000321e-06, 4.541999999996271e-06, 4.527999999996701e-06, 4.54200000000321e-06, 4.527999999996701e-06, 4.541999999996271e-06, 4.541999999996271e-06]</msg>
<status status="PASS" starttime="20201115 22:03:20.879" endtime="20201115 22:03:20.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.874" endtime="20201115 22:03:20.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.884" endtime="20201115 22:03:20.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:20.887" endtime="20201115 22:03:20.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.886" endtime="20201115 22:03:20.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.882" endtime="20201115 22:03:20.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.513" endtime="20201115 22:03:20.908"></status>
</kw>
<msg timestamp="20201115 22:03:20.908" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.917" endtime="20201115 22:03:20.938"></status>
</kw>
<msg timestamp="20201115 22:03:20.939" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.915" endtime="20201115 22:03:20.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.941" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.940" endtime="20201115 22:03:20.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.942" endtime="20201115 22:03:20.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.913" endtime="20201115 22:03:20.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.911" endtime="20201115 22:03:20.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.952" endtime="20201115 22:03:21.237"></status>
</kw>
<msg timestamp="20201115 22:03:21.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022362264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.951" endtime="20201115 22:03:21.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022362264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.241" endtime="20201115 22:03:21.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.249" endtime="20201115 22:03:21.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.948" endtime="20201115 22:03:21.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.946" endtime="20201115 22:03:21.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.255" level="INFO">${RESULT} = [{'time': 0.022362264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.022548681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:21.252" endtime="20201115 22:03:21.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.269" level="INFO">${OVERHEAD} = {'time': [0.022362264, 0.022548681, 0.022733681, 0.022920556, 0.023107819, 0.023298181, 0.023484514, 0.023670569, 0.023855306, 0.024045792, 0.024231181, 0.024420194, 0.024612028, 0.024796333, 0.024988...</msg>
<status status="PASS" starttime="20201115 22:03:21.256" endtime="20201115 22:03:21.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.274" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:21.273" endtime="20201115 22:03:21.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.276" level="INFO">VALUE: [4.778000000000421e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.473000000001365e-06, 4.541000000000267e-06, 4.500000000001031e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.514000000000601e-06, 4.473000000001365e-06, 4.528000000000171e-06, 4.527000000000697e-06, 4.541999999999741e-06, 4.527000000000697e-06, 4.500000000001031e-06, 4.4999999999975615e-06, 4.541000000000267e-06, 4.541000000000267e-06, 4.471999999998422e-06, 4.554999999999837e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.582999999998977e-06, 4.500000000001031e-06, 4.568999999999407e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.5699999999988805e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.5699999999988805e-06, 4.541000000000267e-06, 4.540999999996798e-06, 4.528000000000171e-06, 4.54200000000321e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.512999999997658e-06, 4.55600000000278e-06, 4.541999999996271e-06]</msg>
<status status="PASS" starttime="20201115 22:03:21.275" endtime="20201115 22:03:21.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.270" endtime="20201115 22:03:21.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.279" endtime="20201115 22:03:21.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.283" endtime="20201115 22:03:21.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.281" endtime="20201115 22:03:21.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.278" endtime="20201115 22:03:21.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.908" endtime="20201115 22:03:21.303"></status>
</kw>
<msg timestamp="20201115 22:03:21.303" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.312" endtime="20201115 22:03:21.332"></status>
</kw>
<msg timestamp="20201115 22:03:21.333" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.311" endtime="20201115 22:03:21.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.335" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.334" endtime="20201115 22:03:21.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.336" endtime="20201115 22:03:21.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.308" endtime="20201115 22:03:21.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.306" endtime="20201115 22:03:21.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.346" endtime="20201115 22:03:21.632"></status>
</kw>
<msg timestamp="20201115 22:03:21.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022567972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.345" endtime="20201115 22:03:21.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022567972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.636" endtime="20201115 22:03:21.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.644" endtime="20201115 22:03:21.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.342" endtime="20201115 22:03:21.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.340" endtime="20201115 22:03:21.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.650" level="INFO">${RESULT} = [{'time': 0.022567972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.777999999996951e-06, 'source_diff': 4.777999999996951e-06}, {'time': 0.022759514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:21.647" endtime="20201115 22:03:21.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.665" level="INFO">${OVERHEAD} = {'time': [0.022567972, 0.022759514, 0.022945556, 0.023136319, 0.023325194, 0.023517708, 0.023707139, 0.023893861, 0.024081278, 0.024270056, 0.024456361, 0.024644583, 0.024835736, 0.025023292, 0.025213...</msg>
<status status="PASS" starttime="20201115 22:03:21.652" endtime="20201115 22:03:21.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.670" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:21.669" endtime="20201115 22:03:21.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.672" level="INFO">VALUE: [4.777999999996951e-06, 4.528000000000171e-06, 4.514000000000601e-06, 4.541000000000267e-06, 4.541000000000267e-06, 4.457999999998852e-06, 4.555999999999311e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.58400000000192e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.514000000000601e-06, 4.555999999999311e-06, 4.541000000000267e-06, 4.527000000000697e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.554999999999837e-06, 4.582999999998977e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.554999999999837e-06, 4.526999999997228e-06, 4.541000000000267e-06, 4.541000000000267e-06, 4.555999999999311e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.555999999999311e-06, 4.541000000000267e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.513999999997131e-06, 4.486000000001461e-06, 4.596999999998547e-06, 4.541999999999741e-06, 4.540999999996798e-06, 4.5410000000037365e-06, 4.540999999996798e-06, 4.540999999996798e-06]</msg>
<status status="PASS" starttime="20201115 22:03:21.671" endtime="20201115 22:03:21.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.666" endtime="20201115 22:03:21.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.675" endtime="20201115 22:03:21.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.679" endtime="20201115 22:03:21.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.677" endtime="20201115 22:03:21.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.673" endtime="20201115 22:03:21.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.304" endtime="20201115 22:03:21.699"></status>
</kw>
<msg timestamp="20201115 22:03:21.699" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.708" endtime="20201115 22:03:21.728"></status>
</kw>
<msg timestamp="20201115 22:03:21.728" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.706" endtime="20201115 22:03:21.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.731" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.729" endtime="20201115 22:03:21.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.732" endtime="20201115 22:03:21.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.704" endtime="20201115 22:03:21.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.702" endtime="20201115 22:03:21.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.742" endtime="20201115 22:03:22.028"></status>
</kw>
<msg timestamp="20201115 22:03:22.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022346, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:21.740" endtime="20201115 22:03:22.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022346, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:22.032" endtime="20201115 22:03:22.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.040" endtime="20201115 22:03:22.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.738" endtime="20201115 22:03:22.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.736" endtime="20201115 22:03:22.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.047" level="INFO">${RESULT} = [{'time': 0.022346, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.022534847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:03:22.043" endtime="20201115 22:03:22.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.060" level="INFO">${OVERHEAD} = {'time': [0.022346, 0.022534847, 0.022724653, 0.02291625, 0.023107278, 0.023297222, 0.023483958, 0.023675333, 0.023860514, 0.024048986, 0.024235583, 0.024422111, 0.024612681, 0.024805181, 0.024993819,...</msg>
<status status="PASS" starttime="20201115 22:03:22.048" endtime="20201115 22:03:22.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.064" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:22.063" endtime="20201115 22:03:22.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.067" level="INFO">VALUE: [4.778000000000421e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.555999999999311e-06, 4.485999999997992e-06, 4.528000000000171e-06, 4.541000000000267e-06, 4.610999999998117e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.568999999999407e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.527000000000697e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.555999999999311e-06, 4.528000000000171e-06, 4.554999999999837e-06, 4.5699999999988805e-06, 4.541000000000267e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.458999999998325e-06, 4.554999999999837e-06, 4.514000000000601e-06, 4.471999999998422e-06, 4.514000000000601e-06, 4.541999999999741e-06, 4.554999999999837e-06, 4.526999999997228e-06, 4.568999999999407e-06, 4.541999999999741e-06, 4.527000000000697e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.526999999997228e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.458000000002321e-06, 4.555000000003306e-06, 4.5699999999988805e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.54200000000321e-06, 4.540999999996798e-06]</msg>
<status status="PASS" starttime="20201115 22:03:22.066" endtime="20201115 22:03:22.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.061" endtime="20201115 22:03:22.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.070" endtime="20201115 22:03:22.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.073" endtime="20201115 22:03:22.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.072" endtime="20201115 22:03:22.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.068" endtime="20201115 22:03:22.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.700" endtime="20201115 22:03:22.094"></status>
</kw>
<msg timestamp="20201115 22:03:22.094" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.103" endtime="20201115 22:03:22.123"></status>
</kw>
<msg timestamp="20201115 22:03:22.123" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.101" endtime="20201115 22:03:22.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.126" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.124" endtime="20201115 22:03:22.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.127" endtime="20201115 22:03:22.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.099" endtime="20201115 22:03:22.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.097" endtime="20201115 22:03:22.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.137" endtime="20201115 22:03:22.423"></status>
</kw>
<msg timestamp="20201115 22:03:22.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022285972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.135" endtime="20201115 22:03:22.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022285972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.427" endtime="20201115 22:03:22.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.435" endtime="20201115 22:03:22.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.133" endtime="20201115 22:03:22.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.131" endtime="20201115 22:03:22.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.442" level="INFO">${RESULT} = [{'time': 0.022285972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.022478042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:22.439" endtime="20201115 22:03:22.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.455" level="INFO">${OVERHEAD} = {'time': [0.022285972, 0.022478042, 0.022663153, 0.022851236, 0.023039583, 0.023226444, 0.023418014, 0.023604611, 0.023794458, 0.023981583, 0.024167125, 0.024355875, 0.024541014, 0.024730153, 0.024918...</msg>
<status status="PASS" starttime="20201115 22:03:22.443" endtime="20201115 22:03:22.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.460" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:22.459" endtime="20201115 22:03:22.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.462" level="INFO">VALUE: [4.778000000000421e-06, 4.541999999999741e-06, 4.527999999996701e-06, 4.528000000000171e-06, 4.541000000000267e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.500000000001031e-06, 4.541000000000267e-06, 4.541000000000267e-06, 4.55600000000278e-06, 4.4999999999975615e-06, 4.555999999999311e-06, 4.514000000000601e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.527000000000697e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.541000000000267e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.555999999999311e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.541000000000267e-06, 4.541000000000267e-06, 4.471999999998422e-06, 4.541999999999741e-06, 4.528000000000171e-06, 4.486000000001461e-06, 4.512999999997658e-06, 4.541999999999741e-06, 4.54200000000321e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.555999999999311e-06, 4.527999999996701e-06, 4.555999999999311e-06, 4.528000000000171e-06, 4.473000000001365e-06, 4.514000000000601e-06, 4.554999999999837e-06, 4.541999999999741e-06, 4.540999999996798e-06, 4.5000000000045e-06]</msg>
<status status="PASS" starttime="20201115 22:03:22.461" endtime="20201115 22:03:22.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.456" endtime="20201115 22:03:22.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.465" endtime="20201115 22:03:22.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.469" endtime="20201115 22:03:22.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.467" endtime="20201115 22:03:22.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.464" endtime="20201115 22:03:22.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.095" endtime="20201115 22:03:22.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.512" endtime="20201115 22:03:22.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.511" endtime="20201115 22:03:22.490"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.492" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.501" endtime="20201115 22:03:22.521"></status>
</kw>
<msg timestamp="20201115 22:03:22.522" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.499" endtime="20201115 22:03:22.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.524" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.523" endtime="20201115 22:03:22.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.525" endtime="20201115 22:03:22.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.496" endtime="20201115 22:03:22.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.494" endtime="20201115 22:03:22.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.535" endtime="20201115 22:03:22.821"></status>
</kw>
<msg timestamp="20201115 22:03:22.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025080236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025085125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.533" endtime="20201115 22:03:22.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025080236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025085125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.825" endtime="20201115 22:03:22.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.833" endtime="20201115 22:03:22.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.531" endtime="20201115 22:03:22.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.529" endtime="20201115 22:03:22.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.840" level="INFO">${RESULT} = [{'time': 0.025085125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.025280319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:22.836" endtime="20201115 22:03:22.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.853" level="INFO">${OVERHEAD} = {'time': [0.025085125, 0.025280319, 0.025475167, 0.025673917, 0.025870889, 0.026068194, 0.026263125, 0.02646375, 0.026657639, 0.026855042, 0.027052292, 0.027253431, 0.027452431, 0.027652903, 0.0278473...</msg>
<status status="PASS" starttime="20201115 22:03:22.841" endtime="20201115 22:03:22.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.858" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:22.856" endtime="20201115 22:03:22.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.860" level="INFO">VALUE: [4.889000000000976e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.693999999999532e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.667000000003335e-06, 4.6949999999990055e-06, 4.611000000001586e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.736000000001711e-06, 4.693999999999532e-06, 4.736000000001711e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.652000000000822e-06, 4.653000000000296e-06, 4.667000000003335e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.723000000001615e-06, 4.666000000000392e-06, 4.665999999993453e-06, 4.679999999999962e-06, 4.583000000002446e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.680999999999436e-06, 4.611000000001586e-06, 4.707999999999102e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.666000000000392e-06]</msg>
<status status="PASS" starttime="20201115 22:03:22.859" endtime="20201115 22:03:22.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.854" endtime="20201115 22:03:22.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.863" endtime="20201115 22:03:22.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.866" endtime="20201115 22:03:22.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.865" endtime="20201115 22:03:22.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.862" endtime="20201115 22:03:22.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.492" endtime="20201115 22:03:22.887"></status>
</kw>
<msg timestamp="20201115 22:03:22.888" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.896" endtime="20201115 22:03:22.917"></status>
</kw>
<msg timestamp="20201115 22:03:22.918" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.895" endtime="20201115 22:03:22.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.920" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.919" endtime="20201115 22:03:22.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.922" endtime="20201115 22:03:22.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.892" endtime="20201115 22:03:22.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.890" endtime="20201115 22:03:22.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.932" endtime="20201115 22:03:23.217"></status>
</kw>
<msg timestamp="20201115 22:03:23.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022442194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.930" endtime="20201115 22:03:23.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022442194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.221" endtime="20201115 22:03:23.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.229" endtime="20201115 22:03:23.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.927" endtime="20201115 22:03:23.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.926" endtime="20201115 22:03:23.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.236" level="INFO">${RESULT} = [{'time': 0.022442194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8749999999979365e-06, 'source_diff': 4.8749999999979365e-06}, {'time': 0.022642639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:23.232" endtime="20201115 22:03:23.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.250" level="INFO">${OVERHEAD} = {'time': [0.022442194, 0.022642639, 0.02283875, 0.023037153, 0.023236694, 0.023431125, 0.023627569, 0.023824708, 0.024021028, 0.024218958, 0.024420708, 0.024621097, 0.024822111, 0.025022208, 0.0252193...</msg>
<status status="PASS" starttime="20201115 22:03:23.236" endtime="20201115 22:03:23.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.254" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:23.253" endtime="20201115 22:03:23.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.257" level="INFO">VALUE: [4.8749999999979365e-06, 4.680999999999436e-06, 4.736000000001711e-06, 4.666999999999866e-06, 4.6249999999976865e-06, 4.680999999999436e-06, 4.666000000000392e-06, 4.666000000000392e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.7499999999978115e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.695000000002475e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.6249999999976865e-06, 4.679999999999962e-06, 4.735999999998242e-06, 4.736000000001711e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.750000000001281e-06, 4.680999999999436e-06, 4.666000000000392e-06, 4.666000000000392e-06, 4.666000000000392e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.736000000001711e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201115 22:03:23.255" endtime="20201115 22:03:23.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.251" endtime="20201115 22:03:23.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.260" endtime="20201115 22:03:23.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.263" endtime="20201115 22:03:23.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.262" endtime="20201115 22:03:23.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.258" endtime="20201115 22:03:23.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.888" endtime="20201115 22:03:23.284"></status>
</kw>
<msg timestamp="20201115 22:03:23.284" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.293" endtime="20201115 22:03:23.313"></status>
</kw>
<msg timestamp="20201115 22:03:23.314" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.291" endtime="20201115 22:03:23.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.315" endtime="20201115 22:03:23.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.317" endtime="20201115 22:03:23.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.289" endtime="20201115 22:03:23.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.287" endtime="20201115 22:03:23.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.327" endtime="20201115 22:03:23.612"></status>
</kw>
<msg timestamp="20201115 22:03:23.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022832806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.325" endtime="20201115 22:03:23.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022832806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.616" endtime="20201115 22:03:23.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.624" endtime="20201115 22:03:23.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.323" endtime="20201115 22:03:23.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.321" endtime="20201115 22:03:23.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.631" level="INFO">${RESULT} = [{'time': 0.022832806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.0230335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:23.628" endtime="20201115 22:03:23.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.644" level="INFO">${OVERHEAD} = {'time': [0.022832806, 0.0230335, 0.023233042, 0.023434319, 0.023632514, 0.023828847, 0.024023681, 0.024217444, 0.024414847, 0.024609417, 0.024803306, 0.025002667, 0.025197292, 0.025398167, 0.02559288...</msg>
<status status="PASS" starttime="20201115 22:03:23.632" endtime="20201115 22:03:23.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.649" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:23.648" endtime="20201115 22:03:23.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.651" level="INFO">VALUE: [4.917000000000116e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.652000000000822e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.7499999999978115e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.707999999999102e-06, 4.639000000000726e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.596999999998547e-06, 4.652000000000822e-06, 4.6389999999972564e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.652000000000822e-06, 4.680999999999436e-06, 4.695000000002475e-06, 4.666999999999866e-06, 4.6389999999972564e-06, 4.679999999999962e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.652999999996826e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.6949999999990055e-06, 4.6949999999990055e-06, 4.653000000000296e-06, 4.694000000006471e-06]</msg>
<status status="PASS" starttime="20201115 22:03:23.650" endtime="20201115 22:03:23.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.645" endtime="20201115 22:03:23.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.654" endtime="20201115 22:03:23.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.658" endtime="20201115 22:03:23.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.656" endtime="20201115 22:03:23.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.653" endtime="20201115 22:03:23.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.285" endtime="20201115 22:03:23.678"></status>
</kw>
<msg timestamp="20201115 22:03:23.679" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.688" endtime="20201115 22:03:23.708"></status>
</kw>
<msg timestamp="20201115 22:03:23.709" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.686" endtime="20201115 22:03:23.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.711" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.710" endtime="20201115 22:03:23.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.712" endtime="20201115 22:03:23.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.684" endtime="20201115 22:03:23.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.682" endtime="20201115 22:03:23.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.722" endtime="20201115 22:03:24.008"></status>
</kw>
<msg timestamp="20201115 22:03:24.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022817361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022822278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.720" endtime="20201115 22:03:24.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022817361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022822278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.012" endtime="20201115 22:03:24.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.020" endtime="20201115 22:03:24.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.718" endtime="20201115 22:03:24.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.716" endtime="20201115 22:03:24.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.027" level="INFO">${RESULT} = [{'time': 0.022822278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.023016944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:24.024" endtime="20201115 22:03:24.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:24.040" level="INFO">${OVERHEAD} = {'time': [0.022822278, 0.023016944, 0.023213125, 0.023412847, 0.023611667, 0.023807319, 0.024002153, 0.024197542, 0.024396542, 0.024591139, 0.024792667, 0.024994486, 0.025190028, 0.025391833, 0.025589...</msg>
<status status="PASS" starttime="20201115 22:03:24.028" endtime="20201115 22:03:24.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.045" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:24.044" endtime="20201115 22:03:24.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.047" level="INFO">VALUE: [4.917000000000116e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.693999999999532e-06, 4.653000000000296e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.695000000002475e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.6949999999990055e-06, 4.666000000000392e-06, 4.693999999999532e-06, 4.666000000000392e-06, 4.693999999999532e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.610999999998117e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.639000000000726e-06, 4.680999999999436e-06, 4.679999999999962e-06, 4.652000000000822e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.6949999999990055e-06, 4.597000000002016e-06, 4.611000000001586e-06, 4.6389999999972564e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.666000000000392e-06]</msg>
<status status="PASS" starttime="20201115 22:03:24.046" endtime="20201115 22:03:24.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.041" endtime="20201115 22:03:24.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.050" endtime="20201115 22:03:24.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:24.054" endtime="20201115 22:03:24.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.053" endtime="20201115 22:03:24.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.049" endtime="20201115 22:03:24.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.680" endtime="20201115 22:03:24.075"></status>
</kw>
<msg timestamp="20201115 22:03:24.075" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.084" endtime="20201115 22:03:24.104"></status>
</kw>
<msg timestamp="20201115 22:03:24.104" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.082" endtime="20201115 22:03:24.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.107" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.105" endtime="20201115 22:03:24.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.108" endtime="20201115 22:03:24.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.080" endtime="20201115 22:03:24.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.078" endtime="20201115 22:03:24.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.118" endtime="20201115 22:03:24.404"></status>
</kw>
<msg timestamp="20201115 22:03:24.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022484639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.116" endtime="20201115 22:03:24.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022484639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.408" endtime="20201115 22:03:24.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.416" endtime="20201115 22:03:24.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.114" endtime="20201115 22:03:24.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.112" endtime="20201115 22:03:24.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.423" level="INFO">${RESULT} = [{'time': 0.022484639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.022680667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:24.419" endtime="20201115 22:03:24.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:24.436" level="INFO">${OVERHEAD} = {'time': [0.022484639, 0.022680667, 0.022876319, 0.023071556, 0.023268667, 0.023468736, 0.023667597, 0.023862319, 0.024060361, 0.024258028, 0.024452819, 0.024648375, 0.024849931, 0.025044639, 0.025242...</msg>
<status status="PASS" starttime="20201115 22:03:24.424" endtime="20201115 22:03:24.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.440" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:24.439" endtime="20201115 22:03:24.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.443" level="INFO">VALUE: [4.8199999999991305e-06, 4.666999999999866e-06, 4.679999999999962e-06, 4.680999999999436e-06, 4.680999999999436e-06, 4.611000000001586e-06, 4.665999999996923e-06, 4.679999999999962e-06, 4.6249999999976865e-06, 4.666999999999866e-06, 4.750000000001281e-06, 4.653000000000296e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.667000000003335e-06, 4.611000000001586e-06, 4.666000000000392e-06, 4.666999999999866e-06, 4.625000000001156e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.693999999999532e-06, 4.680999999999436e-06, 4.707999999999102e-06, 4.693999999999532e-06, 4.681000000002905e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.681000000002905e-06, 4.680999999999436e-06, 4.666999999999866e-06, 4.653000000000296e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.625000000001156e-06, 4.750000000001281e-06, 4.679999999999962e-06, 4.695000000002475e-06, 4.693999999999532e-06, 4.666000000000392e-06, 4.638000000001252e-06, 4.709000000005514e-06, 4.693999999999532e-06, 4.679999999999962e-06]</msg>
<status status="PASS" starttime="20201115 22:03:24.441" endtime="20201115 22:03:24.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.437" endtime="20201115 22:03:24.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.446" endtime="20201115 22:03:24.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:24.450" endtime="20201115 22:03:24.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.448" endtime="20201115 22:03:24.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.445" endtime="20201115 22:03:24.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.076" endtime="20201115 22:03:24.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.491" endtime="20201115 22:03:24.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.490" endtime="20201115 22:03:24.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.412" endtime="20201115 22:03:24.471"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:24.475" endtime="20201115 22:03:24.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.474" endtime="20201115 22:03:24.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.472" endtime="20201115 22:03:24.496"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:02:35.343" endtime="20201115 22:03:24.496" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:01:40.742" endtime="20201115 22:03:24.502"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:01:38.710" endtime="20201115 22:03:24.521"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
